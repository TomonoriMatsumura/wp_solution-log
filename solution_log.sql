-- MySQL dump 10.16  Distrib 10.1.31-MariaDB, for Linux (x86_64)
--
-- Host: localhost    Database: wp_solution_log
-- ------------------------------------------------------
-- Server version	10.1.31-MariaDB

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `wp_commentmeta`
--

DROP TABLE IF EXISTS `wp_commentmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_commentmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `comment_id` (`comment_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_commentmeta`
--

LOCK TABLES `wp_commentmeta` WRITE;
/*!40000 ALTER TABLE `wp_commentmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_commentmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_comments`
--

DROP TABLE IF EXISTS `wp_comments`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_comments` (
  `comment_ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `comment_post_ID` bigint(20) unsigned NOT NULL DEFAULT '0',
  `comment_author` tinytext COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_author_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_url` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_author_IP` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `comment_content` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `comment_karma` int(11) NOT NULL DEFAULT '0',
  `comment_approved` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '1',
  `comment_agent` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  PRIMARY KEY (`comment_ID`),
  KEY `comment_post_ID` (`comment_post_ID`),
  KEY `comment_approved_date_gmt` (`comment_approved`,`comment_date_gmt`),
  KEY `comment_date_gmt` (`comment_date_gmt`),
  KEY `comment_parent` (`comment_parent`),
  KEY `comment_author_email` (`comment_author_email`(10))
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_comments`
--

LOCK TABLES `wp_comments` WRITE;
/*!40000 ALTER TABLE `wp_comments` DISABLE KEYS */;
INSERT INTO `wp_comments` VALUES (1,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2011-10-30 00:12:48','2011-10-29 15:12:48','PathFrameworkはconfigフォルダに移動する',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(2,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-04 23:49:32','2012-02-04 14:49:32','-PDOへの載せ替え\r\n\r\n-ルーターの作りこみ\r\nNeri_Server_VariablesからNeri_Controller_Http_Requestなどに変更\r\n\r\n-認証の実装\r\n\r\n-絵文字の実装\r\n\r\n\r\n\r\n早く終わらせねば。。。。',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(3,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-08 01:21:44','2012-02-07 16:21:44','キャッシュのタグの取得がおかしいって！\r\n\r\nディレクトリから読み込まんとだめやねんか、どあふぉが。',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(4,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-10 04:29:52','2012-02-09 19:29:52','キャッシュのclearをclearAllと分けるか検討。\r\n\r\nいずれにしてもidを指定して削除する必要がある。',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(5,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-10 23:37:02','2012-02-10 14:37:02','アプリには名前空間を使う。フレームワークには使わない。',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(6,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-13 13:00:14','2012-02-13 04:00:14','Neri_Directory_Manager::setDirectories（）、引数をNeri_IniFileでタイプヒンティングしてしまおうかな？？？',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(7,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-15 03:17:21','2012-02-14 18:17:21','名前空間を使用したときのコントローラーファイルの読み込みの設定の確認をする！',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(8,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-20 02:31:34','2012-02-19 17:31:34','NeriPHP　Model_Abstract::setTable()のテーブル名が間違っている時のエラー処理を書く事!',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(9,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-24 01:34:41','2012-02-23 16:34:41','PDOでSUMを使った時の挙動がおかしいので調べる。\r\n\r\nPlayersRecordsTable::__getSumsColumn()他',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(10,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-02-24 01:39:49','2012-02-23 16:39:49','PlayersRecordsTable::getAllRecordsByPlayerId()、リファクタリングをしてクラスを委譲し、テストを書く。\r\n\r\nそれぞれがどんな値を返すのか良く分からないので。\r\n\r\nとりあえずここからテストを書いて行く',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(11,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-08 19:50:58','2012-03-08 10:50:58','Neri_Http_Curlを書き直す\r\n\r\nコントローラーテストの時にサーバー変数をセットしてリクエストが送れるように実装しなおす\r\n\r\n\r\nNeri_Http_MobileUserAgentのテストを書く。どうも戻り値がおかしい',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(12,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-11 02:17:06','2012-03-10 17:17:06','Karisumaz_Repo tests/model/db\r\n\r\ntableフォルダに名前を変更する',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(13,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-13 18:59:21','2012-03-13 09:59:21','$this->gamesRecordsTable->getDistinctGamesId();\r\n\r\ngamesTableから呼び出せるのでそちらに処理を渡す。\r\n\r\ngamesTable->getRecordsByGamesDateYear($year);\r\n\r\nみたいな感じ',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(14,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-14 02:28:29','2012-03-13 17:28:29','ResultsModel_ScoreBookDetailByGameId::_getBattedBallResultsWithPoints()\r\n\r\nSmartyで表示制御する設計に変更する！',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(15,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-17 02:54:36','2012-03-16 17:54:36','testcaseを拡張する',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1),(16,238,'tomonori','kyyokyup-solutionlog@yahoo.co.jp','','220.254.1.122','2012-03-20 02:23:44','2012-03-19 17:23:44','chainfall X\r\nwaterfall O',0,'1','Mozilla/5.0 (X11; Linux i686; rv:10.0.11) Gecko/20121121 Firefox/10.0.11','',0,1);
/*!40000 ALTER TABLE `wp_comments` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_links`
--

DROP TABLE IF EXISTS `wp_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_links` (
  `link_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `link_url` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_name` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_image` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_target` varchar(25) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_description` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_visible` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'Y',
  `link_owner` bigint(20) unsigned NOT NULL DEFAULT '1',
  `link_rating` int(11) NOT NULL DEFAULT '0',
  `link_updated` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `link_rel` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `link_notes` mediumtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `link_rss` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`link_id`),
  KEY `link_visible` (`link_visible`)
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_links`
--

LOCK TABLES `wp_links` WRITE;
/*!40000 ALTER TABLE `wp_links` DISABLE KEYS */;
INSERT INTO `wp_links` VALUES (1,'http://wpdocs.sourceforge.jp/','ドキュメンテーション','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(2,'http://ja.wordpress.org/','WordPress ブログ','','','','Y',1,0,'0000-00-00 00:00:00','','','http://ja.wordpress.org/feed/'),(3,'http://ja.forums.wordpress.org/','サポートフォーラム','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(4,'http://wordpress.org/extend/plugins/','プラグイン','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(5,'http://wordpress.org/extend/themes/','テーマ','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(6,'http://ja.forums.wordpress.org/forum/2','フィードバック','','','','Y',1,0,'0000-00-00 00:00:00','','',''),(7,'http://ja.forums.wordpress.org/','WordPress Planet','','','','Y',1,0,'0000-00-00 00:00:00','','','');
/*!40000 ALTER TABLE `wp_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_options`
--

DROP TABLE IF EXISTS `wp_options`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_options` (
  `option_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `option_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `option_value` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `autoload` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'yes',
  PRIMARY KEY (`option_id`),
  UNIQUE KEY `option_name` (`option_name`)
) ENGINE=InnoDB AUTO_INCREMENT=3990 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_options`
--

LOCK TABLES `wp_options` WRITE;
/*!40000 ALTER TABLE `wp_options` DISABLE KEYS */;
INSERT INTO `wp_options` VALUES (1,'siteurl','http://49.212.213.226/wordpress/solution-log','yes'),(2,'home','http://49.212.213.226/wordpress/solution-log','yes'),(3,'blogname','ソリューションログ','yes'),(4,'blogdescription','Just another WordPress site','yes'),(5,'users_can_register','0','yes'),(6,'admin_email','kyyokyup-5466@yahoo.co.jp','yes'),(7,'start_of_week','1','yes'),(8,'use_balanceTags','0','yes'),(9,'use_smilies','1','yes'),(10,'require_name_email','','yes'),(11,'comments_notify','','yes'),(12,'posts_per_rss','10','yes'),(13,'rss_use_excerpt','0','yes'),(14,'mailserver_url','mail.example.com','yes'),(15,'mailserver_login','login@example.com','yes'),(16,'mailserver_pass','password','yes'),(17,'mailserver_port','110','yes'),(18,'default_category','1','yes'),(19,'default_comment_status','closed','yes'),(20,'default_ping_status','closed','yes'),(21,'default_pingback_flag','','yes'),(22,'posts_per_page','10','yes'),(23,'date_format','F j, Y','yes'),(24,'time_format','g:i a','yes'),(25,'links_updated_date_format','F j, Y g:i a','yes'),(26,'comment_moderation','','yes'),(27,'moderation_notify','','yes'),(28,'permalink_structure','','yes'),(29,'hack_file','0','yes'),(30,'blog_charset','UTF-8','yes'),(31,'moderation_keys','','no'),(32,'active_plugins','a:5:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";i:2;s:41:\"wp-multibyte-patch/wp-multibyte-patch.php\";i:3;s:45:\"wp-syntaxhighlighter/wp-syntaxhighlighter.php\";i:4;s:31:\"wptouch-pro-3/wptouch-pro-3.php\";}','yes'),(33,'category_base','','yes'),(34,'ping_sites','http://rpc.pingomatic.com/','yes'),(35,'comment_max_links','2','yes'),(36,'gmt_offset','','yes'),(37,'default_email_category','1','yes'),(38,'recently_edited','','no'),(39,'template','coaster','yes'),(40,'stylesheet','coaster','yes'),(41,'comment_whitelist','','yes'),(42,'blacklist_keys','','no'),(43,'comment_registration','','yes'),(44,'html_type','text/html','yes'),(45,'use_trackback','0','yes'),(46,'default_role','subscriber','yes'),(47,'db_version','38590','yes'),(48,'uploads_use_yearmonth_folders','1','yes'),(49,'upload_path','','yes'),(50,'blog_public','0','yes'),(51,'default_link_category','2','yes'),(52,'show_on_front','posts','yes'),(53,'tag_base','','yes'),(54,'show_avatars','','yes'),(55,'avatar_rating','G','yes'),(56,'upload_url_path','','yes'),(57,'thumbnail_size_w','150','yes'),(58,'thumbnail_size_h','150','yes'),(59,'thumbnail_crop','1','yes'),(60,'medium_size_w','300','yes'),(61,'medium_size_h','300','yes'),(62,'avatar_default','mystery','yes'),(63,'large_size_w','1024','yes'),(64,'large_size_h','1024','yes'),(65,'image_default_link_type','none','yes'),(66,'image_default_size','','yes'),(67,'image_default_align','','yes'),(68,'close_comments_for_old_posts','','yes'),(69,'close_comments_days_old','14','yes'),(70,'thread_comments','','yes'),(71,'thread_comments_depth','5','yes'),(72,'page_comments','','yes'),(73,'comments_per_page','50','yes'),(74,'default_comments_page','newest','yes'),(75,'comment_order','asc','yes'),(76,'sticky_posts','a:0:{}','yes'),(77,'widget_categories','a:2:{i:2;a:4:{s:5:\"title\";s:0:\"\";s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}s:12:\"_multiwidget\";i:1;}','yes'),(78,'widget_text','a:0:{}','yes'),(79,'widget_rss','a:0:{}','yes'),(80,'uninstall_plugins','a:0:{}','no'),(81,'timezone_string','Asia/Tokyo','yes'),(82,'page_for_posts','0','yes'),(83,'page_on_front','0','yes'),(84,'default_post_format','0','yes'),(85,'link_manager_enabled','0','yes'),(86,'finished_splitting_shared_terms','1','yes'),(87,'site_icon','0','yes'),(88,'medium_large_size_w','768','yes'),(89,'medium_large_size_h','0','yes'),(90,'initial_db_version','35700','yes'),(91,'wp_user_roles','a:5:{s:13:\"administrator\";a:2:{s:4:\"name\";s:13:\"Administrator\";s:12:\"capabilities\";a:61:{s:13:\"switch_themes\";b:1;s:11:\"edit_themes\";b:1;s:16:\"activate_plugins\";b:1;s:12:\"edit_plugins\";b:1;s:10:\"edit_users\";b:1;s:10:\"edit_files\";b:1;s:14:\"manage_options\";b:1;s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:6:\"import\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:8:\"level_10\";b:1;s:7:\"level_9\";b:1;s:7:\"level_8\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;s:12:\"delete_users\";b:1;s:12:\"create_users\";b:1;s:17:\"unfiltered_upload\";b:1;s:14:\"edit_dashboard\";b:1;s:14:\"update_plugins\";b:1;s:14:\"delete_plugins\";b:1;s:15:\"install_plugins\";b:1;s:13:\"update_themes\";b:1;s:14:\"install_themes\";b:1;s:11:\"update_core\";b:1;s:10:\"list_users\";b:1;s:12:\"remove_users\";b:1;s:13:\"promote_users\";b:1;s:18:\"edit_theme_options\";b:1;s:13:\"delete_themes\";b:1;s:6:\"export\";b:1;}}s:6:\"editor\";a:2:{s:4:\"name\";s:6:\"Editor\";s:12:\"capabilities\";a:34:{s:17:\"moderate_comments\";b:1;s:17:\"manage_categories\";b:1;s:12:\"manage_links\";b:1;s:12:\"upload_files\";b:1;s:15:\"unfiltered_html\";b:1;s:10:\"edit_posts\";b:1;s:17:\"edit_others_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:10:\"edit_pages\";b:1;s:4:\"read\";b:1;s:7:\"level_7\";b:1;s:7:\"level_6\";b:1;s:7:\"level_5\";b:1;s:7:\"level_4\";b:1;s:7:\"level_3\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:17:\"edit_others_pages\";b:1;s:20:\"edit_published_pages\";b:1;s:13:\"publish_pages\";b:1;s:12:\"delete_pages\";b:1;s:19:\"delete_others_pages\";b:1;s:22:\"delete_published_pages\";b:1;s:12:\"delete_posts\";b:1;s:19:\"delete_others_posts\";b:1;s:22:\"delete_published_posts\";b:1;s:20:\"delete_private_posts\";b:1;s:18:\"edit_private_posts\";b:1;s:18:\"read_private_posts\";b:1;s:20:\"delete_private_pages\";b:1;s:18:\"edit_private_pages\";b:1;s:18:\"read_private_pages\";b:1;}}s:6:\"author\";a:2:{s:4:\"name\";s:6:\"Author\";s:12:\"capabilities\";a:10:{s:12:\"upload_files\";b:1;s:10:\"edit_posts\";b:1;s:20:\"edit_published_posts\";b:1;s:13:\"publish_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_2\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;s:22:\"delete_published_posts\";b:1;}}s:11:\"contributor\";a:2:{s:4:\"name\";s:11:\"Contributor\";s:12:\"capabilities\";a:5:{s:10:\"edit_posts\";b:1;s:4:\"read\";b:1;s:7:\"level_1\";b:1;s:7:\"level_0\";b:1;s:12:\"delete_posts\";b:1;}}s:10:\"subscriber\";a:2:{s:4:\"name\";s:10:\"Subscriber\";s:12:\"capabilities\";a:2:{s:4:\"read\";b:1;s:7:\"level_0\";b:1;}}}','yes'),(92,'widget_search','a:2:{i:2;a:1:{s:5:\"title\";s:0:\"\";}s:12:\"_multiwidget\";i:1;}','yes'),(93,'widget_recent-posts','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(94,'widget_recent-comments','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(95,'widget_archives','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(96,'widget_meta','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(97,'sidebars_widgets','a:3:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:2:{i:0;s:8:\"search-2\";i:1;s:12:\"categories-2\";}s:13:\"array_version\";i:3;}','yes'),(99,'widget_pages','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(100,'widget_calendar','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(101,'widget_tag_cloud','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(102,'widget_nav_menu','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(103,'cron','a:8:{i:1516717620;a:3:{s:16:\"wp_version_check\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:17:\"wp_update_plugins\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}s:16:\"wp_update_themes\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:10:\"twicedaily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:43200;}}}i:1516717856;a:1:{s:19:\"wp_scheduled_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1516734165;a:1:{s:30:\"wp_scheduled_auto_draft_delete\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1516759604;a:1:{s:25:\"delete_expired_transients\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1516768785;a:1:{s:28:\"wptouch_cron_backup_settings\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:5:\"daily\";s:4:\"args\";a:0:{}s:8:\"interval\";i:86400;}}}i:1527069449;a:1:{s:8:\"do_pings\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:2:{s:8:\"schedule\";b:0;s:4:\"args\";a:0:{}}}}i:1531802537;a:1:{s:34:\"wp_privacy_delete_old_export_files\";a:1:{s:32:\"40cd750bba9870f18aada2478b24840a\";a:3:{s:8:\"schedule\";s:6:\"hourly\";s:4:\"args\";a:0:{}s:8:\"interval\";i:3600;}}}s:7:\"version\";i:2;}','yes'),(104,'_transient_twentyfifteen_categories','1','yes'),(122,'theme_mods_twentyfifteen','a:1:{s:16:\"sidebars_widgets\";a:2:{s:4:\"time\";i:1450276285;s:4:\"data\";a:2:{s:19:\"wp_inactive_widgets\";a:0:{}s:9:\"sidebar-1\";a:6:{i:0;s:8:\"search-2\";i:1;s:14:\"recent-posts-2\";i:2;s:17:\"recent-comments-2\";i:3;s:10:\"archives-2\";i:4;s:12:\"categories-2\";i:5;s:6:\"meta-2\";}}}}','yes'),(123,'current_theme','Coaster','yes'),(124,'theme_mods_coaster','a:2:{i:0;b:0;s:18:\"custom_css_post_id\";i:-1;}','yes'),(125,'theme_switched','','yes'),(127,'coaster_theme_options','a:3:{s:22:\"coaster_main_punchline\";s:0:\"\";s:16:\"coaster_headline\";s:0:\"\";s:7:\"ga_code\";s:0:\"\";}','yes'),(130,'recently_activated','a:0:{}','yes'),(131,'siteorigin_panels_initial_version','2.2.2','no'),(132,'wpts_bncid','O:29:\"WPtouchDefaultSettingsBNCID30\":9:{s:5:\"bncid\";s:0:\"\";s:19:\"wptouch_license_key\";s:0:\"\";s:16:\"license_accepted\";b:0;s:21:\"license_accepted_time\";i:0;s:22:\"next_update_check_time\";i:1532249638;s:15:\"license_expired\";s:1:\"0\";s:19:\"license_expiry_date\";i:0;s:16:\"referral_user_id\";b:0;s:15:\"current_version\";s:5:\"3.8.6\";}','yes'),(133,'siteorigin_panels_settings','a:0:{}','yes'),(134,'wp_sh_language3','a:35:{s:11:\"applescript\";a:2:{i:0;s:11:\"AppleScript\";i:1;s:4:\"true\";}s:13:\"actionscript3\";a:2:{i:0;s:13:\"Actionscript3\";i:1;s:4:\"true\";}s:4:\"bash\";a:2:{i:0;s:10:\"Bash shell\";i:1;s:4:\"true\";}s:10:\"coldfusion\";a:2:{i:0;s:10:\"ColdFusion\";i:1;s:4:\"true\";}s:1:\"c\";a:2:{i:0;s:1:\"C\";i:1;s:4:\"true\";}s:3:\"cpp\";a:2:{i:0;s:3:\"C++\";i:1;s:4:\"true\";}s:6:\"csharp\";a:2:{i:0;s:2:\"C#\";i:1;s:4:\"true\";}s:3:\"css\";a:2:{i:0;s:3:\"CSS\";i:1;s:4:\"true\";}s:6:\"delphi\";a:2:{i:0;s:6:\"Delphi\";i:1;s:4:\"true\";}s:4:\"diff\";a:2:{i:0;s:4:\"Diff\";i:1;s:4:\"true\";}s:6:\"erlang\";a:2:{i:0;s:6:\"Erlang\";i:1;s:4:\"true\";}s:6:\"groovy\";a:2:{i:0;s:6:\"Groovy\";i:1;s:4:\"true\";}s:4:\"html\";a:2:{i:0;s:4:\"HTML\";i:1;s:4:\"true\";}s:4:\"java\";a:2:{i:0;s:4:\"Java\";i:1;s:4:\"true\";}s:6:\"javafx\";a:2:{i:0;s:6:\"JavaFX\";i:1;s:4:\"true\";}s:10:\"javascript\";a:2:{i:0;s:10:\"JavaScript\";i:1;s:4:\"true\";}s:6:\"pascal\";a:2:{i:0;s:6:\"Pascal\";i:1;s:4:\"true\";}s:5:\"patch\";a:2:{i:0;s:5:\"Patch\";i:1;s:4:\"true\";}s:4:\"perl\";a:2:{i:0;s:4:\"Perl\";i:1;s:4:\"true\";}s:3:\"php\";a:2:{i:0;s:3:\"PHP\";i:1;s:4:\"true\";}s:4:\"text\";a:2:{i:0;s:10:\"Plain Text\";i:1;s:4:\"true\";}s:10:\"powershell\";a:2:{i:0;s:10:\"PowerShell\";i:1;s:4:\"true\";}s:6:\"python\";a:2:{i:0;s:6:\"Python\";i:1;s:4:\"true\";}s:4:\"ruby\";a:2:{i:0;s:4:\"Ruby\";i:1;s:4:\"true\";}s:5:\"rails\";a:2:{i:0;s:13:\"Ruby on Rails\";i:1;s:4:\"true\";}s:4:\"sass\";a:2:{i:0;s:4:\"Sass\";i:1;s:4:\"true\";}s:5:\"scala\";a:2:{i:0;s:5:\"Scala\";i:1;s:4:\"true\";}s:4:\"scss\";a:2:{i:0;s:4:\"Scss\";i:1;s:4:\"true\";}s:5:\"shell\";a:2:{i:0;s:5:\"Shell\";i:1;s:4:\"true\";}s:3:\"sql\";a:2:{i:0;s:3:\"SQL\";i:1;s:4:\"true\";}s:2:\"vb\";a:2:{i:0;s:12:\"Visual Basic\";i:1;s:4:\"true\";}s:5:\"vbnet\";a:2:{i:0;s:17:\"Visual Basic .NET\";i:1;s:4:\"true\";}s:5:\"xhtml\";a:2:{i:0;s:5:\"XHTML\";i:1;s:4:\"true\";}s:3:\"xml\";a:2:{i:0;s:3:\"XML\";i:1;s:4:\"true\";}s:4:\"xslt\";a:2:{i:0;s:4:\"XSLT\";i:1;s:4:\"true\";}}','yes'),(135,'wp_sh_language2','a:32:{s:13:\"actionscript3\";a:2:{i:0;s:13:\"Actionscript3\";i:1;s:4:\"true\";}s:4:\"bash\";a:2:{i:0;s:10:\"Bash shell\";i:1;s:4:\"true\";}s:10:\"coldfusion\";a:2:{i:0;s:10:\"ColdFusion\";i:1;s:4:\"true\";}s:1:\"c\";a:2:{i:0;s:1:\"C\";i:1;s:4:\"true\";}s:3:\"cpp\";a:2:{i:0;s:3:\"C++\";i:1;s:4:\"true\";}s:6:\"csharp\";a:2:{i:0;s:2:\"C#\";i:1;s:4:\"true\";}s:3:\"css\";a:2:{i:0;s:3:\"CSS\";i:1;s:4:\"true\";}s:6:\"delphi\";a:2:{i:0;s:6:\"Delphi\";i:1;s:4:\"true\";}s:4:\"diff\";a:2:{i:0;s:4:\"Diff\";i:1;s:4:\"true\";}s:6:\"erlang\";a:2:{i:0;s:6:\"Erlang\";i:1;s:4:\"true\";}s:6:\"groovy\";a:2:{i:0;s:6:\"Groovy\";i:1;s:4:\"true\";}s:4:\"html\";a:2:{i:0;s:4:\"HTML\";i:1;s:4:\"true\";}s:4:\"java\";a:2:{i:0;s:4:\"Java\";i:1;s:4:\"true\";}s:6:\"javafx\";a:2:{i:0;s:6:\"JavaFX\";i:1;s:4:\"true\";}s:10:\"javascript\";a:2:{i:0;s:10:\"JavaScript\";i:1;s:4:\"true\";}s:6:\"pascal\";a:2:{i:0;s:6:\"Pascal\";i:1;s:4:\"true\";}s:5:\"patch\";a:2:{i:0;s:5:\"Patch\";i:1;s:4:\"true\";}s:4:\"perl\";a:2:{i:0;s:4:\"Perl\";i:1;s:4:\"true\";}s:3:\"php\";a:2:{i:0;s:3:\"PHP\";i:1;s:4:\"true\";}s:4:\"text\";a:2:{i:0;s:10:\"Plain Text\";i:1;s:4:\"true\";}s:10:\"powershell\";a:2:{i:0;s:10:\"PowerShell\";i:1;s:4:\"true\";}s:6:\"python\";a:2:{i:0;s:6:\"Python\";i:1;s:4:\"true\";}s:4:\"ruby\";a:2:{i:0;s:4:\"Ruby\";i:1;s:4:\"true\";}s:5:\"rails\";a:2:{i:0;s:13:\"Ruby on Rails\";i:1;s:4:\"true\";}s:5:\"scala\";a:2:{i:0;s:5:\"Scala\";i:1;s:4:\"true\";}s:5:\"shell\";a:2:{i:0;s:5:\"Shell\";i:1;s:4:\"true\";}s:3:\"sql\";a:2:{i:0;s:3:\"SQL\";i:1;s:4:\"true\";}s:2:\"vb\";a:2:{i:0;s:12:\"Visual Basic\";i:1;s:4:\"true\";}s:5:\"vbnet\";a:2:{i:0;s:17:\"Visual Basic .NET\";i:1;s:4:\"true\";}s:5:\"xhtml\";a:2:{i:0;s:5:\"XHTML\";i:1;s:4:\"true\";}s:3:\"xml\";a:2:{i:0;s:3:\"XML\";i:1;s:4:\"true\";}s:4:\"xslt\";a:2:{i:0;s:4:\"XSLT\";i:1;s:4:\"true\";}}','yes'),(136,'wp_sh_brush_files','a:25:{s:11:\"AppleScript\";a:4:{i:0;s:21:\"shBrushAppleScript.js\";i:1;s:11:\"applescript\";i:2;s:3:\"3.0\";i:3;s:4:\"true\";}s:13:\"ActionScript3\";a:4:{i:0;s:13:\"shBrushAS3.js\";i:1;s:17:\"as3 actionscript3\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:4:\"Bash\";a:4:{i:0;s:14:\"shBrushBash.js\";i:1;s:10:\"bash shell\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:10:\"ColdFusion\";a:4:{i:0;s:20:\"shBrushColdFusion.js\";i:1;s:13:\"cf coldfusion\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:3:\"C++\";a:4:{i:0;s:13:\"shBrushCpp.js\";i:1;s:5:\"cpp c\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:2:\"C#\";a:4:{i:0;s:16:\"shBrushCSharp.js\";i:1;s:17:\"c# c-sharp csharp\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:3:\"CSS\";a:4:{i:0;s:13:\"shBrushCss.js\";i:1;s:3:\"css\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:6:\"Delphi\";a:4:{i:0;s:16:\"shBrushDelphi.js\";i:1;s:17:\"delphi pas pascal\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:4:\"Diff\";a:4:{i:0;s:14:\"shBrushDiff.js\";i:1;s:10:\"diff patch\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:6:\"Erlang\";a:4:{i:0;s:16:\"shBrushErlang.js\";i:1;s:10:\"erl erlang\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:6:\"Groovy\";a:4:{i:0;s:16:\"shBrushGroovy.js\";i:1;s:6:\"groovy\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:4:\"Java\";a:4:{i:0;s:14:\"shBrushJava.js\";i:1;s:4:\"java\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:6:\"JavaFX\";a:4:{i:0;s:16:\"shBrushJavaFX.js\";i:1;s:10:\"jfx javafx\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:10:\"JavaScript\";a:4:{i:0;s:17:\"shBrushJScript.js\";i:1;s:21:\"js jscript javascript\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:4:\"Perl\";a:4:{i:0;s:14:\"shBrushPerl.js\";i:1;s:7:\"perl pl\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:3:\"PHP\";a:4:{i:0;s:13:\"shBrushPhp.js\";i:1;s:3:\"php\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:9:\"PlainText\";a:4:{i:0;s:15:\"shBrushPlain.js\";i:1;s:10:\"plain text\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:10:\"PowerShell\";a:4:{i:0;s:20:\"shBrushPowerShell.js\";i:1;s:13:\"ps powershell\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:6:\"Python\";a:4:{i:0;s:16:\"shBrushPython.js\";i:1;s:9:\"py python\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:4:\"Ruby\";a:4:{i:0;s:14:\"shBrushRuby.js\";i:1;s:17:\"rails ror ruby rb\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:4:\"Sass\";a:4:{i:0;s:14:\"shBrushSass.js\";i:1;s:9:\"sass scss\";i:2;s:3:\"3.0\";i:3;s:4:\"true\";}s:5:\"Scala\";a:4:{i:0;s:15:\"shBrushScala.js\";i:1;s:5:\"scala\";i:2;s:3:\"2.1\";i:3;s:4:\"true\";}s:3:\"SQL\";a:4:{i:0;s:13:\"shBrushSql.js\";i:1;s:3:\"sql\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:11:\"VisualBasic\";a:4:{i:0;s:12:\"shBrushVb.js\";i:1;s:8:\"vb vbnet\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}s:3:\"XML\";a:4:{i:0;s:13:\"shBrushXml.js\";i:1;s:19:\"xml xhtml xslt html\";i:2;s:3:\"1.5\";i:3;s:4:\"true\";}}','yes'),(137,'wp_sh_version','3.0','yes'),(138,'wp_sh_gutter','1','yes'),(139,'wp_sh_first_line','1','yes'),(140,'wp_sh_setting_opt','a:49:{s:14:\"highlight_home\";i:1;s:15:\"highlight_posts\";i:1;s:20:\"highlight_categories\";i:1;s:18:\"highlight_archives\";i:1;s:16:\"highlight_search\";i:1;s:17:\"highlight_comment\";i:0;s:16:\"highlight_others\";i:0;s:17:\"highlight_widgets\";i:0;s:17:\"highlight_bbpress\";i:0;s:11:\"lib_version\";s:3:\"3.0\";s:5:\"theme\";s:7:\"Default\";s:10:\"auto_links\";s:4:\"true\";s:10:\"quick_code\";s:4:\"true\";s:17:\"addl_style_enable\";i:0;s:8:\"collapse\";s:5:\"false\";s:6:\"gutter\";s:4:\"true\";s:10:\"first_line\";s:1:\"1\";s:12:\"padding_line\";s:5:\"false\";s:10:\"smart_tabs\";s:4:\"true\";s:8:\"tab_size\";s:1:\"4\";s:7:\"toolbar\";s:4:\"true\";s:4:\"wrap\";s:5:\"false\";s:6:\"legacy\";i:0;s:3:\"css\";i:0;s:13:\"select_insert\";i:1;s:7:\"codebox\";i:1;s:18:\"button_window_size\";s:3:\"100\";s:10:\"button_row\";s:1:\"1\";s:8:\"quicktag\";i:1;s:15:\"quicktag_jquery\";i:0;s:15:\"editor_shorcode\";i:0;s:25:\"editor_no_unfiltered_html\";i:0;s:20:\"comment_hl_bt_enable\";i:0;s:17:\"comment_hl_bt_tag\";s:3:\"pre\";s:22:\"comment_hl_bt_shorcode\";i:0;s:36:\"comment_hl_description_before_enable\";i:0;s:28:\"comment_hl_stylesheet_enable\";i:0;s:16:\"comment_quicktag\";i:1;s:14:\"comment_jquery\";i:0;s:9:\"wiget_tag\";s:3:\"pre\";s:14:\"wiget_shorcode\";i:0;s:20:\"bbpress_hl_bt_enable\";i:0;s:17:\"bbpress_hl_bt_tag\";s:3:\"pre\";s:22:\"bbpress_hl_bt_shorcode\";i:0;s:19:\"bbpress_hl_bt_guest\";i:0;s:36:\"bbpress_hl_description_before_enable\";i:0;s:28:\"bbpress_hl_stylesheet_enable\";i:0;s:18:\"comment_hl_bt_type\";N;s:18:\"bbpress_hl_bt_type\";N;}','yes'),(141,'wp_sh_code_title','','yes'),(142,'wp_sh_class_name','notranslate','yes'),(143,'wp_sh_addl_style','.syntaxhighlighter,\r\n.syntaxhighlighter a,\r\n.syntaxhighlighter div,\r\n.syntaxhighlighter code,\r\n.syntaxhighlighter table,\r\n.syntaxhighlighter table td,\r\n.syntaxhighlighter table tr,\r\n.syntaxhighlighter table tbody,\r\n.syntaxhighlighter table thead,\r\n.syntaxhighlighter table caption,\r\n.syntaxhighlighter textarea {\r\nfont-size: 12px !important; /* Set the font size in pixels */  \r\nfont-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; /* Set the font type */  \r\n}\r\n.syntaxhighlighter table caption {\r\n/* For Title(Caption) */  \r\nfont-size: 14px !important; /* Set the font size in pixels */  \r\nfont-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; /* Set the font type */  \r\n}\r\n.syntaxhighlighter.nogutter td.code .line {\r\n/* Set the left padding space when no-gutter in ver. 3.0 */  \r\npadding-left: 3px !important;\r\n}\r\n.syntaxhighlighter {\r\n/* For Chrome/Safari(WebKit) */  \r\n/* Hide the superfluous vertical scrollbar in ver. 3.0 */  \r\noverflow-y: hidden !important;\r\npadding: 1px !important;\r\n}\r\n.widget-area.syntaxhighlighter a,\r\n.widget-area.syntaxhighlighter div,\r\n.widget-area.syntaxhighlighter code,\r\n.widget-area.syntaxhighlighter table,\r\n.widget-area.syntaxhighlighter table td,\r\n.widget-area.syntaxhighlighter table tr,\r\n.widget-area.syntaxhighlighter table tbody,\r\n.widget-area.syntaxhighlighter table thead,\r\n.widget-area.syntaxhighlighter table caption,\r\n.widget-area.syntaxhighlighter textarea {\r\n/* For Widget */  \r\nfont-size: 14px !important; /* Set the font size in pixels */  \r\nfont-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; /* Set the font type */  \r\n}\r\n.widget-area table caption {\r\n/* For Widget */  \r\n/* For Title(Caption) */  \r\nfont-size: 10px !important; /* Set the font size in pixels */  \r\nfont-family: \"Consolas\", \"Bitstream Vera Sans Mono\", \"Courier New\", Courier, monospace !important; /* Set the font type */  \r\n}','yes'),(144,'wp_sh_collapse_lable_text','','yes'),(145,'wp_sh_comment_hl_description_before','This site supports <a href=\"http://alexgorbatchev.com/SyntaxHighlighter/\">SyntaxHighlighter</a> via <a href=\"http://www.near-mint.com/blog/software/wp-syntaxhighlighter\">WP SyntaxHighlighter</a>. It can highlight your code. <br /><strong>How to highlight your code:</strong> Paste your code in the comment form, select it and then click the language link button below. This will wrap your code in a <pre> tag(or shortcode) and format it when submitted.','yes'),(146,'wp_sh_comment_hl_stylesheet','.comment_highlight {\r\nmargin: 0px 0px 0px 0px;\r\n}\r\n.comment_highlight p {\r\nfont-size: 12px;\r\n}\r\n.comment_highlight_button {\r\nmargin: 0px 0px 0px 0px;\r\nfont-size: 10px;\r\n}','yes'),(147,'wp_sh_bbpress_hl_description_before','This site supports <a href=\"http://alexgorbatchev.com/SyntaxHighlighter/\">SyntaxHighlighter</a> via <a href=\"http://www.near-mint.com/blog/software/wp-syntaxhighlighter\">WP SyntaxHighlighter</a>. It can highlight your code. <br /><strong>How to highlight your code:</strong> Paste your code in the topic or reply form, select it and then click the language link button below. This will wrap your code in a <pre> tag(or shortcode) and format it when submitted.','yes'),(148,'wp_sh_bbpress_hl_stylesheet','.bbpress_highlight {\r\nmargin: 0px 0px 0px 0px;\r\n}\r\n.bbpress_highlight p {\r\nfont-size: 12px;\r\n}\r\n.bbpress_highlight_button {\r\nmargin: 0px 0px 0px 0px;\r\nfont-size: 10px;\r\n}','yes'),(149,'wp_sh_updated','true','yes'),(150,'wp_sh_child_plugin','','yes'),(151,'wp_sh_checkver_stamp','1.7','yes'),(152,'widget_akismet_widget','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(153,'widget_siteorigin-panels-post-content','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(154,'widget_siteorigin-panels-postloop','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(155,'widget_siteorigin-panels-builder','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(162,'WPLANG','ja','yes'),(172,'wpts_compat','O:28:\"WPtouchDefaultSettingsCompat\":2:{s:12:\"plugin_hooks\";a:1:{s:18:\"wp-multibyte-patch\";O:8:\"stdClass\":0:{}}s:15:\"enabled_plugins\";a:2:{s:18:\"wp-multibyte-patch\";i:1;s:6:\"ignore\";i:1;}}','yes'),(181,'wpts_wptouch_pro','O:24:\"WPtouchDefaultSettings30\":48:{s:12:\"display_mode\";s:6:\"normal\";s:10:\"site_title\";s:27:\"ソリューションログ\";s:22:\"show_wptouch_in_footer\";i:1;s:16:\"show_switch_link\";i:1;s:18:\"switch_link_method\";s:9:\"automatic\";s:12:\"force_locale\";s:5:\"ja_JP\";s:17:\"custom_stats_code\";s:0:\"\";s:16:\"homepage_landing\";s:4:\"none\";s:27:\"homepage_redirect_wp_target\";s:4:\"1099\";s:31:\"homepage_redirect_custom_target\";s:0:\"\";s:29:\"automatically_backup_settings\";i:1;s:12:\"preview_mode\";s:3:\"off\";s:36:\"include_functions_from_desktop_theme\";b:0;s:28:\"functions_php_loading_method\";s:9:\"translate\";s:30:\"enable_shortcode_compatibility\";i:0;s:30:\"shortcode_compatibility_method\";s:17:\"remove_shortcodes\";s:17:\"remove_shortcodes\";s:0:\"\";s:20:\"url_filter_behaviour\";s:8:\"disabled\";s:13:\"filtered_urls\";s:0:\"\";s:18:\"custom_user_agents\";s:0:\"\";s:27:\"current_theme_friendly_name\";s:7:\"Bauhaus\";s:22:\"current_theme_location\";s:20:\"/wptouch-data/themes\";s:18:\"current_theme_name\";s:7:\"bauhaus\";s:23:\"dismissed_notifications\";a:0:{}s:16:\"custom_menu_name\";s:2:\"wp\";s:18:\"appended_menu_name\";s:4:\"none\";s:19:\"prepended_menu_name\";s:4:\"none\";s:19:\"enable_parent_items\";b:1;s:17:\"enable_menu_icons\";b:1;s:17:\"default_menu_icon\";s:67:\"/wp-content/plugins/wptouch-pro-3/resources/icons/elegant/Paper.png\";s:19:\"disabled_menu_items\";a:0:{}s:24:\"temp_disabled_menu_items\";a:0:{}s:9:\"debug_log\";b:0;s:15:\"debug_log_level\";i:6;s:14:\"debug_log_salt\";s:10:\"d47ac0b018\";s:10:\"menu_icons\";a:0:{}s:15:\"menu_sort_order\";s:9:\"wordpress\";s:28:\"menu_disable_parent_as_child\";b:0;s:12:\"disable_menu\";b:0;s:20:\"make_links_clickable\";b:0;s:15:\"custom_css_file\";s:0:\"\";s:32:\"wptouch_enable_custom_post_types\";b:0;s:27:\"always_refresh_css_js_files\";b:0;s:27:\"classic_excluded_categories\";b:0;s:30:\"convert_menu_links_to_internal\";b:0;s:23:\"post_thumbnails_enabled\";b:1;s:13:\"active_addons\";a:0:{}s:23:\"show_wpml_lang_switcher\";b:1;}','yes'),(182,'wpts_foundation','O:15:\"WPtouchSettings\":80:{s:19:\"video_handling_type\";s:7:\"fitvids\";s:17:\"latest_posts_page\";s:4:\"none\";s:10:\"allow_zoom\";i:1;s:10:\"logo_image\";s:0:\"\";s:14:\"show_login_box\";i:0;s:16:\"show_login_links\";i:0;s:15:\"typography_sets\";s:11:\"lato_roboto\";s:16:\"smart_app_banner\";s:0:\"\";s:21:\"homescreen_icon_title\";s:27:\"ソリューションログ\";s:18:\"iphone_icon_retina\";b:0;s:19:\"android_others_icon\";b:0;s:16:\"ipad_icon_retina\";b:0;s:19:\"webapp_mode_enabled\";i:0;s:25:\"webapp_enable_persistence\";i:1;s:18:\"webapp_show_notice\";i:1;s:21:\"webapp_notice_message\";s:78:\"Install this Web-App on your home screen: tap [icon] then \"Add to Home Screen\"\";s:18:\"webapp_ignore_urls\";s:0:\"\";s:25:\"webapp_notice_expiry_days\";s:2:\"30\";s:27:\"startup_screen_iphone_2g_3g\";b:0;s:26:\"startup_screen_iphone_4_4s\";b:0;s:23:\"startup_screen_iphone_5\";b:0;s:23:\"startup_screen_iphone_6\";b:0;s:27:\"startup_screen_iphone_6plus\";b:0;s:30:\"startup_screen_ipad_1_portrait\";b:0;s:31:\"startup_screen_ipad_1_landscape\";b:0;s:30:\"startup_screen_ipad_3_portrait\";b:0;s:31:\"startup_screen_ipad_3_landscape\";b:0;s:16:\"advertising_type\";s:4:\"none\";s:20:\"advertising_location\";s:6:\"header\";s:25:\"advertising_blog_listings\";i:1;s:18:\"advertising_single\";i:1;s:17:\"advertising_pages\";i:0;s:20:\"advertising_taxonomy\";i:1;s:18:\"advertising_search\";i:1;s:17:\"google_adsense_id\";s:0:\"\";s:14:\"google_slot_id\";s:0:\"\";s:16:\"google_code_type\";s:4:\"sync\";s:25:\"custom_advertising_mobile\";s:0:\"\";s:10:\"show_share\";i:0;s:14:\"share_on_pages\";i:0;s:14:\"share_location\";s:3:\"top\";s:19:\"share_colour_scheme\";s:7:\"default\";s:19:\"social_facebook_url\";s:0:\"\";s:18:\"social_twitter_url\";s:0:\"\";s:17:\"social_google_url\";s:0:\"\";s:20:\"social_instagram_url\";s:0:\"\";s:17:\"social_tumblr_url\";s:0:\"\";s:20:\"social_pinterest_url\";s:0:\"\";s:16:\"social_vimeo_url\";s:0:\"\";s:18:\"social_youtube_url\";s:0:\"\";s:19:\"social_linkedin_url\";s:0:\"\";s:15:\"social_yelp_url\";s:0:\"\";s:16:\"social_email_url\";s:0:\"\";s:14:\"social_rss_url\";s:0:\"\";s:21:\"custom_footer_message\";s:0:\"\";s:16:\"featured_enabled\";i:1;s:18:\"featured_autoslide\";i:1;s:19:\"featured_continuous\";i:1;s:18:\"featured_grayscale\";i:1;s:13:\"featured_type\";s:6:\"latest\";s:12:\"featured_tag\";s:0:\"\";s:17:\"featured_category\";s:0:\"\";s:18:\"featured_post_type\";s:1:\"0\";s:17:\"featured_post_ids\";s:0:\"\";s:14:\"featured_speed\";s:6:\"normal\";s:28:\"featured_max_number_of_posts\";s:1:\"5\";s:21:\"featured_filter_posts\";i:1;s:14:\"posts_per_page\";s:1:\"5\";s:19:\"excluded_categories\";s:0:\"\";s:13:\"excluded_tags\";s:0:\"\";s:28:\"allow_nested_comment_replies\";i:0;s:15:\"twitter_account\";s:4:\"none\";s:22:\"show_comments_on_pages\";i:0;s:24:\"enable_custom_post_types\";b:0;s:31:\"custom_post_types_in_post_index\";b:1;s:25:\"enabled_custom_post_types\";s:0:\"\";s:21:\"related_posts_enabled\";i:0;s:23:\"related_posts_skip_tags\";i:0;s:17:\"related_posts_max\";s:1:\"3\";s:27:\"related_posts_show_excerpts\";i:1;}','yes'),(183,'wpts_bauhaus','O:15:\"WPtouchSettings\":16:{s:12:\"primary_menu\";s:2:\"wp\";s:18:\"bauhaus_menu_style\";s:10:\"off-canvas\";s:24:\"bauhaus_background_color\";s:7:\"#f9f9f8\";s:20:\"bauhaus_header_color\";s:7:\"#ffffff\";s:18:\"bauhaus_link_color\";s:7:\"#f94e5c\";s:30:\"bauhaus_post_page_header_color\";s:7:\"#ffffff\";s:18:\"bauhaus_shape_type\";s:12:\"roundsquares\";s:21:\"bauhaus_show_taxonomy\";i:0;s:17:\"bauhaus_show_date\";i:1;s:19:\"bauhaus_show_author\";i:0;s:19:\"bauhaus_show_search\";i:1;s:28:\"bauhaus_show_comment_bubbles\";i:0;s:27:\"bauhaus_use_infinite_scroll\";i:1;s:22:\"bauhaus_use_thumbnails\";s:17:\"index_single_page\";s:22:\"bauhaus_thumbnail_type\";s:8:\"featured\";s:30:\"bauhaus_thumbnail_custom_field\";s:0:\"\";}','yes'),(395,'rewrite_rules','','yes'),(411,'auto_core_update_notified','a:4:{s:4:\"type\";s:7:\"success\";s:5:\"email\";s:23:\"mailto@example.com\";s:7:\"version\";s:5:\"4.9.2\";s:9:\"timestamp\";i:1516188069;}','no'),(1185,'db_upgraded','','yes'),(1869,'can_compress_scripts','1','no'),(1881,'fresh_site','0','yes'),(3067,'widget_media_audio','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(3068,'widget_media_image','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(3069,'widget_media_video','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(3078,'category_children','a:5:{i:15;a:3:{i:0;i:5;i:1;i:6;i:2;i:19;}i:16;a:12:{i:0;i:8;i:1;i:9;i:2;i:38;i:3;i:47;i:4;i:48;i:5;i:49;i:6;i:50;i:7;i:54;i:8;i:59;i:9;i:60;i:10;i:63;i:11;i:83;}i:23;a:1:{i:0;i:24;}i:10;a:5:{i:0;i:29;i:1;i:40;i:2;i:44;i:3;i:45;i:4;i:52;}i:31;a:1:{i:0;i:34;}}','yes'),(3147,'widget_custom_html','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(3421,'widget_media_gallery','a:1:{s:12:\"_multiwidget\";i:1;}','yes'),(3779,'_transient_doing_cron','1532249305.7639319896697998046875','yes'),(3786,'_site_transient_timeout_browser_c89882595a0b6fb065599d15013dcdb5','1519129347','no'),(3787,'_site_transient_browser_c89882595a0b6fb065599d15013dcdb5','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"63.0.3239.132\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(3816,'_site_transient_timeout_browser_6762b3e2637e7f60cc97fe7ffa07c3df','1524835599','no'),(3817,'_site_transient_browser_6762b3e2637e7f60cc97fe7ffa07c3df','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"66.0.3359.117\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(3864,'_site_transient_timeout_browser_a83f0395992b1c134b40a171734e504a','1527674108','no'),(3865,'_site_transient_browser_a83f0395992b1c134b40a171734e504a','a:10:{s:4:\"name\";s:6:\"Chrome\";s:7:\"version\";s:13:\"66.0.3359.181\";s:8:\"platform\";s:7:\"Windows\";s:10:\"update_url\";s:29:\"https://www.google.com/chrome\";s:7:\"img_src\";s:43:\"http://s.w.org/images/browsers/chrome.png?1\";s:11:\"img_src_ssl\";s:44:\"https://s.w.org/images/browsers/chrome.png?1\";s:15:\"current_version\";s:2:\"18\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:0;}','no'),(3870,'_site_transient_timeout_community-events-876e3127e74cdd59f92d5ea2f99072d9','1527112511','no'),(3871,'_site_transient_community-events-876e3127e74cdd59f92d5ea2f99072d9','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:10:\"222.1.36.0\";}s:6:\"events\";a:6:{i:0;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:15:\"WordCamp Europe\";s:3:\"url\";s:33:\"https://2018.europe.wordcamp.org/\";s:6:\"meetup\";s:0:\"\";s:10:\"meetup_url\";s:0:\"\";s:4:\"date\";s:19:\"2018-06-14 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:16:\"Belgrade, Serbia\";s:7:\"country\";s:2:\"RS\";s:8:\"latitude\";d:44.808497;s:9:\"longitude\";d:20.432285;}}i:1;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:54:\"WordBench 長野 vol.19 WordPress 15th Birthday! #wp15\";s:3:\"url\";s:50:\"https://www.meetup.com/WordBench/events/249967921/\";s:6:\"meetup\";s:9:\"WordBench\";s:10:\"meetup_url\";s:33:\"https://www.meetup.com/WordBench/\";s:4:\"date\";s:19:\"2018-05-26 14:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:16:\"長野県, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:36.23455;s:9:\"longitude\";d:137.97081;}}i:2;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:50:\"[群馬] WordPressもくもく勉強会@群馬 #58\";s:3:\"url\";s:50:\"https://www.meetup.com/WordBench/events/250666889/\";s:6:\"meetup\";s:9:\"WordBench\";s:10:\"meetup_url\";s:33:\"https://www.meetup.com/WordBench/\";s:4:\"date\";s:19:\"2018-05-31 19:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:16:\"群馬県, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:36.361149;s:9:\"longitude\";d:139.008545;}}i:3;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:14:\"WordCamp Osaka\";s:3:\"url\";s:31:\"https://2018.osaka.wordcamp.org\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2018-06-02 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:12:\"Osaka, Japan\";s:7:\"country\";s:2:\"JP\";s:8:\"latitude\";d:34.7064585;s:9:\"longitude\";d:135.5011149;}}i:4;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:16:\"WordCamp Ogijima\";s:3:\"url\";s:33:\"https://2018.ogijima.wordcamp.org\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2018-07-15 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:7:\"Ogijima\";s:7:\"country\";s:2:\"JP\";s:8:\"latitude\";d:34.4200879;s:9:\"longitude\";d:134.0568121;}}i:5;a:7:{s:4:\"type\";s:8:\"wordcamp\";s:5:\"title\";s:14:\"WordCamp Tokyo\";s:3:\"url\";s:31:\"https://2018.tokyo.wordcamp.org\";s:6:\"meetup\";N;s:10:\"meetup_url\";N;s:4:\"date\";s:19:\"2018-09-14 00:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:5:\"Tokyo\";s:7:\"country\";s:2:\"JP\";s:8:\"latitude\";d:35.6960311;s:9:\"longitude\";d:139.690523;}}}}','no'),(3888,'_site_transient_timeout_browser_a77278e4adab0a7db43d86966e2c3cf0','1532407266','no'),(3889,'_site_transient_browser_a77278e4adab0a7db43d86966e2c3cf0','a:10:{s:4:\"name\";s:6:\"Safari\";s:7:\"version\";s:4:\"11.0\";s:8:\"platform\";s:4:\"iPad\";s:10:\"update_url\";s:0:\"\";s:7:\"img_src\";s:0:\"\";s:11:\"img_src_ssl\";s:0:\"\";s:15:\"current_version\";s:0:\"\";s:7:\"upgrade\";b:0;s:8:\"insecure\";b:0;s:6:\"mobile\";b:1;}','no'),(3908,'_site_transient_update_core','O:8:\"stdClass\":4:{s:7:\"updates\";a:2:{i:0;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:62:\"https://downloads.wordpress.org/release/ja/wordpress-4.9.7.zip\";s:6:\"locale\";s:2:\"ja\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:62:\"https://downloads.wordpress.org/release/ja/wordpress-4.9.7.zip\";s:10:\"no_content\";b:0;s:11:\"new_bundled\";b:0;s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.7\";s:7:\"version\";s:5:\"4.9.7\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";}i:1;O:8:\"stdClass\":10:{s:8:\"response\";s:6:\"latest\";s:8:\"download\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.7.zip\";s:6:\"locale\";s:5:\"en_US\";s:8:\"packages\";O:8:\"stdClass\":5:{s:4:\"full\";s:59:\"https://downloads.wordpress.org/release/wordpress-4.9.7.zip\";s:10:\"no_content\";s:70:\"https://downloads.wordpress.org/release/wordpress-4.9.7-no-content.zip\";s:11:\"new_bundled\";s:71:\"https://downloads.wordpress.org/release/wordpress-4.9.7-new-bundled.zip\";s:7:\"partial\";b:0;s:8:\"rollback\";b:0;}s:7:\"current\";s:5:\"4.9.7\";s:7:\"version\";s:5:\"4.9.7\";s:11:\"php_version\";s:5:\"5.2.4\";s:13:\"mysql_version\";s:3:\"5.0\";s:11:\"new_bundled\";s:3:\"4.7\";s:15:\"partial_version\";s:0:\"\";}}s:12:\"last_checked\";i:1532248207;s:15:\"version_checked\";s:5:\"4.9.7\";s:12:\"translations\";a:0:{}}','no'),(3912,'_site_transient_timeout__wptouch_bncid_latest_version','1531804380','no'),(3913,'_site_transient__wptouch_bncid_latest_version','a:2:{s:4:\"name\";s:13:\"wptouch-pro-3\";s:7:\"version\";s:3:\"4.0\";}','no'),(3914,'_transient_timeout_plugin_slugs','1531888981','no'),(3915,'_transient_plugin_slugs','a:6:{i:0;s:19:\"akismet/akismet.php\";i:1;s:9:\"hello.php\";i:2;s:52:\"syntaxhighlighter-evolved-h-brush/shBrushHackpad.php\";i:3;s:41:\"wp-multibyte-patch/wp-multibyte-patch.php\";i:4;s:45:\"wp-syntaxhighlighter/wp-syntaxhighlighter.php\";i:5;s:31:\"wptouch-pro-3/wptouch-pro-3.php\";}','no'),(3916,'_site_transient_update_plugins','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1532248207;s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}s:9:\"no_update\";a:5:{s:19:\"akismet/akismet.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:21:\"w.org/plugins/akismet\";s:4:\"slug\";s:7:\"akismet\";s:6:\"plugin\";s:19:\"akismet/akismet.php\";s:11:\"new_version\";s:5:\"4.0.8\";s:3:\"url\";s:38:\"https://wordpress.org/plugins/akismet/\";s:7:\"package\";s:56:\"https://downloads.wordpress.org/plugin/akismet.4.0.8.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:59:\"https://ps.w.org/akismet/assets/icon-256x256.png?rev=969272\";s:2:\"1x\";s:59:\"https://ps.w.org/akismet/assets/icon-128x128.png?rev=969272\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:61:\"https://ps.w.org/akismet/assets/banner-772x250.jpg?rev=479904\";}s:11:\"banners_rtl\";a:0:{}}s:9:\"hello.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:25:\"w.org/plugins/hello-dolly\";s:4:\"slug\";s:11:\"hello-dolly\";s:6:\"plugin\";s:9:\"hello.php\";s:11:\"new_version\";s:3:\"1.6\";s:3:\"url\";s:42:\"https://wordpress.org/plugins/hello-dolly/\";s:7:\"package\";s:58:\"https://downloads.wordpress.org/plugin/hello-dolly.1.6.zip\";s:5:\"icons\";a:2:{s:2:\"2x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-256x256.jpg?rev=969907\";s:2:\"1x\";s:63:\"https://ps.w.org/hello-dolly/assets/icon-128x128.jpg?rev=969907\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:65:\"https://ps.w.org/hello-dolly/assets/banner-772x250.png?rev=478342\";}s:11:\"banners_rtl\";a:0:{}}s:52:\"syntaxhighlighter-evolved-h-brush/shBrushHackpad.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:47:\"w.org/plugins/syntaxhighlighter-evolved-h-brush\";s:4:\"slug\";s:33:\"syntaxhighlighter-evolved-h-brush\";s:6:\"plugin\";s:52:\"syntaxhighlighter-evolved-h-brush/shBrushHackpad.php\";s:11:\"new_version\";s:5:\"0.0.2\";s:3:\"url\";s:64:\"https://wordpress.org/plugins/syntaxhighlighter-evolved-h-brush/\";s:7:\"package\";s:76:\"https://downloads.wordpress.org/plugin/syntaxhighlighter-evolved-h-brush.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:77:\"https://s.w.org/plugins/geopattern-icon/syntaxhighlighter-evolved-h-brush.svg\";}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}}s:41:\"wp-multibyte-patch/wp-multibyte-patch.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:32:\"w.org/plugins/wp-multibyte-patch\";s:4:\"slug\";s:18:\"wp-multibyte-patch\";s:6:\"plugin\";s:41:\"wp-multibyte-patch/wp-multibyte-patch.php\";s:11:\"new_version\";s:5:\"2.8.1\";s:3:\"url\";s:49:\"https://wordpress.org/plugins/wp-multibyte-patch/\";s:7:\"package\";s:67:\"https://downloads.wordpress.org/plugin/wp-multibyte-patch.2.8.1.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:62:\"https://s.w.org/plugins/geopattern-icon/wp-multibyte-patch.svg\";}s:7:\"banners\";a:0:{}s:11:\"banners_rtl\";a:0:{}}s:45:\"wp-syntaxhighlighter/wp-syntaxhighlighter.php\";O:8:\"stdClass\":9:{s:2:\"id\";s:34:\"w.org/plugins/wp-syntaxhighlighter\";s:4:\"slug\";s:20:\"wp-syntaxhighlighter\";s:6:\"plugin\";s:45:\"wp-syntaxhighlighter/wp-syntaxhighlighter.php\";s:11:\"new_version\";s:5:\"1.7.3\";s:3:\"url\";s:51:\"https://wordpress.org/plugins/wp-syntaxhighlighter/\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/plugin/wp-syntaxhighlighter.1.7.3.zip\";s:5:\"icons\";a:1:{s:7:\"default\";s:71:\"https://s.w.org/plugins/geopattern-icon/wp-syntaxhighlighter_66666c.svg\";}s:7:\"banners\";a:1:{s:2:\"1x\";s:74:\"https://ps.w.org/wp-syntaxhighlighter/assets/banner-772x250.png?rev=480095\";}s:11:\"banners_rtl\";a:0:{}}}}','no'),(3941,'_transient_timeout_wptouch_update_info','1532279760','no'),(3942,'_transient_wptouch_update_info','1','no'),(3947,'_site_transient_timeout_community-events-768494c267693266bdccbdb14308f227','1532279766','no'),(3948,'_site_transient_community-events-768494c267693266bdccbdb14308f227','a:2:{s:8:\"location\";a:1:{s:2:\"ip\";s:13:\"182.250.242.0\";}s:6:\"events\";a:5:{i:0;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:69:\"[岐阜] 第13回WordBench岐阜「定例WordPress講座 運用編」\";s:3:\"url\";s:50:\"https://www.meetup.com/WordBench/events/251707604/\";s:6:\"meetup\";s:9:\"WordBench\";s:10:\"meetup_url\";s:33:\"https://www.meetup.com/WordBench/\";s:4:\"date\";s:19:\"2018-07-21 13:30:00\";s:8:\"location\";a:4:{s:8:\"location\";s:16:\"岐阜県, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:35.427319;s:9:\"longitude\";d:136.759827;}}i:1;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:69:\"[三重] WordBench三重 第2回勉強会「Gutenberg Challenge !!」\";s:3:\"url\";s:50:\"https://www.meetup.com/WordBench/events/252392974/\";s:6:\"meetup\";s:9:\"WordBench\";s:10:\"meetup_url\";s:33:\"https://www.meetup.com/WordBench/\";s:4:\"date\";s:19:\"2018-07-22 14:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:10:\"Tsu, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:34.734375;s:9:\"longitude\";d:136.51118;}}i:2;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:98:\"[福井] WordPress 勉強会@福井 － みんなで体験！ 次世代エディタ『Gutenberg』\";s:3:\"url\";s:50:\"https://www.meetup.com/WordBench/events/252017832/\";s:6:\"meetup\";s:9:\"WordBench\";s:10:\"meetup_url\";s:33:\"https://www.meetup.com/WordBench/\";s:4:\"date\";s:19:\"2018-07-28 13:30:00\";s:8:\"location\";a:4:{s:8:\"location\";s:23:\"Fukui Prefecture, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:36.060577;s:9:\"longitude\";d:136.22348;}}i:3;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:69:\"岐阜 WordPress Meetup #1 「WordPressについて話をしよう」\";s:3:\"url\";s:62:\"https://www.meetup.com/Gifu-WordPress-Meetup/events/252993608/\";s:6:\"meetup\";s:21:\"Gifu WordPress Meetup\";s:10:\"meetup_url\";s:45:\"https://www.meetup.com/Gifu-WordPress-Meetup/\";s:4:\"date\";s:19:\"2018-08-18 13:30:00\";s:8:\"location\";a:4:{s:8:\"location\";s:16:\"岐阜県, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:35.427456;s:9:\"longitude\";d:136.759872;}}i:4;a:7:{s:4:\"type\";s:6:\"meetup\";s:5:\"title\";s:76:\"WordBeer Gifu 2018 「ビアガーデンでWordPressの話をしよう！」\";s:3:\"url\";s:62:\"https://www.meetup.com/Gifu-WordPress-Meetup/events/252887506/\";s:6:\"meetup\";s:21:\"Gifu WordPress Meetup\";s:10:\"meetup_url\";s:45:\"https://www.meetup.com/Gifu-WordPress-Meetup/\";s:4:\"date\";s:19:\"2018-08-18 18:00:00\";s:8:\"location\";a:4:{s:8:\"location\";s:11:\"Gifu, Japan\";s:7:\"country\";s:2:\"jp\";s:8:\"latitude\";d:35.41231;s:9:\"longitude\";d:136.7578;}}}}','no'),(3949,'_transient_timeout_feed_ab995de7a5278071ed721c721c891aed','1532279767','no'),(3950,'_transient_feed_ab995de7a5278071ed721c721c891aed','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:3:\"\n\n\n\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:49:\"\n	\n	\n	\n	\n	\n	\n	\n	\n	\n	\n		\n		\n		\n		\n		\n		\n		\n		\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"日本語\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:24:\"https://ja.wordpress.org\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:49:\"WordPress 日本語ローカルサイトブログ\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:13:\"lastBuildDate\";a:1:{i:0;a:5:{s:4:\"data\";s:34:\"\n	Fri, 13 Jul 2018 07:25:46 +0000	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"ja\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:40:\"https://wordpress.org/?v=5.0-alpha-43518\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:22:\"Gutenberg 最新情報\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:56:\"https://ja.wordpress.org/2018/07/13/update-on-gutenberg/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 13 Jul 2018 06:43:35 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:5:\"Focus\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=5244\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"以下は、Tammie Lister が書いた WordPress.org 公式ブログの記事、「Update o [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Naoko Takano\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4020:\"<p>以下は、<a href=\"https://profiles.wordpress.org/karmatosed\">Tammie Lister</a> が書いた WordPress.org 公式ブログの記事、「<a href=\"https://wordpress.org/news/2018/07/update-on-gutenberg/\">Update on Gutenberg</a>」を訳したものです。<br />誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/alphabeta/\">フォーラムまでお知らせください</a>。</p>\n\n<hr class=\"wp-block-separator\" />\n\n<p>WordPress にもうじき追加される新しいコンテンツ作成エクスペリエンスである Gutenberg プロジェクトは、大きな進展を遂げました。プロジェクトの開始以来、30回のリリースが行われています。そのうち12回は、2017年末の WordCamp US 以降にリリースされました。それから2018年6月の WordCamp ヨーロッパまでの間に合計1,764個のイシューが立てられ、うち1,115個がクローズされました。第一段階の作業が完了に近づこうとしている現時点での予定は以下のとおりです。</p>\n\n<h4>進行中</h4>\n\n<ul>\n	<li>Gutenberg の新機能のフリーズ (最終決定) 。機能一覧は<a href=\"https://github.com/WordPress/gutenberg/issues/4894\">こちら</a>です。</li>\n	<li>ホスティングサービス、制作会社、講師の方々に、運営サイトでオプトインするよう推奨。</li>\n	<li>WordPress.com は wp-admin 管理画面を使っているユーザー向けにオプトインを開始。利用しているサイトと投稿数をトラッキング予定。</li>\n	<li>モバイルアプリでの Gutenberg サポートを iOS と Android 上で実施。</li>\n</ul>\n\n<h4>7月</h4>\n\n<ul>\n	<li>Guteberg またはクラッシックエディタープラグインをインストールするよう推奨するメッセージを含む 4.9.x をリリース。</li>\n	<li>WordPress.com がオプトアウト形式に移行。オプトアウトしているユーザー層とその理由をトラッキング予定。</li>\n	<li>トリアージが増加し、Gutenberg 関連のブロッカーをゼロにするようバグ状況管理を強化。</li>\n	<li>投稿周りだけではなく、Gutenberg の第二段階であるカスタマイゼーションに関する調査を開始。</li>\n</ul>\n\n<h4>8月以降</h4>\n\n<ul>\n	<li>Gutenberg 内のすべての重大な問題を解決。</li>\n	<li>Calypso との完全統合とユーザーオプトイン。</li>\n	<li>10万サイト以上が25万投稿を Gutenberg で作成することをゴールとする。</li>\n	<li>Gutenberg プラグインのコアへのマージをもって5.0 リリースサイクルを開始。</li>\n	<li>5.0 ベータリリース、翻訳の完了。</li>\n	<li>年末までに Gutenberg モバイル版を完成。</li>\n</ul>\n\n<p>WordPress 5.0 は早ければ8月にリリースされ、それより前に数万サイトが Gutenberg を使うことになります。Gutenberg についてのより詳しい情報は<a href=\"https://ja.wordpress.org/gutenberg/\">こちら</a>でご覧ください。<a href=\"https://testgutenberg.com/\">テストしてみるにはこちら</a>へ。ご自分のサイトに<a href=\"https://ja.wordpress.org/plugins/gutenberg/\">インストール</a>したり、<a href=\"https://github.com/WordPress/gutenberg\">GitHub</a> で開発をフォローしたり、<a href=\"https://wordpressdotorg.polldaddy.com/s/gutenberg-support\">フィードバック</a>﻿を送ったりしてみてください。</p>\n\n<p><strong>訳注:</strong> 日本語環境でのバグをリリース前に発見・対応するには、より多くの日本語ユーザーの方にテストや問題の報告をしていただくことが不可欠となります。不明な点がありましたら、<a href=\"https://ja.wordpress.org/support/forum/alphabeta/\">日本語フォーラム</a>や <a href=\"http://bit.ly/join-wordslack\">WordSlack</a> <code>#core</code> チャンネルなどもご利用ください。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:36:\"\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WordPress 4.9.7 セキュリティ・メンテナンスリリース\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"https://ja.wordpress.org/2018/07/08/wordpress-4-9-7-security-and-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 07 Jul 2018 16:07:13 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=5237\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:306:\"WordPress 4.9.7 がご利用いただけるようになりました。これは WordPress 3.7 以降のすべてのバージョンに対する<strong>セキュリティ・メンテナンスリリース</strong>となります。今すぐにサイトの更新を行うことを強くおすすめします。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Seisuke Kuraishi (tenpura)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:5109:\"<p>以下は、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a> が書いた WordPress.org 公式ブログの記事、<a href=\"https://wordpress.org/news/2018/07/wordpress-4-9-7-security-and-maintenance-release/\">WordPress 4.9.7 Security and Maintenance Release</a> を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/feedback/\">フォーラムまでお知らせください</a>。</p>\n<hr>\n<p>WordPress 4.9.7 がご利用いただけるようになりました。これは WordPress 3.7 以降のすべてのバージョンに対する<strong>セキュリティ・メンテナンスリリース</strong>となります。今すぐにサイトの更新を行うことを強くおすすめします。</p>\n<p>バージョン 4.9.6 以前の WordPress は、特定の権限を持つユーザーが uploads ディレクトリ外のファイルを削除できてしまう可能性のあるメディアの問題の影響を受けます。</p>\n<p>問題を報告してくださった <a href=\"https://hackerone.com/slavco\">Slavco</a> と 関連する問題の報告をしてくださった <a href=\"https://www.wordfence.com/\">Matt Barry</a> に感謝いたします。</p>\n<p>WordPress 4.9.7 では、その他17個のバグが修正されました。特筆すべきは、下記となります。</p>\n<ul>\n<li>タクソノミー: タームクエリーのキャッシュ処理の改善。</li>\n<li>投稿、投稿タイプ: ログアウト時に投稿パスワード Cookie をクリア。</li>\n<li>ウィジェット: ウィジェット管理画面のサイドバーの説明にベーシックな HTML タグを許可。</li>\n<li>コミュニティイベントダッシュボード: 複数のミートアップが行われている場合でも、常に最寄りの WordCamp を表示。</li>\n<li>プライバシー: 管理者のコンテキスト外でリライトルールをフラッシュした時に、デフォルトのプライバシーポリシーの内容が致命的なエラーを引き起こさないことを確認。</li>\n</ul>\n<p><a href=\"https://ja.wordpress.org/download/\">WordPress 4.9.7 (日本語版) をダウンロード</a>、または、「ダッシュボード」 → 「更新」へ行き「今すぐ更新」をクリックしてください。自動バックグラウンド更新をサポートするサイトでは、すでに自動更新が始まっています。</p>\n<p>なお、以前に予定されていた 4.9.7 は、4.9.8 となり、<a href=\"https://make.wordpress.org/core/2018/07/04/dev-chat-summary-july-4th-4-9-7-week-7/\">昨日公開されたリリーススケジュール</a>に従ってリリースされる予定です。</p>\n<p>WordPress 4.9.7 に貢献してくださったすべての方に感謝いたします:</p>\n<p><a href=\"https://profiles.wordpress.org/1naveengiri/\">1naveengiri</a>, <a href=\"https://profiles.wordpress.org/jorbin/\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/abdullahramzan/\">abdullahramzan</a>, <a href=\"https://profiles.wordpress.org/alejandroxlopez/\">alejandroxlopez</a>, <a href=\"https://profiles.wordpress.org/azaozz/\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/aryamaaru/\">Arun</a>, <a href=\"https://profiles.wordpress.org/birgire/\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/bjornw/\">BjornW</a>, <a href=\"https://profiles.wordpress.org/boonebgorges/\">Boone Gorges</a>, <a href=\"https://profiles.wordpress.org/kraftbj/\">Brandon Kraft</a>, <a href=\"https://profiles.wordpress.org/chetan200891/\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/dlh/\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/flixos90/\">Felix Arntz</a>, <a href=\"https://profiles.wordpress.org/garetharnold/\">Gareth</a>, <a href=\"https://profiles.wordpress.org/iandunn/\">Ian Dunn</a>, <a href=\"https://profiles.wordpress.org/ianbelanger/\">ibelanger</a>, <a href=\"https://profiles.wordpress.org/johnbillion/\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/desrosj/\">Jonathan Desrosiers</a>, <a href=\"https://profiles.wordpress.org/joyously/\">Joy</a>, <a href=\"https://profiles.wordpress.org/khaihong/\">khaihong</a>, <a href=\"https://profiles.wordpress.org/lbenicio/\">lbenicio</a>, <a href=\"https://profiles.wordpress.org/leanderiversen/\">Leander Iversen</a>, <a href=\"https://profiles.wordpress.org/mermel/\">mermel</a>, <a href=\"https://profiles.wordpress.org/metalandcoffee/\">metalandcoffee</a>, <a href=\"https://profiles.wordpress.org/jbpaul17/\">Migrated to @jeffpaul</a>, <a href=\"https://profiles.wordpress.org/palmiak/\">palmiak</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov/\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/skoldin/\">skoldin</a>, <a href=\"https://profiles.wordpress.org/subrataemfluence/\">Subrata Sarkar</a>, <a href=\"https://profiles.wordpress.org/itowhid06/\">Towhidul Islam</a>, <a href=\"https://profiles.wordpress.org/warmlaundry/\">warmlaundry</a>, and <a href=\"https://profiles.wordpress.org/yuriv/\">YuriV</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"今月の WordPress: 2018年6月\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:69:\"https://ja.wordpress.org/2018/07/04/the-month-in-wordpress-june-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 03 Jul 2018 23:42:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Month in WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=5058\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:101:\"以下は、Hugh Lashbrooke が書いた WordPress.org 公式ブログの記事、「The Mo [&#8230;]\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Naoko Takano\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:6447:\"<p>以下は、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a> が書いた WordPress.org 公式ブログの記事、「<a href=\"https://wordpress.org/news/2018/04/the-month-in-wordpress-march-2018/\">The Month in WordPress: March 2018</a>」を訳したものです。</p>\n\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.forums.wordpress.org/forum/7\">フォーラムまでお知らせください</a>。</p>\n\n<hr class=\"wp-block-separator\" />\n\n<p>先月は WordCamp の2つのフラッグシップイベントのうちの1つが開催され、いくつか重要な WordPress プロジェクトの告知があるなど、ニュースには事欠かない月となりました。6月に WordPress のグローバルコミュニティで何が起きたかについて、詳しくお読みください。</p>\n\n<hr class=\"wp-block-separator\" />\n\n<h2>今年も成功した WordCamp ヨーロッパ</h2>\n\n<p>セルビア共和国ベオグラードで6月14日から3日間、学びと貢献のイベントである WordCamp Europe が行われました。2,000人以上が会場に参加し、さらに数百人がセッションのライブストリームを視聴しました。</p>\n\n<p>この WordCamp には多くのイベント初参加者と、初めて WordPress プロジェクトやコミュニティに参加・貢献した方々が来場し、大きな成功を収めました。65名のスピーカーによるセッションは録画され、今後数週間で WordPress.tv 上で見られるようになる予定です。それまでの間、<a href=\"https://www.flickr.com/photos/wceu/albums\">イベントの写真をご覧ください</a>。</p>\n\n<p><a href=\"https://2018.europe.wordcamp.org/2018/06/16/wordcamp-europe-2019/\">次回の WordCamp Europe</a> はドイツのベルリンにて2019年6月20〜22日に行われます。ヨーロッパにお住まいで、運営チームに参加したい方は<a href=\"https://2019.europe.wordcamp.org/2018/06/16/call-wordcamp-europe-2019-organizers/\">申請フォームにご記入ください</a>。</p>\n\n<h2>新 WordPress コンテンツエディターのロードマップを更新</h2>\n\n<p>WordCamp Europe での基調講演において、マット・マレンウェッグはWordPress 5.0 に含まれる新しいコンテンツエディター (編集ツール) である <a href=\"https://wordpress.org/gutenberg/\">Gutenberg</a> の<a href=\"https://gutenbergtimes.com/mullenweg-on-gutenberg-roll-out-plan/\">更新済みロードマップ</a>を提示しました。</p>\n\n<p>このエディターは急速な開発が進められていますが、<a href=\"https://make.wordpress.org/core/2018/06/21/whats-new-in-gutenberg-21st-june/\">v3.1 がつい先月リリースされ</a>、チームは2018年8月に Gutenberg を WordPress コアへ統合することを目指しています。これはまだ確定ではなく、リリース日は開発が進むにつれて変更される可能性もあります。しかし、この目標のおかげで、エディターのリリースがいつ頃になるかの現実的な見解を初めて得られることとなりました。</p>\n\n<p>Gutenberg の開発に貢献したい方は、<a href=\"https://wordpress.org/gutenberg/handbook/\">ハンドブック</a>を読み、<a href=\"https://make.wordpress.org/core/\">コアチームのブログ</a>をフォローし、﻿<a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack グループ</a>﻿の #core-editor チャンネルに参加してください。</p>\n\n<h2>WordCamp インキュベーターシティの発表</h2>\n\n<p>WordCamp インキュベータープログラムは、WordCamp を初めて開催するための運営サポートを提供することによって WordPress が十分リーチできていないコミュニティに広まるようにするものです。このプログラムの最初のイテレーションは2016年に運用され、3つの都市が WordPress コミュニティを開始するのをお手伝いすることに成功しました。</p>\n\n<p>今年、コミュニティチームはインキュベータープログラムを再び実行します。104のコミュニティからの申請があり、モンテビデオ (ウルグアイ) とコタキナバル (マレーシア) がプログラム参加都市として<a href=\"https://make.wordpress.org/community/2018/06/26/wordcamp-incubator-program-2018-locations-announcement/\">採択されました</a>。両都市は、WordPress コミュニティの立ち上げを支援する手段として、初めての WordCamp を実行するための直接的なヘルプを経験豊富な WordCamp 主催者から受けます。</p>\n\n<p>インキュベータープログラムをについて詳しくは<a href=\"https://make.wordpress.org/community/\">コミュニティチームのブログ</a>をフォローし、<a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack グループ</a>の #community-events チャンネルに参加してください。</p>\n\n<hr class=\"wp-block-separator\" />\n\n<h2>さらに読む</h2>\n\n<ul>\n	<li>スペインの WordPress コミュニティは最近、国内最高のオープンソースコミュニティとしての﻿<a href=\"https://twitter.com/wp_es/status/1004681694660603904\">賞を受賞</a>しました。</li>\n	<li>今月、WordPress は <a href=\"https://w3techs.com/technologies/details/cm-wordpress/all/all\">Web サイトシェアの31%を占めるというマイルストーン</a>を達成しました。</li>\n	<li><a href=\"https://wprig.io/introducing-wprig-wordpress/\">WP Rig</a> は、WordPress 開発者がより良いテーマを構築するための新しいツールです。</li>\n	<li><a href=\"https://richtabor.com/gutenberg-block-unit-test/\">Block Unit Test</a> は、テーマ開発者が Gutenberg に向けての準備に使える新しいプラグインです。</li>\n	<li>月末に、Zac Gordon が WordPress での JavaScript 開発にフォーカスした<a href=\"https://javascriptforwp.com/conference/\">オンラインカンファレンス</a>を開催しました。セッション動画は近日 YouTube で見られるようになります。<br /></li>\n</ul>\n\n<p>次回の「今月の WordPress」に含めるべき記事があれば、<a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\">こちらに提出</a>してください。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WordPress 4.9.6 プライバシー・メンテナンスリリース\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:84:\"https://ja.wordpress.org/2018/05/19/wordpress-4-9-6-privacy-and-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 19 May 2018 07:27:01 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=5020\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:261:\"WordPress 4.9.6 がご利用いただけるようになりました。これは<strong>プライバシーとメンテナンス</strong>についてのリリースです。サイトの更新を行い、新しいプライバシー機能をご利用ください。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Seisuke Kuraishi (tenpura)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:12838:\"<p>以下は、<a href=\"https://profiles.wordpress.org/allendav\">Allen Snook</a> が書いた WordPress.org 公式ブログの記事、<a href=\"https://wordpress.org/news/2018/05/wordpress-4-9-6-privacy-and-maintenance-release/\">「WordPress 4.9.6 Privacy and Maintenance Release」</a>を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/feedback/\">フォーラムまでお知らせください</a>。</p>\n<hr>\nWordPress 4.9.6 がご利用いただけるようになりました。これは<strong>プライバシーとメンテナンス</strong>についてのリリースです。サイトの更新を行い、新しいプライバシー機能をご利用ください。</p>\n<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/05/GDPR-Banner.png?w=632&amp;ssl=1\" alt=\"A decorative header featuring the text &quot;GDPR&quot; and a lock inside of a blue shield, on multicolor green background.\" class=\"wp-image-5988\" height=\"316\" width=\"632\"></figure>\n<h2 style=\"text-align:left\">プライバシー</h2>\n<p>欧州連合（EU）の一般データ保護規則（<strong>GDPR</strong>）が5月25日に発効となります。GDPR は、個人情報の収集・使用・共有の方法について、企業とサイト所有者に透明性を要求します。また、個人には、自身の<br />\n個人情報が、収集・使用・共有される際により多くのアクセスと選択肢を提供します。</p>\n<p>GDPR は欧州の規則ですが、その要件は、ビシネスの拠点にかかわらず、EU 住民の個人情報を収集・保管・処理するすべてのサイトとオンラインビジネスに適用されるということを理解することが重要です。</p>\n<p>GDPR の詳細については、欧州委員会の<a href=\"http://ec.europa.eu/justice/smedataprotect/index_en.htm\">データ保護ページ</a>を参照してください。</p>\n<p>私たちは、この重要な法律を遵守するために世界中のサイト運営者を支援する努力をしており、その取り組みの一環として、本リリースでは多数の新しいプライバシー機能を追加しました。</p>\n<h2 style=\"text-align:left\">コメント</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i0.wp.com/wordpress.org/news/files/2018/05/comments-border.png?w=632&amp;ssl=1\" alt=\"A screenshot of a comment form, where the new &quot;Save my name, email, and website in this browser for the next time I comment&quot; checkbox is featured.\" class=\"wp-image-5986\" height=\"612\" width=\"632\"></figure>\n<p>ログアウト状態のコメント投稿者は、自身の名前、メールアドレス、ウェブサイトをブラウザーの Cookie に保存するかどうか選択できます。</p>\n<h2 style=\"text-align:left\">プライバシーポリシーページ</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i1.wp.com/wordpress.org/news/files/2018/05/privacy-policy-collapsed.png?w=632&amp;ssl=1\" alt=\"A screenshot of the new Privacy Settings page.\" class=\"wp-image-5995\" height=\"373\" width=\"632\"></figure>\n<p>サイト所有者がプライバシーポリシーページを指定できるようになりました。このページはログインページと登録ページに表示されます。ポリシーへのリンクは、ウェブサイトのすべてのページに手動で追加する必要があります。フッターメニューがあるなら、プライバシーポリシーを含める場所として最適です。</p>\n<p>加えて、私たちは WordPress からの提案テキストとプラグインの個人データ取り扱いを含むガイドを作成しました。これらの提案テキストをコピーアンドペーストしてサイトのプライバシーポリシーを書き始めるのもよいでしょう。</p>\n<p>データを収集するプラグインを開発している場合は、その情報を WordPress のプライバシーポリシーガイドに含めることをおすすめします。詳しくは、<a href=\"https://developer.wordpress.org/plugins/privacy/\">プラグインハンドブックのプライバシーセクション</a>をご覧ください。</p>\n<h2 style=\"text-align:left\">データの取り扱い</h2>\n<figure class=\"wp-block-image\"><img src=\"https://i2.wp.com/wordpress.org/news/files/2018/05/export-data.png?w=632&amp;ssl=1\" alt=\"A screenshot of the new Export Personal Data tools page. Several export requests are listed on the page, to demonstrate how the new feature will work.\" class=\"wp-image-5999\" height=\"465\" width=\"632\"></figure>\n<h3 class=\"layout-column-1\">データエクスポート</h3>\n<p>サイト所有者は、WordPress とプラグインによって収集されたユーザーの個人データ・利用データを含む ZIP ファイルをエクスポートできます。</p>\n<h3 class=\"layout-column-2\">データ消去</h3>\n<p>サイト所有者は、プラ​​グインによって収集されたデータ含むユーザーの個人データを消去することができます。</p>\n<blockquote class=\"wp-block-quote\"><p>\nこんにちは。</p>\n<p>お持ちのアカウントに対し、次の操作を実行するようリクエストがありました。</p>\n<p><strong>個人データのエクスポート</strong></p>\n<p>確認のため、下記のリンクをクリックしてください。<br />\n<a href=\"#\">https://.wordpress.org/wp-login.php?action=confirmaction…</a></p>\n<p>この操作を希望しない場合は、このメールを無視し、削除してかまいません。</p>\n<p>このメールは <a href=\"#\">you@example.com</a> へ送信されました。</p>\n<p>よろしくお願いします。<br />\n<em>WordPress 運営者一同</em><br />\n<a href=\"#\"><em>https://wordpress.org</em></a></p>\n</blockquote>\n<p>サイト所有者には、個人データリクエストを確認するための新しい電子メールベースの方法が用意されています。このリクエスト確認ツールは、エクスポートと消去リクエストの両方に、また、登録ユーザーとコメント投稿者の両方に機能します。</p>\n<hr class=\"wp-block-separator\">\n<h2 style=\"text-align: left\">メンテナンス</h2>\n<p>WordPress 4.9.6 では、上記以外に95個の更新が行われました。特筆すべきは、次となります。</p>\n<ul>\n<li>「所有」フィルターがメディアライブラリに追加されました。</li>\n<li>管理画面プラグインページで PHP の最低必要バージョンが表示されるようになりました。</li>\n<li>前方互換と適切な変数検証のため、新しい PHP polyfill が追加されました。</li>\n<li>TinyMCE が最新版（4.7.11）に更新されました。</li>\n</ul>\n<p><a href=\"https://make.wordpress.org/core/2018/05/17/4-9-6-update-guide/\">4.9.6 で修正されたすべての問題の詳細情報を知りたい場合は、こちらの記事をご覧ください</a>。</p>\n<p><a href=\"https://ja.wordpress.org/download/\">WordPress 4.9.6 (日本語版) をダウンロード</a>、または、「ダッシュボード」 → 「更新」へ行き「今すぐ更新」をクリックしてください。自動バックグラウンド更新をサポートするサイトでは、すでに自動更新が始まっています。</p>\n<p class=\"has-background has-very-light-gray-background-color\">現在 WordPress 4.9.3 をご使用の場合は、ただちにサイトを手動で更新してください。</p>\n<hr class=\"wp-block-separator\">\n<p>WordPress 4.9.6 に貢献してくださったすべての方に感謝いたします:</p>\n<p><a href=\"https://profiles.wordpress.org/aaroncampbell/\">Aaron D. Campbell</a>, <a href=\"https://profiles.wordpress.org/jorbin/\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/abdullahramzan/\">abdullahramzan</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein/\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/schlessera/\">Alain Schlesser</a>, <a href=\"https://profiles.wordpress.org/allendav/\">allendav</a>, <a href=\"https://profiles.wordpress.org/afercia/\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andreamiddleton/\">Andrea Middleton</a>, <a href=\"https://profiles.wordpress.org/azaozz/\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/ayeshrajans/\">Ayesh Karunaratne</a>, <a href=\"https://profiles.wordpress.org/birgire/\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/bridgetwillard/\">bridgetwillard</a>, <a href=\"https://profiles.wordpress.org/burlingtonbytes/\">Burlington Bytes</a>, <a href=\"https://profiles.wordpress.org/chetan200891/\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/claudiu/\">claudiu</a>, <a href=\"https://profiles.wordpress.org/coreymckrill/\">Corey McKrill</a>, <a href=\"https://profiles.wordpress.org/danielbachhuber/\">Daniel Bachhuber</a>, <a href=\"https://profiles.wordpress.org/dlh/\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/ocean90/\">Dominik Schilling (ocean90)</a>, <a href=\"https://profiles.wordpress.org/iseulde/\">Ella Van Dorpe</a>, <a href=\"https://profiles.wordpress.org/ericdaams/\">Eric Daams</a>, <a href=\"https://profiles.wordpress.org/fclaussen/\">Fernando Claussen</a>, <a href=\"https://profiles.wordpress.org/garrett-eclipse/\">Garrett Hyder</a>, <a href=\"https://profiles.wordpress.org/pento/\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/idea15/\">Heather Burns</a>, <a href=\"https://profiles.wordpress.org/helen/\">Helen Hou-Sandi</a>, <a href=\"https://profiles.wordpress.org/herregroen/\">herregroen</a>, <a href=\"https://profiles.wordpress.org/iandunn/\">Ian Dunn</a>, <a href=\"https://profiles.wordpress.org/ianbelanger/\">ibelanger</a>, <a href=\"https://profiles.wordpress.org/imath/\">imath</a>, <a href=\"https://profiles.wordpress.org/audrasjb/\">Jb Audras</a>, <a href=\"https://profiles.wordpress.org/jeffpaul/\">Jeffrey Paul</a>, <a href=\"https://profiles.wordpress.org/jeremyfelt/\">Jeremy Felt</a>, <a href=\"https://profiles.wordpress.org/jesperher/\">Jesper V Nielsen</a>, <a href=\"https://profiles.wordpress.org/johnjamesjacoby/\">JJJ</a>, <a href=\"https://profiles.wordpress.org/joemcgill/\">Joe McGill</a>, <a href=\"https://profiles.wordpress.org/johnbillion/\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/desrosj/\">Jonathan Desrosiers</a>, <a href=\"https://profiles.wordpress.org/chanthaboune/\">Josepha</a>, <a href=\"https://profiles.wordpress.org/jrf/\">jrf</a>, <a href=\"https://profiles.wordpress.org/dejliglama/\">Kåre Mulvad Steffensen</a>, <a href=\"https://profiles.wordpress.org/lakenh/\">Laken Hafner</a>, <a href=\"https://profiles.wordpress.org/laurelfulford/\">laurelfulford</a>, <a href=\"https://profiles.wordpress.org/lbenicio/\">lbenicio</a>, <a href=\"https://profiles.wordpress.org/macbookandrew/\">macbookandrew</a>, <a href=\"https://profiles.wordpress.org/clorith/\">Marius L. J.</a>, <a href=\"https://profiles.wordpress.org/melchoyce/\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/mnelson4/\">Michael Nelson</a>, <a href=\"https://profiles.wordpress.org/mikejolley/\">Mike Jolley</a>, <a href=\"https://profiles.wordpress.org/casiepa/\">Pascal Casier</a>, <a href=\"https://profiles.wordpress.org/pbarthmaier/\">pbrocks</a>, <a href=\"https://profiles.wordpress.org/postphotos/\">postphotos</a>, <a href=\"https://profiles.wordpress.org/pmbaldha/\">Prashant Baldha</a>, <a href=\"https://profiles.wordpress.org/presstigers/\">PressTigers</a>, <a href=\"https://profiles.wordpress.org/programmin/\">programmin</a>, <a href=\"https://profiles.wordpress.org/littlerchicken/\">Robin Cornett</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov/\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/satollo/\">Stefano Lissa</a>, <a href=\"https://profiles.wordpress.org/stephdau/\">Stephane Daury (stephdau)</a>, <a href=\"https://profiles.wordpress.org/subrataemfluence/\">Subrata Sarkar</a>, <a href=\"https://profiles.wordpress.org/karmatosed/\">Tammie Lister</a>, <a href=\"https://profiles.wordpress.org/teddytime/\">teddytime</a>, <a href=\"https://profiles.wordpress.org/thomasplevy/\">thomasplevy</a>, <a href=\"https://profiles.wordpress.org/timothyblynjacobs/\">Timothy Jacobs</a>, <a href=\"https://profiles.wordpress.org/tz-media/\">Tobias Zimpel</a>, <a href=\"https://profiles.wordpress.org/tjnowell/\">Tom J Nowell</a>, <a href=\"https://profiles.wordpress.org/tobifjellner/\">Tor-Bjorn Fjellner</a>, <a href=\"https://profiles.wordpress.org/itowhid06/\">Towhidul Islam</a>, <a href=\"https://profiles.wordpress.org/voneff/\">voneff</a>, <a href=\"https://profiles.wordpress.org/earnjam/\">William Earnhardt</a>, and <a href=\"https://profiles.wordpress.org/xkon/\">Xenos (xkon) Konstantinos</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:36:\"\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"5月27日、WordPress の15周年を祝いましょう\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:87:\"https://ja.wordpress.org/2018/04/27/celebrate-the-wordpress-15th-anniversary-on-may-27/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Fri, 27 Apr 2018 09:00:28 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:9:\"Community\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:6:\"Events\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4972\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:274:\"2018年5月27日は、WordPress の最初のリリースから15年目の記念日です。世界中でお祝いのイベントが開催される予定ですが、皆さんも参加・企画してみませんか ? 記念のスペシャルグッズご紹介もあります。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Naoko Takano\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:5952:\"<p>以下は、<a href=\"https://profiles.wordpress.org/andreamiddleton\">Andrea Middleton</a> が書いた WordPress.org 公式ブログの記事、「<a href=\"https://wordpress.org/news/2018/04/celebrate-the-wordpress-15th-anniversary-on-may-27/\">Celebrate the WordPress 15th Anniversary on May 27</a>」を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.forums.wordpress.org/forum/7\">フォーラムまでお知らせください</a>。</p>\n<hr />\n<p>2018年5月27日は、<a href=\"https://wordpress.org/news/2003/05/wordpress-now-available/\">WordPress の最初のリリース</a>から<strong>15年目の記念日</strong>です。お祝いするのがとても楽しみです !</p>\n<figure class=\"wp-block-image aligncenter\"><img class=\"wp-image-5841 aligncenter\" src=\"https://i1.wp.com/wordpress.org/news/files/2018/04/wp15_mark-1.png?resize=342%2C268&amp;ssl=1\" alt=\"\" width=\"342\" height=\"268\" /></figure>\n<h2>パーティタイム !</h2>\n<p>お近くでパーティを計画し、世界中の WordPress ファンと共に15周年記念をお祝いしませんか。やり方は以下のとおりです。</p>\n<ol>\n<li>すでにあなたの町でイベントが企画されているかどうか、<a href=\"https://wp15.wordpress.net/about/\">WordPress 15th アニバーサリーサイト</a>で確認しましょう。もしあるなら、参加登録して知り合いも誘ってみましょう。</li>\n<li>まだないようなら、人が集まってワイワイやれる会場をどこか選びましょう。公園、居酒屋、誰かの家の庭など、どんな年代の人も歓迎される場所ならどこでもかまいません。</li>\n<li>イベントを <a href=\"https://www.meetup.com/pro/wordpress/\">Meetup.com に掲載し</a> (下記訳注参照)、他の地域勉強会、IT 系・ブログ系グループ、プレスなどに告知して集客しましょう。</li>\n<li>15周年記念スペシャル WordPress グッズを<a href=\"https://make.wordpress.org/community/handbook/meetup-organizer/event-formats/wordpress-15th-anniversary-celebrations/#request-wordpress-15th-anniversary-swag\">リクエスト</a>しましょう (注: 締切が4月27日までになっています。少量なら予備がある可能性もあるため、<a href=\"https://wpdocs.osdn.jp/WordSlack%E3%81%B8%E3%81%AE%E5%8F%82%E5%8A%A0%E6%96%B9%E6%B3%95\">WordSlack</a> #community チャンネルでお問い合わせください)。</li>\n<li>パーティの参加者に、#WP15 ハッシュタグを使って写真や動画などを投稿してもらいましょう。そして、世界中の人たちがシェアしているお祝いコンテンツを<a href=\"https://wp15.wordpress.net/live/\">アニバーサリーサイトのソーシャルメディアストリーム</a>で見てしょう。</li>\n</ol>\n<p>グローバルな WordPress のお祝いに参加するこのチャンスをお見逃しなく !</p>\n<p><strong>訳注:</strong> 上記のステップ3について、日本の場合では<a href=\"https://www.meetup.com/WordBench/events\">こちらの Meetup.com アカウン</a>トに集約しています。開催予定の場合は<a href=\"/contact\">こちらからご連絡ください</a>。日本国内では現時点において、<a href=\"https://ogijima.connpass.com/event/86185/\">WordBench 男木島</a>、<a href=\"https://wbtokyo.doorkeeper.jp/events/73452\">WordBench 東京</a>、<a href=\"https://wbsaitama.doorkeeper.jp/events/73533\">WordBench 埼玉</a>、<a href=\"https://wbhaneda.connpass.com/event/84771/\">WordBench 羽田</a>、<a href=\"https://wbnagano.connpass.com/event/86000/\">WordBench 長野</a>、<a href=\"https://wbgifu.connpass.com/event/85002/\">WordBench岐阜</a>、WordBench 三重、<a href=\"https://wbosaka.connpass.com/event/86016/\">WordBench 大阪</a>、WordBench 神戸、<a href=\"https://wordbenchfukui.connpass.com/event/85904/\">WordBench 福井</a>、WordBench 長崎が記念イベントを開催予定です。</p>\n<h2>スペシャルグッズ</h2>\n<p>15周年記念に敬意を表して、<a href=\"https://mercantile.wordpress.org/product-category/wordpress-15/\">スペシャルアイテム</a>をグッズストアに追加しています。クーポンコード <strong>CELEBRATEWP15</strong> を使えば、2018年末までこれらのアイテム (およびストア上のすべての商品) を15%オフで購入できます !</p>\n<p>これから数週間の間に新しいグッズも追加していく予定です。</p>\n<p><a href=\"https://mercantile.wordpress.org/product-category/wordpress-15/\"><img class=\"aligncenter size-medium wp-image-4982\" src=\"https://ja.wordpress.org/files/2018/04/wp15_03_womens-300x300.jpg\" alt=\"WordPress 15周年記念の T シャツ\" width=\"300\" height=\"300\" srcset=\"https://ja.wordpress.org/files/2018/04/wp15_03_womens-300x300.jpg 300w, https://ja.wordpress.org/files/2018/04/wp15_03_womens-150x150.jpg 150w, https://ja.wordpress.org/files/2018/04/wp15_03_womens-768x768.jpg 768w, https://ja.wordpress.org/files/2018/04/wp15_03_womens.jpg 1024w\" sizes=\"(max-width: 300px) 100vw, 300px\" /></a></p>\n<h2>シェアしよう</h2>\n<p><a href=\"https://wp15.wordpress.net/about/\">パーティ</a>、<a href=\"https://wp15.wordpress.net/swag/\">記念グッズ</a>、<a href=\"https://wp15.wordpress.net/live/\">WordPress があなたにとってどんな意味を持つのかについて投稿すること</a>など、どんな形でお祝いするにしても、シェアする際には #WP15 ハッシュタグを必ずつけましょう。そして、<a href=\"https://wp15.wordpress.net/live/\">WordPress 15周年記念投稿</a>をチェックすることもお忘れなく。</p>\n<p><a href=\"https://venturebeat.com/2018/03/05/wordpress-now-powers-30-of-websites/\">インターネットの30%で使われているソフトウェア</a>の特別な日は、きっとすばらしいものになるはずです。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:52:\"WordPress の GDPR コンプライアンスツール\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:71:\"https://ja.wordpress.org/2018/04/24/gdpr-compliance-tools-in-wordpress/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Tue, 24 Apr 2018 03:00:08 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Features\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4970\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:259:\"2018年5月25日から施行される EU 一般データ保護規則に WordPress サイトを対応させるための各種ツールが今後登場する予定です。その大まかな概要と、開発・テストへの参加方法をご紹介します。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Naoko Takano\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:5844:\"<p>以下は、<a href=\"https://profiles.wordpress.org/azaozz\">Andrew Ozz</a> が書いた WordPress.org 公式ブログの記事、「<a href=\"https://wordpress.org/news/2018/04/gdpr-compliance-tools-in-wordpress/\">GDPR Compliance Tools in WordPress</a>」を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.forums.wordpress.org/forum/7\">フォーラムまでお知らせください</a>。</p>\n<hr />\nGDPR の遵守は、すべての WordPress サイトにとって重要な考慮事項です。GDPR コンプライアンスチームは、現在コア内で開発中のプライバシーテストをテストするためのヘルプを求めています。</p>\n<h2>GDPR とは</h2>\n<p>GDPR は「<a href=\"https://ja.wikipedia.org/wiki/EU%E4%B8%80%E8%88%AC%E3%83%87%E3%83%BC%E3%82%BF%E4%BF%9D%E8%AD%B7%E8%A6%8F%E5%89%87\">EU一般データ保護規則</a>」の略語であり、欧州連合 (EU) 内のすべての個人のためにデータ保護を強化し統一することを目的としています。その主な目的は、EU の住民が再び自分の個人情報をコントロールできるようにすることです。</p>\n<div class=\"gtx-body\">なぜ急ぐ必要があるのかというと、GDPR は2年前に発表されましたが、2018年5月25日から施行されるからです。</div>\n<h2>Make WordPress GDPR コンプライアンスチーム</h2>\n<p>現在 GDPR コンプライアンスチームは、WordPress ベースのサイトの同法遵守を手助けすることが大規模かつ継続的な課題であることを理解しています。チームは、包括的なコアポリシー、プラグインガイドライン、プライバシーツール、およびドキュメントの作成に集中しています。これらのすべてで、皆さんの助けを必要としています。</p>\n<p>GDPRコンプライアンスチームは以下の4つのエリアにフォーカスしています。</p>\n<ul>\n<li>サイト所有者がサイトの包括的なプライバシーポリシーを作成するのを助けるための機能を追加する。</li>\n<li>プラグインを GDPR 対応にするためのガイドラインを作成する。</li>\n<li>コンプライアンスを容易にし、一般的にユーザーのプライバシーを奨励するための管理ツールを追加する。</li>\n<li>サイト所有者にプライバシーおよび GDPR の主要な要件を教えるためのドキュメントや、新しいプライバシーツールの使用方法を追加する。</li>\n</ul>\n<h2>すでにプライバシーポリシーがあったのでは ?</h2>\n<p>そうですが、そうでない部分もあります。とは言え、GDPR はより厳しいガイドラインと制限を課すことになります。プライバシーページを作成する多くのプラグインがありますが、統一された包括的なプライバシーポリシーを生成する手段が必要です。ユーザーが容易にコンプライアンスに対応できるツールが必要になります。</p>\n<p>サイト所有者は、GDPR に準拠したプライバシーポリシーを3つのステップで作成することができるようになります。</p>\n<ol>\n<li>ポリシー向けの専用ページを追加する。</li>\n<li>プライバシー情報をプラグインから追加する。</li>\n<li>ポリシーをレビューし、公開する。</li>\n</ol>\n<p>ポリシーを編集する際には、新しい「投稿ボックス」がページ編集画面に追加されます。ユーザーデータを収集または格納するすべてのプラグインは、そこにプライバシー情報を追加できます。さらに、プラグインの有効化、無効化、または更新後にプライバシー情報が変更された場合、サイト所有者に注意喚起します。</p>\n<p>メールアドレスによってユーザーのリクエストを確認する機能が追加される予定です。これは、サイト所有者がユーザーからの個人データの表示、ダウンロード、または匿名化のリクエストを確認できるようにするためのものです。</p>\n<p>新しい「プライバシー」ページが「ツール」メニューの下に追加されます。ここにはユーザーからの新しい確認済みのリクエストとすでに完了したリクエストが表示されます。また、個人データのエクスポートや匿名化のためのツールや、不正試行を防止するためメールによる確認を依頼するためのツールも含まれています。</p>\n<p>プライバシーに関する新しいセクションが<a href=\"https://developer.wordpress.org/plugins/\">プラグインハンドブック</a>に追加されます。これには、ユーザープライバシーに関する一般情報、プラグインが準拠するために必要なこと、WordPress の新しいプライバシー関連機能を使用するためのヒントと例が含まれています。</p>\n<p>新しいプライバシーツールは、4月末または2018年5月初旬にリリースされる予定です。</p>\n<h2>参加・貢献するには</h2>\n<p>皆さんにぜひ手伝っていただきたいです。最初の一歩は、認識と教育です。今後のプライバシーツールの詳細については、<a href=\"https://make.wordpress.org/core/2018/03/28/roadmap-tools-for-gdpr-compliance/\">ロードマップ</a>を参照してください。</p>\n<p>WordPress コアの開発やと新しいプライバシーツールのテストに参加したい場合は、<a href=\"https://make.wordpress.org/chat/\">Make WordPress</a> Slack グループの #gdpr-compliance チャンネルに参加してください。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"今月の WordPress: 2018年3月\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:70:\"https://ja.wordpress.org/2018/04/11/the-month-in-wordpress-march-2018/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 11 Apr 2018 02:55:58 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:18:\"Month in WordPress\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4911\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:220:\"3月には、WordPress のシェアが Web 全体の3割に拡大。コミュニティチームによる WordPress 専門用語集の公開、プライバシー関連の取り組みの強化などが行われました。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:12:\"Naoko Takano\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:5830:\"<p>以下は、<a href=\"https://profiles.wordpress.org/hlashbrooke\">Hugh Lashbrooke</a> が書いた WordPress.org 公式ブログの記事、「<a href=\"https://wordpress.org/news/2018/07/the-month-in-wordpress-june-2018/\">The Month in WordPress: June 2018</a>」を訳したものです。</p>\n<p>誤字脱字誤訳などありましたらフォーラムまでお知らせください。</p>\n<hr />\n<p>重要な新しいマイルストーンと、プラットフォームとしての WordPress のいくつかの大きな改善があった先月は、プロジェクトにとって重要な月でした。3月の間に何が起こったのかを知りたい方は、この記事をご覧ください。</p>\n<hr class=\"wp-block-separator\" />\n<h2>WordPress が Web 全体の30%で使われるようになりました</h2>\n<p>過去15年間、WordPress の人気と利用率は着実に増加し続けてきました。今月、<a href=\"https://w3techs.com/technologies/details/cm-wordpress/all/all\">W3Techs が WordPress が Web 上のサイトの30％以上を占めると報告</a>したことで、その成長は大きなマイルストーンを迎えました。</p>\n<p>この割合は W3Techs が Web 上のトップ1000万サイトを審査した結果に基づいて決定されており、WordPress のプラットフォームとしての人気と柔軟性の強力な指標となっています。</p>\n<p>WordPress をさらに成長させるために手助けをしたい方は、<a href=\"https://make.wordpress.org/\">参加・貢献</a> (<a href=\"https://ja.wordpress.org/get-involved/\">日本語コンテンツ</a>) してみましょう。</p>\n<h2>WordPress 専門用語集の公開</h2>\n<p>WordPress マーケティングチームはこのところ、<a href=\"https://make.wordpress.org/marketing/2018/02/28/wordpress-jargon-glossary/\">WordPress 用語の包括的な用語集</a>の作成に精力的に取り組んできました。これは、プロジェクトの新規参加者の理解を助けるためのものです。</p>\n<p>用語集は、<a href=\"https://make.wordpress.org/marketing/2018/02/28/wordpress-jargon-glossary/\">こちら</a>にあり、オフラインでも簡単に参照できるダウンロード可能な PDF もあります。</p>\n<p>このリソースを公開することは、プロジェクトにあまり慣れていない人が WordPress に簡単にアクセスできるようにするための全体的な取り組みの一環です。マーケティングチームを助けたい場合は、<a href=\"https://make.wordpress.org/marketing/\">チームブログをフォロー</a>し、<a href=\"https://make.wordpress.org/chat/\">Making WordPress Slack グループ</a>の #marketing チャンネルに参加できます。</p>\n<h2>WordPress でのプライバシーへのフォーカス</h2>\n<p>オンラインプライバシーは先月、さまざまな間違った理由でニュースとして取り上げられていました。そのような動きは、GDPR コンプライアンスチームがコミットメントをさらに強化することにつながりました。同チームは、サイト所有者がプライバシー基準を向上できるようにするため、WordPress コアの強化に引き続き取り組んでいます。</p>\n<p>このチームの仕事とさらに広範なプライバシープロジェクトは、4つの領域にわたっています。サイト管理者が自分のサイトについての必要な情報を収集するツールの追加、プライバシーを考慮したプラグインガイドラインの検討、WordPress コアのプライバシー基準の強化、オンラインプライバシーのベストプラクティスに重点を置いたドキュメントの作成です。</p>\n<p>プロジェクトに参加するには、<a href=\"https://make.wordpress.org/core/2018/03/28/roadmap-tools-for-gdpr-compliance/\">ロードマップを読み</a>、<a href=\"https://make.wordpress.org/core/tag/gdpr-compliance/\">更新情報をフォローし</a>、<a href=\"https://core.trac.wordpress.org/query?status=!closed&amp;keywords=~gdpr\">パッチを提出し</a>、<a href=\"https://make.wordpress.org/chat\">Making WordPress Slack グループ</a>の #gdpr-compliance チャンネルに入ってください。オフィスアワー (相談時間) は、水曜日の 15:00 UTC です。</p>\n<hr class=\"wp-block-separator\" />\n<h2>さらに読む</h2>\n<ul>\n<li>WordPress ファウンデーションは、コミュニティが去年いかに成長したかを示す<a href=\"https://wordpressfoundation.org/2017-annual-report/\">2017年のアニュアルレポート</a>を公開しました。</li>\n<li>WordCamp US の日程が<a href=\"https://2018.us.wordcamp.org/2018/03/13/announcing-wordcamp-us-2018/\">発表されました</a>。このフラッグシップ的 WordCamp イベントは、今年の12月7日から9日の間、テネシー州ナシュビルで行われます。</li>\n<li>WordPress 4.9.5 が4月3日にリリースされました。<a href=\"https://make.wordpress.org/core/2018/03/21/wordpress-4-9-5-beta/\">詳細はこちら</a>。</li>\n<li>多くの改善を含む Gutenberg のバージョン 2.5 が<a href=\"https://make.wordpress.org/core/2018/03/29/whats-new-in-gutenberg-29th-march/\">先月リリースされました</a>。Gutenberg は、WordPress コアに同梱予定の新しいビジュアルエディターです。</li>\n<li>バーチャル WordPress カンファレンスの「WordSesh」が<a href=\"http://wordsesh.com/\">今年7月に再び開催される予定</a>です。</li>\n</ul>\n<p>次回の「今月の WordPress」に含めるべき記事があれば、<a href=\"https://make.wordpress.org/community/month-in-wordpress-submissions/\">こちらからお知らせください</a>。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:36:\"\n		\n		\n		\n		\n				\n		\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:67:\"WordPress 4.9.5 セキュリティ・メンテナンスリリース\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:85:\"https://ja.wordpress.org/2018/04/04/wordpress-4-9-5-security-and-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 04 Apr 2018 14:12:53 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:2:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}i:1;a:5:{s:4:\"data\";s:8:\"Security\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4908\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:306:\"WordPress 4.9.5 がご利用いただけるようになりました。これは WordPress 3.7 以降のすべてのバージョンに対する<strong>セキュリティ・メンテナンスリリース</strong>となります。今すぐにサイトの更新を行うことを強くおすすめします。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Seisuke Kuraishi (tenpura)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:7508:\"<p>以下は、<a href=\"https://profiles.wordpress.org/aaroncampbell\">Aaron D. Campbell</a> が書いた WordPress.org 公式ブログの記事、<a href=\"https://wordpress.org/news/2018/04/wordpress-4-9-5-security-and-maintenance-release/\">「WordPress 4.9.5 Security and Maintenance Release」</a>を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/feedback/\">フォーラムまでお知らせください</a>。</p>\n<hr>\nWordPress 4.9.5 がご利用いただけるようになりました。これは WordPress 3.7 以降のすべてのバージョンに対する<strong>セキュリティ・メンテナンスリリース</strong>となります。今すぐにサイトの更新を行うことを強くおすすめします。</p>\n<p>バージョン 4.9.4 以前の WordPress は、3つのセキュリティ問題の影響を受けます。コアチームの継続的なセキュリティ強化の取り組みにより、4.9.5 では、次の修正が実装されました。</p>\n<ol>\n<li>デフォルトで localhost を同じホストとして扱わない。</li>\n<li>SSL が強制されている場合に、ログインページのリダイレクトに安全なリダイレクトを使用する。</li>\n<li>ジェネレータータグでバージョン文字列が正しくエスケープされていることを確認する。</li>\n</ol>\n<p>これらの問題について、<a href=\"https://make.wordpress.org/core/handbook/testing/reporting-security-vulnerabilities/\">連携したセキュリティ情報開示</a>を実践してくださった報告者、WordPress セキュリティチームの <a href=\"https://profiles.wordpress.org/xknown\">xknown</a>、<a href=\"https://hackerone.com/nitstorm\">Nitin Venkatesh（nitstorm）</a>、WordPress セキュリティチームの <a href=\"https://twitter.com/voldemortensen\">Garth Mortensen</a> に感謝いたします。</p>\n<p>WordPress 4.9.5 では、その他25個のバグが修正されました。特筆すべきは、以下となります。</p>\n<ul>\n<li>キャプションショートコードで以前のスタイルが復元されました。</li>\n<li>タッチスクリーンデバイスでクロッピングがサポートされるようになりました。</li>\n<li>エラーメッセージなどの文字列がより明解となるよう更新されました。</li>\n<li>アップロード中の添付ファイルのプレースホルダーの位置が修正されました。</li>\n<li>REST API JavaScript クライアントのカスタムノンス機能が、コードベース全体で一貫したものとなりました。</li>\n<li>PHP 7.2 との互換性が向上しました。</li>\n</ul>\n<p><a href=\"https://make.wordpress.org/core/2018/04/03/wordpress-4-9-5/\">4.9.5 で修正されたすべての問題の詳細情報を知りたい場合は、こちらの記事をご覧ください</a>。</p>\n<p><a href=\"https://ja.wordpress.org/download/\">WordPress 4.9.5 (日本語版) をダウンロード</a>、または、「ダッシュボード」 → 「更新」へ行き「今すぐ更新」をクリックしてください。自動バックグラウンド更新をサポートするサイトでは、すでに自動更新が始まっています。</p>\n<p>WordPress 4.9.5 に貢献してくださったすべての方に感謝いたします:</p>\n<p><a href=\"https://profiles.wordpress.org/1265578519-1/\">1265578519</a>, <a href=\"https://profiles.wordpress.org/jorbin/\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein/\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/schlessera/\">Alain Schlesser</a>, <a href=\"https://profiles.wordpress.org/alexgso/\">alexgso</a>, <a href=\"https://profiles.wordpress.org/afercia/\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andrei0x309/\">andrei0x309</a>, <a href=\"https://profiles.wordpress.org/antipole/\">antipole</a>, <a href=\"https://profiles.wordpress.org/aranwer104/\">Anwer AR</a>, <a href=\"https://profiles.wordpress.org/birgire/\">Birgir Erlendsson (birgire)</a>, <a href=\"https://profiles.wordpress.org/blair-jersyer/\">Blair jersyer</a>, <a href=\"https://profiles.wordpress.org/bandonrandon/\">Brooke.</a>, <a href=\"https://profiles.wordpress.org/chetan200891/\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/codegrau/\">codegrau</a>, <a href=\"https://profiles.wordpress.org/conner_bw/\">conner_bw</a>, <a href=\"https://profiles.wordpress.org/davidakennedy/\">David A. Kennedy</a>, <a href=\"https://profiles.wordpress.org/designsimply/\">designsimply</a>, <a href=\"https://profiles.wordpress.org/dd32/\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/ocean90/\">Dominik Schilling (ocean90)</a>, <a href=\"https://profiles.wordpress.org/electricfeet/\">ElectricFeet</a>, <a href=\"https://profiles.wordpress.org/ericmeyer/\">ericmeyer</a>, <a href=\"https://profiles.wordpress.org/fpcsjames/\">FPCSJames</a>, <a href=\"https://profiles.wordpress.org/garrett-eclipse/\">Garrett Hyder</a>, <a href=\"https://profiles.wordpress.org/pento/\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/soulseekah/\">Gennady Kovshenin</a>, <a href=\"https://profiles.wordpress.org/henrywright/\">Henry Wright</a>, <a href=\"https://profiles.wordpress.org/audrasjb/\">Jb Audras</a>, <a href=\"https://profiles.wordpress.org/jbpaul17/\">Jeffrey Paul</a>, <a href=\"https://profiles.wordpress.org/jipmoors/\">Jip Moors</a>, <a href=\"https://profiles.wordpress.org/joemcgill/\">Joe McGill</a>, <a href=\"https://profiles.wordpress.org/joen/\">Joen Asmussen</a>, <a href=\"https://profiles.wordpress.org/johnbillion/\">John Blackbourn</a>, <a href=\"https://profiles.wordpress.org/johnpgreen/\">johnpgreen</a>, <a href=\"https://profiles.wordpress.org/junaidkbr/\">Junaid Ahmed</a>, <a href=\"https://profiles.wordpress.org/kristastevens/\">kristastevens</a>, <a href=\"https://profiles.wordpress.org/obenland/\">Konstantin Obenland</a>, <a href=\"https://profiles.wordpress.org/lakenh/\">Laken Hafner</a>, <a href=\"https://profiles.wordpress.org/lancewillett/\">Lance Willett</a>, <a href=\"https://profiles.wordpress.org/leemon/\">leemon</a>, <a href=\"https://profiles.wordpress.org/melchoyce/\">Mel Choyce</a>, <a href=\"https://profiles.wordpress.org/mikeschroder/\">Mike Schroder</a>, <a href=\"https://profiles.wordpress.org/mrmadhat/\">mrmadhat</a>, <a href=\"https://profiles.wordpress.org/nandorsky/\">nandorsky</a>, <a href=\"https://profiles.wordpress.org/jainnidhi/\">Nidhi Jain</a>, <a href=\"https://profiles.wordpress.org/swissspidy/\">Pascal Birchler</a>, <a href=\"https://profiles.wordpress.org/qcmiao/\">qcmiao</a>, <a href=\"https://profiles.wordpress.org/rachelbaker/\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/larrach/\">Rachel Peter</a>, <a href=\"https://profiles.wordpress.org/ravanh/\">RavanH</a>, <a href=\"https://profiles.wordpress.org/otto42/\">Samuel Wood (Otto)</a>, <a href=\"https://profiles.wordpress.org/sebastienthivinfocom/\">Sebastien SERRE</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov/\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/shital-patel/\">Shital Marakana</a>, <a href=\"https://profiles.wordpress.org/netweb/\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/karmatosed/\">Tammie Lister</a>, <a href=\"https://profiles.wordpress.org/thomas-vitale/\">Thomas Vitale</a>, <a href=\"https://profiles.wordpress.org/kwonye/\">Will Kwon</a>, and <a href=\"https://profiles.wordpress.org/yahil/\">Yahil Madakiya</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"WordPress 4.9.4 メンテナンスリリース\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://ja.wordpress.org/2018/02/07/wordpress-4-9-4-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 07 Feb 2018 14:15:47 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4688\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:257:\"WordPress 4.9.4 がご利用いただけるようになりました。このメンテナンスリリースは、自動バックグラウンド更新をサポートするサイトが自動更新されなくなる 4.9.3 の重大なバグを修正します。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Seisuke Kuraishi (tenpura)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:2751:\"<p>以下は、<a href=\"https://profiles.wordpress.org/dd32\">Dion Hulse</a> が書いた WordPress.org 公式ブログの記事、<a href=\"https://wordpress.org/news/2018/02/wordpress-4-9-4-maintenance-release/\">「WordPress 4.9.4 Maintenance Release」</a>を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/feedback/\">フォーラムまでお知らせください</a>。</p>\n<hr>\n<p>WordPress 4.9.4 がご利用いただけるようになりました。</p>\n<p>このメンテナンスリリースは、自動バックグラウンド更新をサポートするサイトが自動更新されなくなる 4.9.3 の重大なバグを修正します。4.9.4 への更新は、ご自身（または、ホスティング会社）によるアクションを必要とします。</p>\n<p>我々は、<a href=\"https://ja.wordpress.org/2013/10/25/wordpress-3-7-basie/\">WordPress 3.7「Basie」</a>で、ユーザー自身が行うことなくウェブサイトを安全かつバグフリーに保つ WordPress 自己更新機能を追加しました。その機能は、4年間にわたり、ほとんど問題もなく何百万もの更新インストールを助けてきました。残念なことに、<a href=\"https://ja.wordpress.org/2018/02/07/wordpress-4-9-3-maintenance-release/\">昨日の 4.9.3</a> に深刻なバグが含まれていることがリリースの後にわかりました。このバグは、WordPress が 4.9.4 へ自己更新を行う際にエラーを発生させるため、WordPress のダッシュボード、または、ホスティング環境の更新ツールから更新を実行する必要があります。</p>\n<p>顧客向けにアップデート版を自動インストールしている WordPress のマネージドホスティング会社では、通常どおりアップデート版をインストールできるでしょう。その他のホスティング会社については、可能な限り多くの顧客が WordPress 4.9.4 に自動更新できるよう協力したいと思います。</p>\n<p>この問題の技術的詳細については、<a href=\"https://make.wordpress.org/core/2018/02/06/wordpress-4-9-4-release-the-technical-details/\">コア開発ブログの記事</a>をご覧ください。全ての変更点については、<a href=\"https://core.trac.wordpress.org/query?status=closed&amp;milestone=4.9.4&amp;group=component\">チケットのリスト</a>を参照してください。</p>\n<p><a href=\"https://ja.wordpress.org/download/\">WordPress 4.9.4 (日本語版) をダウンロード</a>、または、「ダッシュボード」 → 「更新」へ行き「今すぐ更新」をクリックしてください。</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:33:\"\n		\n		\n		\n		\n				\n\n		\n		\n				\n			\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:3:{s:0:\"\";a:6:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:46:\"WordPress 4.9.3 メンテナンスリリース\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:72:\"https://ja.wordpress.org/2018/02/07/wordpress-4-9-3-maintenance-release/\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Wed, 07 Feb 2018 14:13:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"category\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"Releases\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:32:\"https://ja.wordpress.org/?p=4678\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:11:\"isPermaLink\";s:5:\"false\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:263:\"WordPress 4.9.3 が公開されました。このメンテナンスリリースでは、カスタマイザーチェンジセット、ウィジェット、ビジュアルエディター、PHP 7.2 互換性の修正を含む34個のバグが修正されました。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:26:\"Seisuke Kuraishi (tenpura)\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:40:\"http://purl.org/rss/1.0/modules/content/\";a:1:{s:7:\"encoded\";a:1:{i:0;a:5:{s:4:\"data\";s:4173:\"<p>以下は、<a href=\"https://profiles.wordpress.org/sergeybiryukov\">Sergey Biryukov</a> が書いた WordPress.org 公式ブログの記事、<a href=\"https://wordpress.org/news/2018/02/wordpress-4-9-3-maintenance-release/\">「WordPress 4.9.3 Maintenance Release」</a>を訳したものです。</p>\n<p>誤字脱字誤訳などありましたら<a href=\"https://ja.wordpress.org/support/forum/feedback/\">フォーラムまでお知らせください</a>。</p>\n<hr>\n<p>WordPress 4.9.3 が公開されました。</p>\n<p>このメンテナンスリリースでは、カスタマイザーチェンジセット、ウィジェット、ビジュアルエディター、PHP 7.2 互換性の修正を含む34個のバグが修正されました。すべての変更点については、<a href=\"https://core.trac.wordpress.org/query?status=closed&amp;milestone=4.9.3&amp;group=component\">チケットリスト</a>と<a href=\"https://core.trac.wordpress.org/log/branches/4.9?rev=42630&amp;stop_rev=42521\">変更履歴</a>をご覧ください。</p>\n<p><a href=\"https://ja.wordpress.org/download/\">WordPress 4.9.3 (日本語版) をダウンロード</a>、または、「ダッシュボード」 → 「更新」へ行き「今すぐ更新」をクリックしてください。自動バックグラウンド更新が有効なサイトでは、すでに WordPress 4.9.3 への自動更新が始まっています。</p>\n<p>WordPress 4.9.3 に貢献してくださったすべての方に感謝いたします:</p>\n<p><a href=\"https://profiles.wordpress.org/jorbin/\">Aaron Jorbin</a>, <a href=\"https://profiles.wordpress.org/abdullahramzan/\">abdullahramzan</a>, <a href=\"https://profiles.wordpress.org/adamsilverstein/\">Adam Silverstein</a>, <a href=\"https://profiles.wordpress.org/afercia/\">Andrea Fercia</a>, <a href=\"https://profiles.wordpress.org/andreiglingeanu/\">andreiglingeanu</a>, <a href=\"https://profiles.wordpress.org/azaozz/\">Andrew Ozz</a>, <a href=\"https://profiles.wordpress.org/bpayton/\">Brandon Payton</a>, <a href=\"https://profiles.wordpress.org/chetan200891/\">Chetan Prajapati</a>, <a href=\"https://profiles.wordpress.org/coleh/\">coleh</a>, <a href=\"https://profiles.wordpress.org/darko-a7/\">Darko A7</a>, <a href=\"https://profiles.wordpress.org/desertsnowman/\">David Cramer</a>, <a href=\"https://profiles.wordpress.org/dlh/\">David Herrera</a>, <a href=\"https://profiles.wordpress.org/dd32/\">Dion Hulse</a>, <a href=\"https://profiles.wordpress.org/flixos90/\">Felix Arntz</a>, <a href=\"https://profiles.wordpress.org/frank-klein/\">Frank Klein</a>, <a href=\"https://profiles.wordpress.org/pento/\">Gary Pendergast</a>, <a href=\"https://profiles.wordpress.org/audrasjb/\">Jb Audras</a>, <a href=\"https://profiles.wordpress.org/jbpaul17/\">Jeffrey Paul</a>, <a href=\"https://profiles.wordpress.org/lizkarkoski/\">lizkarkoski</a>, <a href=\"https://profiles.wordpress.org/clorith/\">Marius L. J.</a>, <a href=\"https://profiles.wordpress.org/mattyrob/\">mattyrob</a>, <a href=\"https://profiles.wordpress.org/monikarao/\">Monika Rao</a>, <a href=\"https://profiles.wordpress.org/munyagu/\">munyagu</a>, <a href=\"https://profiles.wordpress.org/ndavison/\">ndavison</a>, <a href=\"https://profiles.wordpress.org/nickmomrik/\">Nick Momrik</a>, <a href=\"https://profiles.wordpress.org/peterwilsoncc/\">Peter Wilson</a>, <a href=\"https://profiles.wordpress.org/rachelbaker/\">Rachel Baker</a>, <a href=\"https://profiles.wordpress.org/rishishah/\">rishishah</a>, <a href=\"https://profiles.wordpress.org/othellobloke/\">Ryan Paul</a>, <a href=\"https://profiles.wordpress.org/sasiddiqui/\">Sami Ahmed Siddiqui</a>, <a href=\"https://profiles.wordpress.org/sayedwp/\">Sayed Taqui</a>, <a href=\"https://profiles.wordpress.org/seanchayes/\">Sean Hayes</a>, <a href=\"https://profiles.wordpress.org/sergeybiryukov/\">Sergey Biryukov</a>, <a href=\"https://profiles.wordpress.org/shooper/\">Shawn Hooper</a>, <a href=\"https://profiles.wordpress.org/netweb/\">Stephen Edgar</a>, <a href=\"https://profiles.wordpress.org/manikmist09/\">Sultan Nasir Uddin</a>, <a href=\"https://profiles.wordpress.org/tigertech/\">tigertech</a>, and <a href=\"https://profiles.wordpress.org/westonruter/\">Weston Ruter</a>.</p>\n\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:30:\"https://ja.wordpress.org/feed/\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:44:\"http://purl.org/rss/1.0/modules/syndication/\";a:2:{s:12:\"updatePeriod\";a:1:{i:0;a:5:{s:4:\"data\";s:9:\"\n	hourly	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:15:\"updateFrequency\";a:1:{i:0;a:5:{s:4:\"data\";s:4:\"\n	1	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:8:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 22 Jul 2018 05:16:07 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:6:\"x-olaf\";s:3:\"⛄\";s:13:\"last-modified\";s:29:\"Fri, 13 Jul 2018 07:25:46 GMT\";s:4:\"link\";s:61:\"<https://ja.wordpress.org/wp-json/>; rel=\"https://api.w.org/\"\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 1\";}}s:5:\"build\";s:14:\"20180213085251\";}','no'),(3951,'_transient_timeout_feed_mod_ab995de7a5278071ed721c721c891aed','1532279767','no'),(3952,'_transient_feed_mod_ab995de7a5278071ed721c721c891aed','1532236567','no'),(3953,'_transient_timeout_feed_6f409681938158427d2ded6eb1b9ea27','1532279768','no'),(3954,'_transient_feed_6f409681938158427d2ded6eb1b9ea27','a:4:{s:5:\"child\";a:1:{s:0:\"\";a:1:{s:3:\"rss\";a:1:{i:0;a:6:{s:4:\"data\";s:5:\"\n\n	\n	\";s:7:\"attribs\";a:1:{s:0:\"\";a:1:{s:7:\"version\";s:3:\"2.0\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:1:{s:0:\"\";a:1:{s:7:\"channel\";a:1:{i:0;a:6:{s:4:\"data\";s:141:\"\n		\n		\n		\n		\n		\n		\n		\n\n		\n		\n					\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n			\n				\n\n					\n		\n	\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:7:{s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:55:\"WordPress | サポートフォーラム » 返信一覧\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:44:\"https://ja.wordpress.org/support/forums/feed\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 14:16:07 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:9:\"generator\";a:1:{i:0;a:5:{s:4:\"data\";s:37:\"https://bbpress.org/?v=2.6-alpha-6091\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:8:\"language\";a:1:{i:0;a:5:{s:4:\"data\";s:2:\"ja\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"item\";a:10:{i:0;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:214:\"https://ja.wordpress.org/support/topic/%e3%83%95%e3%82%a9%e3%83%b3%e3%83%88%e3%81%ae%e5%a4%89%e6%9b%b4%e3%81%ae%e4%bb%95%e6%96%b9%e3%80%82%e8%b6%85%e5%88%9d%e5%bf%83%e8%80%85%e3%81%a7%e3%81%99%e3%80%82/#post-228942\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"返信先: フォントの変更の仕方。超初心者です。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:214:\"https://ja.wordpress.org/support/topic/%e3%83%95%e3%82%a9%e3%83%b3%e3%83%88%e3%81%ae%e5%a4%89%e6%9b%b4%e3%81%ae%e4%bb%95%e6%96%b9%e3%80%82%e8%b6%85%e5%88%9d%e5%bf%83%e8%80%85%e3%81%a7%e3%81%99%e3%80%82/#post-228942\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 04:44:25 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:416:\"\n						\n						<p>「.cat-menu li a にてfont-family: &#8216;Lora&#8217;, serif;が設定されていますので、そちらが優先される」</p>\n<p>というところまで教えていただきました。</p>\n<p>ちなみに*　を追加したら一部変更できましたが、上の状態なのでそこから先に進めません。</p>\n<p>どうぞよろしくお願いいたします。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"oshinko\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:1;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:214:\"https://ja.wordpress.org/support/topic/%e3%83%95%e3%82%a9%e3%83%b3%e3%83%88%e3%81%ae%e5%a4%89%e6%9b%b4%e3%81%ae%e4%bb%95%e6%96%b9%e3%80%82%e8%b6%85%e5%88%9d%e5%bf%83%e8%80%85%e3%81%a7%e3%81%99%e3%80%82/#post-228941\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:54:\"フォントの変更の仕方。超初心者です。\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:214:\"https://ja.wordpress.org/support/topic/%e3%83%95%e3%82%a9%e3%83%b3%e3%83%88%e3%81%ae%e5%a4%89%e6%9b%b4%e3%81%ae%e4%bb%95%e6%96%b9%e3%80%82%e8%b6%85%e5%88%9d%e5%bf%83%e8%80%85%e3%81%a7%e3%81%99%e3%80%82/#post-228941\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 04:07:12 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1298:\"\n						\n						<p>CSSがわからない、本を読んでも意味が分からないレベルのバカですが<br />\nワードプレスに手を出しました。</p>\n<p>初めたばかりで戸惑いまくってます。</p>\n<p>明朝体のフォントを変えようともって、なんとか人に聞き</p>\n<p>追加CSSのところに</p>\n<p>body { font-family: Verdana,&#8221;メイリオ&#8221;,Meiryo,&#8221;ヒラギノ角ゴ Pro W3&#8243;,&#8221;Hiragino Kaku Gothic Pro&#8221;,&#8221;ＭＳ Ｐゴシック&#8221;,&#8221;MS PGothic&#8221;,sans-serif; }</p>\n<p>というものを教えていただいたので、これをコピペして張って、</p>\n<p>本文だけはゴシック系に変更できました。</p>\n<p>が、その他の部分のフォントがまだ変えられていません。</p>\n<p>その他の部分のフォントを、上と同じように追加CSSで指定し、ゴシック系フォントに<br />\n変更したいので</p>\n<p>コピー＆ペーストで張ればいい状態で教えていただけないでしょうか？</p>\n<p>理屈や仕組みを懇切丁寧に教えていただけても、理解できないため、<br />\n追加するCSSを教えていただきたいです。</p>\n<p>どうかよろしくお願いいたします。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"oshinko\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:2;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228940\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"返信先: bbpressに「状態」を追加したい\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228940\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 01:57:25 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1041:\"\n						\n						<p>試してみました！</p>\n<p>有効化するだけで「Resolution」というセレクトボックスと「updateボタン」が追加されました。便利そうですね！</p>\n<p>そしてそのセレクト項目として「None、Not a question、Not resolved、Resolved」の４つがあります。</p>\n<p>どうやらこの４つから選択して「updateボタン」をクリックすると、トピックの状態を選択した状態（Resolvedなど）にできる。というコンセプトのようですね。<br />\nさっそくやってみたら、トピックが「Topic Resolution: Resolved」という表示になりました。</p>\n<p>なのに、、相変わらずコメントできてしまう様子で、４つのどれを選択しても変化なしでした。(&gt;_&lt;)</p>\n<p>何か思いつくありがちな原因や、別のプラグインなどをもしご存知でしたら、また気がむいたときで構いませんのでご返信いただけると幸いです。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"puniler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:3;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:215:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%98%e3%83%83%e3%83%80%e3%83%bc%e7%94%bb%e5%83%8f%e3%82%92%e3%83%a9%e3%83%b3%e3%83%80%e3%83%a0%e3%81%ab%e3%81%99%e3%82%8b%e6%96%b9%e6%b3%95/#post-228938\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:61:\"Buddypressのヘッダー画像をランダムにする方法\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:215:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%98%e3%83%83%e3%83%80%e3%83%bc%e7%94%bb%e5%83%8f%e3%82%92%e3%83%a9%e3%83%b3%e3%83%80%e3%83%a0%e3%81%ab%e3%81%99%e3%82%8b%e6%96%b9%e6%b3%95/#post-228938\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 01:45:38 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:801:\"\n						\n						<p>Buddypressのプロフィールやマイページのところに設定するヘッダー画像について教えてください。</p>\n<p>こちら↓に入る画像です。<br />\n<code>&lt;div id=&quot;header-cover-image&quot;&gt;&lt;/div&gt;</code></p>\n<p>表示されるときはCSSでこのように表示されます。</p>\n<pre><code>#buddypress #header-cover-image {\n    height: 225px;\n    background-image: url(http://example.com/wp-content/uploads/buddypress/members/3/cover-image/4b512gtagfda7k-bp-cover-image.jpg);\n}</code></pre>\n<p>これを、「ユーザー未設定のときは、指定フォルダの画像からランダムに表示」という風にしたいのですが、どのようにすればいいかご教示頂けませんでしょうか。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"puniler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:4;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228937\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"返信先: BuddyPressのメニュー項目変更\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228937\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 01:45:27 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:588:\"\n						\n						<p>スタイル (CSS) で、非表示 (display: none) にするのではどうでしょうか。</p>\n<p>例: 外観のカスタマイズの 追加 CSS 等に、</p>\n<pre><code>/* #object-nav #activity-personal-li, */\n/* #object-nav #xprofile-personal-li, */\n#object-nav #notifications-personal-li,\n/* #object-nav #messages-personal-li, */\n/* #object-nav #friends-personal-li, */\n/* #object-nav #groups-personal-li, */\n/* #object-nav #forums-personal-li, */\n/* #object-nav #media-personal-li, */\n#object-nav #settings-personal-li {\n	display: none;\n}</code></pre>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"ishitaka\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:5;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228936\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"返信先: BuddyPressのメニュー項目変更\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228936\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 00:07:56 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:744:\"\n						\n						<p>あれ？さきほど返信したのですが、なぜかモデレーターさんによる確認が入ってしまったようです。すみません。</p>\n<p>取り急ぎお礼を！どうもありがとうございます！削除できました。</p>\n<p>ただ、質問にある位置のメニューの、「表示だけ」を削除したくてですね、「中身」は取っておきたいのです。(&gt;_&lt;)</p>\n<p>なぜかといいますと、この位置とは別の位置に<code>&lt;?php bp_get_loggedin_user_nav(); ?&gt;</code>でメニューを出力したいので、「中身」は取っておきたいのです。</p>\n<p>わかりにくい質問で申し訳ございませんでした。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"puniler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:6;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228935\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"返信先: bbpressに「状態」を追加したい\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228935\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sun, 22 Jul 2018 00:04:00 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:163:\"\n						\n						<p>いつもありがとうございます。プラグインがあったとは助かりました。さっそく試してみます！</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:7:\"puniler\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:7;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:202:\"https://ja.wordpress.org/support/topic/sydney%e3%81%ab%e9%96%a2%e3%81%97%e3%81%a6%e5%88%97%e3%81%94%e3%81%a8%e3%81%ae%e8%83%8c%e6%99%af%e7%94%bb%e5%83%8f%e3%81%ab%e9%96%a2%e3%81%97%e3%81%a6/#post-228933\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:65:\"返信先: Sydneyに関して列ごとの背景画像に関して\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:202:\"https://ja.wordpress.org/support/topic/sydney%e3%81%ab%e9%96%a2%e3%81%97%e3%81%a6%e5%88%97%e3%81%94%e3%81%a8%e3%81%ae%e8%83%8c%e6%99%af%e7%94%bb%e5%83%8f%e3%81%ab%e9%96%a2%e3%81%97%e3%81%a6/#post-228933\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 21 Jul 2018 23:26:42 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:297:\"\n						\n						<p>こんにちは</p>\n<p>「列ごとの背景画像」とはどこのことでしょうか？<br />\nもう少し具体的な説明（スクリーンショットやヘルプの必要なページの URL 等）があると回答が得られやすいと思います。</p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"ishitaka\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:8;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228932\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:48:\"返信先: BuddyPressのメニュー項目変更\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:143:\"https://ja.wordpress.org/support/topic/buddypress%e3%81%ae%e3%83%a1%e3%83%8b%e3%83%a5%e3%83%bc%e9%a0%85%e7%9b%ae%e5%a4%89%e6%9b%b4/#post-228932\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 21 Jul 2018 23:17:52 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:1093:\"\n						\n						<p>こんにちは</p>\n<p>下記ページが参考になると思います。<br />\n<a href=\"https://buddypress.org/support/topic/the-right-way-to-remove-nav-items/\" rel=\"nofollow\">https://buddypress.org/support/topic/the-right-way-to-remove-nav-items/</a></p>\n<p>例: functions.php に、</p>\n<pre><code>// アクティビティ タブを削除する場合は、デフォルトのタブを別のタブへ変更する必要があります。\n// define( &#039;BP_DEFAULT_COMPONENT&#039;, &#039;profile&#039; );\n\nfunction my_bp_activity_setup_nav() {\n	// bp_core_remove_nav_item( &#039;activity&#039; );\n	// bp_core_remove_nav_item( &#039;forums&#039; );\n	// bp_core_remove_nav_item( &#039;profile&#039; );\n	// bp_core_remove_nav_item( &#039;messages&#039; );\n	bp_core_remove_nav_item( &#039;notifications&#039; );\n	// bp_core_remove_nav_item( &#039;friends&#039; );\n	// bp_core_remove_nav_item( &#039;groups&#039; );\n	// bp_core_remove_nav_item( &#039;settings&#039; );\n}\n\nadd_action( &#039;bp_setup_nav&#039;, &#039;my_bp_activity_setup_nav&#039;, 15 );</code></pre>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"ishitaka\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}i:9;a:6:{s:4:\"data\";s:55:\"\n					\n					\n					\n					\n					\n\n					\n\n					\n					\n				\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";s:5:\"child\";a:2:{s:0:\"\";a:5:{s:4:\"guid\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228931\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:5:\"title\";a:1:{i:0;a:5:{s:4:\"data\";s:51:\"返信先: bbpressに「状態」を追加したい\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:158:\"https://ja.wordpress.org/support/topic/bbpress%e3%81%ab%e3%80%8c%e7%8a%b6%e6%85%8b%e3%80%8d%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%97%e3%81%9f%e3%81%84/#post-228931\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:7:\"pubDate\";a:1:{i:0;a:5:{s:4:\"data\";s:31:\"Sat, 21 Jul 2018 23:10:05 +0000\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}s:11:\"description\";a:1:{i:0;a:5:{s:4:\"data\";s:215:\"\n						\n						<p>bbResolutions プラグインはどうでしょうか。<br />\n<a href=\"https://wordpress.org/plugins/bbresolutions/\" rel=\"nofollow\">https://wordpress.org/plugins/bbresolutions/</a></p>\n						\n					\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}s:32:\"http://purl.org/dc/elements/1.1/\";a:1:{s:7:\"creator\";a:1:{i:0;a:5:{s:4:\"data\";s:8:\"ishitaka\";s:7:\"attribs\";a:0:{}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}s:27:\"http://www.w3.org/2005/Atom\";a:1:{s:4:\"link\";a:1:{i:0;a:5:{s:4:\"data\";s:0:\"\";s:7:\"attribs\";a:1:{s:0:\"\";a:3:{s:4:\"href\";s:44:\"https://ja.wordpress.org/support/forums/feed\";s:3:\"rel\";s:4:\"self\";s:4:\"type\";s:19:\"application/rss+xml\";}}s:8:\"xml_base\";s:0:\"\";s:17:\"xml_base_explicit\";b:0;s:8:\"xml_lang\";s:0:\"\";}}}}}}}}}}}}s:4:\"type\";i:128;s:7:\"headers\";O:42:\"Requests_Utility_CaseInsensitiveDictionary\":1:{s:7:\"\0*\0data\";a:6:{s:6:\"server\";s:5:\"nginx\";s:4:\"date\";s:29:\"Sun, 22 Jul 2018 05:16:08 GMT\";s:12:\"content-type\";s:34:\"application/rss+xml; charset=UTF-8\";s:6:\"x-olaf\";s:3:\"⛄\";s:15:\"x-frame-options\";s:10:\"SAMEORIGIN\";s:4:\"x-nc\";s:9:\"HIT ord 1\";}}s:5:\"build\";s:14:\"20180213085251\";}','no'),(3955,'_transient_timeout_feed_mod_6f409681938158427d2ded6eb1b9ea27','1532279768','no'),(3956,'_transient_feed_mod_6f409681938158427d2ded6eb1b9ea27','1532236568','no'),(3957,'_transient_timeout_dash_v2_45827e8e892dd0b85803a110fad8690f','1532279768','no'),(3958,'_transient_dash_v2_45827e8e892dd0b85803a110fad8690f','<div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://ja.wordpress.org/2018/07/13/update-on-gutenberg/\'>Gutenberg 最新情報</a></li></ul></div><div class=\"rss-widget\"><ul><li><a class=\'rsswidget\' href=\'https://ja.wordpress.org/support/topic/%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%AE%E4%BB%95%E6%96%B9%E3%80%82%E8%B6%85%E5%88%9D%E5%BF%83%E8%80%85%E3%81%A7%E3%81%99%E3%80%82/#post-228942\'>返信先: フォントの変更の仕方。超初心者です。</a></li><li><a class=\'rsswidget\' href=\'https://ja.wordpress.org/support/topic/%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88%E3%81%AE%E5%A4%89%E6%9B%B4%E3%81%AE%E4%BB%95%E6%96%B9%E3%80%82%E8%B6%85%E5%88%9D%E5%BF%83%E8%80%85%E3%81%A7%E3%81%99%E3%80%82/#post-228941\'>フォントの変更の仕方。超初心者です。</a></li><li><a class=\'rsswidget\' href=\'https://ja.wordpress.org/support/topic/bbpress%E3%81%AB%E3%80%8C%E7%8A%B6%E6%85%8B%E3%80%8D%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%97%E3%81%9F%E3%81%84/#post-228940\'>返信先: bbpressに「状態」を追加したい</a></li></ul></div>','no'),(3965,'_site_transient_timeout_available_translations','1532258947','no'),(3966,'_site_transient_available_translations','a:113:{s:2:\"af\";a:8:{s:8:\"language\";s:2:\"af\";s:7:\"version\";s:5:\"4.9.4\";s:7:\"updated\";s:19:\"2018-02-06 13:56:09\";s:12:\"english_name\";s:9:\"Afrikaans\";s:11:\"native_name\";s:9:\"Afrikaans\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.4/af.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"af\";i:2;s:3:\"afr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Gaan voort\";}}s:2:\"ar\";a:8:{s:8:\"language\";s:2:\"ar\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-09 07:24:12\";s:12:\"english_name\";s:6:\"Arabic\";s:11:\"native_name\";s:14:\"العربية\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/ar.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:2;s:3:\"ara\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:3:\"ary\";a:8:{s:8:\"language\";s:3:\"ary\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-01-26 15:42:35\";s:12:\"english_name\";s:15:\"Moroccan Arabic\";s:11:\"native_name\";s:31:\"العربية المغربية\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.7/ary.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ar\";i:3;s:3:\"ary\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"المتابعة\";}}s:2:\"as\";a:8:{s:8:\"language\";s:2:\"as\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-22 18:59:07\";s:12:\"english_name\";s:8:\"Assamese\";s:11:\"native_name\";s:21:\"অসমীয়া\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/as.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"as\";i:2;s:3:\"asm\";i:3;s:3:\"asm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:2:\"az\";a:8:{s:8:\"language\";s:2:\"az\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-06 00:09:27\";s:12:\"english_name\";s:11:\"Azerbaijani\";s:11:\"native_name\";s:16:\"Azərbaycan dili\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/az.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:2;s:3:\"aze\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Davam\";}}s:3:\"azb\";a:8:{s:8:\"language\";s:3:\"azb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-12 20:34:31\";s:12:\"english_name\";s:17:\"South Azerbaijani\";s:11:\"native_name\";s:29:\"گؤنئی آذربایجان\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/azb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"az\";i:3;s:3:\"azb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:3:\"bel\";a:8:{s:8:\"language\";s:3:\"bel\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-04 08:43:29\";s:12:\"english_name\";s:10:\"Belarusian\";s:11:\"native_name\";s:29:\"Беларуская мова\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.5/bel.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"be\";i:2;s:3:\"bel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Працягнуць\";}}s:5:\"bg_BG\";a:8:{s:8:\"language\";s:5:\"bg_BG\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-23 07:27:43\";s:12:\"english_name\";s:9:\"Bulgarian\";s:11:\"native_name\";s:18:\"Български\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/bg_BG.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bg\";i:2;s:3:\"bul\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Напред\";}}s:5:\"bn_BD\";a:8:{s:8:\"language\";s:5:\"bn_BD\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2017-10-01 12:57:10\";s:12:\"english_name\";s:7:\"Bengali\";s:11:\"native_name\";s:15:\"বাংলা\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.6/bn_BD.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"bn\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:23:\"এগিয়ে চল.\";}}s:2:\"bo\";a:8:{s:8:\"language\";s:2:\"bo\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-22 03:44:52\";s:12:\"english_name\";s:7:\"Tibetan\";s:11:\"native_name\";s:21:\"བོད་ཡིག\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/bo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bo\";i:2;s:3:\"tib\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"མུ་མཐུད།\";}}s:5:\"bs_BA\";a:8:{s:8:\"language\";s:5:\"bs_BA\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-04 20:20:28\";s:12:\"english_name\";s:7:\"Bosnian\";s:11:\"native_name\";s:8:\"Bosanski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/bs_BA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"bs\";i:2;s:3:\"bos\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:2:\"ca\";a:8:{s:8:\"language\";s:2:\"ca\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 04:48:54\";s:12:\"english_name\";s:7:\"Catalan\";s:11:\"native_name\";s:7:\"Català\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/ca.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ca\";i:2;s:3:\"cat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:3:\"ceb\";a:8:{s:8:\"language\";s:3:\"ceb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-02 17:25:51\";s:12:\"english_name\";s:7:\"Cebuano\";s:11:\"native_name\";s:7:\"Cebuano\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ceb.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"ceb\";i:3;s:3:\"ceb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Padayun\";}}s:5:\"cs_CZ\";a:8:{s:8:\"language\";s:5:\"cs_CZ\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 06:46:23\";s:12:\"english_name\";s:5:\"Czech\";s:11:\"native_name\";s:9:\"Čeština\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/cs_CZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cs\";i:2;s:3:\"ces\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Pokračovat\";}}s:2:\"cy\";a:8:{s:8:\"language\";s:2:\"cy\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-07 10:10:13\";s:12:\"english_name\";s:5:\"Welsh\";s:11:\"native_name\";s:7:\"Cymraeg\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/cy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"cy\";i:2;s:3:\"cym\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Parhau\";}}s:5:\"da_DK\";a:8:{s:8:\"language\";s:5:\"da_DK\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 08:46:24\";s:12:\"english_name\";s:6:\"Danish\";s:11:\"native_name\";s:5:\"Dansk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/da_DK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"da\";i:2;s:3:\"dan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsæt\";}}s:5:\"de_CH\";a:8:{s:8:\"language\";s:5:\"de_CH\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-08 16:40:04\";s:12:\"english_name\";s:20:\"German (Switzerland)\";s:11:\"native_name\";s:17:\"Deutsch (Schweiz)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/de_CH.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:12:\"de_DE_formal\";a:8:{s:8:\"language\";s:12:\"de_DE_formal\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-10 10:21:23\";s:12:\"english_name\";s:15:\"German (Formal)\";s:11:\"native_name\";s:13:\"Deutsch (Sie)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.9.7/de_DE_formal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:14:\"de_CH_informal\";a:8:{s:8:\"language\";s:14:\"de_CH_informal\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-08 16:42:22\";s:12:\"english_name\";s:30:\"German (Switzerland, Informal)\";s:11:\"native_name\";s:21:\"Deutsch (Schweiz, Du)\";s:7:\"package\";s:73:\"https://downloads.wordpress.org/translation/core/4.9.7/de_CH_informal.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:5:\"de_DE\";a:8:{s:8:\"language\";s:5:\"de_DE\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-10 10:18:08\";s:12:\"english_name\";s:6:\"German\";s:11:\"native_name\";s:7:\"Deutsch\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/de_DE.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"de\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Weiter\";}}s:3:\"dzo\";a:8:{s:8:\"language\";s:3:\"dzo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-06-29 08:59:03\";s:12:\"english_name\";s:8:\"Dzongkha\";s:11:\"native_name\";s:18:\"རྫོང་ཁ\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/dzo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"dz\";i:2;s:3:\"dzo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:2:\"el\";a:8:{s:8:\"language\";s:2:\"el\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-14 17:51:21\";s:12:\"english_name\";s:5:\"Greek\";s:11:\"native_name\";s:16:\"Ελληνικά\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/el.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"el\";i:2;s:3:\"ell\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Συνέχεια\";}}s:5:\"en_CA\";a:8:{s:8:\"language\";s:5:\"en_CA\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 10:18:25\";s:12:\"english_name\";s:16:\"English (Canada)\";s:11:\"native_name\";s:16:\"English (Canada)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/en_CA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_ZA\";a:8:{s:8:\"language\";s:5:\"en_ZA\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 07:35:25\";s:12:\"english_name\";s:22:\"English (South Africa)\";s:11:\"native_name\";s:22:\"English (South Africa)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/en_ZA.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_NZ\";a:8:{s:8:\"language\";s:5:\"en_NZ\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 22:06:40\";s:12:\"english_name\";s:21:\"English (New Zealand)\";s:11:\"native_name\";s:21:\"English (New Zealand)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/en_NZ.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_AU\";a:8:{s:8:\"language\";s:5:\"en_AU\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 22:07:01\";s:12:\"english_name\";s:19:\"English (Australia)\";s:11:\"native_name\";s:19:\"English (Australia)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/en_AU.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:5:\"en_GB\";a:8:{s:8:\"language\";s:5:\"en_GB\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 20:57:02\";s:12:\"english_name\";s:12:\"English (UK)\";s:11:\"native_name\";s:12:\"English (UK)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/en_GB.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"en\";i:2;s:3:\"eng\";i:3;s:3:\"eng\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"eo\";a:8:{s:8:\"language\";s:2:\"eo\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 10:52:53\";s:12:\"english_name\";s:9:\"Esperanto\";s:11:\"native_name\";s:9:\"Esperanto\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/eo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eo\";i:2;s:3:\"epo\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Daŭrigi\";}}s:5:\"es_ES\";a:8:{s:8:\"language\";s:5:\"es_ES\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-17 05:54:09\";s:12:\"english_name\";s:15:\"Spanish (Spain)\";s:11:\"native_name\";s:8:\"Español\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/es_ES.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_AR\";a:8:{s:8:\"language\";s:5:\"es_AR\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-16 04:48:17\";s:12:\"english_name\";s:19:\"Spanish (Argentina)\";s:11:\"native_name\";s:21:\"Español de Argentina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/es_AR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_VE\";a:8:{s:8:\"language\";s:5:\"es_VE\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-26 13:11:18\";s:12:\"english_name\";s:19:\"Spanish (Venezuela)\";s:11:\"native_name\";s:21:\"Español de Venezuela\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/es_VE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_GT\";a:8:{s:8:\"language\";s:5:\"es_GT\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-15 15:03:42\";s:12:\"english_name\";s:19:\"Spanish (Guatemala)\";s:11:\"native_name\";s:21:\"Español de Guatemala\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/es_GT.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CO\";a:8:{s:8:\"language\";s:5:\"es_CO\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-15 23:17:08\";s:12:\"english_name\";s:18:\"Spanish (Colombia)\";s:11:\"native_name\";s:20:\"Español de Colombia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/es_CO.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_MX\";a:8:{s:8:\"language\";s:5:\"es_MX\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2017-07-31 15:12:02\";s:12:\"english_name\";s:16:\"Spanish (Mexico)\";s:11:\"native_name\";s:19:\"Español de México\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.6/es_MX.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CR\";a:8:{s:8:\"language\";s:5:\"es_CR\";s:7:\"version\";s:5:\"4.8.3\";s:7:\"updated\";s:19:\"2017-10-01 17:54:52\";s:12:\"english_name\";s:20:\"Spanish (Costa Rica)\";s:11:\"native_name\";s:22:\"Español de Costa Rica\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.8.3/es_CR.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_CL\";a:8:{s:8:\"language\";s:5:\"es_CL\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-28 20:09:49\";s:12:\"english_name\";s:15:\"Spanish (Chile)\";s:11:\"native_name\";s:17:\"Español de Chile\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/es_CL.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"es_PE\";a:8:{s:8:\"language\";s:5:\"es_PE\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-09 09:36:22\";s:12:\"english_name\";s:14:\"Spanish (Peru)\";s:11:\"native_name\";s:17:\"Español de Perú\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/es_PE.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"es\";i:2;s:3:\"spa\";i:3;s:3:\"spa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"et\";a:8:{s:8:\"language\";s:2:\"et\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-19 14:11:29\";s:12:\"english_name\";s:8:\"Estonian\";s:11:\"native_name\";s:5:\"Eesti\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.2/et.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"et\";i:2;s:3:\"est\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Jätka\";}}s:2:\"eu\";a:8:{s:8:\"language\";s:2:\"eu\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-12-09 21:12:23\";s:12:\"english_name\";s:6:\"Basque\";s:11:\"native_name\";s:7:\"Euskara\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.2/eu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"eu\";i:2;s:3:\"eus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Jarraitu\";}}s:5:\"fa_IR\";a:8:{s:8:\"language\";s:5:\"fa_IR\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-16 05:40:29\";s:12:\"english_name\";s:7:\"Persian\";s:11:\"native_name\";s:10:\"فارسی\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/fa_IR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fa\";i:2;s:3:\"fas\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:2:\"fi\";a:8:{s:8:\"language\";s:2:\"fi\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-16 10:29:40\";s:12:\"english_name\";s:7:\"Finnish\";s:11:\"native_name\";s:5:\"Suomi\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.6/fi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fi\";i:2;s:3:\"fin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Jatka\";}}s:5:\"fr_FR\";a:8:{s:8:\"language\";s:5:\"fr_FR\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-10 22:02:58\";s:12:\"english_name\";s:15:\"French (France)\";s:11:\"native_name\";s:9:\"Français\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/fr_FR.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"fr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_CA\";a:8:{s:8:\"language\";s:5:\"fr_CA\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-23 21:23:19\";s:12:\"english_name\";s:15:\"French (Canada)\";s:11:\"native_name\";s:19:\"Français du Canada\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/fr_CA.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:5:\"fr_BE\";a:8:{s:8:\"language\";s:5:\"fr_BE\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-01-31 11:16:06\";s:12:\"english_name\";s:16:\"French (Belgium)\";s:11:\"native_name\";s:21:\"Français de Belgique\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/fr_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"fr\";i:2;s:3:\"fra\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuer\";}}s:3:\"fur\";a:8:{s:8:\"language\";s:3:\"fur\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2018-01-29 17:32:35\";s:12:\"english_name\";s:8:\"Friulian\";s:11:\"native_name\";s:8:\"Friulian\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.6/fur.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"fur\";i:3;s:3:\"fur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continue\";}}s:2:\"gd\";a:8:{s:8:\"language\";s:2:\"gd\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-08-23 17:41:37\";s:12:\"english_name\";s:15:\"Scottish Gaelic\";s:11:\"native_name\";s:9:\"Gàidhlig\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/gd.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"gd\";i:2;s:3:\"gla\";i:3;s:3:\"gla\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"Lean air adhart\";}}s:5:\"gl_ES\";a:8:{s:8:\"language\";s:5:\"gl_ES\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-14 18:51:09\";s:12:\"english_name\";s:8:\"Galician\";s:11:\"native_name\";s:6:\"Galego\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/gl_ES.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gl\";i:2;s:3:\"glg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:2:\"gu\";a:8:{s:8:\"language\";s:2:\"gu\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-02-14 06:16:04\";s:12:\"english_name\";s:8:\"Gujarati\";s:11:\"native_name\";s:21:\"ગુજરાતી\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/gu.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"gu\";i:2;s:3:\"guj\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:31:\"ચાલુ રાખવું\";}}s:3:\"haz\";a:8:{s:8:\"language\";s:3:\"haz\";s:7:\"version\";s:5:\"4.4.2\";s:7:\"updated\";s:19:\"2015-12-05 00:59:09\";s:12:\"english_name\";s:8:\"Hazaragi\";s:11:\"native_name\";s:15:\"هزاره گی\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.4.2/haz.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"haz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"ادامه\";}}s:5:\"he_IL\";a:8:{s:8:\"language\";s:5:\"he_IL\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-15 08:49:46\";s:12:\"english_name\";s:6:\"Hebrew\";s:11:\"native_name\";s:16:\"עִבְרִית\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/he_IL.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"he\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"המשך\";}}s:5:\"hi_IN\";a:8:{s:8:\"language\";s:5:\"hi_IN\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-06-17 09:33:44\";s:12:\"english_name\";s:5:\"Hindi\";s:11:\"native_name\";s:18:\"हिन्दी\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/hi_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hi\";i:2;s:3:\"hin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"जारी\";}}s:2:\"hr\";a:8:{s:8:\"language\";s:2:\"hr\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-09 17:30:15\";s:12:\"english_name\";s:8:\"Croatian\";s:11:\"native_name\";s:8:\"Hrvatski\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/hr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hr\";i:2;s:3:\"hrv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:7:\"Nastavi\";}}s:5:\"hu_HU\";a:8:{s:8:\"language\";s:5:\"hu_HU\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-23 22:45:22\";s:12:\"english_name\";s:9:\"Hungarian\";s:11:\"native_name\";s:6:\"Magyar\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/hu_HU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hu\";i:2;s:3:\"hun\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Folytatás\";}}s:2:\"hy\";a:8:{s:8:\"language\";s:2:\"hy\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-03 16:21:10\";s:12:\"english_name\";s:8:\"Armenian\";s:11:\"native_name\";s:14:\"Հայերեն\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/hy.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"hy\";i:2;s:3:\"hye\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Շարունակել\";}}s:5:\"id_ID\";a:8:{s:8:\"language\";s:5:\"id_ID\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-10 03:24:01\";s:12:\"english_name\";s:10:\"Indonesian\";s:11:\"native_name\";s:16:\"Bahasa Indonesia\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/id_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"id\";i:2;s:3:\"ind\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Lanjutkan\";}}s:5:\"is_IS\";a:8:{s:8:\"language\";s:5:\"is_IS\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-04-13 13:55:54\";s:12:\"english_name\";s:9:\"Icelandic\";s:11:\"native_name\";s:9:\"Íslenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.7/is_IS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"is\";i:2;s:3:\"isl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Áfram\";}}s:5:\"it_IT\";a:8:{s:8:\"language\";s:5:\"it_IT\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 05:36:29\";s:12:\"english_name\";s:7:\"Italian\";s:11:\"native_name\";s:8:\"Italiano\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/it_IT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"it\";i:2;s:3:\"ita\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Continua\";}}s:2:\"ja\";a:8:{s:8:\"language\";s:2:\"ja\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-21 16:18:57\";s:12:\"english_name\";s:8:\"Japanese\";s:11:\"native_name\";s:9:\"日本語\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.6/ja.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"ja\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"続ける\";}}s:5:\"jv_ID\";a:8:{s:8:\"language\";s:5:\"jv_ID\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-24 13:53:29\";s:12:\"english_name\";s:8:\"Javanese\";s:11:\"native_name\";s:9:\"Basa Jawa\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/jv_ID.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"jv\";i:2;s:3:\"jav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Nerusaké\";}}s:5:\"ka_GE\";a:8:{s:8:\"language\";s:5:\"ka_GE\";s:7:\"version\";s:5:\"4.9.4\";s:7:\"updated\";s:19:\"2018-02-08 06:01:48\";s:12:\"english_name\";s:8:\"Georgian\";s:11:\"native_name\";s:21:\"ქართული\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.4/ka_GE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ka\";i:2;s:3:\"kat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"გაგრძელება\";}}s:3:\"kab\";a:8:{s:8:\"language\";s:3:\"kab\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-22 22:24:38\";s:12:\"english_name\";s:6:\"Kabyle\";s:11:\"native_name\";s:9:\"Taqbaylit\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.9.5/kab.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"kab\";i:3;s:3:\"kab\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Kemmel\";}}s:2:\"kk\";a:8:{s:8:\"language\";s:2:\"kk\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-12 08:08:32\";s:12:\"english_name\";s:6:\"Kazakh\";s:11:\"native_name\";s:19:\"Қазақ тілі\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/kk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"kk\";i:2;s:3:\"kaz\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Жалғастыру\";}}s:2:\"km\";a:8:{s:8:\"language\";s:2:\"km\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-07 02:07:59\";s:12:\"english_name\";s:5:\"Khmer\";s:11:\"native_name\";s:27:\"ភាសាខ្មែរ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/km.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"km\";i:2;s:3:\"khm\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"បន្ត\";}}s:5:\"ko_KR\";a:8:{s:8:\"language\";s:5:\"ko_KR\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-13 16:16:37\";s:12:\"english_name\";s:6:\"Korean\";s:11:\"native_name\";s:9:\"한국어\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/ko_KR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ko\";i:2;s:3:\"kor\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"계속\";}}s:3:\"ckb\";a:8:{s:8:\"language\";s:3:\"ckb\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:48:25\";s:12:\"english_name\";s:16:\"Kurdish (Sorani)\";s:11:\"native_name\";s:13:\"كوردی‎\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/ckb.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ku\";i:3;s:3:\"ckb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"به‌رده‌وام به‌\";}}s:2:\"lo\";a:8:{s:8:\"language\";s:2:\"lo\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 09:59:23\";s:12:\"english_name\";s:3:\"Lao\";s:11:\"native_name\";s:21:\"ພາສາລາວ\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/lo.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lo\";i:2;s:3:\"lao\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"ຕໍ່​ໄປ\";}}s:5:\"lt_LT\";a:8:{s:8:\"language\";s:5:\"lt_LT\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-24 09:42:27\";s:12:\"english_name\";s:10:\"Lithuanian\";s:11:\"native_name\";s:15:\"Lietuvių kalba\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/lt_LT.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lt\";i:2;s:3:\"lit\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Tęsti\";}}s:2:\"lv\";a:8:{s:8:\"language\";s:2:\"lv\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-03-17 20:40:40\";s:12:\"english_name\";s:7:\"Latvian\";s:11:\"native_name\";s:16:\"Latviešu valoda\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.7/lv.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"lv\";i:2;s:3:\"lav\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Turpināt\";}}s:5:\"mk_MK\";a:8:{s:8:\"language\";s:5:\"mk_MK\";s:7:\"version\";s:5:\"4.7.7\";s:7:\"updated\";s:19:\"2017-01-26 15:54:41\";s:12:\"english_name\";s:10:\"Macedonian\";s:11:\"native_name\";s:31:\"Македонски јазик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.7/mk_MK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mk\";i:2;s:3:\"mkd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:16:\"Продолжи\";}}s:5:\"ml_IN\";a:8:{s:8:\"language\";s:5:\"ml_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:43:32\";s:12:\"english_name\";s:9:\"Malayalam\";s:11:\"native_name\";s:18:\"മലയാളം\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ml_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ml\";i:2;s:3:\"mal\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:18:\"തുടരുക\";}}s:2:\"mn\";a:8:{s:8:\"language\";s:2:\"mn\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-12 07:29:35\";s:12:\"english_name\";s:9:\"Mongolian\";s:11:\"native_name\";s:12:\"Монгол\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/mn.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mn\";i:2;s:3:\"mon\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"Үргэлжлүүлэх\";}}s:2:\"mr\";a:8:{s:8:\"language\";s:2:\"mr\";s:7:\"version\";s:5:\"4.8.6\";s:7:\"updated\";s:19:\"2018-02-13 07:38:55\";s:12:\"english_name\";s:7:\"Marathi\";s:11:\"native_name\";s:15:\"मराठी\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.8.6/mr.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"mr\";i:2;s:3:\"mar\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"सुरु ठेवा\";}}s:5:\"ms_MY\";a:8:{s:8:\"language\";s:5:\"ms_MY\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-23 08:05:19\";s:12:\"english_name\";s:5:\"Malay\";s:11:\"native_name\";s:13:\"Bahasa Melayu\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/ms_MY.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ms\";i:2;s:3:\"msa\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Teruskan\";}}s:5:\"my_MM\";a:8:{s:8:\"language\";s:5:\"my_MM\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-26 15:57:42\";s:12:\"english_name\";s:17:\"Myanmar (Burmese)\";s:11:\"native_name\";s:15:\"ဗမာစာ\";s:7:\"package\";s:65:\"https://downloads.wordpress.org/translation/core/4.1.20/my_MM.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"my\";i:2;s:3:\"mya\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:54:\"ဆက်လက်လုပ်ဆောင်ပါ။\";}}s:5:\"nb_NO\";a:8:{s:8:\"language\";s:5:\"nb_NO\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-07-04 18:18:06\";s:12:\"english_name\";s:19:\"Norwegian (Bokmål)\";s:11:\"native_name\";s:13:\"Norsk bokmål\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/nb_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nb\";i:2;s:3:\"nob\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Fortsett\";}}s:5:\"ne_NP\";a:8:{s:8:\"language\";s:5:\"ne_NP\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-27 10:30:26\";s:12:\"english_name\";s:6:\"Nepali\";s:11:\"native_name\";s:18:\"नेपाली\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ne_NP.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ne\";i:2;s:3:\"nep\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:43:\"जारी राख्नुहोस्\";}}s:12:\"nl_NL_formal\";a:8:{s:8:\"language\";s:12:\"nl_NL_formal\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 07:24:36\";s:12:\"english_name\";s:14:\"Dutch (Formal)\";s:11:\"native_name\";s:20:\"Nederlands (Formeel)\";s:7:\"package\";s:71:\"https://downloads.wordpress.org/translation/core/4.9.7/nl_NL_formal.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_BE\";a:8:{s:8:\"language\";s:5:\"nl_BE\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-09 17:56:24\";s:12:\"english_name\";s:15:\"Dutch (Belgium)\";s:11:\"native_name\";s:20:\"Nederlands (België)\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/nl_BE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nl_NL\";a:8:{s:8:\"language\";s:5:\"nl_NL\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 07:22:35\";s:12:\"english_name\";s:5:\"Dutch\";s:11:\"native_name\";s:10:\"Nederlands\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/nl_NL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nl\";i:2;s:3:\"nld\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Doorgaan\";}}s:5:\"nn_NO\";a:8:{s:8:\"language\";s:5:\"nn_NO\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-07 06:25:16\";s:12:\"english_name\";s:19:\"Norwegian (Nynorsk)\";s:11:\"native_name\";s:13:\"Norsk nynorsk\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/nn_NO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"nn\";i:2;s:3:\"nno\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Hald fram\";}}s:3:\"oci\";a:8:{s:8:\"language\";s:3:\"oci\";s:7:\"version\";s:5:\"4.8.3\";s:7:\"updated\";s:19:\"2017-08-25 10:03:08\";s:12:\"english_name\";s:7:\"Occitan\";s:11:\"native_name\";s:7:\"Occitan\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.8.3/oci.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"oc\";i:2;s:3:\"oci\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Contunhar\";}}s:5:\"pa_IN\";a:8:{s:8:\"language\";s:5:\"pa_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-16 05:19:43\";s:12:\"english_name\";s:7:\"Punjabi\";s:11:\"native_name\";s:18:\"ਪੰਜਾਬੀ\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/pa_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pa\";i:2;s:3:\"pan\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:25:\"ਜਾਰੀ ਰੱਖੋ\";}}s:5:\"pl_PL\";a:8:{s:8:\"language\";s:5:\"pl_PL\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-12 12:14:24\";s:12:\"english_name\";s:6:\"Polish\";s:11:\"native_name\";s:6:\"Polski\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/pl_PL.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pl\";i:2;s:3:\"pol\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Kontynuuj\";}}s:2:\"ps\";a:8:{s:8:\"language\";s:2:\"ps\";s:7:\"version\";s:6:\"4.1.20\";s:7:\"updated\";s:19:\"2015-03-29 22:19:48\";s:12:\"english_name\";s:6:\"Pashto\";s:11:\"native_name\";s:8:\"پښتو\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.1.20/ps.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ps\";i:2;s:3:\"pus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"دوام ورکړه\";}}s:5:\"pt_PT\";a:8:{s:8:\"language\";s:5:\"pt_PT\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 08:49:25\";s:12:\"english_name\";s:21:\"Portuguese (Portugal)\";s:11:\"native_name\";s:10:\"Português\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/pt_PT.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:10:\"pt_PT_ao90\";a:8:{s:8:\"language\";s:10:\"pt_PT_ao90\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-09 09:30:48\";s:12:\"english_name\";s:27:\"Portuguese (Portugal, AO90)\";s:11:\"native_name\";s:17:\"Português (AO90)\";s:7:\"package\";s:69:\"https://downloads.wordpress.org/translation/core/4.9.5/pt_PT_ao90.zip\";s:3:\"iso\";a:1:{i:1;s:2:\"pt\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:5:\"pt_BR\";a:8:{s:8:\"language\";s:5:\"pt_BR\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 22:28:16\";s:12:\"english_name\";s:19:\"Portuguese (Brazil)\";s:11:\"native_name\";s:20:\"Português do Brasil\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/pt_BR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"pt\";i:2;s:3:\"por\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuar\";}}s:3:\"rhg\";a:8:{s:8:\"language\";s:3:\"rhg\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-16 13:03:18\";s:12:\"english_name\";s:8:\"Rohingya\";s:11:\"native_name\";s:8:\"Ruáinga\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/rhg.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"rhg\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ro_RO\";a:8:{s:8:\"language\";s:5:\"ro_RO\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-10 15:57:40\";s:12:\"english_name\";s:8:\"Romanian\";s:11:\"native_name\";s:8:\"Română\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/ro_RO.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ro\";i:2;s:3:\"ron\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Continuă\";}}s:5:\"ru_RU\";a:8:{s:8:\"language\";s:5:\"ru_RU\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 19:21:47\";s:12:\"english_name\";s:7:\"Russian\";s:11:\"native_name\";s:14:\"Русский\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/ru_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ru\";i:2;s:3:\"rus\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продолжить\";}}s:3:\"sah\";a:8:{s:8:\"language\";s:3:\"sah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-21 02:06:41\";s:12:\"english_name\";s:5:\"Sakha\";s:11:\"native_name\";s:14:\"Сахалыы\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/sah.zip\";s:3:\"iso\";a:2:{i:2;s:3:\"sah\";i:3;s:3:\"sah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Салҕаа\";}}s:5:\"si_LK\";a:8:{s:8:\"language\";s:5:\"si_LK\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-12 06:00:52\";s:12:\"english_name\";s:7:\"Sinhala\";s:11:\"native_name\";s:15:\"සිංහල\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/si_LK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"si\";i:2;s:3:\"sin\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:44:\"දිගටම කරගෙන යන්න\";}}s:5:\"sk_SK\";a:8:{s:8:\"language\";s:5:\"sk_SK\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 12:55:35\";s:12:\"english_name\";s:6:\"Slovak\";s:11:\"native_name\";s:11:\"Slovenčina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/sk_SK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sk\";i:2;s:3:\"slk\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Pokračovať\";}}s:5:\"sl_SI\";a:8:{s:8:\"language\";s:5:\"sl_SI\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2018-01-04 13:33:13\";s:12:\"english_name\";s:9:\"Slovenian\";s:11:\"native_name\";s:13:\"Slovenščina\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/sl_SI.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sl\";i:2;s:3:\"slv\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:8:\"Nadaljuj\";}}s:2:\"sq\";a:8:{s:8:\"language\";s:2:\"sq\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-25 10:30:04\";s:12:\"english_name\";s:8:\"Albanian\";s:11:\"native_name\";s:5:\"Shqip\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/sq.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sq\";i:2;s:3:\"sqi\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"Vazhdo\";}}s:5:\"sr_RS\";a:8:{s:8:\"language\";s:5:\"sr_RS\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-05-17 22:21:34\";s:12:\"english_name\";s:7:\"Serbian\";s:11:\"native_name\";s:23:\"Српски језик\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.6/sr_RS.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sr\";i:2;s:3:\"srp\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:14:\"Настави\";}}s:5:\"sv_SE\";a:8:{s:8:\"language\";s:5:\"sv_SE\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-05 20:09:13\";s:12:\"english_name\";s:7:\"Swedish\";s:11:\"native_name\";s:7:\"Svenska\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/sv_SE.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"sv\";i:2;s:3:\"swe\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:9:\"Fortsätt\";}}s:3:\"szl\";a:8:{s:8:\"language\";s:3:\"szl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-09-24 19:58:14\";s:12:\"english_name\";s:8:\"Silesian\";s:11:\"native_name\";s:17:\"Ślōnskŏ gŏdka\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/szl.zip\";s:3:\"iso\";a:1:{i:3;s:3:\"szl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:13:\"Kōntynuować\";}}s:5:\"ta_IN\";a:8:{s:8:\"language\";s:5:\"ta_IN\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-27 03:22:47\";s:12:\"english_name\";s:5:\"Tamil\";s:11:\"native_name\";s:15:\"தமிழ்\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/ta_IN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ta\";i:2;s:3:\"tam\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:24:\"தொடரவும்\";}}s:2:\"te\";a:8:{s:8:\"language\";s:2:\"te\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2017-01-26 15:47:39\";s:12:\"english_name\";s:6:\"Telugu\";s:11:\"native_name\";s:18:\"తెలుగు\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/te.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"te\";i:2;s:3:\"tel\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:30:\"కొనసాగించు\";}}s:2:\"th\";a:8:{s:8:\"language\";s:2:\"th\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-02 17:08:41\";s:12:\"english_name\";s:4:\"Thai\";s:11:\"native_name\";s:9:\"ไทย\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.5/th.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"th\";i:2;s:3:\"tha\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:15:\"ต่อไป\";}}s:2:\"tl\";a:8:{s:8:\"language\";s:2:\"tl\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-12-30 02:38:08\";s:12:\"english_name\";s:7:\"Tagalog\";s:11:\"native_name\";s:7:\"Tagalog\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.7.2/tl.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tl\";i:2;s:3:\"tgl\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:10:\"Magpatuloy\";}}s:5:\"tr_TR\";a:8:{s:8:\"language\";s:5:\"tr_TR\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 11:02:31\";s:12:\"english_name\";s:7:\"Turkish\";s:11:\"native_name\";s:8:\"Türkçe\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.7/tr_TR.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tr\";i:2;s:3:\"tur\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:5:\"Devam\";}}s:5:\"tt_RU\";a:8:{s:8:\"language\";s:5:\"tt_RU\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-11-20 20:20:50\";s:12:\"english_name\";s:5:\"Tatar\";s:11:\"native_name\";s:19:\"Татар теле\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.7.2/tt_RU.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"tt\";i:2;s:3:\"tat\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:17:\"дәвам итү\";}}s:3:\"tah\";a:8:{s:8:\"language\";s:3:\"tah\";s:7:\"version\";s:5:\"4.7.2\";s:7:\"updated\";s:19:\"2016-03-06 18:39:39\";s:12:\"english_name\";s:8:\"Tahitian\";s:11:\"native_name\";s:10:\"Reo Tahiti\";s:7:\"package\";s:62:\"https://downloads.wordpress.org/translation/core/4.7.2/tah.zip\";s:3:\"iso\";a:3:{i:1;s:2:\"ty\";i:2;s:3:\"tah\";i:3;s:3:\"tah\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:0:\"\";}}s:5:\"ug_CN\";a:8:{s:8:\"language\";s:5:\"ug_CN\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-12 12:31:53\";s:12:\"english_name\";s:6:\"Uighur\";s:11:\"native_name\";s:16:\"ئۇيغۇرچە\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/ug_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ug\";i:2;s:3:\"uig\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:26:\"داۋاملاشتۇرۇش\";}}s:2:\"uk\";a:8:{s:8:\"language\";s:2:\"uk\";s:7:\"version\";s:5:\"4.9.7\";s:7:\"updated\";s:19:\"2018-07-06 08:18:32\";s:12:\"english_name\";s:9:\"Ukrainian\";s:11:\"native_name\";s:20:\"Українська\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.7/uk.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uk\";i:2;s:3:\"ukr\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:20:\"Продовжити\";}}s:2:\"ur\";a:8:{s:8:\"language\";s:2:\"ur\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-20 11:37:47\";s:12:\"english_name\";s:4:\"Urdu\";s:11:\"native_name\";s:8:\"اردو\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.6/ur.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"ur\";i:2;s:3:\"urd\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:19:\"جاری رکھیں\";}}s:5:\"uz_UZ\";a:8:{s:8:\"language\";s:5:\"uz_UZ\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-03-09 10:37:43\";s:12:\"english_name\";s:5:\"Uzbek\";s:11:\"native_name\";s:11:\"O‘zbekcha\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/uz_UZ.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"uz\";i:2;s:3:\"uzb\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:11:\"Davom etish\";}}s:2:\"vi\";a:8:{s:8:\"language\";s:2:\"vi\";s:7:\"version\";s:5:\"4.9.6\";s:7:\"updated\";s:19:\"2018-06-14 04:18:32\";s:12:\"english_name\";s:10:\"Vietnamese\";s:11:\"native_name\";s:14:\"Tiếng Việt\";s:7:\"package\";s:61:\"https://downloads.wordpress.org/translation/core/4.9.6/vi.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"vi\";i:2;s:3:\"vie\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:12:\"Tiếp tục\";}}s:5:\"zh_HK\";a:8:{s:8:\"language\";s:5:\"zh_HK\";s:7:\"version\";s:5:\"4.9.5\";s:7:\"updated\";s:19:\"2018-04-09 00:56:52\";s:12:\"english_name\";s:19:\"Chinese (Hong Kong)\";s:11:\"native_name\";s:16:\"香港中文版	\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.5/zh_HK.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_TW\";a:8:{s:8:\"language\";s:5:\"zh_TW\";s:7:\"version\";s:5:\"4.9.4\";s:7:\"updated\";s:19:\"2018-02-13 02:41:15\";s:12:\"english_name\";s:16:\"Chinese (Taiwan)\";s:11:\"native_name\";s:12:\"繁體中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.4/zh_TW.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"繼續\";}}s:5:\"zh_CN\";a:8:{s:8:\"language\";s:5:\"zh_CN\";s:7:\"version\";s:5:\"4.9.2\";s:7:\"updated\";s:19:\"2017-11-17 22:20:52\";s:12:\"english_name\";s:15:\"Chinese (China)\";s:11:\"native_name\";s:12:\"简体中文\";s:7:\"package\";s:64:\"https://downloads.wordpress.org/translation/core/4.9.2/zh_CN.zip\";s:3:\"iso\";a:2:{i:1;s:2:\"zh\";i:2;s:3:\"zho\";}s:7:\"strings\";a:1:{s:8:\"continue\";s:6:\"继续\";}}}','no'),(3967,'_site_transient_timeout_theme_roots','1532250006','no'),(3968,'_site_transient_theme_roots','a:5:{s:7:\"coaster\";s:7:\"/themes\";s:13:\"twentyfifteen\";s:7:\"/themes\";s:14:\"twentyfourteen\";s:7:\"/themes\";s:15:\"twentyseventeen\";s:7:\"/themes\";s:14:\"twentythirteen\";s:7:\"/themes\";}','no'),(3970,'_site_transient_update_themes','O:8:\"stdClass\":4:{s:12:\"last_checked\";i:1532248287;s:7:\"checked\";a:5:{s:7:\"coaster\";s:4:\"1.62\";s:13:\"twentyfifteen\";s:3:\"2.0\";s:14:\"twentyfourteen\";s:3:\"2.2\";s:15:\"twentyseventeen\";s:3:\"1.6\";s:14:\"twentythirteen\";s:3:\"2.4\";}s:8:\"response\";a:0:{}s:12:\"translations\";a:0:{}}','no'),(3971,'_site_transient_timeout__wptouch_available_cloud_themes','1532249396','no'),(3972,'_site_transient__wptouch_available_cloud_themes','a:8:{s:3:\"cms\";a:10:{s:4:\"name\";s:3:\"CMS\";s:11:\"description\";s:138:\"A new WPtouch Pro theme made for content-heavy sites. Includes support for a featured slider, custom post types, multiple menus, and more.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.3.7\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:72:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/cms/screenshot.png\";s:4:\"base\";s:3:\"cms\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:41:\"http://www.wptouch.com/themes/#themes-cms\";}s:4:\"open\";a:10:{s:4:\"name\";s:4:\"Open\";s:11:\"description\";s:99:\"Open brings clicks to your bricks, with business-ready features to help you connect with customers.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.4.2\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:73:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/open/screenshot.png\";s:4:\"base\";s:4:\"open\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:42:\"http://www.wptouch.com/themes/#themes-open\";}s:13:\"classic-redux\";a:10:{s:4:\"name\";s:13:\"Classic Redux\";s:11:\"description\";s:48:\"A new take on the famous original WPtouch theme.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.4.3\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:82:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/classic-redux/screenshot.png\";s:4:\"base\";s:13:\"classic-redux\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:51:\"http://www.wptouch.com/themes/#themes-classic-redux\";}s:8:\"scaffold\";a:10:{s:4:\"name\";s:8:\"Scaffold\";s:11:\"description\";s:111:\"A basic theme example to assist Agency license holders in creating their own WPtouch Pro-powered mobile themes.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"2.1.2\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:77:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/scaffold/screenshot.png\";s:4:\"base\";s:8:\"scaffold\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:46:\"http://www.wptouch.com/themes/#themes-scaffold\";}s:6:\"simple\";a:10:{s:4:\"name\";s:6:\"Simple\";s:11:\"description\";s:119:\"Designed for page-driven sites for individuals, small businesses, agencies and shops. An easily brandable mobile theme.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.4.5\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:75:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/simple/screenshot.png\";s:4:\"base\";s:6:\"simple\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:44:\"http://www.wptouch.com/themes/#themes-simple\";}s:5:\"prose\";a:10:{s:4:\"name\";s:5:\"Prose\";s:11:\"description\";s:115:\"Deceptively simple, Prose stays out of the way and provides a canvas for sharing – and enjoying – your stories.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.4.6\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:74:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/prose/screenshot.png\";s:4:\"base\";s:5:\"prose\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:43:\"http://www.wptouch.com/themes/#themes-prose\";}s:11:\"mobilestore\";a:10:{s:4:\"name\";s:11:\"MobileStore\";s:11:\"description\";s:45:\"A WPtouch Pro theme tailored for WooCommerce.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.2.3\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:80:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/mobilestore/screenshot.png\";s:4:\"base\";s:11:\"mobilestore\";s:10:\"theme_type\";s:11:\"WITHLICENSE\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";s:8:\"info_url\";s:49:\"http://www.wptouch.com/themes/#themes-mobilestore\";}s:7:\"bauhaus\";a:9:{s:4:\"name\";s:7:\"Bauhaus\";s:11:\"description\";s:73:\"Clean, modern, functional design. Great for all types of WordPress sites.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:3:\"1.5\";s:7:\"depends\";b:0;s:10:\"screenshot\";s:76:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/bauhaus/screenshot.png\";s:4:\"base\";s:7:\"bauhaus\";s:10:\"theme_type\";s:4:\"FREE\";s:11:\"upgrade_url\";s:187:\"http://s3.amazonaws.com/wptouch-pro-3/extras/releases/bauhaus/wptouch-pro-bauhaus-1.5.zip?AWSAccessKeyId=AKIAJEZC2IMXATAITWMA&Expires=1532252395&Signature=iV9JRQw1zbIhDUkHc%2Fookr4ybyo%3D\";}}','no'),(3973,'_site_transient_timeout__wptouch_available_cloud_addons','1532249396','no'),(3974,'_site_transient__wptouch_available_cloud_addons','a:6:{s:14:\"mobile-content\";a:9:{s:4:\"name\";s:14:\"Mobile Content\";s:11:\"description\";s:91:\"Allows mobile-specific content to be shown instead of your regular content on posts & pages\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.0.5\";s:7:\"depends\";s:5:\"3.7.5\";s:10:\"screenshot\";s:83:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/mobile-content/screenshot.png\";s:4:\"base\";s:14:\"mobile-content\";s:8:\"info_url\";s:49:\"http://www.wptouch.com/extensions/#mobile-content\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}s:13:\"advanced-type\";a:9:{s:4:\"name\";s:13:\"Advanced Type\";s:11:\"description\";s:112:\"Enables advanced web font support for the full range of Google Fonts and your own sets from Typekit and Fontdeck\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:3:\"1.2\";s:7:\"depends\";s:5:\"3.7.8\";s:10:\"screenshot\";s:82:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/advanced-type/screenshot.png\";s:4:\"base\";s:13:\"advanced-type\";s:8:\"info_url\";s:48:\"http://www.wptouch.com/extensions/#advanced-type\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}s:14:\"infinity-cache\";a:9:{s:4:\"name\";s:14:\"Infinity Cache\";s:11:\"description\";s:66:\"A lightweight caching module designed specifically for WPtouch Pro\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.2.2\";s:7:\"depends\";s:5:\"3.7.8\";s:10:\"screenshot\";s:83:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/infinity-cache/screenshot.png\";s:4:\"base\";s:14:\"infinity-cache\";s:8:\"info_url\";s:49:\"http://www.wptouch.com/extensions/#infinity-cache\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}s:17:\"responsive-images\";a:9:{s:4:\"name\";s:17:\"Responsive Images\";s:11:\"description\";s:116:\"Provides significant performance increases for mobile sites by serving appropriate image sizes on a per-device basis\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.2.1\";s:7:\"depends\";s:3:\"3.7\";s:10:\"screenshot\";s:86:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/responsive-images/screenshot.png\";s:4:\"base\";s:17:\"responsive-images\";s:8:\"info_url\";s:52:\"http://www.wptouch.com/extensions/#responsive-images\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}s:9:\"multi-ads\";a:9:{s:4:\"name\";s:9:\"Multi-Ads\";s:11:\"description\";s:99:\"Maximize revenue with multiple advertising units per page and built-in A/B advertising unit testing\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:3:\"1.1\";s:7:\"depends\";s:3:\"3.4\";s:10:\"screenshot\";s:78:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/multi-ads/screenshot.png\";s:4:\"base\";s:9:\"multi-ads\";s:8:\"info_url\";s:44:\"http://www.wptouch.com/extensions/#multi-ads\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}s:15:\"jquery-enhanced\";a:9:{s:4:\"name\";s:15:\"jQuery Enhanced\";s:11:\"description\";s:51:\"Adds improvement settings for jQuery use on mobile.\";s:6:\"author\";s:17:\"BraveNewCode Inc.\";s:7:\"version\";s:5:\"1.0.1\";s:7:\"depends\";s:5:\"3.7.8\";s:10:\"screenshot\";s:84:\"http://wptouch-pro-3.s3.amazonaws.com/extras/releases/jquery-enhanced/screenshot.png\";s:4:\"base\";s:15:\"jquery-enhanced\";s:8:\"info_url\";s:50:\"http://www.wptouch.com/extensions/#jquery-enhanced\";s:7:\"buy_url\";s:31:\"http://www.wptouch.com/pricing/\";}}','no'),(3982,'_site_transient_timeout_wptouch_license_upgrade_available','1532250153','no'),(3983,'_site_transient_wptouch_license_upgrade_available','1','no'),(3987,'new_admin_email','kyyokyup-5466@yahoo.co.jp','yes');
/*!40000 ALTER TABLE `wp_options` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_postmeta`
--

DROP TABLE IF EXISTS `wp_postmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_postmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `post_id` (`post_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=1617 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_postmeta`
--

LOCK TABLES `wp_postmeta` WRITE;
/*!40000 ALTER TABLE `wp_postmeta` DISABLE KEYS */;
INSERT INTO `wp_postmeta` VALUES (3,5,'_edit_last','1'),(4,5,'_edit_lock','1446348011:1'),(15,13,'_edit_last','1'),(16,13,'_edit_lock','1363591118:1'),(54,27,'_edit_last','1'),(55,27,'_edit_lock','1352211953:1'),(66,31,'_edit_last','1'),(67,31,'_edit_lock','1352211899:1'),(83,43,'_edit_last','1'),(84,43,'_edit_lock','1354621812:1'),(160,27,'_oembed_6931446da6d0bc3f1082faef8d9d3d8a','{{unknown}}'),(161,27,'_oembed_a1b9fdb7ee4658e898a323aedc66d5f7','{{unknown}}'),(162,27,'_oembed_ab7080a402e680fe9ee89589ecc774b2','{{unknown}}'),(163,27,'_oembed_626b2318b715b6cbaefc70139dc71d4d','{{unknown}}'),(241,97,'_edit_last','1'),(242,97,'_edit_lock','1354621499:1'),(276,27,'_oembed_80c91ab0e11609c8215c4e2622e756aa','{{unknown}}'),(277,27,'_oembed_6605bfcdc14dd2a3cb7d1a4d342be34e','{{unknown}}'),(278,27,'_oembed_521ae1dbb198ea73ff40a7c939fee28c','{{unknown}}'),(279,27,'_oembed_b15632879d276888f84abdb90004f31f','{{unknown}}'),(294,116,'_edit_last','1'),(295,116,'_edit_lock','1354602714:1'),(298,118,'_edit_last','1'),(299,118,'_edit_lock','1358583247:1'),(340,140,'_edit_last','1'),(341,140,'_edit_lock','1358583111:1'),(344,143,'_edit_last','1'),(345,143,'_edit_lock','1352960566:1'),(370,157,'_edit_last','1'),(371,157,'_edit_lock','1362906317:1'),(382,165,'_edit_last','1'),(383,165,'_edit_lock','1362264020:1'),(394,174,'_edit_last','1'),(395,174,'_edit_lock','1361992460:1'),(406,183,'_edit_last','1'),(407,183,'_edit_lock','1358582250:1'),(414,187,'_edit_last','1'),(415,187,'_edit_lock','1363453659:1'),(416,190,'_edit_last','1'),(417,190,'_edit_lock','1388594175:1'),(428,195,'_edit_last','1'),(429,195,'_edit_lock','1354113566:1'),(438,199,'_edit_last','1'),(439,199,'_edit_lock','1450351658:1'),(451,201,'_edit_last','1'),(452,201,'_edit_lock','1363449617:1'),(467,27,'_oembed_d34bfb66ecf813e88a2e9148b6e2d52d','{{unknown}}'),(468,27,'_oembed_d722e613d9a1026ad9aed5d347bdb38a','{{unknown}}'),(469,27,'_oembed_73c8f45bd4929026c8ba3ef81de632df','{{unknown}}'),(470,27,'_oembed_bfc78f52419e6f5d9c507eefd8008d1d','{{unknown}}'),(473,209,'_edit_last','1'),(474,209,'_edit_lock','1358591639:1'),(481,215,'_edit_last','1'),(482,215,'_edit_lock','1531804878:1'),(487,220,'_edit_last','1'),(488,220,'_edit_lock','1363521106:1'),(492,224,'_edit_last','1'),(493,224,'_edit_lock','1354377714:1'),(495,224,'_oembed_e243b60e16c989260dfe00af8b041048','{{unknown}}'),(496,226,'_edit_last','1'),(497,226,'_edit_lock','1354412154:1'),(500,229,'_edit_last','1'),(501,229,'_edit_lock','1354412290:1'),(504,232,'_edit_last','1'),(505,232,'_edit_lock','1354426756:1'),(508,235,'_edit_last','1'),(509,235,'_edit_lock','1354624441:1'),(518,238,'_edit_last','1'),(519,238,'_edit_lock','1354713131:1'),(531,199,'_syntaxhighlighter_encoded','1'),(541,201,'_syntaxhighlighter_encoded','1'),(544,183,'_syntaxhighlighter_encoded','1'),(552,165,'_syntaxhighlighter_encoded','1'),(556,232,'_syntaxhighlighter_encoded','1'),(564,187,'_syntaxhighlighter_encoded','1'),(576,209,'_syntaxhighlighter_encoded','1'),(579,157,'_syntaxhighlighter_encoded','1'),(583,290,'_edit_last','1'),(584,290,'_edit_lock','1358582704:1'),(585,290,'_syntaxhighlighter_encoded','1'),(590,13,'_syntaxhighlighter_encoded','1'),(597,5,'_syntaxhighlighter_encoded','1'),(605,118,'_syntaxhighlighter_encoded','1'),(607,306,'_edit_last','1'),(608,306,'_edit_lock','1446955123:1'),(609,306,'_syntaxhighlighter_encoded','1'),(625,116,'_syntaxhighlighter_encoded','1'),(653,335,'_edit_last','1'),(654,335,'_edit_lock','1363101750:1'),(663,224,'_oembed_e0d69af0c96408921dcb778a924a87d1','{{unknown}}'),(666,224,'_oembed_6f8e60eb88252992f3af74e4773f1407','{{unknown}}'),(675,97,'_syntaxhighlighter_encoded','1'),(677,43,'_syntaxhighlighter_encoded','1'),(688,235,'_syntaxhighlighter_encoded','1'),(710,190,'_syntaxhighlighter_encoded','1'),(731,372,'_edit_last','1'),(732,372,'_edit_lock','1383636925:1'),(733,372,'_syntaxhighlighter_encoded','1'),(735,374,'_edit_last','1'),(736,374,'_edit_lock','1354897598:1'),(739,378,'_edit_last','1'),(740,378,'_edit_lock','1354940622:1'),(744,383,'_edit_last','1'),(745,383,'_edit_lock','1362895537:1'),(750,378,'_syntaxhighlighter_encoded','1'),(755,393,'_edit_last','1'),(756,393,'_edit_lock','1355015199:1'),(758,395,'_edit_last','1'),(759,395,'_edit_lock','1383618816:1'),(760,395,'_syntaxhighlighter_encoded','1'),(766,402,'_edit_last','1'),(767,402,'_edit_lock','1363521108:1'),(771,402,'_syntaxhighlighter_encoded','1'),(777,413,'_edit_last','1'),(778,413,'_edit_lock','1355910080:1'),(779,413,'_syntaxhighlighter_encoded','1'),(785,419,'_edit_last','1'),(786,419,'_edit_lock','1356809162:1'),(797,429,'_edit_last','1'),(798,429,'_edit_lock','1359835326:1'),(801,434,'_edit_last','1'),(802,434,'_edit_lock','1355403958:1'),(803,434,'_syntaxhighlighter_encoded','1'),(805,434,'_oembed_220eadcf4ce871c74a7c1ac997f57ce7','{{unknown}}'),(813,434,'_oembed_7b5f0bb6b207bded9a706723d8e1dfd5','{{unknown}}'),(814,444,'_edit_last','1'),(815,444,'_edit_lock','1357089946:1'),(816,444,'_syntaxhighlighter_encoded','1'),(819,224,'_oembed_d546d2ac2ee72d4789a644415001972f','{{unknown}}'),(826,27,'_oembed_82552ba50379e445e0369cda7ded748c','{{unknown}}'),(827,27,'_oembed_968d4d40a5454f3c2a24b37d1bb70900','{{unknown}}'),(828,27,'_oembed_bf617e69ef2fe5b93fe6db0145aa7756','{{unknown}}'),(829,27,'_oembed_f989adf4465a032e2e4d00c73c64bacf','{{unknown}}'),(840,459,'_edit_last','1'),(841,459,'_edit_lock','1363597102:1'),(842,459,'_syntaxhighlighter_encoded','1'),(846,463,'_edit_last','1'),(847,463,'_edit_lock','1358591744:1'),(848,463,'_syntaxhighlighter_encoded','1'),(902,516,'_edit_last','1'),(903,516,'_edit_lock','1357097227:1'),(905,516,'_oembed_c50c1d0c4061489a123951be3b4c61eb','{{unknown}}'),(906,519,'_edit_last','1'),(907,519,'_edit_lock','1357107334:1'),(909,519,'_oembed_d9d1b8d576dd8fb265d068b31976cc74','{{unknown}}'),(910,521,'_edit_last','1'),(911,521,'_edit_lock','1358427390:1'),(912,521,'_syntaxhighlighter_encoded','1'),(925,535,'_edit_last','1'),(926,535,'_edit_lock','1380970299:1'),(933,542,'_edit_last','1'),(934,542,'_edit_lock','1357368991:1'),(939,548,'_edit_last','1'),(940,548,'_edit_lock','1361939547:1'),(959,568,'_edit_last','1'),(960,568,'_edit_lock','1357737784:1'),(988,568,'_oembed_2406e1df2242dab338d572443c13e6e1','{{unknown}}'),(989,568,'_oembed_bd1236675e86d9b9d22c7dc34d6304e2','{{unknown}}'),(990,568,'_oembed_73cdf930e7453e9f381fd21527497da0','{{unknown}}'),(991,568,'_oembed_6fcfcec4ab06879ce9c0b3c2937a667b','{{unknown}}'),(992,577,'_edit_last','1'),(993,577,'_edit_lock','1357751439:1'),(1011,596,'_edit_last','1'),(1012,596,'_edit_lock','1358668476:1'),(1020,605,'_edit_last','1'),(1021,605,'_edit_lock','1358694048:1'),(1026,612,'_edit_last','1'),(1027,612,'_edit_lock','1358708296:1'),(1029,612,'_oembed_ccb5fd8b25ab96c1741ee98cc97dd380','{{unknown}}'),(1030,612,'_oembed_5bb2fb68f0ec08459423070dec14254d','{{unknown}}'),(1035,618,'_edit_last','1'),(1036,618,'_edit_lock','1398956858:1'),(1038,618,'_oembed_767ac1f60753c6b1307e0e41d15e91c1','{{unknown}}'),(1039,618,'_oembed_536106446423bcf403c42ac0b215d9e2','{{unknown}}'),(1040,618,'_oembed_0aee43fc3439c9c6ade2379dcfadbd03','{{unknown}}'),(1041,622,'_edit_last','1'),(1042,622,'_edit_lock','1360406691:1'),(1050,630,'_wp_attached_file','2013/01/130127_0408.jpg'),(1051,630,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1100;s:6:\"height\";i:500;s:4:\"file\";s:23:\"2013/01/130127_0408.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:23:\"130127_0408-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:23:\"130127_0408-300x136.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:136;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:24:\"130127_0408-1024x465.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:465;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(1059,638,'_edit_last','1'),(1060,638,'_edit_lock','1359232811:1'),(1062,638,'_oembed_60f9d89e7737638c661c179b2c26d10c','{{unknown}}'),(1063,638,'_oembed_edaff6f017cd4332d1b42543f0e40a80','{{unknown}}'),(1064,640,'_edit_last','1'),(1065,640,'_edit_lock','1367210772:1'),(1067,646,'_edit_last','1'),(1068,646,'_edit_lock','1446138532:1'),(1073,653,'_edit_last','1'),(1074,653,'_edit_lock','1361259425:1'),(1075,656,'_edit_last','1'),(1076,656,'_edit_lock','1359812303:1'),(1079,663,'_edit_last','1'),(1080,663,'_edit_lock','1447768606:1'),(1081,667,'_edit_last','1'),(1082,667,'_edit_lock','1363604385:1'),(1083,670,'_edit_last','1'),(1084,670,'_edit_lock','1360613221:1'),(1087,674,'_edit_last','1'),(1088,674,'_edit_lock','1432885956:1'),(1093,679,'_edit_last','1'),(1094,679,'_edit_lock','1360690865:1'),(1096,679,'_oembed_c7b7cf3bdc7ac2e672ba1735192e9093','{{unknown}}'),(1103,687,'_edit_last','1'),(1104,687,'_edit_lock','1418554461:1'),(1107,689,'_edit_last','1'),(1108,689,'_edit_lock','1360911852:1'),(1109,700,'_edit_last','1'),(1110,700,'_edit_lock','1361418713:1'),(1118,729,'_edit_last','1'),(1119,729,'_edit_lock','1362848243:1'),(1120,729,'_oembed_b33a3819a1de6df339e8f0a292935800','{{unknown}}'),(1125,335,'_oembed_323404ac002a44aee1462371f74299cf','{{unknown}}'),(1126,335,'_oembed_d8f86d319acc3f76b52ff0d55a317840','{{unknown}}'),(1130,739,'_edit_last','1'),(1131,739,'_edit_lock','1373861775:1'),(1133,745,'_edit_last','1'),(1134,745,'_edit_lock','1447687562:1'),(1139,758,'_edit_last','1'),(1140,758,'_edit_lock','1363451143:1'),(1143,770,'_edit_last','1'),(1144,770,'_edit_lock','1363607341:1'),(1146,778,'_edit_last','1'),(1147,778,'_edit_lock','1363609555:1'),(1148,782,'_edit_last','1'),(1149,782,'_edit_lock','1451729162:1'),(1150,787,'_edit_last','1'),(1151,787,'_edit_lock','1364184490:1'),(1157,787,'_oembed_c6e3f3fc2242a5eeaf40b981aeb6996c','{{unknown}}'),(1158,787,'_oembed_e6f4fd50c9a05a4d229e111a9c2ecd42','{{unknown}}'),(1159,13,'_oembed_389379a6cc00173d787cf28ce8754794','{{unknown}}'),(1160,13,'_oembed_741f10e50d7e82c16578af7a38ae49ae','{{unknown}}'),(1161,13,'_oembed_f1f4c9afafe642ca12e38d7a02be33b4','{{unknown}}'),(1162,797,'_edit_last','1'),(1163,797,'_edit_lock','1388588535:1'),(1172,807,'_edit_last','1'),(1173,807,'_edit_lock','1378191356:1'),(1175,812,'_edit_last','1'),(1176,812,'_edit_lock','1367509650:1'),(1177,818,'_edit_last','1'),(1178,818,'_edit_lock','1371637779:1'),(1180,818,'_oembed_428d044b161df66452a2fe6b3e0eb7cd','{{unknown}}'),(1181,822,'_edit_last','1'),(1182,822,'_edit_lock','1373642218:1'),(1183,826,'_edit_last','1'),(1184,826,'_edit_lock','1373861945:1'),(1187,832,'_edit_last','1'),(1188,832,'_edit_lock','1385467112:1'),(1189,854,'_edit_last','1'),(1190,854,'_edit_lock','1390311486:1'),(1191,859,'_edit_last','1'),(1192,859,'_edit_lock','1379231390:1'),(1194,861,'_edit_last','1'),(1195,861,'_edit_lock','1379263714:1'),(1196,867,'_edit_last','1'),(1197,867,'_edit_lock','1379512321:1'),(1199,867,'_oembed_c2f6b3b5e9e0f2f4427e1f7750e6ab2a','{{unknown}}'),(1200,871,'_edit_last','1'),(1201,871,'_edit_lock','1380860807:1'),(1202,874,'_edit_last','1'),(1203,874,'_edit_lock','1399458916:1'),(1207,883,'_edit_last','1'),(1208,883,'_edit_lock','1388604975:1'),(1209,889,'_edit_last','1'),(1210,889,'_edit_lock','1382267553:1'),(1213,899,'_edit_last','1'),(1214,899,'_edit_lock','1383622506:1'),(1215,907,'_edit_last','1'),(1216,907,'_edit_lock','1386732082:1'),(1218,797,'_oembed_bc85aa3a22d7d486efdb9d3086159770','{{unknown}}'),(1219,914,'_edit_last','1'),(1220,914,'_edit_lock','1395408348:1'),(1227,867,'_oembed_bccae25be7bdbcd9f09cb75334ccba4f','{{unknown}}'),(1228,797,'_oembed_5e0439ef947207115d2368e1d062b848','{{unknown}}'),(1229,568,'_oembed_cab6411a9cb3584a979c408fdd0e8a1d','{{unknown}}'),(1230,568,'_oembed_befcdc6bd89cc5b7fee35adc89d3bce5','{{unknown}}'),(1231,568,'_oembed_a92902884acd36e4ca63733d1f6e7dc6','{{unknown}}'),(1232,568,'_oembed_b5adea2680ef1869cd28de85de0e8915','{{unknown}}'),(1233,930,'_edit_last','1'),(1234,930,'_edit_lock','1398957261:1'),(1246,938,'_edit_last','1'),(1247,938,'_edit_lock','1399276174:1'),(1249,941,'_edit_last','1'),(1250,941,'_edit_lock','1399459050:1'),(1252,943,'_edit_last','1'),(1253,943,'_edit_lock','1408291102:1'),(1255,945,'_wp_attached_file','2013/10/140507_libreoffice_1.jpg'),(1256,945,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:906;s:6:\"height\";i:571;s:4:\"file\";s:32:\"2013/10/140507_libreoffice_1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:32:\"140507_libreoffice_1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:32:\"140507_libreoffice_1-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(1257,946,'_wp_attached_file','2013/10/140507_libreoffice_11.jpg'),(1258,946,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:906;s:6:\"height\";i:571;s:4:\"file\";s:33:\"2013/10/140507_libreoffice_11.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:33:\"140507_libreoffice_11-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:33:\"140507_libreoffice_11-300x189.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:189;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(1259,947,'_wp_attached_file','2013/10/140507_libreoffice_2.jpg'),(1260,947,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:572;s:6:\"height\";i:515;s:4:\"file\";s:32:\"2013/10/140507_libreoffice_2.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:32:\"140507_libreoffice_2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:32:\"140507_libreoffice_2-300x270.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:270;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:10:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";}}'),(1262,951,'_edit_last','1'),(1263,951,'_edit_lock','1408290699:1'),(1266,951,'_oembed_80a9c5e5141bb41351cdd9ea021b41e8','{{unknown}}'),(1267,954,'_edit_last','1'),(1268,954,'_edit_lock','1418641000:1'),(1272,961,'_edit_last','1'),(1273,961,'_edit_lock','1430127028:1'),(1275,965,'_edit_last','1'),(1276,965,'_edit_lock','1418846743:1'),(1279,970,'_edit_last','1'),(1280,970,'_edit_lock','1420359973:1'),(1283,974,'_edit_last','1'),(1284,974,'_edit_lock','1427016183:1'),(1286,977,'_edit_last','1'),(1287,977,'_edit_lock','1430137187:1'),(1289,979,'_edit_last','1'),(1290,979,'_edit_lock','1439268235:1'),(1291,979,'_oembed_6abd242547382005a181bc2a5a2526d6','{{unknown}}'),(1293,985,'_edit_last','1'),(1294,985,'_edit_lock','1432818252:1'),(1297,990,'_edit_last','1'),(1298,990,'_edit_lock','1432906580:1'),(1299,991,'_wp_attached_file','2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png'),(1300,991,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:513;s:6:\"height\";i:399;s:4:\"file\";s:55:\"2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:55:\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:55:\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\";s:5:\"width\";i:300;s:6:\"height\";i:233;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(1301,994,'_wp_attached_file','2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png'),(1302,994,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:513;s:6:\"height\";i:399;s:4:\"file\";s:55:\"2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:55:\"SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00-150x150.png\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:9:\"image/png\";}s:6:\"medium\";a:4:{s:4:\"file\";s:55:\"SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00-300x233.png\";s:5:\"width\";i:300;s:6:\"height\";i:233;s:9:\"mime-type\";s:9:\"image/png\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(1303,999,'_edit_last','1'),(1304,999,'_edit_lock','1439263448:1'),(1305,1003,'_edit_last','1'),(1306,1003,'_edit_lock','1527070807:1'),(1307,1007,'_wp_attached_file','2015/08/150811_virtualbox_network_adapter_setting.jpg'),(1308,1007,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1366;s:6:\"height\";i:768;s:4:\"file\";s:53:\"2015/08/150811_virtualbox_network_adapter_setting.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:53:\"150811_virtualbox_network_adapter_setting-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:53:\"150811_virtualbox_network_adapter_setting-300x169.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:169;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:5:\"large\";a:4:{s:4:\"file\";s:54:\"150811_virtualbox_network_adapter_setting-1024x576.jpg\";s:5:\"width\";i:1024;s:6:\"height\";i:576;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(1312,1018,'_edit_last','1'),(1313,1018,'_edit_lock','1442336138:1'),(1317,1022,'_edit_last','1'),(1318,1022,'_edit_lock','1453643054:1'),(1320,1027,'_edit_last','1'),(1321,1027,'_edit_lock','1443880057:1'),(1323,1030,'_edit_last','1'),(1324,1030,'_edit_lock','1459860422:1'),(1325,1031,'_wp_attached_file','2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg'),(1326,1031,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:736;s:6:\"height\";i:472;s:4:\"file\";s:47:\"2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\";s:5:\"sizes\";a:2:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:47:\"2015-10-29_GNOME_Terminal_shortcut1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:192;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:11:{s:8:\"aperture\";i:0;s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";i:0;s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";i:0;s:3:\"iso\";i:0;s:13:\"shutter_speed\";i:0;s:5:\"title\";s:0:\"\";s:11:\"orientation\";i:0;}}'),(1329,1038,'_edit_last','1'),(1330,1038,'_edit_lock','1446901422:1'),(1356,1060,'_edit_last','1'),(1357,1060,'_edit_lock','1446901923:1'),(1359,1065,'_edit_last','1'),(1360,1065,'_edit_lock','1446981178:1'),(1362,1067,'_edit_last','1'),(1363,1067,'_edit_lock','1468564852:1'),(1367,1072,'_edit_last','1'),(1368,1072,'_edit_lock','1447168253:1'),(1371,1075,'_edit_last','1'),(1372,1075,'_edit_lock','1452592075:1'),(1374,1080,'_edit_last','1'),(1375,1080,'_edit_lock','1492872184:1'),(1378,1084,'_edit_last','1'),(1379,1084,'_edit_lock','1447777033:1'),(1381,1088,'_edit_last','1'),(1382,1088,'_edit_lock','1448980542:1'),(1385,1093,'_edit_last','1'),(1386,1093,'_edit_lock','1452592444:1'),(1388,1096,'_edit_last','1'),(1389,1096,'_edit_lock','1450259926:1'),(1391,1099,'_edit_last','1'),(1392,1099,'_wp_page_template','default'),(1393,1099,'_panels_data_preview','a:3:{s:7:\"widgets\";a:1:{i:0;a:5:{s:5:\"title\";s:0:\"\";s:11:\"panels_info\";a:4:{s:5:\"class\";s:20:\"WP_Widget_Categories\";s:4:\"grid\";i:0;s:4:\"cell\";i:0;s:2:\"id\";i:0;}s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}}s:5:\"grids\";a:1:{i:0;a:2:{s:5:\"cells\";i:1;s:5:\"style\";a:0:{}}}s:10:\"grid_cells\";a:1:{i:0;a:2:{s:4:\"grid\";i:0;s:6:\"weight\";i:1;}}}'),(1394,1099,'panels_data','a:3:{s:7:\"widgets\";a:1:{i:0;a:5:{s:5:\"title\";s:0:\"\";s:11:\"panels_info\";a:4:{s:5:\"class\";s:20:\"WP_Widget_Categories\";s:4:\"grid\";i:0;s:4:\"cell\";i:0;s:2:\"id\";i:0;}s:5:\"count\";i:0;s:12:\"hierarchical\";i:0;s:8:\"dropdown\";i:0;}}s:5:\"grids\";a:1:{i:0;a:2:{s:5:\"cells\";i:1;s:5:\"style\";a:0:{}}}s:10:\"grid_cells\";a:1:{i:0;a:2:{s:4:\"grid\";i:0;s:6:\"weight\";i:1;}}}'),(1395,1099,'_edit_lock','1449901585:1'),(1396,27,'_oembed_bb684a5302f484805ffff16fda7669f8','{{unknown}}'),(1397,27,'_oembed_5c8261f16a863b1e953bc414a63b6422','{{unknown}}'),(1398,27,'_oembed_b168894580b1548385fbc26d381d2232','{{unknown}}'),(1399,27,'_oembed_2948087f107269fea99ac69f8e294968','{{unknown}}'),(1400,787,'_oembed_4b6ca8f043631e5b6d0c5805a5f879e2','{{unknown}}'),(1401,787,'_oembed_4e062b008286f89292dacc04b2eda0a7','{{unknown}}'),(1402,729,'_oembed_7a6f9829d76ea5aa85deed4f6bbf9570','{{unknown}}'),(1403,224,'_oembed_87cd17c35fcbd3d160242b87c5b049df','{{unknown}}'),(1404,612,'_oembed_2befa3b2ff753f0309eeae3bd6b151a8','{{unknown}}'),(1405,612,'_oembed_a78876349604431fbbec4d2ed4a3d682','{{unknown}}'),(1406,867,'_oembed_711432a4f3b3bd3c88283f77de96741f','{{unknown}}'),(1407,516,'_oembed_252aa92a122b95f6d25f5241f520ec20','{{unknown}}'),(1408,335,'_oembed_8badc6233b8459fd9926dd8999b67633','{{unknown}}'),(1409,335,'_oembed_d016e90532c036dda5bd01a9b263718d','{{unknown}}'),(1410,797,'_oembed_bd30037836eb2e5675ef83de1a1c27f9','{{unknown}}'),(1411,568,'_oembed_2cec4bd3c40f2d8e80d4839cc9ea8e10','{{unknown}}'),(1412,568,'_oembed_d4ab43c58c07bacaeda1d366ddf1909f','{{unknown}}'),(1413,568,'_oembed_fdb38b2357c5e3b798f9111bb25ad0bc','{{unknown}}'),(1414,568,'_oembed_c3dd55790834a8713afa85949547d48b','{{unknown}}'),(1415,13,'_oembed_29a2790400be32eed52496dd610d9a58','{{unknown}}'),(1416,13,'_oembed_62b5b246d5a0d8d09c888236f93640f3','{{unknown}}'),(1417,13,'_oembed_8167f8ca4c02c193012a7ee650566396','{{unknown}}'),(1418,434,'_oembed_7f410baee6cb0d379654788e9be5fc03','<iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" src=\"http://den2sn.hatenablog.com/embed/20100326/1269589662#?secret=RwXgBisRzm\" data-secret=\"RwXgBisRzm\" title=\"subversionでバックアップしてみた - DENの思うこと\" scrolling=\"no\" frameborder=\"0\"></iframe>'),(1419,434,'_oembed_time_7f410baee6cb0d379654788e9be5fc03','1449902021'),(1420,951,'_oembed_f8bd6cd8284f6160acd78b8996fafaeb','{{unknown}}'),(1421,618,'_oembed_47fbda90b539e5c3456d78538a0dde1d','<iframe class=\"wp-embedded-content\" sandbox=\"allow-scripts\" security=\"restricted\" src=\"http://dharry.hatenablog.com/embed/20090912/1252690650#?secret=NYS0NfaM4O\" data-secret=\"NYS0NfaM4O\" title=\"VMware VIX を使って仮想マシンを色々操作してみる 1 - harry’s memorandum\" scrolling=\"no\" frameborder=\"0\"></iframe>'),(1422,618,'_oembed_time_47fbda90b539e5c3456d78538a0dde1d','1449902022'),(1423,618,'_oembed_6f8aa65bf56872062646273ede44b746','{{unknown}}'),(1424,618,'_oembed_2f2b0e03c6f43398625226136b8aa6a6','{{unknown}}'),(1425,638,'_oembed_b604b42f8a13aa9024ad03e6ffaa3a57','{{unknown}}'),(1426,638,'_oembed_817627d064bf3d3fa34e6b1f70597c77','{{unknown}}'),(1427,818,'_oembed_eac30131d7aeec3caa32a8de8d5076a4','{{unknown}}'),(1428,1101,'_edit_last','1'),(1429,1101,'_edit_lock','1453289717:1'),(1434,1106,'_edit_last','1'),(1435,1106,'_edit_lock','1450552526:1'),(1439,1113,'_edit_last','1'),(1440,1113,'_edit_lock','1453880484:1'),(1442,1117,'_edit_last','1'),(1443,1117,'_edit_lock','1461336199:1'),(1445,1122,'_edit_last','1'),(1446,1122,'_edit_lock','1453288721:1'),(1451,1134,'_edit_last','1'),(1452,1134,'_edit_lock','1453656188:1'),(1465,1156,'_edit_last','1'),(1466,1156,'_edit_lock','1454422906:1'),(1472,1165,'_edit_last','1'),(1473,1165,'_edit_lock','1454433782:1'),(1475,1168,'_edit_last','1'),(1476,1168,'_edit_lock','1482071743:1'),(1478,1174,'_edit_last','1'),(1479,1174,'_edit_lock','1457268188:1'),(1481,1187,'_wp_attached_file','2015/08/160510_install_centos7_on_vb_1.jpg'),(1482,1187,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1013;s:6:\"height\";i:744;s:4:\"file\";s:42:\"2015/08/160510_install_centos7_on_vb_1.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_1-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_1-300x220.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:220;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_1-768x564.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:564;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_1-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"foundation-featured-image\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_1-900x661.jpg\";s:5:\"width\";i:900;s:6:\"height\";i:661;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1483,1188,'_wp_attached_file','2015/08/160510_install_centos7_on_vb_2.jpg'),(1484,1188,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1013;s:6:\"height\";i:662;s:4:\"file\";s:42:\"2015/08/160510_install_centos7_on_vb_2.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_2-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_2-300x196.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:196;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_2-768x502.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:502;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_2-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"foundation-featured-image\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_2-900x588.jpg\";s:5:\"width\";i:900;s:6:\"height\";i:588;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1485,1189,'_wp_attached_file','2015/08/160510_install_centos7_on_vb_3.jpg'),(1486,1189,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:850;s:6:\"height\";i:753;s:4:\"file\";s:42:\"2015/08/160510_install_centos7_on_vb_3.jpg\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_3-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_3-300x266.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:266;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_3-768x680.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:680;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_3-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1487,1190,'_wp_attached_file','2015/08/160510_install_centos7_on_vb_4.jpg'),(1488,1190,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:1017;s:6:\"height\";i:149;s:4:\"file\";s:42:\"2015/08/160510_install_centos7_on_vb_4.jpg\";s:5:\"sizes\";a:5:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_4-150x149.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:149;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:41:\"160510_install_centos7_on_vb_4-300x44.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:44;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_4-768x113.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:113;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_4-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:25:\"foundation-featured-image\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_4-900x132.jpg\";s:5:\"width\";i:900;s:6:\"height\";i:132;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1489,1191,'_wp_attached_file','2015/08/160510_install_centos7_on_vb_5.jpg'),(1490,1191,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:783;s:6:\"height\";i:526;s:4:\"file\";s:42:\"2015/08/160510_install_centos7_on_vb_5.jpg\";s:5:\"sizes\";a:4:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_5-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_5-300x202.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:202;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:12:\"medium_large\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_5-768x516.jpg\";s:5:\"width\";i:768;s:6:\"height\";i:516;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:42:\"160510_install_centos7_on_vb_5-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1491,1197,'_edit_last','1'),(1492,1197,'_edit_lock','1471861031:1'),(1493,1201,'_edit_last','1'),(1494,1201,'_edit_lock','1486649532:1'),(1495,1206,'_edit_last','1'),(1496,1206,'_edit_lock','1487067524:1'),(1499,1216,'_edit_last','1'),(1500,1216,'_edit_lock','1487069553:1'),(1504,1216,'_oembed_70b0b40b1071b1e707d9b7d39544d490','{{unknown}}'),(1506,1223,'_edit_last','1'),(1507,1223,'_edit_lock','1487069168:1'),(1509,1227,'_edit_last','1'),(1510,1227,'_edit_lock','1494473035:1'),(1511,1231,'_edit_last','1'),(1512,1231,'_edit_lock','1494070018:1'),(1516,1239,'_edit_last','1'),(1517,1239,'_edit_lock','1489913193:1'),(1520,1244,'_wp_attached_file','2017/03/170306_centos7_mousepad_setting.jpg'),(1521,1244,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:742;s:6:\"height\";i:349;s:4:\"file\";s:43:\"2017/03/170306_centos7_mousepad_setting.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:43:\"170306_centos7_mousepad_setting-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:43:\"170306_centos7_mousepad_setting-300x141.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:141;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:43:\"170306_centos7_mousepad_setting-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1525,1250,'_edit_last','1'),(1526,1250,'_edit_lock','1490059155:1'),(1529,1263,'_wp_attached_file','2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg'),(1530,1263,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:723;s:6:\"height\";i:397;s:4:\"file\";s:49:\"2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:49:\"170319-01_FreeBSD-installer_Boot-menu-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:49:\"170319-01_FreeBSD-installer_Boot-menu-300x165.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:165;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:49:\"170319-01_FreeBSD-installer_Boot-menu-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1531,1264,'_wp_attached_file','2017/03/170319-02_FreeBSD-installer_Welcome.jpg'),(1532,1264,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:717;s:6:\"height\";i:396;s:4:\"file\";s:47:\"2017/03/170319-02_FreeBSD-installer_Welcome.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:47:\"170319-02_FreeBSD-installer_Welcome-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"170319-02_FreeBSD-installer_Welcome-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:47:\"170319-02_FreeBSD-installer_Welcome-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1533,1265,'_wp_attached_file','2017/03/170319-03_FreeBSD-installer_Keybord.jpg'),(1534,1265,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:722;s:6:\"height\";i:401;s:4:\"file\";s:47:\"2017/03/170319-03_FreeBSD-installer_Keybord.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:47:\"170319-03_FreeBSD-installer_Keybord-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:47:\"170319-03_FreeBSD-installer_Keybord-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:47:\"170319-03_FreeBSD-installer_Keybord-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1535,1266,'_wp_attached_file','2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg'),(1536,1266,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:399;s:4:\"file\";s:55:\"2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-04_FreeBSD-installer_Keybord-confirm-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:55:\"170319-04_FreeBSD-installer_Keybord-confirm-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-04_FreeBSD-installer_Keybord-confirm-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1537,1267,'_wp_attached_file','2017/03/170319-05_FreeBSD-installer_Hostname.jpg'),(1538,1267,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:48:\"2017/03/170319-05_FreeBSD-installer_Hostname.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"170319-05_FreeBSD-installer_Hostname-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"170319-05_FreeBSD-installer_Hostname-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:48:\"170319-05_FreeBSD-installer_Hostname-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1539,1268,'_wp_attached_file','2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg'),(1540,1268,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:401;s:4:\"file\";s:69:\"2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:69:\"170319-06_FreeBSD-installer_Optional-system-componentents-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:69:\"170319-06_FreeBSD-installer_Optional-system-componentents-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:69:\"170319-06_FreeBSD-installer_Optional-system-componentents-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1541,1269,'_wp_attached_file','2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg'),(1542,1269,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:400;s:4:\"file\";s:54:\"2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:54:\"170319-07_FreeBSD-installer_Disk-partition-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:54:\"170319-07_FreeBSD-installer_Disk-partition-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:54:\"170319-07_FreeBSD-installer_Disk-partition-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1543,1270,'_wp_attached_file','2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg'),(1544,1270,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:398;s:4:\"file\";s:61:\"2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:61:\"170319-08_FreeBSD-installer_Disk-partition-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:61:\"170319-08_FreeBSD-installer_Disk-partition-select-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:61:\"170319-08_FreeBSD-installer_Disk-partition-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1545,1271,'_wp_attached_file','2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg'),(1546,1271,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:69:\"2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:69:\"170319-09_FreeBSD-installer_Disk-partition-select-confirm-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:69:\"170319-09_FreeBSD-installer_Disk-partition-select-confirm-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:69:\"170319-09_FreeBSD-installer_Disk-partition-select-confirm-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1547,1272,'_wp_attached_file','2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg'),(1548,1272,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:71:\"2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:71:\"170319-10_FreeBSD-installer_Disk-partition_Partition-editor-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:71:\"170319-10_FreeBSD-installer_Disk-partition_Partition-editor-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:71:\"170319-10_FreeBSD-installer_Disk-partition_Partition-editor-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1549,1273,'_wp_attached_file','2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg'),(1550,1273,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:79:\"2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:79:\"170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:79:\"170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:79:\"170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1551,1274,'_wp_attached_file','2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg'),(1552,1274,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:400;s:4:\"file\";s:61:\"2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:61:\"170319-12_FreeBSD-installer_Checksum-valification-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:61:\"170319-12_FreeBSD-installer_Checksum-valification-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:61:\"170319-12_FreeBSD-installer_Checksum-valification-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1553,1275,'_wp_attached_file','2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg'),(1554,1275,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:399;s:4:\"file\";s:58:\"2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:58:\"170319-13_FreeBSD-installer_Archive-extraction-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:58:\"170319-13_FreeBSD-installer_Archive-extraction-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:58:\"170319-13_FreeBSD-installer_Archive-extraction-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1555,1276,'_wp_attached_file','2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg'),(1556,1276,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:399;s:4:\"file\";s:60:\"2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-14_FreeBSD-installer_Root-password-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:60:\"170319-14_FreeBSD-installer_Root-password-select-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-14_FreeBSD-installer_Root-password-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1557,1277,'_wp_attached_file','2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg'),(1558,1277,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:399;s:4:\"file\";s:55:\"2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-15_FreeBSD-installer_Ntwk_NIC-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:55:\"170319-15_FreeBSD-installer_Ntwk_NIC-select-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-15_FreeBSD-installer_Ntwk_NIC-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1559,1278,'_wp_attached_file','2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg'),(1560,1278,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:400;s:4:\"file\";s:63:\"2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-16_FreeBSD-installer_Ntwk_IPv4-config-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:63:\"170319-16_FreeBSD-installer_Ntwk_IPv4-config-select-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-16_FreeBSD-installer_Ntwk_IPv4-config-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1561,1279,'_wp_attached_file','2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg'),(1562,1279,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:399;s:4:\"file\";s:63:\"2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-17_FreeBSD-installer_Ntwk_DHCP-config-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:63:\"170319-17_FreeBSD-installer_Ntwk_DHCP-config-select-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-17_FreeBSD-installer_Ntwk_DHCP-config-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1563,1280,'_wp_attached_file','2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg'),(1564,1280,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:400;s:4:\"file\";s:68:\"2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:68:\"170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:68:\"170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:68:\"170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1565,1281,'_wp_attached_file','2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg'),(1566,1281,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:63:\"2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-19_FreeBSD-installer_Ntwk_IPv6-config-select-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:63:\"170319-19_FreeBSD-installer_Ntwk_IPv6-config-select-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-19_FreeBSD-installer_Ntwk_IPv6-config-select-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1567,1282,'_wp_attached_file','2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg'),(1568,1282,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:399;s:4:\"file\";s:65:\"2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:65:\"170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:65:\"170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:65:\"170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1569,1283,'_wp_attached_file','2017/03/170319-21_FreeBSD-installer_System-clock.jpg'),(1570,1283,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:720;s:6:\"height\";i:400;s:4:\"file\";s:52:\"2017/03/170319-21_FreeBSD-installer_System-clock.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:52:\"170319-21_FreeBSD-installer_System-clock-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:52:\"170319-21_FreeBSD-installer_System-clock-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:52:\"170319-21_FreeBSD-installer_System-clock-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1571,1284,'_wp_attached_file','2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg'),(1572,1284,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:400;s:4:\"file\";s:55:\"2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-22_FreeBSD-installer_System-clock_TZ-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:55:\"170319-22_FreeBSD-installer_System-clock_TZ-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:55:\"170319-22_FreeBSD-installer_System-clock_TZ-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1573,1285,'_wp_attached_file','2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg'),(1574,1285,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:400;s:4:\"file\";s:63:\"2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-23_FreeBSD-installer_System-clock_TZ_Country-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:63:\"170319-23_FreeBSD-installer_System-clock_TZ_Country-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:63:\"170319-23_FreeBSD-installer_System-clock_TZ_Country-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1575,1286,'_wp_attached_file','2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg'),(1576,1286,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:718;s:6:\"height\";i:400;s:4:\"file\";s:60:\"2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-24_FreeBSD-installer_System-clock_confirm-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:60:\"170319-24_FreeBSD-installer_System-clock_confirm-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-24_FreeBSD-installer_System-clock_confirm-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1577,1287,'_wp_attached_file','2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg'),(1578,1287,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:400;s:4:\"file\";s:60:\"2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-25_FreeBSD-installer_System_Boot-settings-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:60:\"170319-25_FreeBSD-installer_System_Boot-settings-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:60:\"170319-25_FreeBSD-installer_System_Boot-settings-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1579,1288,'_wp_attached_file','2017/03/170319-26_FreeBSD-installer_Add-user.jpg'),(1580,1288,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:400;s:4:\"file\";s:48:\"2017/03/170319-26_FreeBSD-installer_Add-user.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:48:\"170319-26_FreeBSD-installer_Add-user-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:48:\"170319-26_FreeBSD-installer_Add-user-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:48:\"170319-26_FreeBSD-installer_Add-user-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1581,1289,'_wp_attached_file','2017/03/170319-27_FreeBSD-installer_Final-config.jpg'),(1582,1289,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:401;s:4:\"file\";s:52:\"2017/03/170319-27_FreeBSD-installer_Final-config.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:52:\"170319-27_FreeBSD-installer_Final-config-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:52:\"170319-27_FreeBSD-installer_Final-config-300x167.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:167;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:52:\"170319-27_FreeBSD-installer_Final-config-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1583,1290,'_wp_attached_file','2017/03/170319-28_FreeBSD-installer_Manual-config.jpg'),(1584,1290,'_wp_attachment_metadata','a:5:{s:5:\"width\";i:719;s:6:\"height\";i:399;s:4:\"file\";s:53:\"2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\";s:5:\"sizes\";a:3:{s:9:\"thumbnail\";a:4:{s:4:\"file\";s:53:\"170319-28_FreeBSD-installer_Manual-config-150x150.jpg\";s:5:\"width\";i:150;s:6:\"height\";i:150;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:6:\"medium\";a:4:{s:4:\"file\";s:53:\"170319-28_FreeBSD-installer_Manual-config-300x166.jpg\";s:5:\"width\";i:300;s:6:\"height\";i:166;s:9:\"mime-type\";s:10:\"image/jpeg\";}s:21:\"wptouch-new-thumbnail\";a:4:{s:4:\"file\";s:53:\"170319-28_FreeBSD-installer_Manual-config-144x144.jpg\";s:5:\"width\";i:144;s:6:\"height\";i:144;s:9:\"mime-type\";s:10:\"image/jpeg\";}}s:10:\"image_meta\";a:12:{s:8:\"aperture\";s:1:\"0\";s:6:\"credit\";s:0:\"\";s:6:\"camera\";s:0:\"\";s:7:\"caption\";s:0:\"\";s:17:\"created_timestamp\";s:1:\"0\";s:9:\"copyright\";s:0:\"\";s:12:\"focal_length\";s:1:\"0\";s:3:\"iso\";s:1:\"0\";s:13:\"shutter_speed\";s:1:\"0\";s:5:\"title\";s:0:\"\";s:11:\"orientation\";s:1:\"0\";s:8:\"keywords\";a:0:{}}}'),(1585,1293,'_edit_last','1'),(1586,1293,'_edit_lock','1499094463:1'),(1588,1295,'_edit_last','1'),(1589,1295,'_edit_lock','1494949528:1'),(1591,1227,'_oembed_4fa2fa55086b66831bba54b43c1c1aea','<a href=\"https://mkacky.wordpress.com/2013/06/04/sedで特定の行に文字列を挿入する/\">sedで特定の行に文字列を挿入する</a>'),(1592,1227,'_oembed_time_4fa2fa55086b66831bba54b43c1c1aea','1494070311'),(1598,1309,'_edit_last','1'),(1599,1309,'_edit_lock','1505390817:1'),(1601,1312,'_edit_last','1'),(1602,1312,'_edit_lock','1505392551:1'),(1604,1317,'_edit_last','1'),(1605,1317,'_edit_lock','1505394750:1'),(1607,1320,'_edit_last','1'),(1608,1320,'_edit_lock','1516714996:1'),(1609,1331,'_edit_last','1'),(1610,1331,'_edit_lock','1516715206:1'),(1612,1331,'_oembed_9fe774f5819a24e1dbfeadf965711cd1','{{unknown}}'),(1613,1331,'_oembed_62e35d66c5d9d0a1af63c06489a32ebc','{{unknown}}'),(1614,1216,'_oembed_c87f2c5ca17eb305f95360331037745e','{{unknown}}'),(1616,1003,'_encloseme','1');
/*!40000 ALTER TABLE `wp_postmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_posts`
--

DROP TABLE IF EXISTS `wp_posts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_posts` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `post_author` bigint(20) unsigned NOT NULL DEFAULT '0',
  `post_date` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_date_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_title` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_excerpt` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'publish',
  `comment_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `ping_status` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'open',
  `post_password` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `post_name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `to_ping` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `pinged` text COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_modified` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_modified_gmt` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `post_content_filtered` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `post_parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `guid` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `menu_order` int(11) NOT NULL DEFAULT '0',
  `post_type` varchar(20) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'post',
  `post_mime_type` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `comment_count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ID`),
  KEY `type_status_date` (`post_type`,`post_status`,`post_date`,`ID`),
  KEY `post_parent` (`post_parent`),
  KEY `post_author` (`post_author`),
  KEY `post_name` (`post_name`(191))
) ENGINE=InnoDB AUTO_INCREMENT=1341 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_posts`
--

LOCK TABLES `wp_posts` WRITE;
/*!40000 ALTER TABLE `wp_posts` DISABLE KEYS */;
INSERT INTO `wp_posts` VALUES (5,1,'2012-10-04 17:51:41','2012-10-04 08:51:41','<h3>秘密鍵および公開鍵の作成</h3>\r\nローカルのCentOSから\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\n</pre>\r\nこれで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n<h3>さくらVPSに公開キーをアップ</h3>\r\nVPSコントロールパネルを呼び出しリモートコンソールを機動し\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\n<pre class=\"brush: bash\">\r\ntouch ~/.ssh/authorized_keys\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする。\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく。','さくらのVPSでSSHの初期設定を行う','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%a7ssh%e3%81%ae%e5%88%9d%e6%9c%9f%e8%a8%ad%e5%ae%9a%e3%82%92%e8%a1%8c%e3%81%86','','','2013-01-07 09:20:38','2013-01-07 00:20:38','',0,'http://49.212.213.226/wordpress/solution-log/?p=5',0,'post','',0),(6,1,'2012-10-13 22:00:13','2012-10-13 13:00:13','<strong>1.公開キーの作成</strong>\n\n-rootでローカルのCentOSにログインする\n\n-ターミナルから以下のコマンドを打ち込む\n<pre># ssh-keygen -t rsa</pre>\nこれで、ホームディレクトリ/.ssh の下に、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\n\n\n<strong>2.さくらVPSに公開キーをアップ</strong>\n\nVPSコントロールパネルを呼び出す\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\n\nリモートコンソールを起動\n\n~/.ssh/authorized_keysをパーミッション600で作成\n\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\n\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision','','','2012-10-13 22:00:13','2012-10-13 13:00:13','',5,'http://49.212.213.226/wordpress/solution-log/?p=6',0,'revision','',0),(7,1,'2013-01-07 09:20:07','2013-01-07 00:20:07','<h3>秘密鍵および公開鍵の作成</h3>\nローカルのCentOSから\n<pre class=\"brush: bash\">\nssh-keygen -t rsa\n</pre>\nこれで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。<h3>さくらVPSに公開キーをアップ</h3>\nVPSコントロールパネルを呼び出しリモートコンソールを機動し\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\n\n<pre class=\"brush: bash\">\ntouch ~/.ssh/authorized_keys\nchmod 600\n\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\n\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-autosave','','','2013-01-07 09:20:07','2013-01-07 00:20:07','',5,'http://49.212.213.226/wordpress/solution-log/?p=7',0,'revision','',0),(8,1,'2012-10-13 22:00:41','2012-10-13 13:00:41','<strong>1.公開キーの作成</strong>\r\n\r\n-rootでローカルのCentOSにログインする\r\n\r\n-ターミナルから以下のコマンドを打ち込む\r\n<pre># ssh-keygen -t rsa</pre>\r\nこれで、ホームディレクトリ/.ssh の下に、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n\r\n<strong>2.さくらVPSに公開キーをアップ</strong>\r\n\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-2','','','2012-10-13 22:00:41','2012-10-13 13:00:41','',5,'http://49.212.213.226/wordpress/solution-log/?p=8',0,'revision','',0),(9,1,'2012-10-13 22:02:54','2012-10-13 13:02:54','<strong>1.公開キーの作成</strong>\r\n\r\n-rootでローカルのCentOSにログインする\r\n\r\n-ターミナルから以下のコマンドを打ち込む\r\n<pre># ssh-keygen -t rsa</pre>\r\nこれで、ホームディレクトリ/.ssh の下に、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n\r\n<strong>2.さくらVPSに公開キーをアップ</strong>\r\n\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-3','','','2012-10-13 22:02:54','2012-10-13 13:02:54','',5,'http://49.212.213.226/wordpress/solution-log/?p=9',0,'revision','',0),(13,1,'2012-10-25 19:37:11','2012-10-25 10:37:11','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\nこのサイトを参考にRPM（Ruby Package Manager）を使用する方法でインストールする。\r\nhttp://morizyun.github.com/blog/rvm-install-centos-ruby-rails/\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまず<a href=\"http://pyyaml.org/wiki/LibYAML\">libyaml</a>をインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nRubyをインストール。最新版は<a href=\"ftp://ftp.ruby-lang.org/pub/ruby/\">ここ</a>から確認出来る。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nRuby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。\r\n\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install&lt;/pre&gt;\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n</pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','publish','open','open','','centos6-2%e3%81%abruby1-9%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-18 16:19:56','2013-03-18 07:19:56','',0,'http://49.212.213.226/wordpress/solution-log/?p=13',0,'post','',0),(14,1,'2012-10-25 19:30:44','2012-10-25 10:30:44','','自動下書き','','inherit','open','open','','13-revision','','','2012-10-25 19:30:44','2012-10-25 10:30:44','',13,'http://49.212.213.226/wordpress/solution-log/?p=14',0,'revision','',0),(15,1,'2012-10-25 19:36:57','2012-10-25 10:36:57','最初yumで試したが1.8系しか入らない\n<pre>yum install ruby</pre>\n<pre>yum remove ruby</pre>\n<strong>\n</strong>\n<h4>libyamlのインストール</h4>\n\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\n<pre>cd src\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\ntar zxvf yaml-0.1.4.tar.gz\ncd yaml-0.1.4\n./configure --prefix=/usr/local\nmake\nsudo make install</pre>\n<h4>rubyのインストール</h4>\nlibyamlがインストール出来たので、今度はRubyをインストール。\n\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\n<pre>cd src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\ntar zxvf ruby-1.9.3-p286.tar.gz\ncd ruby-1.9.3-p286\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nsudo make install</pre>\n<strong><h4>Rails 3.2.2のインストール</h4></strong>\n<pre>[sudo] gem install rails</pre>\nこれでrailsのインストールが完了しました。','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-2','','','2012-10-25 19:36:57','2012-10-25 10:36:57','',13,'http://49.212.213.226/wordpress/solution-log/?p=15',0,'revision','',0),(16,1,'2013-02-27 13:49:42','2013-02-27 04:49:42','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\n\n<h4>libyamlのインストール</h4>\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\n\nまず<a href=\"http://pyyaml.org/wiki/LibYAML\">libyaml</a>をインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\ntar zxvf yaml-0.1.4.tar.gz\ncd yaml-0.1.4\n./configure --prefix=/usr/local\nmake\nsudo make install\n</pre>\n\n<h4>rubyのインストール</h4>\nRubyをインストール。最新版は<a href=\"ftp://ftp.ruby-lang.org/pub/ruby/\">ここ</a>から確認出来る。\n<pre class=\"brush: bash\">cd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p３９２.tar.gz\ntar zxvf ruby-1.9.3-p286.tar.gz\ncd ruby-1.9.3-p286\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nsudo make install</pre>\n\n<h4>rubygemsのインストール</h4>\nRuby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。\n\n\n<h4>Railsのインストール</h4>\n<pre class=\"brush: bash\">gem install rails</pre>\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\n\n<h4>Passenger のインストール</h4>\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\n<pre class=\"brush: bash\">gem install passenger\npassenger-install-apache2-module</pre>\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\n<pre class=\"brush: bash\">cd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\ntar zxvf ruby-1.9.3-p286.tar.gz\ncd ruby-1.9.3-p286\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nsudo make install&lt;/pre&gt;\nvim /etc/httpd/conf.d/ruby-passenger.conf\n\n#######################ruby-passenger.conf は以下の通り作成\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\nPassengerRuby /usr/bin/ruby\n#######################\n</pre>\n\n<h4>FastCGI（fcgi）のインストール</h4>\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\nとりあえず一休み。。。\n\n<h4>RDTキットのインストール</h4>\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-autosave','','','2013-02-27 13:49:42','2013-02-27 04:49:42','',13,'http://49.212.213.226/wordpress/solution-log/?p=16',0,'revision','',0),(17,1,'2012-10-25 19:37:11','2012-10-25 10:37:11','最初yumで試したが1.8系しか入らない\r\n<pre>yum install ruby</pre>\r\n<pre>yum remove ruby</pre>\r\n<strong>\r\n</strong>\r\n<strong>\r\n</strong>\r\n<h4>libyamlのインストール</h4>\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre>cd src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre>cd src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n<strong>\r\n</strong>\r\n<h4>Rails 3.2.2のインストール</h4>\r\n<pre>[sudo] gem install rails</pre>\r\nこれでrailsのインストールが完了しました。','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-3','','','2012-10-25 19:37:11','2012-10-25 10:37:11','',13,'http://49.212.213.226/wordpress/solution-log/?p=17',0,'revision','',0),(18,1,'2012-10-25 19:59:10','2012-10-25 10:59:10','最初yumで試したが1.8系しか入らない\r\n<pre>yum install ruby\r\nyum remove ruby</pre>\r\n<h4>libyamlのインストール</h4>\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre>cd src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre>cd src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>Rails 3.2.2のインストール</h4>\r\n<pre>[sudo] gem install rails</pre>\r\n\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-4','','','2012-10-25 19:59:10','2012-10-25 10:59:10','',13,'http://49.212.213.226/wordpress/solution-log/?p=18',0,'revision','',0),(19,1,'2012-10-25 21:05:48','2012-10-25 12:05:48','最初yumで試したが1.8系しか入らない\r\n<pre>yum install ruby\r\nyum remove ruby</pre>\r\n<h4>libyamlのインストール</h4>\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre>cd src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre>cd src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n\r\n<pre>wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\ntar xvzf rubygem-1.8.24.tgz\r\ntar xvzf rubygems-1.8.24.tgz\r\ncd rubygems-1.8.24</pre>\r\n\r\n\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-5','','','2012-10-25 21:05:48','2012-10-25 12:05:48','',13,'http://49.212.213.226/wordpress/solution-log/?p=19',0,'revision','',0),(20,1,'2012-10-25 21:23:52','2012-10-25 12:23:52','最初yumで試したが1.8系しか入らない。即座にアンインストールする。\r\n<pre># yum install ruby\r\n# yum remove ruby</pre>\r\n\r\n\r\n<h4>libyamlのインストール</h4>\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre># cd src\r\n# wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\n# tar zxvf yaml-0.1.4.tar.gz\r\n# cd yaml-0.1.4\r\n# ./configure --prefix=/usr/local\r\n# make\r\n# sudo make install</pre>\r\n\r\n\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre#># cd src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n\r\n<pre># wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\n# tar xvzf rubygem-1.8.24.tgz\r\n# tar xvzf rubygems-1.8.24.tgz\r\n# cd rubygems-1.8.24</pre>\r\n\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n\r\n<pre># yum -y install gcc\r\n# yum -y install make\r\n# yum -y install gcc-c++\r\n# yum -y install zlib-devel\r\n# yum -y install httpd-devel\r\n# yum -y install openssl-devel\r\n# yum -y install curl-devel</pre>\r\n\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル（）\r\n<pre># cd src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n\r\n\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre>]# gem install rails</pre>\r\n\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-6','','','2012-10-25 21:23:52','2012-10-25 12:23:52','',13,'http://49.212.213.226/wordpress/solution-log/?p=20',0,'revision','',0),(21,1,'2012-10-25 21:25:41','2012-10-25 12:25:41','最初yumで試したが1.8系しか入らない。即座にアンインストールする。\r\n<pre># yum install ruby\r\n# yum remove ruby</pre>\r\n<h4>libyamlのインストール</h4>\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre># cd src\r\n# wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\n# tar zxvf yaml-0.1.4.tar.gz\r\n# cd yaml-0.1.4\r\n# ./configure --prefix=/usr/local\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre># cd src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre># wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\n# tar xvzf rubygem-1.8.24.tgz\r\n# tar xvzf rubygems-1.8.24.tgz\r\n# cd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre># yum -y install gcc\r\n# yum -y install make\r\n# yum -y install gcc-c++\r\n# yum -y install zlib-devel\r\n# yum -y install httpd-devel\r\n# yum -y install openssl-devel\r\n# yum -y install curl-devel</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル（）\r\n<pre># cd src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>Railsのインストール</h4>\r\n<pre># gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-7','','','2012-10-25 21:25:41','2012-10-25 12:25:41','',13,'http://49.212.213.226/wordpress/solution-log/?p=21',0,'revision','',0),(27,1,'2012-10-27 21:18:42','2012-10-27 12:18:42','httpd: Could not reliably determine the server’s fully qualified domain name, using 127.0.0.1 for ServerName\r\n\r\nエラーに対する処理\r\n\r\nhttp://blog.dacelo.info/apache/entry-713.html\r\n\r\n\r\n\r\nhttp://d.hatena.ne.jp/geek_it/20090824/1251131134\r\n\r\n\r\nmod_fasitcgiのインストール手順\r\n\r\nMakefileのディレクトリの設定とかいじる必要がある。\r\n\r\nhttp://blog.riywo.com/2011/01/08/170354\r\n\r\nhttp://d.hatena.ne.jp/hedachi/20090722/1248257509','CentOS6でApacheの設定','','publish','open','open','','centos6%e3%81%a7apache%e3%81%ae%e8%a8%ad%e5%ae%9a','','','2012-11-06 23:27:42','2012-11-06 14:27:42','',0,'http://49.212.213.226/wordpress/solution-log/?p=27',0,'post','',0),(28,1,'2012-10-27 21:15:54','2012-10-27 12:15:54','','CentOS6でApacheの設定','','inherit','open','open','','27-revision','','','2012-10-27 21:15:54','2012-10-27 12:15:54','',27,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/27-revision/',0,'revision','',0),(29,1,'2012-10-28 01:53:32','2012-10-27 16:53:32','http://blog.dacelo.info/apache/entry-713.html\n\nhttp://d.hatena.ne.jp/geek_it/20090824/1251131134\n\nmod_fasitcgiのインストール手順\n\nMakefileのディレクトリの設定とかいじる必要がある。\n\nhttp://blog.riywo.com/2011/01/08/170354','CentOS6でApacheの設定','','inherit','open','open','','27-autosave','','','2012-10-28 01:53:32','2012-10-27 16:53:32','',27,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/27-autosave/',0,'revision','',0),(30,1,'2012-10-27 21:18:43','2012-10-27 12:18:43','http://blog.dacelo.info/apache/entry-713.html\r\n\r\n\r\nhttp://d.hatena.ne.jp/geek_it/20090824/1251131134','CentOS6でApacheの設定','','inherit','open','open','','27-revision-2','','','2012-10-27 21:18:43','2012-10-27 12:18:43','',27,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/27-revision-2/',0,'revision','',0),(31,1,'2012-10-28 13:35:33','2012-10-28 04:35:33','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\nがしかし、これは<a href=\"http://www.directadmin.com/forum/showthread.php?t=26556&amp;page=1\">OS依存の記述</a>*(1)で、CentOSの場合は/ect/httpd/conf/httpd.confに書くとのこと。設定ファイルが複数あるのは今は少し混乱するので、とりあえず/usr/lib/httpd/conf/extra/httpd-info.confを削除し、httpd.confの以下を修正\r\n<pre>#\r\n# Optionally add a line containing the server version and virtual host\r\n# name to server-generated pages (internal error documents, FTP directory\r\n# listings, mod_status and mod_info output etc., but not CGI generated\r\n# documents or custom error documents).\r\n# Set to \"EMail\" to also include a mailto: link to the ServerAdmin.\r\n# Set to one of:  On | Off | EMail\r\n#\r\nServerSignature On ←コメントアウトを外す</pre>\r\n<pre>#\r\n# Allow server status reports generated by mod_status,\r\n# with the URL of http://servername/server-status\r\n# Change the \".example.com\" to match your domain to enable.\r\n#\r\n&lt;Location /server-status&gt;\r\n    SetHandler server-status ←コメントアウトを外す\r\n#    Order deny,allow\r\n#    Deny from all\r\n#    Allow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\nなんとか動くようになったはなったが、FastCGIとRubyの同期がまだ取れない。。。\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>\r\n\r\n注釈\r\n\r\n*1\r\n06-13-2008 08:48 AM / by smtalk\r\n<cite>httpd.conf_2.0 is only used for Apache 2.0 and it\'s renamed to httpd.conf if you have Apache 2.0</cite>','Apacheでmod_status.soを有効にする','','publish','open','open','','apache%e3%81%a7mod_status-so%e3%82%92%e6%9c%89%e5%8a%b9%e3%81%ab%e3%81%99%e3%82%8b','','','2012-11-06 23:26:48','2012-11-06 14:26:48','',0,'http://49.212.213.226/wordpress/solution-log/?p=31',0,'post','',0),(32,1,'2012-10-28 11:48:24','2012-10-28 02:48:24','インストールしたmod_fastcgiが動いているかどうか確認しようとして\n<pre>apachectl status</pre>\nと打ち込んだが\n<samp>The \'links\' package is required for this functionality.</samp>\nと何かが足りないとのメッセージ。\nとりあえずyumでelinksをインストール\n<pre>yum install links</pre>\nApacheを再起動して再び\n<pre>apachectl status</pre>\n今度は\n<samp>apachectl status Not Found\nThe requested URL /server-status was not found on this server.</samp>\nと','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision','','','2012-10-28 11:48:24','2012-10-28 02:48:24','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision/',0,'revision','',0),(33,1,'2012-10-28 13:34:38','2012-10-28 04:34:38','インストールしたmod_fastcgiが動いているかどうか確認しようとして\n<pre>apachectl status</pre>\nと打ち込んだが\n\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\nとりあえずyumでelinksをインストール\n<pre>yum install links</pre>\nApacheを再起動して再び\n<pre>apachectl status</pre>\n今度は\n\n<samp>apachectl status Not Found\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\n\nApacheポケットリファレンスによると\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\nとある。\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\n<pre><code>&lt;Location /server-status&gt; SetHandler server-status Order deny,allow Deny from all Allow from localhost &lt;/Location&gt;</code></pre>\n\n<hr />\n\n参照リンク\n-elinksのインストール\napachectl - Apache\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.html</a>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-2','','','2012-10-28 13:34:38','2012-10-28 04:34:38','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-2/',0,'revision','',0),(34,1,'2012-10-28 18:06:38','2012-10-28 09:06:38','インストールしたmod_fastcgiが動いているかどうか確認しようとして\n<pre>apachectl status</pre>\nと打ち込んだが\n\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\nとりあえずyumでelinksをインストール\n<pre>yum install links</pre>\nApacheを再起動して再び\n<pre>apachectl status</pre>\n今度は\n\n<samp>apachectl status Not Found\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\n\nApacheポケットリファレンスによると\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\nとある。\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\n<pre>&lt;Location /server-status&gt;\nSetHandler server-status\nOrder deny,allow\nDeny from all\nAllow from localhost\n&lt;/Location&gt;</pre>\nがしかし、これは<a href=\"http://www.directadmin.com/forum/showthread.php?t=26556&amp;page=1\">OS依存の記述</a>*(1)で、CentOSの場合は/ect/httpd/conf/httpd.confに書くとのこと。設定ファイルが複数あるのは今は少し混乱するので、とりあえず/usr/lib/httpd/conf/extra/httpd-info.confを削除し、httpd.confの以下を修正\n<pre>#\n# Optionally add a line containing the server version and virtual host\n# name to server-generated pages (internal error documents, FTP directory\n# listings, mod_status and mod_info output etc., but not CGI generated\n# documents or custom error documents).\n# Set to \"EMail\" to also include a mailto: link to the ServerAdmin.\n# Set to one of:  On | Off | EMail\n#\nServerSignature On ←コメントアウトを外す</pre>\n<pre>#\n# Allow server status reports generated by mod_status,\n# with the URL of http://servername/server-status\n# Change the \".example.com\" to match your domain to enable.\n#\n&lt;Location /server-status&gt;\n    SetHandler server-status ←コメントアウトを外す\n#    Order deny,allow\n#    Deny from all\n#    Allow from localhost\n&lt;/Location&gt;</pre>\nなんとか動くようになったはなったが、FastCGIとRubyの同期がまだ取れない。。。\n\n<hr />\n\n参照リンク\n-elinksのインストール\napachectl - Apache\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>\n\n注釈\n\n*1\n06-13-2008 08:48 AM / by smtalk\n<cite>httpd.conf_2.0 is only used for Apache 2.0 and it\'s renamed to httpd.conf if you have Apache 2.0</cite>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-autosave','','','2012-10-28 18:06:38','2012-10-28 09:06:38','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-autosave/',0,'revision','',0),(35,1,'2012-10-28 13:35:33','2012-10-28 04:35:33','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.html</a>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-3','','','2012-10-28 13:35:33','2012-10-28 04:35:33','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-3/',0,'revision','',0),(40,1,'2012-10-28 17:31:15','2012-10-28 08:31:15','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-4','','','2012-10-28 17:31:15','2012-10-28 08:31:15','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-4/',0,'revision','',0),(41,1,'2012-10-28 18:03:38','2012-10-28 09:03:38','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\nがしかし、これは<a href=\"http://www.directadmin.com/forum/showthread.php?t=26556&amp;page=1\">OS依存の記述</a>*(1)で、CentOSの場合は/ect/httpd/conf/httpd.confに書くとのこと。設定ファイルが複数あるのは今は少し混乱するので、とりあえず/usr/lib/httpd/conf/extra/httpd-info.confを削除し、httpd.confの以下を修正\r\n<pre>#\r\n# Optionally add a line containing the server version and virtual host\r\n# name to server-generated pages (internal error documents, FTP directory\r\n# listings, mod_status and mod_info output etc., but not CGI generated\r\n# documents or custom error documents).\r\n# Set to \"EMail\" to also include a mailto: link to the ServerAdmin.\r\n# Set to one of:  On | Off | EMail\r\n#\r\nServerSignature On ←コメントアウトを外す</pre>\r\n\r\n\r\n<pre>#\r\n# Allow server status reports generated by mod_status,\r\n# with the URL of http://servername/server-status\r\n# Change the \".example.com\" to match your domain to enable.\r\n#\r\n&lt;Location /server-status&gt;\r\n    SetHandler server-status\r\n#    Order deny,allow\r\n#    Deny from all\r\n#    Allow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>\r\n\r\n注釈\r\n\r\n*1\r\n\r\n06-13-2008 08:48 AM / by smtalk\r\n<cite>httpd.conf_2.0 is only used for Apache 2.0 and it\'s renamed to httpd.conf if you have Apache 2.0</cite>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-5','','','2012-10-28 18:03:38','2012-10-28 09:03:38','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-5/',0,'revision','',0),(42,1,'2012-10-28 18:04:29','2012-10-28 09:04:29','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\nがしかし、これは<a href=\"http://www.directadmin.com/forum/showthread.php?t=26556&amp;page=1\">OS依存の記述</a>*(1)で、CentOSの場合は/ect/httpd/conf/httpd.confに書くとのこと。設定ファイルが複数あるのは今は少し混乱するので、とりあえず/usr/lib/httpd/conf/extra/httpd-info.confを削除し、httpd.confの以下を修正\r\n<pre>#\r\n# Optionally add a line containing the server version and virtual host\r\n# name to server-generated pages (internal error documents, FTP directory\r\n# listings, mod_status and mod_info output etc., but not CGI generated\r\n# documents or custom error documents).\r\n# Set to \"EMail\" to also include a mailto: link to the ServerAdmin.\r\n# Set to one of:  On | Off | EMail\r\n#\r\nServerSignature On ←コメントアウトを外す</pre>\r\n<pre>#\r\n# Allow server status reports generated by mod_status,\r\n# with the URL of http://servername/server-status\r\n# Change the \".example.com\" to match your domain to enable.\r\n#\r\n&lt;Location /server-status&gt;\r\n    SetHandler server-status ←コメントアウトを外す\r\n#    Order deny,allow\r\n#    Deny from all\r\n#    Allow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>\r\n\r\n注釈\r\n\r\n*1\r\n\r\n06-13-2008 08:48 AM / by smtalk\r\n<cite>httpd.conf_2.0 is only used for Apache 2.0 and it\'s renamed to httpd.conf if you have Apache 2.0</cite>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-6','','','2012-10-28 18:04:29','2012-10-28 09:04:29','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-6/',0,'revision','',0),(43,1,'2012-10-28 19:54:31','2012-10-28 10:54:31','どうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\r\n<h3>FastCGIをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src/\r\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\r\ntar xzfz mod_fastcgi-2.4.6.tar.gz\r\ncd mod_fastcgi-2.4.6\r\ncp Makefile.AP2 Makefile\r\nmake top_dir=/usr/lib/httpd\r\nmake top_dir=/usr/lib/httpd install\r\n</pre>\r\n<b>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する</b>。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\r\n</ul>','CentOSにFastCGIをインストールする','','publish','open','open','','centos%e3%81%abfastcgi%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2012-12-04 20:51:39','2012-12-04 11:51:39','',0,'http://49.212.213.226/wordpress/solution-log/?p=43',0,'post','',0),(44,1,'2012-10-28 19:53:47','2012-10-28 10:53:47','<h3>RubyをCentOSで動かすためにFastCGIをインストールした時のメモ</h3>\nどうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\n\n以下のコマンドでインストール出来た\n<pre>cd /usr/local/src/\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\ntar xzfz mod_fastcgi-2.4.6.tar.gz\ncd mod_fastcgi-2.4.6\ncp Makefile.AP2 Makefile\nmake top_dir=/usr/lib/httpd\nmake top_dir=/usr/lib/httpd install</pre>\n注意点\n<ul>\n	<li>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する</li>\n	<li><samp>fcgio.cpp:50: error: \'EOF\' was not declared in this scope</samp>みたいなエラーメッセージが出た時は次の<a title=\"CentOSでrailsアプリケーションをlighttpd - fastcgi経由で動かすためのfcgi導入ではまった記録\" href=\"http://sugilog.hatenablog.com/entry/20110930/1317374829\" target=\"_blank\">サイト</a>を参考に、Cファイルにインクルード情報を書き加える\n\n<cite>libfcgi/fcgio.cpp）に対して、includeの羅列の次に、以下の行を追加。</cite>\n<pre>#include &lt;cstdio&gt;</pre>\n\n<hr />\n\n参考サイト\n<ul>\n	<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\n</ul>\n</li>\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-revision','','','2012-10-28 19:53:47','2012-10-28 10:53:47','',43,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/43-revision/',0,'revision','',0),(45,1,'2012-12-04 20:50:11','2012-12-04 11:50:11','どうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\n<h3>FastCGIをインストールする</h3>\n<pre class=\"brush: bash\">\ncd /usr/local/src/\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\ntar xzfz mod_fastcgi-2.4.6.tar.gz\ncd mod_fastcgi-2.4.6\ncp Makefile.AP2 Makefile\nmake top_dir=/usr/lib/httpd\nmake top_dir=/usr/lib/httpd install\n</pre>\n<b>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する</b>。\n\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-autosave','','','2012-12-04 20:50:11','2012-12-04 11:50:11','',43,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/43-autosave/',0,'revision','',0),(46,1,'2012-10-28 19:54:31','2012-10-28 10:54:31','<h2>RubyをCentOSで動かすためにFastCGIをインストールした時のメモ</h2>\r\nどうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\r\n\r\n以下のコマンドでインストール出来た\r\n<pre>cd /usr/local/src/\r\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\r\ntar xzfz mod_fastcgi-2.4.6.tar.gz\r\ncd mod_fastcgi-2.4.6\r\ncp Makefile.AP2 Makefile\r\nmake top_dir=/usr/lib/httpd\r\nmake top_dir=/usr/lib/httpd install</pre>\r\n注意点\r\n<ul>\r\n	<li>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する</li>\r\n	<li><samp>fcgio.cpp:50: error: \'EOF\' was not declared in this scope</samp>みたいなエラーメッセージが出た時は次の<a title=\"CentOSでrailsアプリケーションをlighttpd - fastcgi経由で動かすためのfcgi導入ではまった記録\" href=\"http://sugilog.hatenablog.com/entry/20110930/1317374829\" target=\"_blank\">サイト</a>を参考に、Cファイルにインクルード情報を書き加える\r\n\r\n<cite>libfcgi/fcgio.cpp）に対して、includeの羅列の次に、以下の行を追加。</cite>\r\n<pre>#include &lt;cstdio&gt;</pre>\r\n\r\n<hr />\r\n\r\n参考サイト\r\n<ul>\r\n	<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\r\n</ul>\r\n</li>\r\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-revision-2','','','2012-10-28 19:54:31','2012-10-28 10:54:31','',43,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/43-revision-2/',0,'revision','',0),(71,1,'2012-10-29 00:52:23','2012-10-28 15:52:23','<h3>RubyをCentOSで動かすためにFastCGIをインストールした時のメモ</h3>\r\nどうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\r\n\r\n以下のコマンドでインストール出来た\r\n<pre>cd /usr/local/src/\r\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\r\ntar xzfz mod_fastcgi-2.4.6.tar.gz\r\ncd mod_fastcgi-2.4.6\r\ncp Makefile.AP2 Makefile\r\nmake top_dir=/usr/lib/httpd\r\nmake top_dir=/usr/lib/httpd install</pre>\r\n\r\n注意点\r\n<ul>\r\n<li>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する\r\n<li>\r\n\r\n\r\n<hr />\r\n\r\n参考サイト\r\n<ul>\r\n	<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\r\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-revision-3','','','2012-10-29 00:52:23','2012-10-28 15:52:23','',43,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/43-revision-3/',0,'revision','',0),(73,1,'2012-10-28 18:05:31','2012-10-28 09:05:31','インストールしたmod_fastcgiが動いているかどうか確認しようとして\r\n<pre>apachectl status</pre>\r\nと打ち込んだが\r\n\r\n<samp>The \'links\' package is required for this functionality.</samp>と何かが足りないとのメッセージ。\r\nとりあえずyumでelinksをインストール\r\n<pre>yum install links</pre>\r\nApacheを再起動して再び\r\n<pre>apachectl status</pre>\r\n今度は\r\n\r\n<samp>apachectl status Not Found\r\nThe requested URL /server-status was not found on this server.</samp>と出た。。。\r\n\r\nApacheポケットリファレンスによると\r\n<cite>httpd.confファイルを変更します。次のように「#」を削除して、設定ファイルのhttpd-info.confが読み込まれるようにします。server-statusハンドラ用の定義がhttpd-info.confに用意されているからです。</cite>\r\nとある。\r\nが、見当たらないので、<a title=\"動作状況の確認 - Apacheサーバの管理 - Apache入門\" href=\"http://www.adminweb.jp/apache/status/index1.html\" target=\"_blank\">動作状況の確認 - Apacheサーバの管理 - Apache入門</a>を参考に、/usr/lib/httpd/conf/extra/httpd-info.confを作成し、以下を書き込む\r\n<pre>&lt;Location /server-status&gt;\r\nSetHandler server-status\r\nOrder deny,allow\r\nDeny from all\r\nAllow from localhost\r\n&lt;/Location&gt;</pre>\r\nがしかし、これは<a href=\"http://www.directadmin.com/forum/showthread.php?t=26556&amp;page=1\">OS依存の記述</a>*(1)で、CentOSの場合は/ect/httpd/conf/httpd.confに書くとのこと。設定ファイルが複数あるのは今は少し混乱するので、とりあえず/usr/lib/httpd/conf/extra/httpd-info.confを削除し、httpd.confの以下を修正\r\n<pre>#\r\n# Optionally add a line containing the server version and virtual host\r\n# name to server-generated pages (internal error documents, FTP directory\r\n# listings, mod_status and mod_info output etc., but not CGI generated\r\n# documents or custom error documents).\r\n# Set to \"EMail\" to also include a mailto: link to the ServerAdmin.\r\n# Set to one of:  On | Off | EMail\r\n#\r\nServerSignature On ←コメントアウトを外す</pre>\r\n<pre>#\r\n# Allow server status reports generated by mod_status,\r\n# with the URL of http://servername/server-status\r\n# Change the \".example.com\" to match your domain to enable.\r\n#\r\n&lt;Location /server-status&gt;\r\n    SetHandler server-status ←コメントアウトを外す\r\n#    Order deny,allow\r\n#    Deny from all\r\n#    Allow from localhost\r\n&lt;/Location&gt;</pre>\r\n\r\nなんとか動くようになったはなったが、FastCGIとRubyの同期がまだ取れない。。。\r\n\r\n<hr />\r\n\r\n参照リンク\r\n-elinksのインストール\r\napachectl - Apache\r\n<a title=\"apachectl - Apache\" href=\"http://objectmix.com/apache/677078-apachectl.html\" target=\"_blank\">http://objectmix.com/apache/677078-apachectl.htmlr</a>\r\n\r\n注釈\r\n\r\n*1\r\n06-13-2008 08:48 AM / by smtalk\r\n<cite>httpd.conf_2.0 is only used for Apache 2.0 and it\'s renamed to httpd.conf if you have Apache 2.0</cite>','Apacheでmod_status.soを有効にする','','inherit','open','open','','31-revision-7','','','2012-10-28 18:05:31','2012-10-28 09:05:31','',31,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/31-revision-7/',0,'revision','',0),(74,1,'2012-10-28 01:54:24','2012-10-27 16:54:24','httpd: Could not reliably determine the server’s fully qualified domain name, using 127.0.0.1 for ServerName\r\n\r\nエラーに対する処理\r\n\r\nhttp://blog.dacelo.info/apache/entry-713.html\r\n\r\n\r\n\r\nhttp://d.hatena.ne.jp/geek_it/20090824/1251131134\r\n\r\n\r\nmod_fasitcgiのインストール手順\r\n\r\nMakefileのディレクトリの設定とかいじる必要がある。\r\n\r\nhttp://blog.riywo.com/2011/01/08/170354\r\n\r\nhttp://d.hatena.ne.jp/hedachi/20090722/1248257509','CentOS6でApacheの設定','','inherit','open','open','','27-revision-3','','','2012-10-28 01:54:24','2012-10-27 16:54:24','',27,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/27-revision-3/',0,'revision','',0),(75,1,'2012-10-13 22:04:49','2012-10-13 13:04:49','<strong>1.公開キーの作成</strong>\r\n\r\n-rootでローカルのCentOSにログインする\r\n\r\n-ターミナルから以下のコマンドを打ち込む\r\n<pre># ssh-keygen -t rsa</pre>\r\nこれで、ホームディレクトリ/.ssh の下に、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n\r\n<strong>2.さくらVPSに公開キーをアップ</strong>\r\n\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-4','','','2012-10-13 22:04:49','2012-10-13 13:04:49','',5,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/5-revision-4/',0,'revision','',0),(81,1,'2012-10-25 22:39:27','2012-10-25 13:39:27','最初yumで試したが1.8系しか入らない。即座にアンインストールする。\r\n<pre># yum install ruby\r\n# yum remove ruby</pre>\r\n<h4>libyamlのインストール</h4>\r\n\r\n<hr />\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre># cd /usr/local/src\r\n# wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\n# tar zxvf yaml-0.1.4.tar.gz\r\n# cd yaml-0.1.4\r\n# ./configure --prefix=/usr/local\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\n\r\n<hr />\r\n\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubygemsのインストール</h4>\r\n\r\n<hr />\r\n\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre># wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\n# tar xvzf rubygem-1.8.24.tgz\r\n# tar xvzf rubygems-1.8.24.tgz\r\n# cd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre># yum -y install gcc\r\n# yum -y install make\r\n# yum -y install gcc-c++\r\n# yum -y install zlib-devel\r\n# yum -y install httpd-devel\r\n# yum -y install openssl-devel\r\n# yum -y install curl-devel</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル。ただしpassenger-install-apache2-moduleコマンドでapache2-moduleをインストールするとき、上記のモノが入ってない場合は、自分で入れろと警告が出る。\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>Railsのインストール</h4>\r\n\r\n<hr />\r\n\r\n<pre># gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n<h4>Passenger のインストール</h4>\r\n\r\n<hr />\r\n\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre># gem install passenger\r\n# passenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n# vim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\nruby-passenger.conf は以下の通り作成。\r\n<pre>LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby</pre>\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\n\r\n<hr />\r\n\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n<h4>RDTキットのインストール</h4>\r\n\r\n<hr />\r\n\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-8','','','2012-10-25 22:39:27','2012-10-25 13:39:27','',13,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/13-revision-8/',0,'revision','',0),(97,1,'2012-11-09 21:14:31','2012-11-09 12:14:31','そろそろ<a href=\"http://www.gimp.org/\">GIMP</a>を覚えようと思いインストール。ちなみにGIMPとは「The GNU Image Manipulation Program」の略。\r\n<h3>GIMPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install gimp\r\n</pre>\r\ngimp -vでバージョンが確認出来る。\r\n<pre class=\"brush: bash\">\r\n[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9&lt;/samp&gt;&lt;/samp&gt;GEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)\r\n</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやら<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">システムをいろいろと弄る</a>ハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n\r\nしかしPhotoshopと使い勝手が違うので若干操作しにくい。。。','CentOS6にGIMPをインストールする','','publish','open','open','','centos6%e3%81%abgimp%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2012-12-04 20:46:49','2012-12-04 11:46:49','',0,'http://49.212.213.226/wordpress/solution-log/?p=97',0,'post','',0),(98,1,'2012-11-09 21:13:50','2012-11-09 12:13:50','そろそろGIMPを覚えようと思いインストール。\n\n<code>yum install gimp</code>\n\ngimp -vでばーじょ\n\n<pre>\n[root@localhost ~]# gimp -v\nGNU Image Manipulation Program ver.2.6.9\n\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)\n</pre>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision','','','2012-11-09 21:13:50','2012-11-09 12:13:50','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision/',0,'revision','',0),(99,1,'2012-12-04 20:45:59','2012-12-04 11:45:59','そろそろGIMPを覚えようと思いインストール。\n<h3>GIMPをインストールする</h3>\n<pre class=\"brush: bash\">\nyum install gimp\n</pre>\ngimp -vでバージョンが確認出来る。\n<pre class=\"brush: bash\">\n[root@localhost ~]# gimp -v\nGNU Image Manipulation Program ver.2.6.9&lt;/samp&gt;&lt;/samp&gt;GEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)\n</pre>\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやら<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">システムをいろいろと弄る</a>ハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\n\nしかしPhotoshopと使い勝手が違うので若干操作しにくい。。。','CentOS6にGIMPをインストールする','','inherit','open','open','','97-autosave','','','2012-12-04 20:45:59','2012-12-04 11:45:59','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-autosave/',0,'revision','',0),(100,1,'2012-11-09 21:14:32','2012-11-09 12:14:32','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<code>yum install gimp</code>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-2','','','2012-11-09 21:14:32','2012-11-09 12:14:32','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-2/',0,'revision','',0),(101,1,'2012-11-09 21:24:34','2012-11-09 12:24:34','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<code>yum install gimp</code>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n\r\n\r\nソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users  -- Re:  CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-3','','','2012-11-09 21:24:34','2012-11-09 12:24:34','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-3/',0,'revision','',0),(116,1,'2012-11-12 03:17:03','2012-11-11 18:17:03','<pre class=\"brush: bash\">\r\ncd /path/to/target/dir\r\nfind . | xargs grep &quot;seach&quot;\r\n</pre>','Linuxでの文字列の検索','','publish','open','open','','linux%e3%81%a7%e3%81%ae%e6%96%87%e5%ad%97%e5%88%97%e3%81%ae%e6%a4%9c%e7%b4%a2','','','2012-12-04 15:33:45','2012-12-04 06:33:45','',0,'http://49.212.213.226/wordpress/solution-log/?p=116',0,'post','',0),(117,1,'2012-11-12 03:16:31','2012-11-11 18:16:31','cd /path/to/target/dir\nfind . | xargs grep \"seach\"','Linuxでの文字列の検索','','inherit','open','open','','116-revision','','','2012-11-12 03:16:31','2012-11-11 18:16:31','',116,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/116-revision/',0,'revision','',0),(118,1,'2012-11-12 20:31:50','2012-11-12 11:31:50','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<pre class=\"brush: perl\">\r\n#!C:\\xampp\\perl\\bin\\perl.exe\r\nprint &quot;Content-type: text/html\\n\\n&quot;;\r\nprint &quot;Hello World.&quot;;\r\n</pre>','Windows7 + XAMPPでPerlを使う','','publish','open','open','','windows7-xampp%e3%81%a7perl%e3%82%92%e4%bd%bf%e3%81%86','','','2013-01-19 17:15:58','2013-01-19 08:15:58','',0,'http://49.212.213.226/wordpress/solution-log/?p=118',0,'post','',0),(119,1,'2012-11-12 20:31:47','2012-11-12 11:31:47','<h3>環境変数を通す</h3>\n<ul>\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\n</ul>\n<h3>Perlスクリプトを作成する</h3>\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\n<code>\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\n\nprint \"Content-type: text/html\\n\\n\";\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision','','','2012-11-12 20:31:47','2012-11-12 11:31:47','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision/',0,'revision','',0),(120,1,'2012-11-12 20:31:50','2012-11-12 11:31:50','<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-2','','','2012-11-12 20:31:50','2012-11-12 11:31:50','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-2/',0,'revision','',0),(121,1,'2012-11-12 20:32:58','2012-11-12 11:32:58','<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n\r\n\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-3','','','2012-11-12 20:32:58','2012-11-12 11:32:58','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-3/',0,'revision','',0),(122,1,'2012-11-12 21:00:32','2012-11-12 12:00:32','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\n<ol>\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\n	<li>EPICと入力しフィルタをかける</li>\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\n</ol>\n<h3>環境変数を通す</h3>\n<ol>\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\n</ol>\n<h3>Perlスクリプトを作成する</h3>\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\n<code>\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\n\nprint \"Content-type: text/html\\n\\n\";\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-autosave','','','2012-11-12 21:00:32','2012-11-12 12:00:32','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-autosave/',0,'revision','',0),(123,1,'2012-11-12 20:33:29','2012-11-12 11:33:29','<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3></h3>\r\n<h3></h3>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-4','','','2012-11-12 20:33:29','2012-11-12 11:33:29','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-4/',0,'revision','',0),(124,1,'2012-11-12 20:42:15','2012-11-12 11:42:15','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<lo>\r\n<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」\r\n<li>EPICと入力しフィルタをかける\r\n<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択\r\n<li>チェックボックスにチェックを入れ次へをクリック\r\n</lo>\r\n\r\n<h3>環境変数を通す</h3>\r\n<lo>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</lo>\r\n<br />\r\n<br />\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-5','','','2012-11-12 20:42:15','2012-11-12 11:42:15','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-5/',0,'revision','',0),(125,1,'2012-11-12 20:44:24','2012-11-12 11:44:24','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ul>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ul>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n	</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";</li>','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-6','','','2012-11-12 20:44:24','2012-11-12 11:44:24','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-6/',0,'revision','',0),(126,1,'2012-11-12 20:45:27','2012-11-12 11:45:27','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ul>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ul>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-7','','','2012-11-12 20:45:27','2012-11-12 11:45:27','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-7/',0,'revision','',0),(127,1,'2012-11-12 20:47:31','2012-11-12 11:47:31','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ul>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ul>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-8','','','2012-11-12 20:47:31','2012-11-12 11:47:31','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-8/',0,'revision','',0),(128,1,'2012-11-12 20:48:17','2012-11-12 11:48:17','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-9','','','2012-11-12 20:48:17','2012-11-12 11:48:17','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-9/',0,'revision','',0),(129,1,'2012-11-12 20:49:28','2012-11-12 11:49:28','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<lo>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</lo>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-10','','','2012-11-12 20:49:28','2012-11-12 11:49:28','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-10/',0,'revision','',0),(130,1,'2012-11-12 20:50:36','2012-11-12 11:50:36','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-11','','','2012-11-12 20:50:36','2012-11-12 11:50:36','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-11/',0,'revision','',0),(131,1,'2012-11-12 20:52:06','2012-11-12 11:52:06','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-12','','','2012-11-12 20:52:06','2012-11-12 11:52:06','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-12/',0,'revision','',0),(132,1,'2012-11-12 20:52:39','2012-11-12 11:52:39','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3></h3>\r\n<h3></h3>\r\n<h3>環境変数を通す</h3>\r\n<ul>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ul>\r\n<h3></h3>\r\n<h3></h3>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-13','','','2012-11-12 20:52:39','2012-11-12 11:52:39','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-13/',0,'revision','',0),(133,1,'2012-11-12 20:53:39','2012-11-12 11:53:39','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<br />\r\n<br />\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<br />\r\n<br />\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-14','','','2012-11-12 20:53:39','2012-11-12 11:53:39','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-14/',0,'revision','',0),(134,1,'2012-11-12 20:54:16','2012-11-12 11:54:16','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n\r\n\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n\r\n\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-15','','','2012-11-12 20:54:16','2012-11-12 11:54:16','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-15/',0,'revision','',0),(135,1,'2012-11-12 20:56:39','2012-11-12 11:56:39','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>\r\n\r\n環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>\r\nPerlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-16','','','2012-11-12 20:56:39','2012-11-12 11:56:39','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-16/',0,'revision','',0),(136,1,'2012-11-12 20:57:31','2012-11-12 11:57:31','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-17','','','2012-11-12 20:57:31','2012-11-12 11:57:31','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-17/',0,'revision','',0),(137,1,'2012-11-12 20:59:29','2012-11-12 11:59:29','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-18','','','2012-11-12 20:59:29','2012-11-12 11:59:29','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-18/',0,'revision','',0),(138,1,'2012-11-12 21:01:22','2012-11-12 12:01:22','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n＆nbsp;\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n＆nbsp;\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-19','','','2012-11-12 21:01:22','2012-11-12 12:01:22','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-19/',0,'revision','',0),(139,1,'2012-11-12 21:01:59','2012-11-12 12:01:59','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-20','','','2012-11-12 21:01:59','2012-11-12 12:01:59','',118,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/118-revision-20/',0,'revision','',0),(140,1,'2012-11-12 21:06:45','2012-11-12 12:06:45','<del datetime=\"2013-01-19T08:15:07+00:00\">「＆nbsp;（※＆は小文字）」を使う</del>\r\n\r\nSEO的に良くないのでスタイルシートで調整する。','WordPressで改行する','','publish','open','open','','wordpress%e3%81%a7%e6%94%b9%e8%a1%8c%e3%81%99%e3%82%8b','','','2013-01-19 17:13:42','2013-01-19 08:13:42','',0,'http://49.212.213.226/wordpress/solution-log/?p=140',0,'post','',0),(141,1,'2012-11-12 21:06:11','2012-11-12 12:06:11','<code> </code>を使う','WordPressで改行する','','inherit','open','open','','140-revision','','','2012-11-12 21:06:11','2012-11-12 12:06:11','',140,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/140-revision/',0,'revision','',0),(142,1,'2012-11-12 21:07:48','2012-11-12 12:07:48','「＆nbsp;（※＆は小文字）」を使う','WordPressで改行する','','inherit','open','open','','140-autosave','','','2012-11-12 21:07:48','2012-11-12 12:07:48','',140,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/140-autosave/',0,'revision','',0),(143,1,'2012-11-12 23:23:27','2012-11-12 14:23:27','<h3>uname</h3>\r\n<table class=\"linux-command-table\">\r\n<thead>\r\n<tr>\r\n<td>オプション</td>\r\n<td>説明</td>\r\n</tr>\r\n<tr>\r\n<th>-a\r\n--all</th>\r\n<th>全てのシステム情報を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-m\r\n--machine</th>\r\n<th>ハードウェアタイプを表示</th>\r\n</tr>\r\n<tr>\r\n<th>-n\r\n--nodename</th>\r\n<th>ネットワーク上のホスト名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-r\r\n--release</th>\r\n<th>OSのリリース番号を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-s\r\n--sysname</th>\r\n<th>システム名を表示（オプション無しと同じ）</th>\r\n</tr>\r\n<tr>\r\n<th>-p\r\n--processor</th>\r\n<th>プロセッサ名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-i\r\n--hardware-platform</th>\r\n<th>ハードウェアプラットフォームか「Unkown」を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-o\r\n--operating-system</th>\r\n<th>OSを表示</th>\r\n</tr>\r\n</thead>\r\n</table>','CentOSでシステム情報を表示する','','publish','open','open','','centos%e3%81%a7%e3%82%b7%e3%82%b9%e3%83%86%e3%83%a0%e6%83%85%e5%a0%b1%e3%82%92%e8%a1%a8%e7%a4%ba%e3%81%99%e3%82%8b','','','2012-11-15 15:24:32','2012-11-15 06:24:32','',0,'http://49.212.213.226/wordpress/solution-log/?p=143',0,'post','',0),(144,1,'2012-11-12 23:22:52','2012-11-12 14:22:52','<h3>uname</h3>\n<table class=\"linux-command-table\">\n<thead>\n<tr>\n<td>オプション</td>\n<td>\n<tbody>\n<tr>\n<th>-a\n--all</th>\n<th>全てのシステム情報を表示</th>\n</tr>\n<tr>\n<th>-m\n--machine</th>\n<th>ハードウェアタイプを表示</th>\n</tr>\n<tr>\n<th>-n\n--nodename</th>\n<th>ネットワーク上のホスト名を表示</th>\n</tr>\n<tr>\n<th>-r\n--release</th>\n<th>OSのリリース番号を表示</th>\n</tr>\n<tr>\n<th>-s\n--sysname</th>\n<th>システム名を表示（オプション無しと同じ）</th>\n</tr>\n<tr>\n<th>-p\n--processor</th>\n<th>プロセッサ名を表示</th>\n</tr>\n<tr>\n<th>-i\n--hardware-platform</th>\n<th>ハードウェアプラットフォームか「Unkown」を表示</th>\n</tr>\n<tr>\n<th>-o\n--operating-system</th>\n<th>OSを表示</th>\n</tr>\n</tbody>\n</table>','CentOSでシステム情報を表示する','','inherit','open','open','','143-revision','','','2012-11-12 23:22:52','2012-11-12 14:22:52','',143,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/143-revision/',0,'revision','',0),(145,1,'2012-11-12 23:51:31','2012-11-12 14:51:31','<h3>uname</h3>\n<table class=\"linux-command-table\">\n<thead>\n<tr>\n<td>オプション</td>\n<td>説明</td>\n</tr>\n<tr>\n<th>-a\n--all</th>\n<th>全てのシステム情報を表示</th>\n</tr>\n<tr>\n<th>-m\n--machine</th>\n<th>ハードウェアタイプを表示</th>\n</tr>\n<tr>\n<th>-n\n--nodename</th>\n<th>ネットワーク上のホスト名を表示</th>\n</tr>\n<tr>\n<th>-r\n--release</th>\n<th>OSのリリース番号を表示</th>\n</tr>\n<tr>\n<th>-s\n--sysname</th>\n<th>システム名を表示（オプション無しと同じ）</th>\n</tr>\n<tr>\n<th>-p\n--processor</th>\n<th>プロセッサ名を表示</th>\n</tr>\n<tr>\n<th>-i\n--hardware-platform</th>\n<th>ハードウェアプラットフォームか「Unkown」を表示</th>\n</tr>\n<tr>\n<th>-o\n--operating-system</th>\n<th>OSを表示</th>\n</tr>\n</thead>\n</table>','CentOSでシステム情報を表示する','','inherit','open','open','','143-autosave','','','2012-11-12 23:51:31','2012-11-12 14:51:31','',143,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/143-autosave/',0,'revision','',0),(146,1,'2012-11-12 23:23:27','2012-11-12 14:23:27','<h3>uname</h3>\r\n<table class=\"linux-command-table\">\r\n<thead>\r\n<tr>\r\n<td>オプション</td>\r\n<td>説明</td>\r\n</tr>\r\n<tr>\r\n<th>-a\r\n--all</th>\r\n<th>全てのシステム情報を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-m\r\n--machine</th>\r\n<th>ハードウェアタイプを表示</th>\r\n</tr>\r\n<tr>\r\n<th>-n\r\n--nodename</th>\r\n<th>ネットワーク上のホスト名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-r\r\n--release</th>\r\n<th>OSのリリース番号を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-s\r\n--sysname</th>\r\n<th>システム名を表示（オプション無しと同じ）</th>\r\n</tr>\r\n<tr>\r\n<th>-p\r\n--processor</th>\r\n<th>プロセッサ名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-i\r\n--hardware-platform</th>\r\n<th>ハードウェアプラットフォームか「Unkown」を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-o\r\n--operating-system</th>\r\n<th>OSを表示</th>\r\n</tr>\r\n</thead>\r\n</table>','CentOSでシステム情報を表示する','','inherit','open','open','','143-revision-2','','','2012-11-12 23:23:27','2012-11-12 14:23:27','',143,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/143-revision-2/',0,'revision','',0),(147,1,'2012-11-09 21:25:33','2012-11-09 12:25:33','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<code>yum install gimp</code>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-4','','','2012-11-09 21:25:33','2012-11-09 12:25:33','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-4/',0,'revision','',0),(148,1,'2012-11-13 00:50:03','2012-11-12 15:50:03','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<kbd>yum install gimp</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-5','','','2012-11-13 00:50:03','2012-11-12 15:50:03','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-5/',0,'revision','',0),(149,1,'2012-11-13 01:06:57','2012-11-12 16:06:57','そろそろGIMPを覚えようと思いインストール。\r\n\r\n\r\nyum install gimp\r\n\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-6','','','2012-11-13 01:06:57','2012-11-12 16:06:57','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-6/',0,'revision','',0),(150,1,'2012-11-13 01:08:04','2012-11-12 16:08:04','そろそろGIMPを覚えようと思いインストール。\r\n<kbd>\r\nyum install gimp\r\n</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-7','','','2012-11-13 01:08:04','2012-11-12 16:08:04','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-7/',0,'revision','',0),(151,1,'2012-11-13 01:08:43','2012-11-12 16:08:43','そろそろGIMPを覚えようと思いインストール。\r\n<kbd>\r\nyum install gimp\r\n</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-8','','','2012-11-13 01:08:43','2012-11-12 16:08:43','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-8/',0,'revision','',0),(152,1,'2012-11-13 01:09:18','2012-11-12 16:09:18','そろそろGIMPを覚えようと思いインストール。\r\n<kbd>yum install gimp</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-9','','','2012-11-13 01:09:18','2012-11-12 16:09:18','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-9/',0,'revision','',0),(153,1,'2012-11-13 01:09:51','2012-11-12 16:09:51','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<kbd>yum install gimp</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<pre>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</pre>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-10','','','2012-11-13 01:09:51','2012-11-12 16:09:51','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-10/',0,'revision','',0),(154,1,'2012-11-13 01:25:13','2012-11-12 16:25:13','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<kbd>yum install gimp</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n<samp>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9\r\n\r\nGEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</samp>\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-11','','','2012-11-13 01:25:13','2012-11-12 16:25:13','',97,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/97-revision-11/',0,'revision','',0),(156,1,'2012-11-12 23:43:17','2012-11-12 14:43:17','<h3>uname</h3>\r\n<table class=\"linux-command-table\">\r\n<thead>\r\n<tr>\r\n<td>オプション</td>\r\n<td>説明</td>\r\n</tr>\r\n<tr>\r\n<th>-a\r\n--all</th>\r\n<th>全てのシステム情報を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-m\r\n--machine</th>\r\n<th>ハードウェアタイプを表示</th>\r\n</tr>\r\n<tr>\r\n<th>-n\r\n--nodename</th>\r\n<th>ネットワーク上のホスト名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-r\r\n--release</th>\r\n<th>OSのリリース番号を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-s\r\n--sysname</th>\r\n<th>システム名を表示（オプション無しと同じ）</th>\r\n</tr>\r\n<tr>\r\n<th>-p\r\n--processor</th>\r\n<th>プロセッサ名を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-i\r\n--hardware-platform</th>\r\n<th>ハードウェアプラットフォームか「Unkown」を表示</th>\r\n</tr>\r\n<tr>\r\n<th>-o\r\n--operating-system</th>\r\n<th>OSを表示</th>\r\n</tr>\r\n</thead>\r\n</table>','CentOSでシステム情報を表示する','','inherit','open','open','','143-revision-3','','','2012-11-12 23:43:17','2012-11-12 14:43:17','',143,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/143-revision-3/',0,'revision','',0),(157,1,'2012-11-15 15:33:56','2012-11-15 06:33:56','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「<b>Eclipse Classic 4.2.1</b>」を選択しブラウザでダウンロード</li>\r\n	<li>「<b>~/ダウンロード</b>」にダウンロードされるのでそのフォルダで解凍する</li>\r\n        <li>Eclipse配置用ディレクトリを作成する。今回は「<b>~/アプリケーション</b>」以下にEclipseを配置する。\r\n	<li>mvコマンドで「<b>~/アプリケーション</b>」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd ~/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse ~/アプリケーション\r\n</pre>\r\n\r\n\r\n<h3>Pleiadesをインストールする</h3>\r\npleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。\r\n<pre class=\"brush: bash\">\r\nmkdir ~/ダウンロード/pleiades\r\nunzip pleiades.zip -d ~/ダウンロード/pleiades/\r\ncp -a ~/ダウンロード/pleiades/* ~/アプリケーション/eclipse/\r\n</pre>\r\n\r\n『<b>~/アプリケーション/eclipse/eclipse.ini</b>』の最終行に設定を記述する\r\n<pre class=\"brush: text\">\r\n-javaagent:/home/{user}/アプリケーション/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\n</pre>\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd ~/デスクトップ/\r\nln -s ~/アプリケーション/eclipse/eclipse eclipse\r\nln -s ~/アプリケーション/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから<b>「eclipse」</b>と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','publish','open','open','','centos6%e3%81%abeclipse-pleiades-pdt%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-10 18:07:05','2013-03-10 09:07:05','',0,'http://49.212.213.226/wordpress/solution-log/?p=157',0,'post','',0),(158,1,'2012-11-15 15:33:44','2012-11-15 06:33:44','<h3>Eclipseをインストールする</h3>\n-インストールするEclipseのバージョンは「Eclipse Classic 4.2.1」\nhttp://www.eclipse.org/downloads/より「Eclipse Classic 4.2.1」を選択\n-インストールするフォルダは「/usr/local/share」\n-zipファイルのダウンロード先は「/root/ダウンロード」\n<kbd>cd /root/ダウンロード\nwget http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/juno/SR1/eclipse-jee-juno-SR1-linux-gtk.tar.gz&url=http://ftp.yz.yamagata-u.ac.jp/pub/eclipse//technology/epp/downloads/release/juno/SR1/eclipse-jee-juno-SR1-linux-gtk.tar.gz&mirror_id=1109\nunzip eclipse-SDK-4.2.1-linux-gtk.tar.gz -d /usr/local/s\n<kbd>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision','','','2012-11-15 15:33:44','2012-11-15 06:33:44','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision/',0,'revision','',0),(159,1,'2013-03-10 18:06:10','2013-03-10 09:06:10','<h3>Eclipseをインストールする</h3>\n<ol>\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「<b>Eclipse Classic 4.2.1</b>」を選択しブラウザでダウンロード</li>\n	<li>「<b>~/ダウンロード</b>」にダウンロードされるのでそのフォルダで解凍する</li>\n        <li>Eclipse配置用ディレクトリを作成する。今回は「<b>~/アプリケーション</b>」以下にEclipseを配置する。\n	<li>mvコマンドで「~/アプリケーション」へ移動させる</li>\n</ol>\n<pre class=\"brush: bash\">\ncd ~/ダウンロード\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\nmv eclipse ~/アプリケーション\n</pre>\n\n\n<h3>Pleiadesをインストールする</h3>\npleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。\n<pre class=\"brush: bash\">\nmkdir ~/ダウンロード/pleiades\nunzip pleiades.zip -d ~/ダウンロード/pleiades/\ncp -a ~/ダウンロード/pleiades/* ~/アプリケーション/eclipse/\n</pre>\n\n『<b>~/アプリケーション/eclipse/eclipse.ini</b>』の最終行に設定を記述する\n<pre class=\"brush: text\">\n-javaagent:/home/{user}/アプリケーション/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\n</pre>\n\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\n<h3>シンボリックリンクを作成する</h3>\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\n\n<pre class=\"brush: bash\">\ncd ~/デスクトップ/\nln -s ~/アプリケーション/eclipse/eclipse eclipse\nln -s ~/アプリケーション/eclipse/eclipse /usr/local/bin\n</pre>\n\n\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから<b>「eclipse」</b>と入力すればEclipseが立ち上がるようになる。\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\n基本的には上記URLの通りに入れる\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-autosave','','','2013-03-10 18:06:10','2013-03-10 09:06:10','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-autosave/',0,'revision','',0),(160,1,'2012-11-15 15:33:56','2012-11-15 06:33:56','<h3>Eclipseをインストールする</h3>\r\n-インストールするEclipseのバージョンは「Eclipse Classic 4.2.1」\r\nhttp://www.eclipse.org/downloads/より「Eclipse Classic 4.2.1」を選択\r\n-インストールするフォルダは「/usr/local/share」\r\n-zipファイルのダウンロード先は「/root/ダウンロード」\r\n<kbd>cd /root/ダウンロード\r\nwget http://www.eclipse.org/downloads/download.php?file=/technology/epp/downloads/release/juno/SR1/eclipse-jee-juno-SR1-linux-gtk.tar.gz&amp;url=http://ftp.yz.yamagata-u.ac.jp/pub/eclipse//technology/epp/downloads/release/juno/SR1/eclipse-jee-juno-SR1-linux-gtk.tar.gz&amp;mirror_id=1109\r\nunzip eclipse-SDK-4.2.1-linux-gtk.tar.gz -d /usr/local/share<kbd></kbd></kbd>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-2','','','2012-11-15 15:33:56','2012-11-15 06:33:56','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-2/',0,'revision','',0),(161,1,'2012-11-15 15:40:42','2012-11-15 06:40:42','<h3>Eclipseをインストールする</h3>\r\n-インストールするEclipseのバージョンは「Eclipse Classic 4.2.1」\r\nhttp://www.eclipse.org/downloads/より「Eclipse Classic 4.2.1」を選択\r\n-インストールするフォルダは「/usr/local/share」\r\n-zipファイルのダウンロード先は「/root/ダウンロード」\r\n\r\nまず、ブラウザから「Eclipse Classic 4.2.1」をダウンロード\r\n<a href=\"http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2.1-201209141800/eclipse-SDK-4.2.1-linux-gtk.tar.gz\">http://www.eclipse.org/downloads/download.php?file=/eclipse/downloads/drops4/R-4.2.1-201209141800/eclipse-SDK-4.2.1-linux-gtk.tar.gz</a>\r\n\r\nダウンロード完了後以下のコマンドを発行\r\n<kbd>cd /root/ダウンロード\r\nunzip eclipse-SDK-4.2.1-linux-gtk.tar.gz -d /usr/local/share<kbd></kbd></kbd>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-3','','','2012-11-15 15:40:42','2012-11-15 06:40:42','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-3/',0,'revision','',0),(162,1,'2012-11-15 16:22:04','2012-11-15 07:22:04','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる<kbd>cd /root/ダウンロード</kbd></li>\r\n</ol>\r\n<kbd>tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/</kbd>\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード</li>\r\n	<li>Eclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-4','','','2012-11-15 16:22:04','2012-11-15 07:22:04','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-4/',0,'revision','',0),(163,1,'2012-11-15 16:36:30','2012-11-15 07:36:30','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</ol>\r\n\r\n<kbd>cd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/</kbd>\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-5','','','2012-11-15 16:36:30','2012-11-15 07:36:30','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-5/',0,'revision','',0),(165,1,'2012-11-17 00:45:38','2012-11-16 15:45:38','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。通常は入って無いと思われるので最初に入れておいた方が無難。\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認</h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','publish','open','open','','centos6%e3%81%abgit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-03 07:39:53','2013-03-02 22:39:53','',0,'http://49.212.213.226/wordpress/solution-log/?p=165',0,'post','',0),(166,1,'2012-11-17 00:37:02','2012-11-16 15:37:02','','自動下書き','','inherit','open','open','','165-revision','','','2012-11-17 00:37:02','2012-11-16 15:37:02','',165,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/165-revision/',0,'revision','',0),(167,1,'2012-11-17 00:45:21','2012-11-16 15:45:21','gitを使う必要が出てきたのでインストール。\n\nまずgitのサポートページで必要ライブラリを確認。\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\n\n<kbd>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</kbd>\n\n\ngitのサイトから最新版を入手してインストール\n<kbd>cd /usr/local/src\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\ntar -xzvf git-1.8.0.tar.gz\ncd git-1.8.0\n./configure --prefix=/usr/local/\nmake\nmake install</kbd>\n\nCan\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃらって言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\n\n<kbd>yum install perl-ExtUtils-MakeMaker</kbd>\n\n\nまたmakeコマンドが実行出来ないときは\n\n<kbd>yum install gcc\n\n\n','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-2','','','2012-11-17 00:45:21','2012-11-16 15:45:21','',165,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/165-revision-2/',0,'revision','',0),(168,1,'2012-11-17 00:45:38','2012-11-16 15:45:38','gitを使う必要が出てきたのでインストール。\r\n\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\n\r\n<kbd>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</kbd>\r\n\r\ngitのサイトから最新版を入手してインストール\r\n<kbd>cd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install</kbd>\r\n\r\nCan\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃらって言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n\r\n<kbd>yum install perl-ExtUtils-MakeMaker</kbd>\r\n\r\nまたmakeコマンドが実行出来ないときは\r\n\r\n<kbd>yum install gcc</kbd>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-3','','','2012-11-17 00:45:38','2012-11-16 15:45:38','',165,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/165-revision-3/',0,'revision','',0),(169,1,'2012-11-17 00:46:17','2012-11-16 15:46:17','gitを使う必要が出てきたのでインストール。\r\n\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\n\r\n<kbd>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</kbd>\r\n\r\ngitのサイトから最新版を入手してインストール\r\n<kbd>cd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install</kbd>\r\n\r\nCan\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃらって言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n\r\n<kbd>yum install perl-ExtUtils-MakeMaker</kbd>\r\n\r\nまたmakeコマンドが実行出来ないときは\r\n\r\n<kbd>yum install gcc</kbd>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-4','','','2012-11-17 00:46:17','2012-11-16 15:46:17','',165,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/165-revision-4/',0,'revision','',0),(170,1,'2013-03-03 07:41:09','2013-03-02 22:41:09','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。通常は入って無いと思われるので最初に入れておいた方が無難。インストールするgitのバージョンによっては出るエラーだが、1.8.1以降は出ないと思われる。\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認</h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','inherit','open','open','','165-autosave','','','2013-03-03 07:41:09','2013-03-02 22:41:09','',165,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/165-autosave/',0,'revision','',0),(172,1,'2012-11-15 17:13:07','2012-11-15 08:13:07','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</ol>\r\n\r\n<kbd>cd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/</kbd>\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n\r\n<kbd>cd /tmp\r\nunzip pleiades.zip \r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/</kbd>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:./plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-6','','','2012-11-15 17:13:07','2012-11-15 08:13:07','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-6/',0,'revision','',0),(173,1,'2012-11-17 23:22:18','2012-11-17 14:22:18','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<kbd>cd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/</kbd>\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<kbd>cd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/</kbd>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<kbd>cd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse\r\neclipse\r\n</kbd>\r\n\r\n<kbd>ln -s /usr/local/share/eclipse/eclipse /usr/local/bin</kbd>\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-7','','','2012-11-17 23:22:18','2012-11-17 14:22:18','',157,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/157-revision-7/',0,'revision','',0),(174,1,'2012-11-18 21:47:03','2012-11-18 12:47:03','デスクトップにWindows XP環境を構築するときのメモ\r\n<h3>データのバックアップ</h3>\r\nSubversionやgit等も使い、忘れずに行う。\r\n<h3>LANドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\r\n<h3>サービスパックを適用する</h3>\r\n<ol>\r\n<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\r\n<li>SP3をダウンロード、インストール\r\nSP3はSP2が適応されてないとインストール出来ないので注意</ol>\r\n</li>\r\n</ol>\r\n<h3>オーディオドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\r\n<h3>グラフィックカードドライバをインストール</h3>\r\nAutorun DriverのラベルのCDからインストールする\r\n<h3>USBドライバをインストールする</h3>\r\n「<b>D:\\Drivers\\Chipset\\Inf</b>」のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。\r\n\r\n後は適宜Lhaz等をインストールする。','Windows XPの再インストールメモ','','publish','open','open','','windows-xp%e3%81%ae%e5%86%8d%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%83%a1%e3%83%a2','','','2013-02-28 04:16:09','2013-02-27 19:16:09','',0,'http://49.212.213.226/wordpress/solution-log/?p=174',0,'post','',0),(175,1,'2012-11-18 21:46:51','2012-11-18 12:46:51','デスクトップにWindows XP環境を構築するときのメモ\n<h3>データのバックアップ</h3>\nSubversionやgit等も使い、忘れずに行う。\n\n<h3>LANドライバをインストール</h3>\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\n\n<h3>サービスパックを適用する</h3>\n<ol>\n<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\n<li>SP3をダウンロード、インストール</li>\n<ol>\nSP3はSP2が適応されてないとインストール出来ないので注意\n\n<h3>オーディオドライバをインストール</h3>\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\n\n<h3>グラフィックカードドライバをインストール</h3>\nAutorun DriverのラベルのCDからインストールする\n\n<h3>USBドライバをインストールする</h3>\nP5GC-MX/1333 CD-ROMからChipset_Intel945G_Chipset_V9001011のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。（曖昧なので何か機会があったら書き直す）\n\n\n後はてk','Windows XPの再インストールメモ','','inherit','open','open','','174-revision','','','2012-11-18 21:46:51','2012-11-18 12:46:51','',174,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/174-revision/',0,'revision','',0),(176,1,'2012-11-18 21:47:03','2012-11-18 12:47:03','デスクトップにWindows XP環境を構築するときのメモ\r\n<h3>データのバックアップ</h3>\r\nSubversionやgit等も使い、忘れずに行う。\r\n\r\n<h3>LANドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\r\n\r\n<h3>サービスパックを適用する</h3>\r\n<ol>\r\n<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\r\n<li>SP3をダウンロード、インストール</li>\r\n<ol>\r\nSP3はSP2が適応されてないとインストール出来ないので注意\r\n\r\n<h3>オーディオドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\r\n\r\n<h3>グラフィックカードドライバをインストール</h3>\r\nAutorun DriverのラベルのCDからインストールする\r\n\r\n<h3>USBドライバをインストールする</h3>\r\nP5GC-MX/1333 CD-ROMからChipset_Intel945G_Chipset_V9001011のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。（曖昧なので何か機会があったら書き直す）\r\n\r\n\r\n後は適宜Lhaz等をインストールする。','Windows XPの再インストールメモ','','inherit','open','open','','174-revision-2','','','2012-11-18 21:47:03','2012-11-18 12:47:03','',174,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/174-revision-2/',0,'revision','',0),(177,1,'2013-02-28 04:15:59','2013-02-27 19:15:59','デスクトップにWindows XP環境を構築するときのメモ\r\n<h3>データのバックアップ</h3>\r\nSubversionやgit等も使い、忘れずに行う。\r\n<h3>LANドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\r\n<h3>サービスパックを適用する</h3>\r\n<ol>\r\n<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\r\n<li>SP3をダウンロード、インストール\r\nSP3はSP2が適応されてないとインストール出来ないので注意</ol>\r\n</li>\r\n</ol>\r\n<h3>オーディオドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\r\n<h3>グラフィックカードドライバをインストール</h3>\r\nAutorun DriverのラベルのCDからインストールする\r\n<h3>USBドライバをインストールする</h3>\r\n「<b>D:\\Drivers\\Chipset\\Inf</b>」のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。\r\n\r\n後は適宜Lhaz等をインストールする。','Windows XPの再インストールメモ','','inherit','open','open','','174-autosave','','','2013-02-28 04:15:59','2013-02-27 19:15:59','',174,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/174-autosave/',0,'revision','',0),(183,1,'2012-11-25 23:10:02','2012-11-25 14:10:02','<h3>PECL::ssh2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\n\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\r\n<pre class=\"brush: php\">\r\n&lt;?php\r\n\r\n$connection = ssh2_connect(&#039;ssh.host&#039;, 22);\r\n\r\nif (ssh2_auth_password($connection, &#039;user&#039;, &#039;pass&#039;)) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(&#039;Authentication Failed...&#039;);\r\n}\r\n\r\nssh2_scp_send($connection, &#039;/remote/file&#039;,\r\n&#039;/local/file&#039;, 0644);\r\n\r\n?&gt;\r\n</pre>\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">Installing SSH2 Extension for PHP on CentOS 5 &#124;  Dynamic Hosting Blog</a></li>\r\n</ul>','CentOS6にPECL::ssh2をインストールする','','publish','open','open','','centos6%e3%81%abpecl-ssh2%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-19 16:59:20','2013-01-19 07:59:20','',0,'http://49.212.213.226/wordpress/solution-log/?p=183',0,'post','',0),(184,1,'2012-11-25 23:09:11','2012-11-25 14:09:11','yum install gcc php-devel php-pear libssh2 libssh2-devel\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\n\nphp.iniにextension=ssh2.soを書き加える\n\n\nサンプルコード\n\n<?php\n$connection = ssh2_connect(\'ssh.host\', 22);\n\nif (ssh2_auth_password($connection, \'user\', \'wg64\')) {\n	echo \"Authentication Successful!\\n\";\n} else {\n	die(\'Authentication Failed...\');\n}\n\nssh2_scp_send($connection, \'helloworld.php\', \n\'/home/smokingarage/www/helloworld.php\', 0644);','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision','','','2012-11-25 23:09:11','2012-11-25 14:09:11','',183,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/183-revision/',0,'revision','',0),(185,1,'2012-11-25 23:10:02','2012-11-25 14:10:02','yum install gcc php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n\r\nphp.iniにextension=ssh2.soを書き加える\r\n\r\n\r\nサンプルコード\r\n\r\n<?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo \"Authentication Successful!\\n\";\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?>\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定刷ること！','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-2','','','2012-11-25 23:10:02','2012-11-25 14:10:02','',183,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/183-revision-2/',0,'revision','',0),(186,1,'2012-11-25 23:11:32','2012-11-25 14:11:32','yum install gcc php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n\r\nphp.iniにextension=ssh2.soを書き加える\r\n\r\n\r\nサンプルコード\r\n\r\n<?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo \"Authentication Successful!\\n\";\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?>\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定刷ること！','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-3','','','2012-11-25 23:11:32','2012-11-25 14:11:32','',183,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/183-revision-3/',0,'revision','',0),(187,1,'2012-11-26 02:04:21','2012-11-25 17:04:21','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server mysql-devel\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server mysql-devel\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくは<a href=\"http://sourceforge.net/projects/phpmyadmin/files/phpMyAdmin/\">phpMyAdmin -  Browse /phpMyAdmin at SourceForge.net</a>からでも取得出きるのでwgetで行ける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。<b>ブラウザのキャッシュをクリア</b>して再びログインする。ブラウザのキャッシュがクリアされないとエラー表示がいつまでも消えないので注意。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。mcryptインストール後はMySQLとApacheを再起動する。\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\nservice mysqld restart\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOS6に最新バージョンのMySQLとphpMyAdminをインストールする','','publish','open','open','','centos%e3%81%abmysql%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-17 02:09:27','2013-03-16 17:09:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=187',0,'post','',0),(188,1,'2012-11-26 02:03:35','2012-11-25 17:03:35','<h3>MySQLをインストールする</h3>\nyum -y install mysql-server\n\n<h3>MySQLの初期設定を行う</h3>\nMySQLを起動して設定を色々といじる\n/etc/rc.d/init.d/mysqld start\nmysql_secure_installation\n\n<h3>phpMyAdminをインストールする</h3>\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダにk','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision','','','2012-11-26 02:03:35','2012-11-25 17:03:35','',187,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/187-revision/',0,'revision','',0),(189,1,'2012-11-26 02:04:21','2012-11-25 17:04:21','<h3>MySQLをインストールする</h3>\r\nyum -y install mysql-server\r\n\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。\r\nMySQLの初期設定が終わっていないと立ち上がらないので注意。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-2','','','2012-11-26 02:04:21','2012-11-25 17:04:21','',187,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/187-revision-2/',0,'revision','',0),(190,1,'2012-11-27 02:13:25','2012-11-26 17:13:25','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベースredmineを作成する。その後データベースユーザredmineを登録する。\r\n<h4>データベースRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nmysql&gt; CREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','publish','open','open','','centos6-3%e3%81%abredmine%e7%92%b0%e5%a2%83%e3%82%92%e6%a7%8b%e7%af%89%e3%81%99%e3%82%8b','','','2013-08-13 21:14:50','2013-08-13 12:14:50','',0,'http://49.212.213.226/wordpress/solution-log/?p=190',0,'post','',0),(191,1,'2012-11-27 02:11:31','2012-11-26 17:11:31','http://www.tooyama.org/yum-addrepo-epel.html\n\nまずはEPELを導入\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\nrpm -ivh epel-release-6-7.noarch.rpm\n\n続いて開発パッケージを導入。こちらは使わないものもいくらか入る\nyum groupinstall \"Development Tools\"\n\n\n通信関係を入れたりアップデートする\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\n\nMySQLをアップデートする（既に導入済み）\nyum install mysql-server mysql-devel\n\nApacheをアップデートする\nyum install httpd httpd-devel\n\nImageMagickをインストールアップデートする（多分入ってない）\nyum install ImageMagick ImageMagick-devel\n\nRuby 1.9.3をインストールする\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\ntar xjf ruby-1.9.3-p194.tar.bz2\ncd ruby-1.9.3-p194\n./configure\nmake\nmake install\n\n\n','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-11-27 02:11:31','2012-11-26 17:11:31','',190,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/190-revision/',0,'revision','',0),(192,1,'2013-08-13 21:14:12','2013-08-13 12:14:12','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\n\n<h3>CentOSパッケージの追加インストール</h3>\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\n\nyumで追加インストール\n<pre class=\"brush: bash\">\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\nyum groupinstall &amp;quot;Development Tools&amp;quot;\n# 通信関係を入れたりアップデートする\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\nyum install mysql-server mysql-devel\n# Apacheをアップデートする（一応やっておく）\nyum install httpd httpd-devel\n# ImageMagickをインストールアップデートする（多分入ってない）\nyum install ImageMagick ImageMagick-devel\n</pre>\n\n\n<h3>SELinuxを無効にする</h3>\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/selinux\nSELINUX=disabled\nreboot\n</pre>\n\n\n<h3>iptablesでHTTPを許可する</h3>\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/iptables\n\n# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n\n# iptablesを再起動する\nservice iptables restart\n</pre>\n\n\n<h3>Ruby 1.9.3をインストールする</h3>\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\ntar zxvf ruby-1.9.3-p392.tar.gz\ncd ruby-1.9.3-p392\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nmake install\n</pre>\n\n<h3>データベースの設定を確認する</h3>\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\n\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\n<pre class=\"brush: bash\">\nvi /etc/my.cnf\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\ncharacter-set-server=utf8\n\n# 任意設定\ninnodb_file_per_table\nquery-cache-size=16M\n\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n[mysql]\ndefault-character-set=utf8\n\n#mysqlを再起動する\nservice mysqld start\nchkconfig mysqld on\n</pre>\n\n\n<h3>Redmineをインストールする</h3>\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\n<pre class=\"brush: bash\">\ncd /var/lib\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\n</pre>\nもしくは\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\ncd /var/lib\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\nln -s redmine-2.2.0 redmine\nls -l\n</pre>\n\n\n\n<h3>Redmineの設定ファイルを作成する</h3>\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\n\n<h4>データベース接続設定</h4>\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\n<pre class=\"brush: bash\">\n    production:\n      adapter: mysql2\n      database: redmine\n      host: localhost\n      username: redmine\n      password: foobar\n      encoding: utf8  \n</pre>\n下線部は、MySQLの設定で使用した名前に合わせます。\n\n<h4>メール送信設定</h4>\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\n<pre class=\"brush: bash\">\n    production:\n      email_delivery:\n        delivery_method: :smtp\n        smtp_settings:\n          address: &quot;localhost&quot;\n          port: 25\n          domain: &#039;example.com&#039;\n</pre>\n\n\n<h3>bundlerをインストールする</h3>\n<pre class=\"brush: bash\">\ngem install bundler --no-rdoc --no-ri\n</pre>\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\nRubyのgemとは別にインストールする必要があるらしい。\n<pre class=\"brush: bash\">\ncd /var/lib/redmine-2.2.0\nbundle install --path vendor/bundler --without development test postgresql sqlite\n</pre>\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\n<pre class=\"brush: bash\">\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\n</pre>\n\n\n<h3>Redmineを初期化する</h3>\nまずデータベースredmineを作成する。その後データベースユーザredmineを登録する。\n<h4>データベースRedmineの作成</h4>\nDatabase User redmineを作成する前にデータベースを作成しておく必要がある。また、<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\n<pre class=\"brush: bash\">\nCREATE DATABASE redmine CHARACTER SET utf8;\n</pre>\n\n<h4>登録ユーザの確認と作成</h4>\n<pre class=\"brush: bash\">\nmysql -u root -p\nEnter password: \n\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\n+------+-----------+\n| User | Host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | localhost |\n+------+-----------+\n</pre>\n\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\n<pre class=\"brush: bash\">\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\nQuery OK, 0 rows affected (0.00 sec)\n\n# redmineがユーザとして追加されたか確認\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\n+--------------+-----------+\n| User         | Host      |\n+--------------+-----------+\n| root         | 127.0.0.1 |\n| redmine      | localhost |\n| root         | localhost |\n+--------------+-----------+\n3 rows in set (0.00 sec)\n</pre>\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\n\n\n<h4>セッションデータの暗号化の鍵生成</h4>\n<pre class=\"brush: bash\">\ncd /var/lib/redmine-2.2.0\nbundle exec rake generate_secret_token\n</pre>\n\n\n<h4>データベースを初期構築</h4>\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\n<pre class=\"brush: bash\">\nservice mysqld start\nRAILS_ENV=production bundle exec rake db:migrate\n</pre>\n\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\n\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\n\n\n\n<h3>Redmineの動作確認をする</h3>\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\n<pre class=\"brush: bash\">\n# Apacheを起動する\nhttpd -k start\n# WEBrick起動する\nruby /var/lib/redmine/script/rails server webrick -e production\n</pre>\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\n\n\n<h3>RedmineをAapcheと同期させる</h3>\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-autosave-v1','','','2013-08-13 21:14:12','2013-08-13 12:14:12','',190,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/190-autosave/',0,'revision','',0),(193,1,'2012-11-27 02:13:25','2012-11-26 17:13:25','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\nまずはEPELを導入\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n\r\n続いて開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall \"Development Tools\"\r\n\r\n\r\n通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n\r\nMySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n\r\nApacheをアップデートする\r\nyum install httpd httpd-devel\r\n\r\nImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n\r\nRuby 1.9.3をインストールする\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\r\ntar xjf ruby-1.9.3-p194.tar.bz2\r\ncd ruby-1.9.3-p194\r\n./configure\r\nmake\r\nmake install\r\n\r\n\r\n','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-11-27 02:13:25','2012-11-26 17:13:25','',190,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/190-revision-2/',0,'revision','',0),(194,1,'2012-11-27 02:49:54','2012-11-26 17:49:54','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\nまずはEPELを導入\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n\r\n\r\nhttp://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC20\r\n\r\n続いて開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall \"Development Tools\"\r\n\r\n\r\n通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n\r\nMySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n\r\nApacheをアップデートする\r\nyum install httpd httpd-devel\r\n\r\nImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n\r\nRuby 1.9.3をインストールする\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\r\ntar xjf ruby-1.9.3-p194.tar.bz2\r\ncd ruby-1.9.3-p194\r\n./configure\r\nmake\r\nmake install\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\n','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-11-27 02:49:54','2012-11-26 17:49:54','',190,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/190-revision-3/',0,'revision','',0),(195,1,'2012-11-28 23:27:48','2012-11-28 14:27:48','<a href=\"http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html\">http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html</a>\r\n\r\n\r\nPHPでウェブブラウザを作る\r\n<a href=\"http://chobie.hatenablog.com/entry/2012/03/18/220103\">http://chobie.hatenablog.com/entry/2012/03/18/220103</a>','capybara-webkitについて','','publish','open','open','','capybara-webkit%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6','','','2012-11-28 23:35:43','2012-11-28 14:35:43','',0,'http://49.212.213.226/wordpress/solution-log/?p=195',0,'post','',0),(196,1,'2012-11-28 23:27:34','2012-11-28 14:27:34','','capybara-webkitについて','','inherit','open','open','','195-revision','','','2012-11-28 23:27:34','2012-11-28 14:27:34','',195,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/195-revision/',0,'revision','',0),(197,1,'2012-11-28 23:27:48','2012-11-28 14:27:48','<a href=\"http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html\">http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html</a>','capybara-webkitについて','','inherit','open','open','','195-revision-2','','','2012-11-28 23:27:48','2012-11-28 14:27:48','',195,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/195-revision-2/',0,'revision','',0),(198,1,'2012-11-28 23:28:03','2012-11-28 14:28:03','<a href=\"http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html\">http://blog.uu59.org/2012-09-19-capybara-webkit-crawler.html</a>','capybara-webkitについて','','inherit','open','open','','195-revision-3','','','2012-11-28 23:28:03','2012-11-28 14:28:03','',195,'http://49.212.213.226/wordpress/solution-log/%e6%9c%aa%e5%88%86%e9%a1%9e/195-revision-3/',0,'revision','',0),(199,1,'2012-11-30 22:05:11','2012-11-30 13:05:11','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\ngit clone https://github.com/WordPress/WordPress.git\r\nmv WordPress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<h4>移設元サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\n# 一覧でWordPress用のデータベースを確認する\r\nSHOW DATABASES;\r\n\r\n# 登録されているユーザを確認する\r\nSELECT user, host FROM mysql.user;\r\n\r\n# WordPress用データベースのユーザーを確認する\r\nSHOW GRANTS for &amp;#039;user&amp;#039;@&amp;#039;host&amp;#039;;\r\n\r\n# MySQLデータをダンプする\r\nmysqldump -u {user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &gt; /tmp/wp_database.sql\r\n\r\n# ベースとなるURLを書き換える\r\nsed &#039;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&#039; /tmp/wp_database.sql &gt; /tmp/wp_database.sql2\r\n</pre>\r\n\r\n<h4>移設先サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nMariaDB [(none)]&gt; create database wp_database default character set utf8;\r\nMariaDB [(none)]&gt; grant all on wp_user.* to wp_user@localhost identified by &#039;********&#039;;\r\nMariaDB [(none)]&gt; flush privileges;\r\nMariaDB [(none)]&gt; exit;\r\n\r\nmysql -u root -pXXXXXXXX wp_database &lt; wp_database.sql\r\n</pre>\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','publish','open','open','','wordpress%e3%81%ae%e5%bc%95%e8%b6%8a%e3%81%97','','','2015-12-17 20:28:51','2015-12-17 11:28:51','',0,'http://49.212.213.226/wordpress/solution-log/?p=199',0,'post','',0),(200,1,'2012-11-30 22:04:21','2012-11-30 13:04:21','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\n\n<h3>新しいWordPressをインストールする</h3>\nターミナルから\ncd /path/to/wordpressfolder\nmkdir blogfolder\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\nmv wordpress blogfolder\n\n\n<h3>データベースを移行する</h3>\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\n\n\n','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-11-30 22:04:21','2012-11-30 13:04:21','',199,'http://49.212.213.226/wordpress/solution-log/?p=200',0,'revision','',0),(201,1,'2012-12-01 00:59:15','2012-11-30 15:59:15','<h3>Javaをインストールする</h3>\r\nJavaがインストールされていない場合はインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -qa java-1.7.0-openjdk\r\nyum -y install java-1.7.0-openjdk\r\n</pre>\r\n<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n# 書き込み内容\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n</pre>\r\nJenkinsの設定ファイルを書き換える\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/jenkins\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot; #最終行を書き換え\r\n</pre>\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<pre class=\"brush: bash\">\r\nhttpd -k stop\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6にJenkinsをインストールする','','publish','open','open','','centos6-3%e3%81%abjenkins%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-17 01:02:06','2013-03-16 16:02:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=201',0,'post','',0),(202,1,'2012-12-01 00:58:44','2012-11-30 15:58:44','<h3>インストール</h3>\n\n基本的には公式ページを参考にする。\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\n\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install jenkins\n\n\n<h3>機動する</h3>\n\nJenkinsはポート8080がディフォルト。\n\nhttpd -k start\n/sbin/service jenkins start\n\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\n\n\nしかしCentOS、でぃふぉるとだt','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision','','','2012-12-01 00:58:44','2012-11-30 15:58:44','',201,'http://49.212.213.226/wordpress/solution-log/?p=202',0,'revision','',0),(203,1,'2012-12-09 13:21:12','2012-12-09 04:21:12','<h3>Javaをインストールする</h3>\nJavaがインストールされていない場合はインストールする。\n<pre class=\"brush: bash\">\nrpm -qa java-1.7.0-openjdk\nyum -y install java-1.7.0-openjdk\n</pre>\n\n<h3>Jenkinsをインストールする</h3>\n基本的には公式ページを参考にする。\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\n<pre class=\"brush: bash\">\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\nyum install jenkins\n</pre><h3>Jenkinsを起動する</h3>\nJenkinsはポート8080がディフォルト。\n<pre class=\"brush: bash\">\nhttpd -k start\n/sbin/service jenkins start\n</pre>\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。<h3>JenkinsとApacheを連携させる</h3>\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\n<pre class=\"brush: bash\">\ncd /etc/httpd/conf.d\nvi mod_proxy.conf\n</pre>\n書き込み内容\n<pre class=\"brush: bash\">\nProxyPass /jenkins http://localhost:8080/jenkins\nProxyPassReverse /jenkins http://localhost:8080/jenkins\nProxyRequests Off\n</pre>\nJenkinsの設定ファイルを書き換える\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/jenkins\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot; #最終行を書き換え\n</pre>\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\n<pre class=\"brush: bash\">\n\n</pre><h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-autosave','','','2012-12-09 13:21:12','2012-12-09 04:21:12','',201,'http://49.212.213.226/wordpress/solution-log/?p=203',0,'revision','',0),(204,1,'2012-12-01 00:59:15','2012-11-30 15:59:15','<h3>インストール</h3>\r\n\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n\r\n\r\n<h3>機動する</h3>\r\n\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-2','','','2012-12-01 00:59:15','2012-11-30 15:59:15','',201,'http://49.212.213.226/wordpress/solution-log/?p=204',0,'revision','',0),(205,1,'2012-12-01 01:18:50','2012-11-30 16:18:50','<h3>インストール</h3>\r\n\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n\r\n\r\n<h3>機動</h3>\r\n\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n\r\n\r\n<h3>Apacheと連携させる</h3>\r\n\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>\r\nとりあえずここを参考に設定してみるか。。。\r\n\r\n\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-3','','','2012-12-01 01:18:50','2012-11-30 16:18:50','',201,'http://49.212.213.226/wordpress/solution-log/?p=205',0,'revision','',0),(206,1,'2012-12-01 01:18:58','2012-11-30 16:18:58','<h3>インストール</h3>\r\n\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n\r\n\r\n<h3>機動</h3>\r\n\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n\r\n\r\n<h3>Apacheと連携させる</h3>\r\n\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>\r\nとりあえずここを参考に設定してみるか。。。\r\n\r\n\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-4','','','2012-12-01 01:18:58','2012-11-30 16:18:58','',201,'http://49.212.213.226/wordpress/solution-log/?p=206',0,'revision','',0),(207,1,'2012-12-01 23:07:00','2012-12-01 14:07:00','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>\r\nとりあえずここを参考に設定してみるか。。。\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-5','','','2012-12-01 23:07:00','2012-12-01 14:07:00','',201,'http://49.212.213.226/wordpress/solution-log/?p=207',0,'revision','',0),(208,1,'2012-12-01 23:26:20','2012-12-01 14:26:20','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定を行う。\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n\r\n書き込み内容\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n<Proxy http://localhost:8080/jenkins*>\r\nOrder deny,allow\r\nAllow from all\r\n</Proxy>\r\n\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\nJENKINS_ARGS=\"--prefix=/jenkins\"\r\nを追加。\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-6','','','2012-12-01 23:26:20','2012-12-01 14:26:20','',201,'http://49.212.213.226/wordpress/solution-log/?p=208',0,'revision','',0),(209,1,'2011-02-24 08:15:33','2011-02-23 23:15:33','掲示板の設定をスマホ用に変える。\r\n\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n<pre class=\"brush: javascript\">\r\n&lt;script type=&quot;text/javascript&quot;&gt;// &lt;![CDATA[\r\nvar meta = document.createElement(&quot;meta&quot;);\r\nmeta.setAttribute(&quot;name&quot;, &quot;viewport&quot;);\r\nmeta.setAttribute(&quot;content&quot;,&quot;user-scalable=no, width=device-width&quot;);\r\ndocument.getElementsByTagName(&quot;head&quot;)[0].appendChild(meta);\r\n// ]]&gt;&lt;/script&gt;\r\n</pre>\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','publish','open','open','','%e3%82%b9%e3%83%9e%e3%83%9b%e7%94%a8%e3%81%ab%e8%a1%a8%e7%a4%ba%e5%b9%85%e3%82%92%e5%a4%89%e3%81%88%e3%82%8b','','','2013-01-19 19:35:51','2013-01-19 10:35:51','',0,'http://49.212.213.226/wordpress/solution-log/?p=209',0,'post','',0),(210,1,'2012-12-02 00:49:22','2012-12-01 15:49:22','','スマホ用に表示幅を変える','','inherit','open','open','','209-revision','','','2012-12-02 00:49:22','2012-12-01 15:49:22','',209,'http://49.212.213.226/wordpress/solution-log/?p=210',0,'revision','',0),(211,1,'2012-12-02 00:49:33','2012-12-01 15:49:33','掲示板の設定をスマホ用に変える。\r\n\r\n<meta name=\"viewport\" content=\"user-scalable=no, width=device-width\" />\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n\r\n<script type=\"text/javascript\">var meta = document.createElement(\"meta\");meta.setAttribute(\"name\", \"viewport\");meta.setAttribute(\"content\",\"user-scalable=no, width=device-width\");document.getElementsByTagName(\"head\")[0].appendChild(meta);</script>\r\n\r\n\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','inherit','open','open','','209-revision-2','','','2012-12-02 00:49:33','2012-12-01 15:49:33','',209,'http://49.212.213.226/wordpress/solution-log/?p=211',0,'revision','',0),(212,1,'2012-12-02 00:50:31','2012-12-01 15:50:31','掲示板の設定をスマホ用に変える。\r\n\r\n<meta name=\"viewport\" content=\"user-scalable=no, width=device-width\" />\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n\r\n<script type=\"text/javascript\">var meta = document.createElement(\"meta\");meta.setAttribute(\"name\", \"viewport\");meta.setAttribute(\"content\",\"user-scalable=no, width=device-width\");document.getElementsByTagName(\"head\")[0].appendChild(meta);</script>\r\n\r\n\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','inherit','open','open','','209-revision-3','','','2012-12-02 00:50:31','2012-12-01 15:50:31','',209,'http://49.212.213.226/wordpress/solution-log/?p=212',0,'revision','',0),(215,1,'2011-02-19 17:35:22','2011-02-19 08:35:22','CURLライブラリのマルチ機能を試そうと思い、AKB48のメンバーブログのフィードの一気解析を実行。\r\n\r\n\r\n// フィードURLの設定\r\n$arFeedUrl = array(\r\n\'http://gdata.youtube.com/feeds/base/videos?q=AKB48&alt=rss&client=ytapi-youtube-search&v=2\',\r\n\'http://rssblog.ameba.jp/akihabara48/rss20.xml\',\r\n\'http://gdata.youtube.com/feeds/base/users/AKB48/uploads?alt=rss&v=2&orderby=published&client=ytapi-youtube-profile\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://blog.watanabepro.co.jp/ooyashizuka/index.xml\',\r\n\r\n\'http://rssblog.ameba.jp/harukatayama/rss20.xml\',\r\n\r\n\'http://blog.watanabepro.co.jp/kuramochiasuka/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/sashihara-rino/rss20.xml\',\r\n\'http://blog.mariko-shinoda.net/index.rdf\',\r\n\'http://blog.watanabepro.co.jp/takajoaki/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/nakata-chisato/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakaya-sayaka/rss20.xml\',\r\n\'http://rssblog.ameba.jp/atsuko-maeda/rss20.xml\',\r\n\'http://rssblog.ameba.jp/amimaeda-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu11/rss20.xml\',\r\n\'http://rssblog.ameba.jp/uchidamayumi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/oshima-y/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/tanabe-miku/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakatsuka-tomomi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nitomoenoblog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/reina-fujie/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/rumifu-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/ishidaharuka-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu48/rss20.xml\',\r\n\'http://twitter.com/statuses/user_timeline/79973281.rss\',\r\n\'http://blog.watanabepro.co.jp/kashiwagiyuki/index.xml\',\r\n\'http://rssblog.ameba.jp/kitahara-rie/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/withamina/rss20.xml\',\r\n\'http://rssblog.ameba.jp/satosumire/rss20.xml\',\r\n\'http://blog.watanabepro.co.jp/satounatsuki/index.xml\',\r\n\'http://rssblog.ameba.jp/mariyasuzuki/rss20.xml\',\r\n\'http://rssblog.ameba.jp/chikano-rina/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu30/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://www.ske48.co.jp/rss/today.xml\',\r\n\'http://rssblog.ameba.jp/ske48official/rss20.xml\',\r\n\'http://rssblog.ameba.jp/sdn48official/rss20.xml\',\r\n\'http://www.dmm.com/akb48/-/list/=/shop=akb48/sort=date/rss=create/_jloff=1\',\r\n\'http://ch.nicovideo.jp/video/ch480?rss=2.0\',\r\n\'http://jbbs.livedoor.jp/bbs/subject.cgi/music/16148/rss\'\r\n);\r\n\r\n\r\nCURL_multiでコンテンツを取得し、いざsimplexml_load_stringで解析を試みると\r\n\r\nWarning: simplexml_load_string() [function.simplexml-load-string]: Entity: line 1: parser error : Space required after the Public Identifier\r\n\r\nと言うエラーが出て、フィードが取得出来ない。最初simplexml_load_stringにCURLで引っ張ってきたテキストデータを読み込む時に勝手にPHP側で整形しているのかもと思い、色々調べる。DOMの読み込みの時嵌った覚えがあったから。\r\n\r\nしかし結局Ameblo側でフィードのURLをRedirectしていた事が判明。CURL先生にリダイレクトしてもらい、追っかけをやってもらう。\r\n\r\n\r\ncurl_setopt($arCurl[$i], CURLOPT_RETURNTRANSFER, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_FOLLOWLOCATION, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_MAXREDIRS, 1);\r\n\r\n\r\nいや、しかしリダイレクトで追っかけを指示すると、マルチの効果が半減であんまりスピード出ない（泣）。','Amebaのフィード取得で嵌った件','','publish','open','open','','ameba%e3%81%ae%e3%83%95%e3%82%a3%e3%83%bc%e3%83%89%e5%8f%96%e5%be%97%e3%81%a7%e5%b5%8c%e3%81%a3%e3%81%9f%e4%bb%b6','','','2012-12-02 00:56:01','2012-12-01 15:56:01','',0,'http://49.212.213.226/wordpress/solution-log/?p=215',0,'post','',0),(216,1,'2012-12-02 00:53:06','2012-12-01 15:53:06','','Amebaのフィード取得で嵌った件','','inherit','open','open','','215-revision','','','2012-12-02 00:53:06','2012-12-01 15:53:06','',215,'http://49.212.213.226/wordpress/solution-log/?p=216',0,'revision','',0),(217,1,'2012-12-02 00:53:22','2012-12-01 15:53:22','CURLライブラリのマルチ機能を試そうと思い、AKB48のメンバーブログのフィードの一気解析を実行。\r\n\r\n\r\n// フィードURLの設定\r\n$arFeedUrl = array(\r\n\'http://gdata.youtube.com/feeds/base/videos?q=AKB48&alt=rss&client=ytapi-youtube-search&v=2\',\r\n\'http://rssblog.ameba.jp/akihabara48/rss20.xml\',\r\n\'http://gdata.youtube.com/feeds/base/users/AKB48/uploads?alt=rss&v=2&orderby=published&client=ytapi-youtube-profile\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://blog.watanabepro.co.jp/ooyashizuka/index.xml\',\r\n\r\n\'http://rssblog.ameba.jp/harukatayama/rss20.xml\',\r\n\r\n\'http://blog.watanabepro.co.jp/kuramochiasuka/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/sashihara-rino/rss20.xml\',\r\n\'http://blog.mariko-shinoda.net/index.rdf\',\r\n\'http://blog.watanabepro.co.jp/takajoaki/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/nakata-chisato/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakaya-sayaka/rss20.xml\',\r\n\'http://rssblog.ameba.jp/atsuko-maeda/rss20.xml\',\r\n\'http://rssblog.ameba.jp/amimaeda-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu11/rss20.xml\',\r\n\'http://rssblog.ameba.jp/uchidamayumi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/oshima-y/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/tanabe-miku/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakatsuka-tomomi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nitomoenoblog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/reina-fujie/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/rumifu-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/ishidaharuka-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu48/rss20.xml\',\r\n\'http://twitter.com/statuses/user_timeline/79973281.rss\',\r\n\'http://blog.watanabepro.co.jp/kashiwagiyuki/index.xml\',\r\n\'http://rssblog.ameba.jp/kitahara-rie/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/withamina/rss20.xml\',\r\n\'http://rssblog.ameba.jp/satosumire/rss20.xml\',\r\n\'http://blog.watanabepro.co.jp/satounatsuki/index.xml\',\r\n\'http://rssblog.ameba.jp/mariyasuzuki/rss20.xml\',\r\n\'http://rssblog.ameba.jp/chikano-rina/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu30/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://www.ske48.co.jp/rss/today.xml\',\r\n\'http://rssblog.ameba.jp/ske48official/rss20.xml\',\r\n\'http://rssblog.ameba.jp/sdn48official/rss20.xml\',\r\n\'http://www.dmm.com/akb48/-/list/=/shop=akb48/sort=date/rss=create/_jloff=1\',\r\n\'http://ch.nicovideo.jp/video/ch480?rss=2.0\',\r\n\'http://jbbs.livedoor.jp/bbs/subject.cgi/music/16148/rss\'\r\n);\r\n\r\n\r\nCURL_multiでコンテンツを取得し、いざsimplexml_load_stringで解析を試みると\r\n\r\nWarning: simplexml_load_string() [function.simplexml-load-string]: Entity: line 1: parser error : Space required after the Public Identifier\r\n\r\nと言うエラーが出て、フィードが取得出来ない。最初simplexml_load_stringにCURLで引っ張ってきたテキストデータを読み込む時に勝手にPHP側で整形しているのかもと思い、色々調べる。DOMの読み込みの時嵌った覚えがあったから。\r\n\r\nしかし結局Ameblo側でフィードのURLをRedirectしていた事が判明。CURL先生にリダイレクトしてもらい、追っかけをやってもらう。\r\n\r\n\r\ncurl_setopt($arCurl[$i], CURLOPT_RETURNTRANSFER, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_FOLLOWLOCATION, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_MAXREDIRS, 1);\r\n\r\n\r\nいや、しかしリダイレクトで追っかけを指示すると、マルチの効果が半減であんまりスピード出ない（泣）。','Amebaのフィード取得で嵌った件','','inherit','open','open','','215-revision-2','','','2012-12-02 00:53:22','2012-12-01 15:53:22','',215,'http://49.212.213.226/wordpress/solution-log/?p=217',0,'revision','',0),(219,1,'2012-12-02 00:54:08','2012-12-01 15:54:08','CURLライブラリのマルチ機能を試そうと思い、AKB48のメンバーブログのフィードの一気解析を実行。\r\n\r\n\r\n// フィードURLの設定\r\n$arFeedUrl = array(\r\n\'http://gdata.youtube.com/feeds/base/videos?q=AKB48&alt=rss&client=ytapi-youtube-search&v=2\',\r\n\'http://rssblog.ameba.jp/akihabara48/rss20.xml\',\r\n\'http://gdata.youtube.com/feeds/base/users/AKB48/uploads?alt=rss&v=2&orderby=published&client=ytapi-youtube-profile\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://blog.watanabepro.co.jp/ooyashizuka/index.xml\',\r\n\r\n\'http://rssblog.ameba.jp/harukatayama/rss20.xml\',\r\n\r\n\'http://blog.watanabepro.co.jp/kuramochiasuka/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/sashihara-rino/rss20.xml\',\r\n\'http://blog.mariko-shinoda.net/index.rdf\',\r\n\'http://blog.watanabepro.co.jp/takajoaki/index.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/nakata-chisato/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakaya-sayaka/rss20.xml\',\r\n\'http://rssblog.ameba.jp/atsuko-maeda/rss20.xml\',\r\n\'http://rssblog.ameba.jp/amimaeda-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu11/rss20.xml\',\r\n\'http://rssblog.ameba.jp/uchidamayumi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/oshima-y/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/tanabe-miku/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nakatsuka-tomomi/rss20.xml\',\r\n\'http://rssblog.ameba.jp/nitomoenoblog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/reina-fujie/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/no3b/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/rumifu-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/ishidaharuka-blog/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu48/rss20.xml\',\r\n\'http://twitter.com/statuses/user_timeline/79973281.rss\',\r\n\'http://blog.watanabepro.co.jp/kashiwagiyuki/index.xml\',\r\n\'http://rssblog.ameba.jp/kitahara-rie/rss20.xml\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/withamina/rss20.xml\',\r\n\'http://rssblog.ameba.jp/satosumire/rss20.xml\',\r\n\'http://blog.watanabepro.co.jp/satounatsuki/index.xml\',\r\n\'http://rssblog.ameba.jp/mariyasuzuki/rss20.xml\',\r\n\'http://rssblog.ameba.jp/chikano-rina/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://rssblog.ameba.jp/akimoto100323/rss20.xml\',\r\n\'http://rssblog.ameba.jp/xanadu30/rss20.xml\',\r\n\'http://blog-cdn.oricon.co.jp/watarirouka/index1_0.rdf\',\r\n\'http://www.ske48.co.jp/rss/today.xml\',\r\n\'http://rssblog.ameba.jp/ske48official/rss20.xml\',\r\n\'http://rssblog.ameba.jp/sdn48official/rss20.xml\',\r\n\'http://www.dmm.com/akb48/-/list/=/shop=akb48/sort=date/rss=create/_jloff=1\',\r\n\'http://ch.nicovideo.jp/video/ch480?rss=2.0\',\r\n\'http://jbbs.livedoor.jp/bbs/subject.cgi/music/16148/rss\'\r\n);\r\n\r\n\r\nCURL_multiでコンテンツを取得し、いざsimplexml_load_stringで解析を試みると\r\n\r\nWarning: simplexml_load_string() [function.simplexml-load-string]: Entity: line 1: parser error : Space required after the Public Identifier\r\n\r\nと言うエラーが出て、フィードが取得出来ない。最初simplexml_load_stringにCURLで引っ張ってきたテキストデータを読み込む時に勝手にPHP側で整形しているのかもと思い、色々調べる。DOMの読み込みの時嵌った覚えがあったから。\r\n\r\nしかし結局Ameblo側でフィードのURLをRedirectしていた事が判明。CURL先生にリダイレクトしてもらい、追っかけをやってもらう。\r\n\r\n\r\ncurl_setopt($arCurl[$i], CURLOPT_RETURNTRANSFER, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_FOLLOWLOCATION, true);\r\ncurl_setopt($arCurl[$i], CURLOPT_MAXREDIRS, 1);\r\n\r\n\r\nいや、しかしリダイレクトで追っかけを指示すると、マルチの効果が半減であんまりスピード出ない（泣）。','Amebaのフィード取得で嵌った件','','inherit','open','open','','215-revision-3','','','2012-12-02 00:54:08','2012-12-01 15:54:08','',215,'http://49.212.213.226/wordpress/solution-log/?p=219',0,'revision','',0),(220,1,'2011-11-06 15:28:03','2011-11-06 06:28:03','<a href=\"http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\">http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</a>','ＸＡＭＰＰ ver 1.7.3にPHPUnitをインストールする','','publish','open','open','','%ef%bd%98%ef%bd%81%ef%bd%8d%ef%bd%90%ef%bd%90-ver-1-7-3%e3%81%abphpunit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2012-12-02 01:00:46','2012-12-01 16:00:46','',0,'http://49.212.213.226/wordpress/solution-log/?p=220',0,'post','',0),(221,1,'2012-12-02 00:57:17','2012-12-01 15:57:17','','ＸＡＭＰＰ ver 1.7.3にPHPUnitをインストールする','','inherit','open','open','','220-revision','','','2012-12-02 00:57:17','2012-12-01 15:57:17','',220,'http://49.212.213.226/wordpress/solution-log/?p=221',0,'revision','',0),(222,1,'2012-12-02 00:58:03','2012-12-01 15:58:03','<a href=\"http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\">http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</a>','ＸＡＭＰＰ ver 1.7.3にPHPUnitをインストールする','','inherit','open','open','','220-revision-2','','','2012-12-02 00:58:03','2012-12-01 15:58:03','',220,'http://49.212.213.226/wordpress/solution-log/?p=222',0,'revision','',0),(223,1,'2012-12-02 00:58:30','2012-12-01 15:58:30','<a href=\"http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\">http://sinsengumi.net/blog/2010/09/xampp-1-7-3%E3%81%ABphpunit-3-5%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/</a>','ＸＡＭＰＰ ver 1.7.3にPHPUnitをインストールする','','inherit','open','open','','220-revision-3','','','2012-12-02 00:58:30','2012-12-01 15:58:30','',220,'http://49.212.213.226/wordpress/solution-log/?p=223',0,'revision','',0),(224,1,'2012-12-02 01:03:12','2012-12-01 16:03:12','http://d.hatena.ne.jp/enokitech/20090501/1241142788\r\n\r\n\r\nまっつんのブログ\r\n\r\n\r\nまっつんのブログ\r\n\r\n設定→一般→コンテンツ・タイプ の「テキスト」から、エンコード タイプを変更したいファイルの拡張子 を選択し、下の「デフォルト エンコード 」欄にUTF-8 と記入。','EclipseでSVNのデータと比較すると文字化け','','publish','open','open','','eclipse%e3%81%a7svn%e3%81%ae%e3%83%87%e3%83%bc%e3%82%bf%e3%81%a8%e6%af%94%e8%bc%83%e3%81%99%e3%82%8b%e3%81%a8%e6%96%87%e5%ad%97%e5%8c%96%e3%81%91','','','2012-12-02 01:03:12','2012-12-01 16:03:12','',0,'http://49.212.213.226/wordpress/solution-log/?p=224',0,'post','',0),(225,1,'2012-12-02 01:02:01','2012-12-01 16:02:01','','Smarty 自作プラグイン','','inherit','open','open','','224-revision','','','2012-12-02 01:02:01','2012-12-01 16:02:01','',224,'http://49.212.213.226/wordpress/solution-log/?p=225',0,'revision','',0),(226,1,'2011-11-02 18:38:17','2011-11-02 09:38:17','Perlを始めるにあたり、どうやらPerltidyなるものが必要らしいと言う事でインストールしてみた。\r\n<a href=\"http://perltidy.sourceforge.net/\">http://perltidy.sourceforge.net/</a>\r\n\r\n環境は\r\nWin XP\r\nXampp 1.7.3\r\n\r\n\r\nいきなり『cpan Perl::Tidy』を入力すると、YAMLが入ってないよって怒られるので、まずはYAMLをインストールする。\r\n<ol>\r\n<li>XAMPPを起動\r\n<li>XAMPPのshellを起動\r\n<li>『cd　C:\\xampp\\perl\\bin』を入力\r\n<li>『ｃpan YAML』を入力　→　『C:\\xampp\\perl\\site\\lib』にインストールされる\r\n<li>『cpan Perl::Tidy』を入力　→　『C:\\xampp\\perl\\bin』にインストールされる\r\n</ol>\r\n\r\n\r\nどうやら\r\n\r\nC:\\xampp\\perl\\bin\\.cpan\\build\r\n\r\n内に、Perl::Tidyのインストールに失敗した解凍済みファイルが残っていると失敗する。よってYAMLが入ってないのにcpanコマンド叩いた人は、中のファイルを削除しておくとGood!','ＸＡＭＰＰにPerltidyをインストールする','','publish','open','open','','%ef%bd%98%ef%bd%81%ef%bd%8d%ef%bd%90%ef%bd%90%e3%81%abperltidy%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2012-12-02 10:37:07','2012-12-02 01:37:07','',0,'http://49.212.213.226/wordpress/solution-log/?p=226',0,'post','',0),(227,1,'2012-12-02 10:35:49','2012-12-02 01:35:49','Perlを始めるにあたり、どうやらPerltidyなるものが必要らしいと言う事でインストールしてみた。\n<a href=\"http://perltidy.sourceforge.net/\">http://perltidy.sourceforge.net/</a>\n\n環境は\nWin XP\nXampp 1.7.3\n\n\nいきなり『cpan Perl::Tidy』を入力すると、YAMLが入ってないよって怒られるので、まずはYAMLをインストールする。\n\n1. XAMPPを起動\n\n2. XAMPPのshellを起動\n\n3. 『cd　C:\\xampp\\perl\\bin』を入力\n\n4. 『ｃpan YAML』を入力　→　『C:\\xampp\\perl\\site\\lib』にインストールされる\n\n5. 『cpan Perl::Tidy』を入力　→　『C:\\xampp\\perl\\bin』にインストールされる\n\n\nどうやら\n\nC:\\xampp\\perl\\bin\\.cpan\\build\n\n内に、Perl::Tidyのインストールに失敗した解凍済みファイルが残っていると失敗する。よってYAMLが入ってないのにcpanコマンド叩いた人は、中のファイルを削除しておくとGood!','ＸＡＭＰＰにPerltidyをインストールする','','inherit','open','open','','226-revision','','','2012-12-02 10:35:49','2012-12-02 01:35:49','',226,'http://49.212.213.226/wordpress/solution-log/?p=227',0,'revision','',0),(228,1,'2012-12-02 10:36:17','2012-12-02 01:36:17','Perlを始めるにあたり、どうやらPerltidyなるものが必要らしいと言う事でインストールしてみた。\r\n<a href=\"http://perltidy.sourceforge.net/\">http://perltidy.sourceforge.net/</a>\r\n\r\n環境は\r\nWin XP\r\nXampp 1.7.3\r\n\r\n\r\nいきなり『cpan Perl::Tidy』を入力すると、YAMLが入ってないよって怒られるので、まずはYAMLをインストールする。\r\n<ol>\r\n<li>XAMPPを起動\r\n<li>XAMPPのshellを起動\r\n<li>『cd　C:\\xampp\\perl\\bin』を入力\r\n<li>『ｃpan YAML』を入力　→　『C:\\xampp\\perl\\site\\lib』にインストールされる\r\n<li>『cpan Perl::Tidy』を入力　→　『C:\\xampp\\perl\\bin』にインストールされる\r\n</ol>\r\n\r\n\r\nどうやら\r\n\r\nC:\\xampp\\perl\\bin\\.cpan\\build\r\n\r\n内に、Perl::Tidyのインストールに失敗した解凍済みファイルが残っていると失敗する。よってYAMLが入ってないのにcpanコマンド叩いた人は、中のファイルを削除しておくとGood!','ＸＡＭＰＰにPerltidyをインストールする','','inherit','open','open','','226-revision-2','','','2012-12-02 10:36:17','2012-12-02 01:36:17','',226,'http://49.212.213.226/wordpress/solution-log/?p=228',0,'revision','',0),(229,1,'2011-11-14 20:43:31','2011-11-14 11:43:31','前投稿からの続き\r\n【ＸＡＭＰＰにPerltidyをインストールする】\r\n<a href=\"http://ameblo.jp/smackmybitchup/entry-11078527558.html\">http://ameblo.jp/smackmybitchup/entry-11078527558.html</a>\r\n\r\n\r\n環境\r\nWindows XP ver3\r\nXAMPP 1.7.3\r\n\r\nPerltidyをインストールできたので勢いに任せてPerl::Criticもインストール\r\n<a href=\"http://perlcritic.com/\">http://perlcritic.com/</a>\r\n\r\nまず、普通に\r\nC:\\xampp\\perl\\binから\r\n【cpan Perl::Critic】\r\nエラー。どうやらPPIと言うライブラリが必要らしい。*1\r\nそこで\r\n【cpan force PPI】\r\nで、結局Perl::Criticの通常インストールもテストエラーに終わるので\r\n\r\n【cpan force Perl::Critic】\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*1\r\n\r\n【 たまには呪文をとなえてみるか：仕事版 / おじいさんなので、Perl::Critic入れてみた】\r\n\r\n<a href=\"http://cast-a-spell.at.webry.info/200806/article_1.html\">http://cast-a-spell.at.webry.info/200806/article_1.html</a>','XAMPPにPerl::Criticをインストールする','','publish','open','open','','xampp%e3%81%abperlcritic%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2012-12-02 10:39:54','2012-12-02 01:39:54','',0,'http://49.212.213.226/wordpress/solution-log/?p=229',0,'post','',0),(230,1,'2012-12-02 10:38:56','2012-12-02 01:38:56','前投稿からの続き\n【ＸＡＭＰＰにPerltidyをインストールする】\n<a href=\"http://ameblo.jp/smackmybitchup/entry-11078527558.html\">http://ameblo.jp/smackmybitchup/entry-11078527558.html</a>\n\n\n環境\nWindows XP ver3\nXAMPP 1.7.3\n\n\nPerltidyをインストールできたので勢いに任せてPerl::Criticもインストール\n\n<a href=\"http://perlcritic.com/\">http://perlcritic.com/</a>\n\nまず、普通に\n\nC:\\xampp\\perl\\binから\n\n【cpan Perl::Critic】\n\nエラー。どうやらPPIと言うライブラリが必要らしい。*1\n\nそこで\n\n【cpan force PPI】\nで、結局Perl::Criticの通常インストールもテストエラーに終わるので\n\n【cpan force Perl::Critic】\n\n\n\n\n\n\n\n\n*1\n\n【 たまには呪文をとなえてみるか：仕事版 / おじいさんなので、Perl::Critic入れてみた】\n\n<a href=\"http://cast-a-spell.at.webry.info/200806/article_1.html\">http://cast-a-spell.at.webry.info/200806/article_1.html</a>','XAMPPにPerl::Criticをインストールする','','inherit','open','open','','229-revision','','','2012-12-02 10:38:56','2012-12-02 01:38:56','',229,'http://49.212.213.226/wordpress/solution-log/?p=230',0,'revision','',0),(231,1,'2012-12-02 10:39:31','2012-12-02 01:39:31','前投稿からの続き\r\n【ＸＡＭＰＰにPerltidyをインストールする】\r\n<a href=\"http://ameblo.jp/smackmybitchup/entry-11078527558.html\">http://ameblo.jp/smackmybitchup/entry-11078527558.html</a>\r\n\r\n\r\n環境\r\nWindows XP ver3\r\nXAMPP 1.7.3\r\n\r\nPerltidyをインストールできたので勢いに任せてPerl::Criticもインストール\r\n<a href=\"http://perlcritic.com/\">http://perlcritic.com/</a>\r\n\r\nまず、普通に\r\nC:\\xampp\\perl\\binから\r\n【cpan Perl::Critic】\r\nエラー。どうやらPPIと言うライブラリが必要らしい。*1\r\nそこで\r\n【cpan force PPI】\r\nで、結局Perl::Criticの通常インストールもテストエラーに終わるので\r\n\r\n【cpan force Perl::Critic】\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n*1\r\n\r\n【 たまには呪文をとなえてみるか：仕事版 / おじいさんなので、Perl::Critic入れてみた】\r\n\r\n<a href=\"http://cast-a-spell.at.webry.info/200806/article_1.html\">http://cast-a-spell.at.webry.info/200806/article_1.html</a>','XAMPPにPerl::Criticをインストールする','','inherit','open','open','','229-revision-2','','','2012-12-02 10:39:31','2012-12-02 01:39:31','',229,'http://49.212.213.226/wordpress/solution-log/?p=231',0,'revision','',0),(232,1,'2011-11-26 21:09:48','2011-11-26 12:09:48','スマホサイトを作るにあたり、覚書きみたいなもの。\r\n[html]\r\n&lt;!DOCTYPE html&gt;\r\n&lt;html lang=&quot;ja&quot;&gt;\r\n&lt;head&gt;\r\n&lt;meta charset=&quot;utf-8&quot;&gt;\r\n&lt;title&gt;mysite&lt;/title&gt;\r\n&lt;meta name=&quot;description&quot; content=&quot;&quot;&gt;\r\n&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=0&quot;&gt;\r\n&lt;link rel=&quot;apple-touch-icon&quot; href=&quot;&quot;&gt;\r\n&lt;link rel=&quot;canonical&quot; href=&quot;&quot;&gt;\r\n&lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt;\r\n&lt;/head&gt;\r\n&lt;body&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n[/html]\r\nヤフーのiPhone版サイトがこんな感じなので、これに順ずるものにしておくのが無難か？','スマホサイトに関する覚書き DOCTYPE宣言','','publish','open','open','','%e3%82%b9%e3%83%9e%e3%83%9b%e3%82%b5%e3%82%a4%e3%83%88%e3%81%ab%e9%96%a2%e3%81%99%e3%82%8b%e8%a6%9a%e6%9b%b8%e3%81%8d-doctype%e5%ae%a3%e8%a8%80','','','2012-12-02 14:41:06','2012-12-02 05:41:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=232',0,'post','',0),(233,1,'2012-12-02 10:40:24','2012-12-02 01:40:24','','スマホサイトに関する覚書き DOCTYPE宣言','','inherit','open','open','','232-revision','','','2012-12-02 10:40:24','2012-12-02 01:40:24','',232,'http://49.212.213.226/wordpress/solution-log/?p=233',0,'revision','',0),(234,1,'2012-12-02 10:40:48','2012-12-02 01:40:48','スマホサイトを作るにあたり、覚書きみたいなもの。\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"ja\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>mysite</title>\r\n<meta name=\"description\" content=\"\">\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=0\">\r\n<link rel=\"apple-touch-icon\" href=\"\">\r\n<link rel=\"canonical\" href=\"\">\r\n<link rel=\"stylesheet\" href=\"\">\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n\r\nヤフーのiPhone版サイトがこんな感じなので、これに順ずるものにしておくのが無難か？','スマホサイトに関する覚書き DOCTYPE宣言','','inherit','open','open','','232-revision-2','','','2012-12-02 10:40:48','2012-12-02 01:40:48','',232,'http://49.212.213.226/wordpress/solution-log/?p=234',0,'revision','',0),(235,1,'2012-07-03 17:59:07','2012-07-03 08:59:07','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\nこちらの<a href=\"http://labs.unoh.net/2009/12/2009python.html\">サイト</a>を参考にvartualenvのファイルを置く場所をさくらサーバーに作る。\r\n<pre class=\"brush: bash\">\r\nmkdir -p ~/local/src\r\n</pre>\r\npipを使えるようにするために、varualenvをインストールする。\r\n<a href=\"http://pypi.python.org/pypi/virtualenv/\">このページ</a>から最新版をダウンロードしてデスクトップにでも置く。これをFFFTPで「~/local/src」フォルダにアップする。\r\nそして\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n</pre>\r\nこの時点で<b>~/local/bin</b>以下にpythonやpipが作成される。\r\n<h3>Subversionのインストール</h3>\r\n<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>を参考にインストール\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n</pre>\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n<pre class=\"brush: bash\">\r\nln -s ~/local/include/python2.7 ~/local/include/python\r\nln -s ~/local/lib/python2.7 ~/local/lib/python\r\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n</pre>\r\n<h3>Babelをインストール</h3>\r\n<pre class=\"brush: bash\">\r\neasy_install Babel==0.9.5\r\n</pre>\r\n<h3>Tracをインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd ~/local\r\npip install trac mysql-python\r\n</pre>\r\n1～2分程度でインストールされるはず\r\n\r\n後は<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>の<b>Trac環境の作成</b>以下を参考にする。自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした。\r\n<h3>その他注意</h3>\r\n<ul>\r\n<li>リポジトリのソースが文字化けする場合は<a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">trac.iniの設定をいじる</a>\r\n<li>tracの動作がもっさりしている場合は、<a href=\"http://d.hatena.ne.jp/orangehat/20080421\">cssや画像データにシンボリックリンクを通す</a>\r\n<li>htdocsフォルダはtracのバージョンによって異なるので適宜探す。<b>ver0.13</b>だと<b>~/local/lib/python2.7/site-packages/trac/htdocs</b>\r\n</ul>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://trac.edgewall.org/wiki/TracInstall\">TracInstall – The Trac Project</a>\r\n<li><a href=\"http://labs.unoh.net/2009/12/2009python.html\">ウノウラボ by Zynga Japan: 2009年版Python開発環境を整えよう</a>\r\n<li><a href=\"http://pypi.python.org/pypi/virtualenv/\">virtualenv 1.8.4 : Python Package Index</a>\r\n<li><a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">TracJaInstall – attosoft.info Trac</a>\r\n<li><a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">Tracのリポジトリブラウザで文字化け - 道ばたに仰ぐ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/orangehat/20080421\">tracの高速化 - World Wide Wonderful</a>\r\n</ul>','さくらのレンタルサーバーにTracをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%ae%e3%83%ac%e3%83%b3%e3%82%bf%e3%83%ab%e3%82%b5%e3%83%bc%e3%83%90%e3%83%bc%e3%81%abtrac%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99','','','2012-12-04 21:33:14','2012-12-04 12:33:14','',0,'http://49.212.213.226/wordpress/solution-log/?p=235',0,'post','',0),(236,1,'2012-12-02 10:48:27','2012-12-02 01:48:27','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\n今回入れたのはPython2.7.3\n\nこのページを参考に\nhttp://trac.edgewall.org/wiki/TracInstall\n<h3>インストール準備</h3>\nまずはフォルダ構成を確認。\n\n/home/[username]\n□/local\n-/lib\n-/src\n□/tmp\n□/var\n-/svn/repos\n-/trac/project\n□/www\n\n使ったツールは\n-Windows XP\n-Poderosa\n-FFFTP(フォルダやファイルの確認用)\n<h3>vartualenvのインストール</h3>\n参考にしたサイト\nhttp://labs.unoh.net/2009/12/2009python.html\n\nvartualenvのファイルを置く場所をさくらサーバーに作る\n\nPoderosaから\nmkdir -p ~/local/src\n\npipを使えるようにするために、varualenvをインストールする。\nこのページから最新版をダウンロードしてデスクトップにでも置く\nhttp://pypi.python.org/pypi/virtualenv/\n\nこれをFFFTPで「~/local/src」フォルダにアップする。\nそしてPoderosaから\n\ncd ~/local/src\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\ncd ~/local\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\n\nこの時点で\n~/local/bin以下に\npythonやpiｐが作成される\n<h3>Subversionのインストール</h3>\nこちらのサイトを参考にインストール\nhttp://attosoft.info/trac/wiki/TracJaInstall\n\ncd ~/local/src\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\ntar zxvf subversion-1.6.16.tar.gz\ntar zxvf subversion-deps-1.6.16.tar.gz\ncd subversion-1.6.16\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\nmake\nmake install\nmake swig-py\nmake install-swig-py\n\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\n\n%ln -s ~/local/include/python2.7 ~/local/include/python\n%ln -s ~/local/lib/python2.7 ~/local/lib/python\n%ln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\n%ln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\n<h3>Babelをインストール</h3>\neasy_install Babel==0.9.5\n<h3>Tracをインストール</h3>\ncd ~/local\npip install trac mysql-python\n\n1～2分程度でインストールされるはず\n\n後はこちらのサイトの\nhttp://attosoft.info/trac/wiki/TracJaInstall\nTrac 環境の作成\n\n以下を参考にする\n\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\n<h3>その他注意</h3>\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\n\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\nhttp://d.hatena.ne.jp/orangehat/20080421\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\n\n0.13だと\n~/local/lib/python2.7/site-packages/trac/htdocs','さくらのレンタルサーバーにtracをインストールする','','inherit','open','open','','235-revision','','','2012-12-02 10:48:27','2012-12-02 01:48:27','',235,'http://49.212.213.226/wordpress/solution-log/?p=236',0,'revision','',0),(237,1,'2012-12-02 10:49:07','2012-12-02 01:49:07','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\nこのページを参考に\r\nhttp://trac.edgewall.org/wiki/TracInstall\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\n参考にしたサイト\r\nhttp://labs.unoh.net/2009/12/2009python.html\r\n\r\nvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\nこのページから最新版をダウンロードしてデスクトップにでも置く\r\nhttp://pypi.python.org/pypi/virtualenv/\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\nこちらのサイトを参考にインストール\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\n\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n\r\n%ln -s ~/local/include/python2.7 ~/local/include/python\r\n%ln -s ~/local/lib/python2.7 ~/local/lib/python\r\n%ln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\n%ln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n<h3>Babelをインストール</h3>\r\neasy_install Babel==0.9.5\r\n<h3>Tracをインストール</h3>\r\ncd ~/local\r\npip install trac mysql-python\r\n\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs','さくらのレンタルサーバーにtracをインストールする','','inherit','open','open','','235-revision-2','','','2012-12-02 10:49:07','2012-12-02 01:49:07','',235,'http://49.212.213.226/wordpress/solution-log/?p=237',0,'revision','',0),(238,1,'2011-10-29 00:32:57','2011-10-28 15:32:57','tableHandlerAbstract\r\n\r\nデータベース接続クラスを切り分ける\r\n\r\n\r\nModelAbstract\r\n\r\nsetCache →　saveCacheか他の名前　creatCache()\r\n\r\n\r\n\r\nPathFramework\r\n\r\ntry - catch　にする','作業メモ','','publish','open','open','','%e4%bd%9c%e6%a5%ad%e3%83%a1%e3%83%a2','','','2012-12-02 10:58:40','2012-12-02 01:58:40','',0,'http://49.212.213.226/wordpress/solution-log/?p=238',0,'post','',16),(239,1,'2012-12-02 10:57:36','2012-12-02 01:57:36','','作業メモ','','inherit','open','open','','238-revision','','','2012-12-02 10:57:36','2012-12-02 01:57:36','',238,'http://49.212.213.226/wordpress/solution-log/?p=239',0,'revision','',0),(240,1,'2012-12-02 10:57:57','2012-12-02 01:57:57','tableHandlerAbstract\r\n\r\nデータベース接続クラスを切り分ける\r\n\r\n\r\nModelAbstract\r\n\r\nsetCache →　saveCacheか他の名前　creatCache()\r\n\r\n\r\n\r\nPathFramework\r\n\r\ntry - catch　にする','作業メモ','','inherit','open','open','','238-revision-2','','','2012-12-02 10:57:57','2012-12-02 01:57:57','',238,'http://49.212.213.226/wordpress/solution-log/?p=240',0,'revision','',0),(241,1,'2012-12-02 10:58:26','2012-12-02 01:58:26','tableHandlerAbstract\r\n\r\nデータベース接続クラスを切り分ける\r\n\r\n\r\nModelAbstract\r\n\r\nsetCache →　saveCacheか他の名前　creatCache()\r\n\r\n\r\n\r\nPathFramework\r\n\r\ntry - catch　にする','作業メモ','','inherit','open','open','','238-revision-3','','','2012-12-02 10:58:26','2012-12-02 01:58:26','',238,'http://49.212.213.226/wordpress/solution-log/?p=241',0,'revision','',0),(242,1,'2012-12-02 10:49:37','2012-12-02 01:49:37','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\nこのページを参考に\r\nhttp://trac.edgewall.org/wiki/TracInstall\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\n参考にしたサイト\r\nhttp://labs.unoh.net/2009/12/2009python.html\r\n\r\nvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\nこのページから最新版をダウンロードしてデスクトップにでも置く\r\nhttp://pypi.python.org/pypi/virtualenv/\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\nこちらのサイトを参考にインストール\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\n\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n\r\n%ln -s ~/local/include/python2.7 ~/local/include/python\r\n%ln -s ~/local/lib/python2.7 ~/local/lib/python\r\n%ln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\n%ln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n<h3>Babelをインストール</h3>\r\neasy_install Babel==0.9.5\r\n<h3>Tracをインストール</h3>\r\ncd ~/local\r\npip install trac mysql-python\r\n\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs','さくらのレンタルサーバーにtracをインストールする','','inherit','open','open','','235-revision-3','','','2012-12-02 10:49:37','2012-12-02 01:49:37','',235,'http://49.212.213.226/wordpress/solution-log/?p=242',0,'revision','',0),(243,1,'2012-11-30 22:05:11','2012-11-30 13:05:11','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-11-30 22:05:11','2012-11-30 13:05:11','',199,'http://49.212.213.226/wordpress/solution-log/?p=243',0,'revision','',0),(244,1,'2012-12-02 13:07:38','2012-12-02 04:07:38','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\n<pre class=\"brush: bash\"></pre>\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n<pre class=\"brush: bash\"></pre>\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:07:38','2012-12-02 04:07:38','',199,'http://49.212.213.226/wordpress/solution-log/?p=244',0,'revision','',0),(245,1,'2012-12-02 13:08:26','2012-12-02 04:08:26','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:08:26','2012-12-02 04:08:26','',199,'http://49.212.213.226/wordpress/solution-log/?p=245',0,'revision','',0),(246,1,'2012-12-02 13:21:55','2012-12-02 04:21:55','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから<pre class=\"brush: bash\">\r\n&lt;pre&gt;cd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:21:55','2012-12-02 04:21:55','',199,'http://49.212.213.226/wordpress/solution-log/?p=246',0,'revision','',0),(247,1,'2012-12-02 13:22:27','2012-12-02 04:22:27','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから<pre class=\"brush: bash\">\r\n&lt;pre&gt;cd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:22:27','2012-12-02 04:22:27','',199,'http://49.212.213.226/wordpress/solution-log/?p=247',0,'revision','',0),(248,1,'2012-12-02 13:22:48','2012-12-02 04:22:48','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから<pre class=\"brush: bash\">\r\n&lt;pre&gt;cd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:22:48','2012-12-02 04:22:48','',199,'http://49.212.213.226/wordpress/solution-log/?p=248',0,'revision','',0),(249,1,'2015-12-17 20:28:35','2015-12-17 11:28:35','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\ngit clone https://github.com/WordPress/WordPress.git\r\nmv WordPress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<h4>移設元サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\n# 一覧でWordPress用のデータベースを確認する\r\nSHOW DATABASES;\r\n\r\n# 登録されているユーザを確認する\r\nSELECT user, host FROM mysql.user;\r\n\r\n# WordPress用データベースのユーザーを確認する\r\nSHOW GRANTS for &amp;#039;user&amp;#039;@&amp;#039;host&amp;#039;;\r\n\r\n# MySQLデータをダンプする\r\nmysqldump -u {user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &gt; /tmp/wp_database.sql\r\n\r\n# ベースとなるURLを書き換える\r\nsed &#039;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&#039; /tmp/wp_database.sql &gt; /tmp/wp_database.sql2\r\n</pre>\r\n\r\n<h4>移設先サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nMariaDB [(none)]&gt; create database wp_database default character set utf8;\r\nMariaDB [(none)]&gt; grant all on wp_user.* to wp_user@localhost identified by &#039;********&#039;;\r\nMariaDB [(none)]&gt; flush privileges;\r\nMariaDB [(none)]&gt; exit;\r\n\r\nmysql -u root -pXXXXXXXX wp_database &lt; wp_database.sql\r\n</pre>\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','inherit','open','open','','199-autosave-v1','','','2015-12-17 20:28:35','2015-12-17 11:28:35','',199,'http://49.212.213.226/wordpress/solution-log/?p=249',0,'revision','',0),(250,1,'2012-12-02 13:23:27','2012-12-02 04:23:27','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n＆nbsp;\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから<pre class=\"brush: bash\">\r\n&lt;pre&gt;cd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n＆nbsp;\r\n＆nbsp;\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n＆nbsp;\r\n＆nbsp;\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:23:27','2012-12-02 04:23:27','',199,'http://49.212.213.226/wordpress/solution-log/?p=250',0,'revision','',0),(251,1,'2012-12-02 13:24:41','2012-12-02 04:24:41','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\n\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:24:41','2012-12-02 04:24:41','',199,'http://49.212.213.226/wordpress/solution-log/?p=251',0,'revision','',0),(252,1,'2012-12-02 13:25:58','2012-12-02 04:25:58','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:25:58','2012-12-02 04:25:58','',199,'http://49.212.213.226/wordpress/solution-log/?p=252',0,'revision','',0),(253,1,'2012-12-01 23:27:28','2012-12-01 14:27:28','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定を行う。\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n\r\n書き込み内容\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n<Proxy http://localhost:8080/jenkins*>\r\nOrder deny,allow\r\nAllow from all\r\n</Proxy>\r\n\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\nJENKINS_ARGS=\"--prefix=/jenkins\"\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-7','','','2012-12-01 23:27:28','2012-12-01 14:27:28','',201,'http://49.212.213.226/wordpress/solution-log/?p=253',0,'revision','',0),(254,1,'2012-12-02 13:32:38','2012-12-02 04:32:38','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\"></pre>\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n<pre class=\"brush: bash\"></pre>\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\"></pre>\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n<pre class=\"brush: bash\"></pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\"></pre>\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n<pre class=\"brush: bash\"></pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\"></pre>\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n<Proxy http://localhost:8080/jenkins*>\r\nOrder deny,allow\r\nAllow from all\r\n</Proxy>\r\n<pre class=\"brush: bash\"></pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\"></pre>\r\nJENKINS_ARGS=\"--prefix=/jenkins\"\r\n<pre class=\"brush: bash\"></pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-8','','','2012-12-02 13:32:38','2012-12-02 04:32:38','',201,'http://49.212.213.226/wordpress/solution-log/?p=254',0,'revision','',0),(255,1,'2012-11-25 23:21:53','2012-11-25 14:21:53','yum install gcc php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n\r\nphp.iniにextension=ssh2.soを書き加える\r\n\r\n\r\nサンプルコード\r\n\r\n<?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo \"Authentication Successful!\\n\";\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?>\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定刷ること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-4','','','2012-11-25 23:21:53','2012-11-25 14:21:53','',183,'http://49.212.213.226/wordpress/solution-log/?p=255',0,'revision','',0),(256,1,'2012-12-24 02:03:22','2012-12-23 17:03:22','<h3>PECL::ssh2をインストールする</h3>\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\n\n<pre class=\"brush: bash\">\nyum install php-devel php-pear libssh2 libssh2-devel\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\n</pre>\n\nphp.iniを開き、extension=ssh2.soを書き加える\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\n[php]\n&lt;?php\n\n$connection = ssh2_connect(\'ssh.host\', 22);\n\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\n	echo &quot;Authentication Successful!\\n&quot;;\n} else {\n	die(\'Authentication Failed...\');\n}\n\nssh2_scp_send($connection, \'/remote/file\',\n\'/local/file\', 0644);\n\n?&gt;\n[/php]\n\nファイル名はローカルとリモートで必ずフルパスで指定すること！\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">Installing SSH2 Extension for PHP on CentOS 5 &#124;  Dynamic Hosting Blog/</a></li>\n</ul>','CentOS6にPECL::ssh2をインストールする','','inherit','open','open','','183-autosave','','','2012-12-24 02:03:22','2012-12-23 17:03:22','',183,'http://49.212.213.226/wordpress/solution-log/?p=256',0,'revision','',0),(257,1,'2012-12-02 14:13:25','2012-12-02 05:13:25','<pre class=\"brush: bash\">\r\nyum install gcc php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\n\r\nphp.iniにextension=ssh2.soを書き加える\r\n\r\n\r\nサンプルコード\r\n[php]\r\n&lt;?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\nファイル名はローカルとリモートで必ずフルパスで指定刷ること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-5','','','2012-12-02 14:13:25','2012-12-02 05:13:25','',183,'http://49.212.213.226/wordpress/solution-log/?p=257',0,'revision','',0),(258,1,'2012-12-02 14:16:48','2012-12-02 05:16:48','<h3>PECL SSH2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n\r\n<h3>PECL SSH2を使ったサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-6','','','2012-12-02 14:16:48','2012-12-02 05:16:48','',183,'http://49.212.213.226/wordpress/solution-log/?p=258',0,'revision','',0),(259,1,'2012-12-02 14:18:12','2012-12-02 05:18:12','<h3>PECL SSH2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL SSH2を使ったサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-7','','','2012-12-02 14:18:12','2012-12-02 05:18:12','',183,'http://49.212.213.226/wordpress/solution-log/?p=259',0,'revision','',0),(260,1,'2012-12-02 14:18:33','2012-12-02 05:18:33','<h3>PECL SSH2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL SSH2を使ったサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPecl SSH2をインストールする','','inherit','open','open','','183-revision-8','','','2012-12-02 14:18:33','2012-12-02 05:18:33','',183,'http://49.212.213.226/wordpress/solution-log/?p=260',0,'revision','',0),(261,1,'2012-12-02 13:34:11','2012-12-02 04:34:11','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-9','','','2012-12-02 13:34:11','2012-12-02 04:34:11','',201,'http://49.212.213.226/wordpress/solution-log/?p=261',0,'revision','',0),(262,1,'2012-12-02 14:22:14','2012-12-02 05:22:14','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n<hr>\r\n\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-10','','','2012-12-02 14:22:14','2012-12-02 05:22:14','',201,'http://49.212.213.226/wordpress/solution-log/?p=262',0,'revision','',0),(263,1,'2012-11-17 00:47:07','2012-11-16 15:47:07','gitを使う必要が出てきたのでインストール。\r\n\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\n\r\n<kbd>yum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel</kbd>\r\n\r\ngitのサイトから最新版を入手してインストール\r\n<kbd>cd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install</kbd>\r\n\r\nCan\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃらって言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n\r\n<kbd>yum install perl-ExtUtils-MakeMaker</kbd>\r\n\r\nまたmakeコマンドが実行出来ないときは\r\n\r\n<kbd>yum install gcc</kbd>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-5','','','2012-11-17 00:47:07','2012-11-16 15:47:07','',165,'http://49.212.213.226/wordpress/solution-log/?p=263',0,'revision','',0),(264,1,'2012-12-02 14:33:03','2012-12-02 05:33:03','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\nどうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n\r\n<h3>gitをインストール</h3>\r\ngitのサイトから最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n<pre class=\"brush: bash\">\r\n\r\n&lt;b&gt;Can\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃら&lt;/b&gt;って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker&lt;/kbd&gt;\r\n</pre>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-6','','','2012-12-02 14:33:03','2012-12-02 05:33:03','',165,'http://49.212.213.226/wordpress/solution-log/?p=264',0,'revision','',0),(265,1,'2012-12-02 14:33:27','2012-12-02 05:33:27','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\nどうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n\r\n<h3>gitをインストール</h3>\r\ngitのサイトから最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃら</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker&lt;/kbd&gt;\r\n</pre>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-7','','','2012-12-02 14:33:27','2012-12-02 05:33:27','',165,'http://49.212.213.226/wordpress/solution-log/?p=265',0,'revision','',0),(266,1,'2012-12-02 10:41:18','2012-12-02 01:41:18','スマホサイトを作るにあたり、覚書きみたいなもの。\r\n\r\n<!DOCTYPE html>\r\n<html lang=\"ja\">\r\n<head>\r\n<meta charset=\"utf-8\">\r\n<title>mysite</title>\r\n<meta name=\"description\" content=\"\">\r\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=0\">\r\n<link rel=\"apple-touch-icon\" href=\"\">\r\n<link rel=\"canonical\" href=\"\">\r\n<link rel=\"stylesheet\" href=\"\">\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n\r\nヤフーのiPhone版サイトがこんな感じなので、これに順ずるものにしておくのが無難か？','スマホサイトに関する覚書き DOCTYPE宣言','','inherit','open','open','','232-revision-3','','','2012-12-02 10:41:18','2012-12-02 01:41:18','',232,'http://49.212.213.226/wordpress/solution-log/?p=266',0,'revision','',0),(267,1,'2012-12-02 14:26:41','2012-12-02 05:26:41','またApacheとRedmineの連動設定が終わってないが、先にJenkinsを入れておく事にした。\r\n\r\n<h3>Jenkinsのインストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを機動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nこれでJenkinsのURLが<a href=\"http://localhost:8080\">http://localhost:8080</a>から<a href=\"http://localhost/jenkins\">http://localhost/jenkins</a>へ変更された。\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n<hr>\r\n\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-11','','','2012-12-02 14:26:41','2012-12-02 05:26:41','',201,'http://49.212.213.226/wordpress/solution-log/?p=267',0,'revision','',0),(272,1,'2013-02-21 19:24:31','2013-02-21 10:24:31','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\n<h3>MySQL5.5系をインストールする</h3>\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\n<pre class=\"brush: bash\">\n# MySQLを停止する\n/etc/rc.d/init.d/mysqld stop\n# MySQLを削除する\nyum erase mysql mysql-server\n# 5.5系をインストール\nyum --enablerepo=remi install mysql mysql-server\n</pre>\n<h3>MySQLの初期設定を行う</h3>\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\n<pre class=\"brush: bash\">\n/etc/rc.d/init.d/mysqld start\nmysql_secure_installation\n</pre>\nこのあと適宜ユーザー名やパスワードを設定する\n<h3>MySQLのバージョンを確認する</h3>\n一応ここでバージョンを確認しておく\n<pre class=\"brush: bash\">\nmysql --version\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\n</pre>\n\n<h3>my.confを設定する</h3>\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\n<pre class=\"brush: text\">\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\ncharacter-set-server=utf8\n\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n[mysql]\ndefault-character-set=utf8\n</pre>\n<h3>phpMyAdminをインストールする</h3>\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\n<pre class=\"brush: bash\">\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\n</pre>\nもしくはSourceForgeのサイトの「Problems with the download? Please use this direct link, or try another mirror. 」を右クリックでダウンロード出きるのでwgetでもいける。\n\nphpMyAdminのアーカイブを展開する場合は\n<pre class=\"brush: bash\">\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\n</pre>\n\n\n\n<h3>phpMyAdminの設定をする</h3>\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\n\n<h4>データベースとテーブルを作成する</h4>\n<pre class=\"brush: bash\">\nmysql -u root -p\n# データベースphpmyadminとテーブルを作成する\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\n</pre>\n\n<h4>phpMyAdminの設定ファイルを設定する</h4>\n<pre class=\"brush: bash\">\ncd /var/www/html/phpmyadmin\ncp config.sample.inc.php config.inc.php\nvi config.inc.php\n</pre>\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\n<pre class=\"brush: php\">\n/*\n * phpMyAdmin configuration storage settings.\n */\n\n/* User used to manipulate with storage */\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\n\n/* Storage database and tables */\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\n/* Contrib / Swekey authentication */\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\n</pre>\n\n\n<h4>設定を反映させる</h4>\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\n\n\n<h3>php-mcryptをインストールする</h3>\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\n<pre class=\"brush: bash\">\nyum -y install --enablerepo=remi php-mcrypt\n</pre>\n\n\n<h3>MySQLの自動起動設定をする</h3>\n<pre class=\"brush: bash\">\nchkconfig mysqld on\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-autosave','','','2013-02-21 19:24:31','2013-02-21 10:24:31','',187,'http://49.212.213.226/wordpress/solution-log/?p=272',0,'revision','',0),(273,1,'2012-11-26 02:04:41','2012-11-25 17:04:41','<h3>MySQLをインストールする</h3>\r\nyum -y install mysql-server\r\n\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。\r\nMySQLの初期設定が終わっていないと立ち上がらないので注意。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-3','','','2012-11-26 02:04:41','2012-11-25 17:04:41','',187,'http://49.212.213.226/wordpress/solution-log/?p=273',0,'revision','',0),(274,1,'2012-12-02 18:51:01','2012-12-02 09:51:01','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\n\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。<span style=\"font-color: FF99FF;\">MySQLの初期設定が終わっていないと立ち上がらないので注意</span>。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-4','','','2012-12-02 18:51:01','2012-12-02 09:51:01','',187,'http://49.212.213.226/wordpress/solution-log/?p=274',0,'revision','',0),(275,1,'2012-12-02 18:53:10','2012-12-02 09:53:10','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\n\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。<span style=\"color: FF00FF;\">MySQLの初期設定が終わっていないと立ち上がらないので注意</span>。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-5','','','2012-12-02 18:53:10','2012-12-02 09:53:10','',187,'http://49.212.213.226/wordpress/solution-log/?p=275',0,'revision','',0),(276,1,'2012-12-02 18:54:37','2012-12-02 09:54:37','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\n\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-6','','','2012-12-02 18:54:37','2012-12-02 09:54:37','',187,'http://49.212.213.226/wordpress/solution-log/?p=276',0,'revision','',0),(280,1,'2012-12-02 18:06:43','2012-12-02 09:06:43','<h3>インストール</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>機動</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>Apacheと連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n\r\nしかしCentOS、ディフォルトだと全部ポート開いてるのね。。。ちょっとびっくりと言うか、がっかり。\r\n\r\n\r\n\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-12','','','2012-12-02 18:06:43','2012-12-02 09:06:43','',201,'http://49.212.213.226/wordpress/solution-log/?p=280',0,'revision','',0),(281,1,'2012-12-02 19:05:37','2012-12-02 10:05:37','<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-13','','','2012-12-02 19:05:37','2012-12-02 10:05:37','',201,'http://49.212.213.226/wordpress/solution-log/?p=281',0,'revision','',0),(282,1,'2012-12-02 19:05:47','2012-12-02 10:05:47','<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。httpd.confに書き込む事も出きるが、読みにくくなるので却下。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-14','','','2012-12-02 19:05:47','2012-12-02 10:05:47','',201,'http://49.212.213.226/wordpress/solution-log/?p=282',0,'revision','',0),(283,1,'2012-12-02 13:26:22','2012-12-02 04:26:22','困った事に操作ミスで.htaccessファイルを上書きしてしまい、WordPressが制御不能になったので、ついでにディレクトリを変えて再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルから\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダからoptionsを除いたテーブルを移動させる。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 13:26:22','2012-12-02 04:26:22','',199,'http://49.212.213.226/wordpress/solution-log/?p=283',0,'revision','',0),(284,1,'2012-12-02 00:51:31','2012-12-01 15:51:31','掲示板の設定をスマホ用に変える。\r\n\r\n<meta name=\"viewport\" content=\"user-scalable=no, width=device-width\" />\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n\r\n<script type=\"text/javascript\">var meta = document.createElement(\"meta\");meta.setAttribute(\"name\", \"viewport\");meta.setAttribute(\"content\",\"user-scalable=no, width=device-width\");document.getElementsByTagName(\"head\")[0].appendChild(meta);</script>\r\n\r\n\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','inherit','open','open','','209-revision-4','','','2012-12-02 00:51:31','2012-12-01 15:51:31','',209,'http://49.212.213.226/wordpress/solution-log/?p=284',0,'revision','',0),(285,1,'2012-12-02 19:25:02','2012-12-02 10:25:02','掲示板の設定をスマホ用に変える。\r\n\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n[html]\r\n&lt;script type=&quot;text/javascript&quot;&gt;// &lt;![CDATA[\r\nvar meta = document.createElement(&quot;meta&quot;);meta.setAttribute(&quot;name&quot;, &quot;viewport&quot;);meta.setAttribute(&quot;content&quot;,&quot;user-scalable=no, width=device-width&quot;);document.getElementsByTagName(&quot;head&quot;)[0].appendChild(meta);\r\n// ]]&gt;&lt;/script&gt;\r\n[/html]\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','inherit','open','open','','209-revision-5','','','2012-12-02 19:25:02','2012-12-02 10:25:02','',209,'http://49.212.213.226/wordpress/solution-log/?p=285',0,'revision','',0),(286,1,'2012-11-17 23:25:13','2012-11-17 14:25:13','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<kbd>cd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/</kbd>\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<kbd>cd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/</kbd>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<kbd>cd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse\r\neclipse\r\n</kbd>\r\n\r\n<kbd>ln -s /usr/local/share/eclipse/eclipse /usr/local/bin</kbd>\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-8','','','2012-11-17 23:25:13','2012-11-17 14:25:13','',157,'http://49.212.213.226/wordpress/solution-log/?p=286',0,'revision','',0),(287,1,'2012-12-02 19:39:01','2012-12-02 10:39:01','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n<pre>\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipseeclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-9','','','2012-12-02 19:39:01','2012-12-02 10:39:01','',157,'http://49.212.213.226/wordpress/solution-log/?p=287',0,'revision','',0),(288,1,'2012-12-02 19:39:51','2012-12-02 10:39:51','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n&lt;/bash&gt;\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n&amp;nbsp;\r\n&lt;h3&gt;Pleiadesをインストールする&lt;/h3&gt;\r\n&lt;ol&gt;\r\n	&lt;li&gt;&lt;a href=&quot;http://mergedoc.sourceforge.jp/&quot;&gt;http://mergedoc.sourceforge.jp/&lt;/a&gt;から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）&lt;/li&gt;\r\n	&lt;li&gt;zipファイルを解凍してEclipseにコピー&lt;/li&gt;\r\n	&lt;li&gt;eclipse.iniを書き換える&lt;/li&gt;\r\n&lt;/ol&gt;\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipseeclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-10','','','2012-12-02 19:39:51','2012-12-02 10:39:51','',157,'http://49.212.213.226/wordpress/solution-log/?p=288',0,'revision','',0),(289,1,'2012-12-02 19:40:17','2012-12-02 10:40:17','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipseeclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-11','','','2012-12-02 19:40:17','2012-12-02 10:40:17','',157,'http://49.212.213.226/wordpress/solution-log/?p=289',0,'revision','',0),(290,1,'2012-12-02 20:59:34','2012-12-02 11:59:34','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nさくらのレンタルサーバにあるリポジトリからローカルにリビジョン番号を指定してインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone -r {start_rev}:{end_rev} svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\n<h3>インポートされたリポジトリの確認</h3>\r\n<pre class=\"brush: bash\">\r\ncd git-repository\r\ngit log\r\n</pre>\r\n操作方法が分からないときはhを入力するとHELPが表示される\r\n<pre class=\"brush: bash\">\r\n                   SUMMARY OF LESS COMMANDS\r\n\r\n      Commands marked with * may be preceded by a number, N.\r\n      Notes in parentheses indicate the behavior if N is given.\r\n\r\n  h  H                 Display this help.\r\n  q  :q  Q  :Q  ZZ     Exit.\r\n ---------------------------------------------------------------------------\r\n\r\n                           MOVING\r\n\r\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\r\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\r\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\r\n  b  ^B  ESC-v      *  Backward one window (or N lines).\r\n  z                 *  Forward  one window (and set window to N).\r\n  w                 *  Backward one window (and set window to N).\r\n  ESC-SPACE         *  Forward  one window, but don&#039;t stop at end-of-file.\r\n  d  ^D             *  Forward  one half-window (and set half-window to N).\r\n  u  ^U             *  Backward one half-window (and set half-window to N).\r\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\r\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\r\nHELP -- Press RETURN for more, or q when done\r\n</pre>\r\n<h3>リポジトリの分割</h3>\r\n<a href=\"http://git-scm.com/docs/git-filter-branch\">git-filter-branchコマンド</a>を使う。フォルダ名が途中で変更されていたりする場合は、別途マージする必要がある。\r\n<pre class=\"brush: bash\">\r\ngit filter-branch --subdirectory-filter {target_dir} HEAD\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n<li><a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\r\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\r\n<li><a href=\"http://blokspeed.net/blog/2010/09/converting-from-subversion-to-git/\">Converting from Subversion to Git | Blokspeed.net</a>\r\n<li><a href=\"http://design-ambience.com/wordpress/?p=378\">git svn 使い方メモ | Design Ambience Blog</a>\r\n<li><a href=\"http://git-scm.com/docs/git-filter-branch\">git | git-filter-branch(1) Manual Page</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','publish','open','open','','centos6%e3%81%a7subversion%e3%81%8b%e3%82%89git%e3%81%ab%e7%a7%bb%e8%a1%8c%e3%81%99%e3%82%8b','','','2013-01-19 17:06:53','2013-01-19 08:06:53','',0,'http://49.212.213.226/wordpress/solution-log/?p=290',0,'post','',0),(291,1,'2012-12-02 20:58:47','2012-12-02 11:58:47','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\n<h3>git-svnが利用できるか確認する</h3>\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\n<pre class=\"brush: bash\">\ngit svn --version\n</pre>\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversiony用のPerlのバインディングがインストールされていないらしい。yumで対応する。\n<pre class=\"brush: bash\">\nyum install subversion-perl\n</pre>\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\n<pre class=\"brush: bash\">\n</pre>\n移行の準備は整った。\n\n<h3>Subversionリポジトリをインポートする</h3>\nさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision','','','2012-12-02 20:58:47','2012-12-02 11:58:47','',290,'http://49.212.213.226/wordpress/solution-log/?p=291',0,'revision','',0),(292,1,'2012-12-02 20:59:34','2012-12-02 11:59:34','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversiony用のPerlのバインディングがインストールされていないらしい。yumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-2','','','2012-12-02 20:59:34','2012-12-02 11:59:34','',290,'http://49.212.213.226/wordpress/solution-log/?p=292',0,'revision','',0),(293,1,'2012-12-02 14:34:10','2012-12-02 05:34:10','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\nどうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitのサイトから最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INCなんちゃら</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker&lt;/kbd&gt;\r\n</pre>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-8','','','2012-12-02 14:34:10','2012-12-02 05:34:10','',165,'http://49.212.213.226/wordpress/solution-log/?p=293',0,'revision','',0),(294,1,'2012-11-06 23:34:30','2012-11-06 14:34:30','最初yumで試したが1.8系しか入らない。即座にアンインストールする。\r\n<pre># yum install ruby\r\n# yum remove ruby</pre>\r\n<h4>libyamlのインストール</h4>\r\n\r\n<hr />\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<code>./configure --prefix=/usr/local</code>を指定。\r\n<pre># cd /usr/local/src\r\n# wget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\n# tar zxvf yaml-0.1.4.tar.gz\r\n# cd yaml-0.1.4\r\n# ./configure --prefix=/usr/local\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubyのインストール</h4>\r\n\r\n<hr />\r\n\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n\r\n以下のように<code>./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib</code>オプションを追加してconfigureする。\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>rubygemsのインストール</h4>\r\n\r\n<hr />\r\n\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre># wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\n# tar xvzf rubygem-1.8.24.tgz\r\n# tar xvzf rubygems-1.8.24.tgz\r\n# cd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre># yum -y install gcc\r\n# yum -y install make\r\n# yum -y install gcc-c++\r\n# yum -y install zlib-devel\r\n# yum -y install httpd-devel\r\n# yum -y install openssl-devel\r\n# yum -y install curl-devel</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル。ただしpassenger-install-apache2-moduleコマンドでapache2-moduleをインストールするとき、上記のモノが入ってない場合は、自分で入れろと警告が出る。\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n<h4>Railsのインストール</h4>\r\n\r\n<hr />\r\n\r\n<pre># gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n<h4>Passenger のインストール</h4>\r\n\r\n<hr />\r\n\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre># gem install passenger\r\n# passenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre># cd /usr/local/src\r\n# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\n# tar zxvf ruby-1.9.3-p286.tar.gz\r\n# cd ruby-1.9.3-p286\r\n# ./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\n# make\r\n# sudo make install</pre>\r\n# vim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\nruby-passenger.conf は以下の通り作成。\r\n<pre>LoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby</pre>\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\n\r\n<hr />\r\n\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n<h4>RDTキットのインストール</h4>\r\n\r\n<hr />\r\n\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.2にRuby1.9をインストールする','','inherit','open','open','','13-revision-9','','','2012-11-06 23:34:30','2012-11-06 14:34:30','',13,'http://49.212.213.226/wordpress/solution-log/?p=294',0,'revision','',0),(295,1,'2012-12-02 22:25:43','2012-12-02 13:25:43','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre class=\"brush: bash\">wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\ntar xvzf rubygem-1.8.24.tgz\r\ntar xvzf rubygems-1.8.24.tgz\r\ncd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre class=\"brush: bash\">yum -y install gcc\r\nyum -y install make\r\nyum -y install gcc-c++\r\nyum -y install zlib-devel\r\nyum -y install httpd-devel\r\nyum -y install openssl-devel\r\nyum -y install curl-devel</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル。ただしpassenger-install-apache2-moduleコマンドでapache2-moduleをインストールするとき、上記のモノが入ってない場合は、自分で入れろと警告が出る。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\"></pre>cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n<pre class=\"brush: bash\"></pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-10','','','2012-12-02 22:25:43','2012-12-02 13:25:43','',13,'http://49.212.213.226/wordpress/solution-log/?p=295',0,'revision','',0),(296,1,'2012-11-06 23:30:00','2012-11-06 14:30:00','<strong>1.公開キーの作成</strong>\r\n\r\n-rootでローカルのCentOSにログインする\r\n\r\n-ターミナルから以下のコマンドを打ち込む\r\n<pre># ssh-keygen -t rsa</pre>\r\nこれで、ホームディレクトリ/.ssh の下に、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n\r\n<strong>2.さくらVPSに公開キーをアップ</strong>\r\n\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-5','','','2012-11-06 23:30:00','2012-11-06 14:30:00','',5,'http://49.212.213.226/wordpress/solution-log/?p=296',0,'revision','',0),(297,1,'2012-12-02 22:33:50','2012-12-02 13:33:50','<h3>秘密鍵および公開鍵の作成</h3>\r\nローカルのCentOSから\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\n</pre>\r\nこれで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n\r\n<h3>さくらVPSに公開キーをアップ</h3>\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-6','','','2012-12-02 22:33:50','2012-12-02 13:33:50','',5,'http://49.212.213.226/wordpress/solution-log/?p=297',0,'revision','',0),(298,1,'2012-12-16 07:28:47','2012-12-15 22:28:47','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a><h3>git-svnが利用できるか確認する</h3>\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\n<pre class=\"brush: bash\">\ngit svn --version\n</pre>\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\n<pre class=\"brush: bash\">\nyum install subversion-perl\n</pre>\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\n<pre class=\"brush: bash\">\n</pre>\n移行の準備は整った。<h3>Subversionリポジトリをインポートする</h3>\nさくらのレンタルサーバにあるリポジトリからローカルにリビジョン番号を指定してインポートしてみる。\n<pre class=\"brush: bash\">\ncd /root/ダウンロード\ngit svn clone -r {start_rev}:{end_rev} svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\n</pre><h3>インポートされたリポジトリの確認</h3>\n<pre class=\"brush: bash\">\ncd git-repository\ngit log\n</pre>\n操作方法が分からないときはhを入力するとHELPが表示される\n<pre class=\"brush: bash\">\n                   SUMMARY OF LESS COMMANDS\n\n      Commands marked with * may be preceded by a number, N.\n      Notes in parentheses indicate the behavior if N is given.\n\n  h  H                 Display this help.\n  q  :q  Q  :Q  ZZ     Exit.\n ---------------------------------------------------------------------------\n\n                           MOVING\n\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\n  b  ^B  ESC-v      *  Backward one window (or N lines).\n  z                 *  Forward  one window (and set window to N).\n  w                 *  Backward one window (and set window to N).\n  ESC-SPACE         *  Forward  one window, but don\'t stop at end-of-file.\n  d  ^D             *  Forward  one half-window (and set half-window to N).\n  u  ^U             *  Backward one half-window (and set half-window to N).\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\nHELP -- Press RETURN for more, or q when done\n</pre>\n\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\n\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。<h3>リポジトリの分割</h3>\n<a href=\"http://git-scm.com/docs/git-filter-branch\">git-filter-branchコマンド</a>を使う。フォルダ名が途中で変更されていたりする場合は、別途マージする必要がある。\n<pre class=\"brush: bash\">\ngit filter-branch --subdirectory-filter {target_dir} HEAD\n</pre><h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\n<li><a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\n<li><a href=\"http://blokspeed.net/blog/2010/09/converting-from-subversion-to-git/\">Converting from Subversion to Git | Blokspeed.net</a>\n<li><a href=\"http://design-ambience.com/wordpress/?p=378\">git svn 使い方メモ | Design Ambience Blog</a>\n<li><a href=\"http://git-scm.com/docs/git-filter-branch\">git | git-filter-branch(1) Manual Page</a>\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-autosave','','','2012-12-16 07:28:47','2012-12-15 22:28:47','',290,'http://49.212.213.226/wordpress/solution-log/?p=298',0,'revision','',0),(299,1,'2012-12-02 21:01:51','2012-12-02 12:01:51','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversiony用のPerlのバインディングがインストールされていないらしい。yumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-3','','','2012-12-02 21:01:51','2012-12-02 12:01:51','',290,'http://49.212.213.226/wordpress/solution-log/?p=299',0,'revision','',0),(300,1,'2012-12-02 22:41:29','2012-12-02 13:41:29','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversiony用のPerlのバインディングがインストールされていないらしい。yumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@domain.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-4','','','2012-12-02 22:41:29','2012-12-02 13:41:29','',290,'http://49.212.213.226/wordpress/solution-log/?p=300',0,'revision','',0),(301,1,'2012-12-02 22:42:52','2012-12-02 13:42:52','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@domain.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-5','','','2012-12-02 22:42:52','2012-12-02 13:42:52','',290,'http://49.212.213.226/wordpress/solution-log/?p=301',0,'revision','',0),(302,1,'2012-12-02 19:23:14','2012-12-02 10:23:14','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nmkdir blogfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-02 19:23:14','2012-12-02 10:23:14','',199,'http://49.212.213.226/wordpress/solution-log/?p=302',0,'revision','',0),(303,1,'2012-11-18 21:48:23','2012-11-18 12:48:23','デスクトップにWindows XP環境を構築するときのメモ\r\n<h3>データのバックアップ</h3>\r\nSubversionやgit等も使い、忘れずに行う。\r\n<h3>LANドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\r\n<h3>サービスパックを適用する</h3>\r\n<ol>\r\n<ol>\r\n	<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\r\n	<li>SP3をダウンロード、インストール\r\n<ol>SP3はSP2が適応されてないとインストール出来ないので注意</ol>\r\n</li>\r\n</ol>\r\n</ol>\r\n<h3>オーディオドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\r\n<h3>グラフィックカードドライバをインストール</h3>\r\nAutorun DriverのラベルのCDからインストールする\r\n<h3>USBドライバをインストールする</h3>\r\nP5GC-MX/1333 CD-ROMからChipset_Intel945G_Chipset_V9001011のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。（曖昧なので何か機会があったら書き直す）\r\n\r\n後は適宜Lhaz等をインストールする。','Windows XPの再インストールメモ','','inherit','open','open','','174-revision-3','','','2012-11-18 21:48:23','2012-11-18 12:48:23','',174,'http://49.212.213.226/wordpress/solution-log/?p=303',0,'revision','',0),(304,1,'2012-11-12 21:02:27','2012-11-12 12:02:27','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<code>\r\n#!C:\\xampp\\perl\\bin\\perl.exe</code>\r\n\r\nprint \"Content-type: text/html\\n\\n\";\r\nprint \"Hello World.\";','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-21','','','2012-11-12 21:02:27','2012-11-12 12:02:27','',118,'http://49.212.213.226/wordpress/solution-log/?p=304',0,'revision','',0),(305,1,'2012-12-04 00:49:02','2012-12-03 15:49:02','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n[perl]\r\n#!C:\\xampp\\perl\\bin\\perl.exe&lt;/code&gt;\r\nprint &quot;Content-type: text/html\\n\\n&quot;;\r\nprint &quot;Hello World.&quot;;\r\n[/perl]','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-22','','','2012-12-04 00:49:02','2012-12-03 15:49:02','',118,'http://49.212.213.226/wordpress/solution-log/?p=305',0,'revision','',0),(306,1,'2012-12-04 10:32:06','2012-12-04 01:32:06','<h3>FileZillaをインストールする</h3>\r\n最初は<a href=\"http://gftp.seul.org/\">gFTP</a>を<a href=\"http://ja.528p.com/linux/client6/CD004-gftp-settei.html\">RPMからインストール</a>しようと思ったけど、<a href=\"http://serverfault.com/questions/116686/how-to-install-glib-in-a-centos-server\">依存関係でシステムがイカれるかも</a>とか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumから<a href=\"http://filezilla-project.org/\">FileZilla</a>をインストールすることにした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a></li>\r\n</ul>','CentOS6.3でFileZillaを使用する','','publish','open','open','','centos6-3%e3%81%a7filezilla%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2013-01-19 17:05:58','2013-01-19 08:05:58','',0,'http://49.212.213.226/wordpress/solution-log/?p=306',0,'post','',0),(307,1,'2012-12-04 10:31:49','2012-12-04 01:31:49','<h3>FileZillaをインストールする</h3>\nRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったので、yumを使う。\n<pre class=\"brush: bash\">\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\nyum --enablerepo=epel install filezilla #インストール\n</pre>\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\n\n<h3>FileZillaを設定する</h3>\n基本的にはFFFTPとそんなに変わらない感じ。\n\n\n\n\n\n\n参考サイト\nCentOS6.2 FileZillaのインストール | SlackHack\nhttp://slackhack.net/?p=282','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision','','','2012-12-04 10:31:49','2012-12-04 01:31:49','',306,'http://49.212.213.226/wordpress/solution-log/?p=307',0,'revision','',0),(308,1,'2012-12-04 15:19:16','2012-12-04 06:19:16','<h3>FileZillaをインストールする</h3>\n最初は<a href=\"http://gftp.seul.org/\">gFTP</a>を<a href=\"http://ja.528p.com/linux/client6/CD004-gftp-settei.html\">RPMからインストール</a>しようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumから<a href=\"http://filezilla-project.org/\">FileZilla</a>をインストールすることにした。\n\n<pre class=\"brush: bash\">\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\nyum --enablerepo=epel install filezilla #インストール\n</pre>\n\n\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\n<h3>FileZillaを設定する</h3>\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\n\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\n\n\n\n参考サイト\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-autosave','','','2012-12-04 15:19:16','2012-12-04 06:19:16','',306,'http://49.212.213.226/wordpress/solution-log/?p=308',0,'revision','',0),(309,1,'2012-12-04 10:32:06','2012-12-04 01:32:06','<h3>FileZillaをインストールする</h3>\r\nRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったので、yumを使う。\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。\r\n\r\n\r\n\r\n\r\n\r\n\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-2','','','2012-12-04 10:32:06','2012-12-04 01:32:06','',306,'http://49.212.213.226/wordpress/solution-log/?p=309',0,'revision','',0),(310,1,'2012-12-04 10:37:18','2012-12-04 01:37:18','<h3>FileZillaをインストールする</h3>\r\nRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったので、yumを使う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-3','','','2012-12-04 10:37:18','2012-12-04 01:37:18','',306,'http://49.212.213.226/wordpress/solution-log/?p=310',0,'revision','',0),(311,1,'2012-12-04 10:38:25','2012-12-04 01:38:25','<h3>FileZillaをインストールする</h3>\r\nRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったので、yumを使う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-4','','','2012-12-04 10:38:25','2012-12-04 01:38:25','',306,'http://49.212.213.226/wordpress/solution-log/?p=311',0,'revision','',0),(312,1,'2012-12-04 10:41:07','2012-12-04 01:41:07','<h3>FileZillaをインストールする</h3>\r\n最初はgFTPをRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumからFileZillaをインストールすることにした。\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-5','','','2012-12-04 10:41:07','2012-12-04 01:41:07','',306,'http://49.212.213.226/wordpress/solution-log/?p=312',0,'revision','',0),(313,1,'2012-12-04 10:42:36','2012-12-04 01:42:36','<h3>FileZillaをインストールする</h3>\r\n最初はgFTPをRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumからFileZillaをインストールすることにした。\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-6','','','2012-12-04 10:42:36','2012-12-04 01:42:36','',306,'http://49.212.213.226/wordpress/solution-log/?p=313',0,'revision','',0),(314,1,'2012-12-03 00:39:47','2012-12-02 15:39:47','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-03 00:39:47','2012-12-02 15:39:47','',199,'http://49.212.213.226/wordpress/solution-log/?p=314',0,'revision','',0),(315,1,'2012-12-04 11:34:30','2012-12-04 02:34:30','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名</b>、<b>メールアドレス</b>を同一にしておくこと。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-04 11:34:30','2012-12-04 02:34:30','',199,'http://49.212.213.226/wordpress/solution-log/?p=315',0,'revision','',0),(316,1,'2012-12-04 11:35:22','2012-12-04 02:35:22','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、メールアドレスを同一にしておく</b>こと。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。','WordPressの引越し','','inherit','open','open','','199-revision-v1','','','2012-12-04 11:35:22','2012-12-04 02:35:22','',199,'http://49.212.213.226/wordpress/solution-log/?p=316',0,'revision','',0),(317,1,'2012-12-04 10:43:00','2012-12-04 01:43:00','<h3>FileZillaをインストールする</h3>\r\n最初はgFTPをRPMからインストールしようと思ったけど、依存関係でシステムがイカれるかもとか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumからFileZillaをインストールすることにした。\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-7','','','2012-12-04 10:43:00','2012-12-04 01:43:00','',306,'http://49.212.213.226/wordpress/solution-log/?p=317',0,'revision','',0),(320,1,'2012-11-12 03:17:03','2012-11-11 18:17:03','cd /path/to/target/dir\r\nfind . | xargs grep \"seach\"','Linuxでの文字列の検索','','inherit','open','open','','116-revision-2','','','2012-11-12 03:17:03','2012-11-11 18:17:03','',116,'http://49.212.213.226/wordpress/solution-log/?p=320',0,'revision','',0),(333,1,'2012-12-02 19:41:44','2012-12-02 10:41:44','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-12','','','2012-12-02 19:41:44','2012-12-02 10:41:44','',157,'http://49.212.213.226/wordpress/solution-log/?p=333',0,'revision','',0),(335,1,'2012-07-08 19:29:23','2012-07-08 10:29:23','<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる\r\n<h3>php.iniの書き換え</h3>\r\nphp.iniをしっかりと書き換える必要がある\r\n「PHP統合開発環境PDT2」などを参考にする\r\n<h3>MakeGoodのインストール</h3>\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://eclipse.piece-framework.com/</b>」と入力\r\n<li>「<b>MakeGood</b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>パスを設定する</h3>\r\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\r\n\r\nプロジェクトにもパスを設定する\r\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734\r\n<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-このファイルに関するテストの実行にショートカットキーを割り当てる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://tatsunet.net/2012/03/phpunit-1.html\">PHPUnitによる単体テスト環境構築(Eclipse) - TATSUNET</a>\r\n<li><a href=\"http://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\">EclipsePDT+PHPUnit+XDebug+MakeGoodでphpのTDD - あたご型護衛艦日記</a>\r\n<li><a href=\"http://d.hatena.ne.jp/Kenji_s/20110722/1311314734\">Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する - A Day in Serenity @ kenjis</a>\r\n</ul>','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','publish','open','open','','windows-xp-sp3%e3%81%a7%e3%81%aeeclipse-phpunit%e3%81%ab%e9%96%a2%e3%81%99%e3%82%8b%e8%a6%9a%e6%9b%b8','','','2013-03-10 18:33:43','2013-03-10 09:33:43','',0,'http://49.212.213.226/wordpress/solution-log/?p=335',0,'post','',0),(336,1,'2012-12-04 17:32:24','2012-12-04 08:32:24','<h3>ショートカットキーの設定</h3>\n-Confort Mouse 4500のドライバをインストール\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\n-Eclipseでショートカットキーを設定\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる<h3>php.iniの書き換え</h3>\nphp.iniをしっかりと書き換える必要がある\n「PHP統合開発環境PDT2」などを参考にする<h3>MakeGoodのインストール</h3><h3>パスを設定する</h3>\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\n\nプロジェクトにもパスを設定する\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734<h3>ショートカットキーの設定</h3>\n-Confort Mouse 4500のドライバをインストール\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\n-Eclipseでショートカットキーを設定\n-このファイルに関するテストの実行にショートカットキーを割り当てる参考サイト\nhttp://tatsunet.net/2012/03/phpunit-1.html\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','inherit','open','open','','335-revision','','','2012-12-04 17:32:24','2012-12-04 08:32:24','',335,'http://49.212.213.226/wordpress/solution-log/?p=336',0,'revision','',0),(337,1,'2012-12-04 17:04:09','2012-12-04 08:04:09','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"​http://wiki.eclipse.org/PDT/Installation_3.1.x\">​http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n\r\n\r\n参考サイト\r\n<a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a>\r\n','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-13','','','2012-12-04 17:04:09','2012-12-04 08:04:09','',157,'http://49.212.213.226/wordpress/solution-log/?p=337',0,'revision','',0),(338,1,'2012-12-04 17:39:27','2012-12-04 08:39:27','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-14','','','2012-12-04 17:39:27','2012-12-04 08:39:27','',157,'http://49.212.213.226/wordpress/solution-log/?p=338',0,'revision','',0),(339,1,'2012-12-04 17:40:20','2012-12-04 08:40:20','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n<h3>参考サイト</h3>\r\n<pre>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>\r\n</pre>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-15','','','2012-12-04 17:40:20','2012-12-04 08:40:20','',157,'http://49.212.213.226/wordpress/solution-log/?p=339',0,'revision','',0),(341,1,'2012-12-02 19:18:17','2012-12-02 10:18:17','<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n参考サイト\r\nRedHat Linux RPM packages for Jenkins\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\nApache のリバースプロキシの設定方法 | WebOS Goodies\r\n<a href=\"http://webos-goodies.jp/archives/51261261.html\">http://webos-goodies.jp/archives/51261261.html</a>\r\njenkinsとapacheの連携 - Dev3TechHack\r\n<a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">http://d.hatena.ne.jp/hiranasu/20110507/1304781709</a>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-15','','','2012-12-02 19:18:17','2012-12-02 10:18:17','',201,'http://49.212.213.226/wordpress/solution-log/?p=341',0,'revision','',0),(342,1,'2012-12-04 19:58:49','2012-12-04 10:58:49','<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\n&lt;Proxy http://localhost:8080/jenkins*&gt;\r\nOrder deny,allow\r\nAllow from all\r\n&lt;/Proxy&gt;\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a>\r\n<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a>\r\n<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-16','','','2012-12-04 19:58:49','2012-12-04 10:58:49','',201,'http://49.212.213.226/wordpress/solution-log/?p=342',0,'revision','',0),(343,1,'2012-12-04 15:22:36','2012-12-04 06:22:36','<h3>FileZillaをインストールする</h3>\r\n最初は<a href=\"http://gftp.seul.org/\">gFTP</a>を<a href=\"http://ja.528p.com/linux/client6/CD004-gftp-settei.html\">RPMからインストール</a>しようと思ったけど、<a href=\"http://serverfault.com/questions/116686/how-to-install-glib-in-a-centos-server\">依存関係でシステムがイカれるかも</a>とか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumから<a href=\"http://filezilla-project.org/\">FileZilla</a>をインストールすることにした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n\r\n\r\n\r\n参考サイト\r\n<a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-8','','','2012-12-04 15:22:36','2012-12-04 06:22:36','',306,'http://49.212.213.226/wordpress/solution-log/?p=343',0,'revision','',0),(344,1,'2012-12-02 14:20:55','2012-12-02 05:20:55','<h3>PECL::ssh2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\', \r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n\r\n\r\n参考サイト\r\n<a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a>','CentOS6にPECL::ssh2をインストールする','','inherit','open','open','','183-revision-9','','','2012-12-02 14:20:55','2012-12-02 05:20:55','',183,'http://49.212.213.226/wordpress/solution-log/?p=344',0,'revision','',0),(346,1,'2012-11-13 01:27:19','2012-11-12 16:27:19','そろそろGIMPを覚えようと思いインストール。\r\n\r\n<kbd>yum install gimp</kbd>\r\n\r\ngimp -vでバージョンが確認出来る。\r\n\r\n<samp>[root@localhost ~]# gimp -v\r\nGNU Image Manipulation Program ver.2.6.9</samp></samp>GEGL ver.0.1.2 を使用 (コンパイル済のバージョンは ver.0.1.2)\r\nGLib ver.2.22.5 を使用 (コンパイル済のバージョンは ver.2.22.5)\r\nGTK+ ver.2.18.9 を使用 (コンパイル済のバージョンは ver.2.18.9)\r\nPango ver.1.28.1 を使用 (コンパイル済のバージョンは ver.1.28.1)\r\nFontconfig ver.2.8.0 を使用 (コンパイル済のバージョンは ver.2.8.0)</samp>\r\n\r\n出来れば最新の2.8系を使いたいのだが、ソールからインストールするときは、どうやらシステムをいろいろと弄るハメになるので(危ない。。。)、最新の2.8系を使うのは暫く様子見。\r\n<a href=\"http://www.spinics.net/lists/gimp/msg26063.html\">GIMP Users -- Re: CentOS packanges for 2.8?</a>','CentOS6にGIMPをインストールする','','inherit','open','open','','97-revision-12','','','2012-11-13 01:27:19','2012-11-12 16:27:19','',97,'http://49.212.213.226/wordpress/solution-log/?p=346',0,'revision','',0),(347,1,'2012-11-06 23:24:01','2012-11-06 14:24:01','<h3>RubyをCentOSで動かすためにFastCGIをインストールした時のメモ</h3>\r\nどうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\r\n\r\n以下のコマンドでインストール出来た\r\n<pre>cd /usr/local/src/\r\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\r\ntar xzfz mod_fastcgi-2.4.6.tar.gz\r\ncd mod_fastcgi-2.4.6\r\ncp Makefile.AP2 Makefile\r\nmake top_dir=/usr/lib/httpd\r\nmake top_dir=/usr/lib/httpd install</pre>\r\n\r\n注意点\r\n<ul>\r\n<li>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する\r\n<li>\r\n\r\n\r\n<hr />\r\n\r\n参考サイト\r\n<ul>\r\n	<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\r\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-revision-4','','','2012-11-06 23:24:01','2012-11-06 14:24:01','',43,'http://49.212.213.226/wordpress/solution-log/?p=347',0,'revision','',0),(348,1,'2012-12-04 20:50:52','2012-12-04 11:50:52','どうやらRubyをCentOSで動かすにはFastCGIと言って、動作をキャッシュするような仕組みをインストール刷る必要があるらしい。\r\n<h3>FastCGIをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src/\r\nwget http://www.fastcgi.com/dist/mod_fastcgi-2.4.6.tar.gz\r\ntar xzfz mod_fastcgi-2.4.6.tar.gz\r\ncd mod_fastcgi-2.4.6\r\ncp Makefile.AP2 Makefile\r\nmake top_dir=/usr/lib/httpd\r\nmake top_dir=/usr/lib/httpd install\r\n</pre>\r\n<b>makeコマンドで認識刷るファイルはMakefileと言う名前のみなので、mod_fastcig-2.4.6フォルダ内のMakefile.AP2をMakefileにコピーして変更する</b>。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a title=\"FastCGIのインストールと設定\" href=\"http://www.movabletype.jp/documentation/developer/server/fastcgi.html\">FastCGIのインストールと設定</a></li>\r\n</ul>','CentOSにFastcgiをインストールする','','inherit','open','open','','43-revision-5','','','2012-12-04 20:50:52','2012-12-04 11:50:52','',43,'http://49.212.213.226/wordpress/solution-log/?p=348',0,'revision','',0),(350,1,'2013-03-10 18:34:20','2013-03-10 09:34:20','<h3>ショートカットキーの設定</h3>\n-Confort Mouse 4500のドライバをインストール\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\n-Eclipseでショートカットキーを設定\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる\n<h3>php.iniの書き換え</h3>\nphp.iniをしっかりと書き換える必要がある\n「PHP統合開発環境PDT2」などを参考にする\n<h3>MakeGoodのインストール</h3>\n<ol>\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://eclipse.piece-framework.com/</b>」と入力\n<li>「<b>MakeGood</b>」にチェックを入れインストールする\n</ol>\n\n<h3>パスを設定する</h3>\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\n\nプロジェクトにもパスを設定する\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734\n<h3>ショートカットキーの設定</h3>\n-Confort Mouse 4500のドライバをインストール\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\n-Eclipseでショートカットキーを設定\n-このファイルに関するテストの実行にショートカットキーを割り当てる\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://tatsunet.net/2012/03/phpunit-1.html\">PHPUnitによる単体テスト環境構築(Eclipse) - TATSUNET</a>\n<li><a href=\"http://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\">EclipsePDT+PHPUnit+XDebug+MakeGoodでphpのTDD - あたご型護衛艦日記</a>\n<li><a href=\"http://d.hatena.ne.jp/Kenji_s/20110722/1311314734\">Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する - A Day in Serenity @ kenjis</a>\n</ul>','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','inherit','open','open','','335-autosave','','','2013-03-10 18:34:20','2013-03-10 09:34:20','',335,'http://49.212.213.226/wordpress/solution-log/?p=350',0,'revision','',0),(351,1,'2012-12-04 17:32:43','2012-12-04 08:32:43','<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる\r\n<h3>php.iniの書き換え</h3>\r\nphp.iniをしっかりと書き換える必要がある\r\n「PHP統合開発環境PDT2」などを参考にする\r\n<h3>MakeGoodのインストール</h3>\r\n<h3>パスを設定する</h3>\r\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\r\n\r\nプロジェクトにもパスを設定する\r\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734\r\n<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-このファイルに関するテストの実行にショートカットキーを割り当てる\r\n参考サイト\r\nhttp://tatsunet.net/2012/03/phpunit-1.html\r\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\r\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','inherit','open','open','','335-revision-2','','','2012-12-04 17:32:43','2012-12-04 08:32:43','',335,'http://49.212.213.226/wordpress/solution-log/?p=351',0,'revision','',0),(352,1,'2012-12-04 21:00:40','2012-12-04 12:00:40','<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる\r\n<h3>php.iniの書き換え</h3>\r\nphp.iniをしっかりと書き換える必要がある\r\n「PHP統合開発環境PDT2」などを参考にする\r\n<h3>MakeGoodのインストール</h3>\r\n<h3>パスを設定する</h3>\r\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\r\n\r\nプロジェクトにもパスを設定する\r\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734\r\n<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-このファイルに関するテストの実行にショートカットキーを割り当てる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://tatsunet.net/2012/03/phpunit-1.html\">PHPUnitによる単体テスト環境構築(Eclipse) - TATSUNET</a>\r\n<a href=\"http://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\">EclipsePDT+PHPUnit+XDebug+MakeGoodでphpのTDD - あたご型護衛艦日記</a>\r\n<a href=\"http://d.hatena.ne.jp/Kenji_s/20110722/1311314734\">Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する - A Day in Serenity @ kenjis</a>','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','inherit','open','open','','335-revision-3','','','2012-12-04 21:00:40','2012-12-04 12:00:40','',335,'http://49.212.213.226/wordpress/solution-log/?p=352',0,'revision','',0),(353,1,'2012-12-04 21:31:11','2012-12-04 12:31:11','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\n今回入れたのはPython2.7.3\n\n<h3>インストール準備</h3>\nまずはフォルダ構成を確認。\n\n/home/[username]\n□/local\n-/lib\n-/src\n□/tmp\n□/var\n-/svn/repos\n-/trac/project\n□/www\n\n使ったツールは\n-Windows XP\n-Poderosa\n-FFFTP(フォルダやファイルの確認用)<h3>vartualenvのインストール</h3>\nこちらの<a href=\"http://labs.unoh.net/2009/12/2009python.html\">サイト</a>を参考にvartualenvのファイルを置く場所をさくらサーバーに作る。\n<pre class=\"brush: bash\">\nmkdir -p ~/local/src\n</pre>\npipを使えるようにするために、varualenvをインストールする。\n<a href=\"http://pypi.python.org/pypi/virtualenv/\">このページ</a>から最新版をダウンロードしてデスクトップにでも置く。これをFFFTPで「~/local/src」フォルダにアップする。\nそして\n<pre class=\"brush: bash\">\ncd ~/local/src\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\ncd ~/local\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\n</pre>\nこの時点で<b>~/local/bin</b>以下にpythonやpipが作成される。<h3>Subversionのインストール</h3>\n<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>を参考にインストール\n<pre class=\"brush: bash\">\ncd ~/local/src\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\ntar zxvf subversion-1.6.16.tar.gz\ntar zxvf subversion-deps-1.6.16.tar.gz\ncd subversion-1.6.16\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\nmake\nmake install\nmake swig-py\nmake install-swig-py\n</pre>\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\n<pre class=\"brush: bash\">\nln -s ~/local/include/python2.7 ~/local/include/python\nln -s ~/local/lib/python2.7 ~/local/lib/python\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\n</pre><h3>Babelをインストール</h3>\n<pre class=\"brush: bash\">\neasy_install Babel==0.9.5\n</pre><h3>Tracをインストール</h3>\n<pre class=\"brush: bash\">\ncd ~/local\npip install trac mysql-python\n</pre>\n1～2分程度でインストールされるはず\n\n後は<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>の<b>Trac環境の作成</b>以下を参考にする。自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした。<h3>その他注意</h3>\n<ul>\n<li>リポジトリのソースが文字化けする場合は<a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">trac.iniの設定をいじる</a>\n<li>tracの動作がもっさりしている場合は、<a href=\"http://d.hatena.ne.jp/orangehat/20080421\">cssや画像データにシンボリックリンクを通す</a>\nhttp://d.hatena.ne.jp/orangehat/20080421\n<li>htdocsフォルダはtracのバージョンによって異なるので適宜探す。<b>ver0.13</b>だと<b>~/local/lib/python2.7/site-packages/trac/htdocs</b>\n</ul>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://trac.edgewall.org/wiki/TracInstall\">TracInstall – The Trac Project</a>\n<li><a href=\"http://labs.unoh.net/2009/12/2009python.html\">ウノウラボ by Zynga Japan: 2009年版Python開発環境を整えよう</a>\n<li><a href=\"http://pypi.python.org/pypi/virtualenv/\">virtualenv 1.8.4 : Python Package Index</a>\n<li><a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">TracJaInstall – attosoft.info Trac</a>\n<li><a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">Tracのリポジトリブラウザで文字化け - 道ばたに仰ぐ</a>\ntracの高速化 - World Wide Wonderfu\n</ul>','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-autosave','','','2012-12-04 21:31:11','2012-12-04 12:31:11','',235,'http://49.212.213.226/wordpress/solution-log/?p=353',0,'revision','',0),(354,1,'2012-12-02 11:36:51','2012-12-02 02:36:51','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\nこのページを参考に\r\nhttp://trac.edgewall.org/wiki/TracInstall\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\n参考にしたサイト\r\nhttp://labs.unoh.net/2009/12/2009python.html\r\n\r\nvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\nこのページから最新版をダウンロードしてデスクトップにでも置く\r\nhttp://pypi.python.org/pypi/virtualenv/\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\nこちらのサイトを参考にインストール\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\n\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n\r\n%ln -s ~/local/include/python2.7 ~/local/include/python\r\n%ln -s ~/local/lib/python2.7 ~/local/lib/python\r\n%ln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\n%ln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n<h3>Babelをインストール</h3>\r\neasy_install Babel==0.9.5\r\n<h3>Tracをインストール</h3>\r\ncd ~/local\r\npip install trac mysql-python\r\n\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-revision-4','','','2012-12-02 11:36:51','2012-12-02 02:36:51','',235,'http://49.212.213.226/wordpress/solution-log/?p=354',0,'revision','',0),(355,1,'2012-12-04 21:10:08','2012-12-04 12:10:08','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\nこのページを参考に\r\nhttp://trac.edgewall.org/wiki/TracInstall\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\n参考にしたサイト\r\nhttp://labs.unoh.net/2009/12/2009python.html\r\n\r\nvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\nこのページから最新版をダウンロードしてデスクトップにでも置く\r\nhttp://pypi.python.org/pypi/virtualenv/\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n</pre>\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\nこちらのサイトを参考にインストール\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n</pre>\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n<pre class=\"brush: bash\">\r\nln -s ~/local/include/python2.7 ~/local/include/python\r\nln -s ~/local/lib/python2.7 ~/local/lib/python\r\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n</pre>\r\n<h3>Babelをインストール</h3>\r\n<pre class=\"brush: bash\">\r\neasy_install Babel==0.9.5\r\n</pre>\r\n<h3>Tracをインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd ~/local\r\npip install trac mysql-python\r\n</pre>\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-revision-5','','','2012-12-04 21:10:08','2012-12-04 12:10:08','',235,'http://49.212.213.226/wordpress/solution-log/?p=355',0,'revision','',0),(356,1,'2012-12-04 21:18:34','2012-12-04 12:18:34','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\nこちらの<a href=\"http://labs.unoh.net/2009/12/2009python.html\">サイト</a>を参考にvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\n<a href=\"http://pypi.python.org/pypi/virtualenv/\">このページ</a>から最新版をダウンロードしてデスクトップにでも置く\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n</pre>\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\nこちらのサイトを参考にインストール\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n</pre>\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n<pre class=\"brush: bash\">\r\nln -s ~/local/include/python2.7 ~/local/include/python\r\nln -s ~/local/lib/python2.7 ~/local/lib/python\r\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n</pre>\r\n<h3>Babelをインストール</h3>\r\n<pre class=\"brush: bash\">\r\neasy_install Babel==0.9.5\r\n</pre>\r\n<h3>Tracをインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd ~/local\r\npip install trac mysql-python\r\n</pre>\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://trac.edgewall.org/wiki/TracInstall\">TracInstall – The Trac Project</a>\r\n<li><a href=\"http://labs.unoh.net/2009/12/2009python.html\">ウノウラボ by Zynga Japan: 2009年版Python開発環境を整えよう</a>\r\n<li><a href=\"http://pypi.python.org/pypi/virtualenv/\">virtualenv 1.8.4 : Python Package Index</a>\r\n</ul>','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-revision-6','','','2012-12-04 21:18:34','2012-12-04 12:18:34','',235,'http://49.212.213.226/wordpress/solution-log/?p=356',0,'revision','',0),(357,1,'2012-12-04 21:22:06','2012-12-04 12:22:06','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\nこちらの<a href=\"http://labs.unoh.net/2009/12/2009python.html\">サイト</a>を参考にvartualenvのファイルを置く場所をさくらサーバーに作る\r\n\r\nPoderosaから\r\nmkdir -p ~/local/src\r\n\r\npipを使えるようにするために、varualenvをインストールする。\r\n<a href=\"http://pypi.python.org/pypi/virtualenv/\">このページ</a>から最新版をダウンロードしてデスクトップにでも置く\r\n\r\nこれをFFFTPで「~/local/src」フォルダにアップする。\r\nそしてPoderosaから\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n</pre>\r\nこの時点で\r\n~/local/bin以下に\r\npythonやpiｐが作成される\r\n<h3>Subversionのインストール</h3>\r\n<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>を参考にインストール\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n</pre>\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n<pre class=\"brush: bash\">\r\nln -s ~/local/include/python2.7 ~/local/include/python\r\nln -s ~/local/lib/python2.7 ~/local/lib/python\r\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n</pre>\r\n<h3>Babelをインストール</h3>\r\n<pre class=\"brush: bash\">\r\neasy_install Babel==0.9.5\r\n</pre>\r\n<h3>Tracをインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd ~/local\r\npip install trac mysql-python\r\n</pre>\r\n1～2分程度でインストールされるはず\r\n\r\n後はこちらのサイトの\r\nhttp://attosoft.info/trac/wiki/TracJaInstall\r\nTrac 環境の作成\r\n\r\n以下を参考にする\r\n\r\n自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした\r\n<h3>その他注意</h3>\r\nリポジトリのソースが文字化けする場合はtrac.iniの設定をいじる\r\nhttp://d.hatena.ne.jp/taisuke_h/20071109/1194598962\r\n\r\ntracの動作がもっさりしている場合は、cssや画像データにシンボリックリンクを通す\r\nhttp://d.hatena.ne.jp/orangehat/20080421\r\nhtdocsフォルダはtracのバージョンによって異なるので適宜探す\r\n\r\n0.13だと\r\n~/local/lib/python2.7/site-packages/trac/htdocs\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://trac.edgewall.org/wiki/TracInstall\">TracInstall – The Trac Project</a>\r\n<li><a href=\"http://labs.unoh.net/2009/12/2009python.html\">ウノウラボ by Zynga Japan: 2009年版Python開発環境を整えよう</a>\r\n<li><a href=\"http://pypi.python.org/pypi/virtualenv/\">virtualenv 1.8.4 : Python Package Index</a>\r\n<li><a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">TracJaInstall – attosoft.info Trac</a>\r\n</ul>','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-revision-7','','','2012-12-04 21:22:06','2012-12-04 12:22:06','',235,'http://49.212.213.226/wordpress/solution-log/?p=357',0,'revision','',0),(358,1,'2012-12-04 21:31:52','2012-12-04 12:31:52','えらく嵌まったのでメモ。さくらのpythonアップデートがあると使えないかもしれないので注意。\r\n今回入れたのはPython2.7.3\r\n\r\n<h3>インストール準備</h3>\r\nまずはフォルダ構成を確認。\r\n\r\n/home/[username]\r\n□/local\r\n-/lib\r\n-/src\r\n□/tmp\r\n□/var\r\n-/svn/repos\r\n-/trac/project\r\n□/www\r\n\r\n使ったツールは\r\n-Windows XP\r\n-Poderosa\r\n-FFFTP(フォルダやファイルの確認用)\r\n<h3>vartualenvのインストール</h3>\r\nこちらの<a href=\"http://labs.unoh.net/2009/12/2009python.html\">サイト</a>を参考にvartualenvのファイルを置く場所をさくらサーバーに作る。\r\n<pre class=\"brush: bash\">\r\nmkdir -p ~/local/src\r\n</pre>\r\npipを使えるようにするために、varualenvをインストールする。\r\n<a href=\"http://pypi.python.org/pypi/virtualenv/\">このページ</a>から最新版をダウンロードしてデスクトップにでも置く。これをFFFTPで「~/local/src」フォルダにアップする。\r\nそして\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\ntar zxvf pypa-virtualenv-1.7.1.2-93-gf27092d.tar\r\ncd ~/local\r\npython /home/[username]/local/src/pypa-virtualenv-f27092d/virtualenv.py --python=/usr/local/bin/python2.7\r\n</pre>\r\nこの時点で<b>~/local/bin</b>以下にpythonやpipが作成される。\r\n<h3>Subversionのインストール</h3>\r\n<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>を参考にインストール\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://subversion.tigris.org/downloads/subversion-1.6.16.tar.gz\r\nwget http://subversion.tigris.org/downloads/subversion-deps-1.6.16.tar.gz\r\ntar zxvf subversion-1.6.16.tar.gz\r\ntar zxvf subversion-deps-1.6.16.tar.gz\r\ncd subversion-1.6.16\r\n./configure --with-ssl --enable-shared --enable-static --without-serf --prefix=$HOME/local\r\nmake\r\nmake install\r\nmake swig-py\r\nmake install-swig-py\r\n</pre>\r\nmakeコマンドを実行した後、結構時間が掛かるのでトイレ休憩なり入れると良い。そしてシンボリックリンクを通してPoderosaを再起動する\r\n<pre class=\"brush: bash\">\r\nln -s ~/local/include/python2.7 ~/local/include/python\r\nln -s ~/local/lib/python2.7 ~/local/lib/python\r\nln -s ~/local/lib/svn-python/svn ~/local/lib/python/site-packages/svn\r\nln -s ~/local/lib/svn-python/libsvn ~/local/lib/python/site-packages/libsvn\r\n</pre>\r\n<h3>Babelをインストール</h3>\r\n<pre class=\"brush: bash\">\r\neasy_install Babel==0.9.5\r\n</pre>\r\n<h3>Tracをインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd ~/local\r\npip install trac mysql-python\r\n</pre>\r\n1～2分程度でインストールされるはず\r\n\r\n後は<a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">こちらのサイト</a>の<b>Trac環境の作成</b>以下を参考にする。自分の環境ではsqliteが上手く使えなかったのでMySQLをディフォルトのデータベースにした。\r\n<h3>その他注意</h3>\r\n<ul>\r\n<li>リポジトリのソースが文字化けする場合は<a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">trac.iniの設定をいじる</a>\r\n<li>tracの動作がもっさりしている場合は、<a href=\"http://d.hatena.ne.jp/orangehat/20080421\">cssや画像データにシンボリックリンクを通す</a>\r\n<li>htdocsフォルダはtracのバージョンによって異なるので適宜探す。<b>ver0.13</b>だと<b>~/local/lib/python2.7/site-packages/trac/htdocs</b>\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://trac.edgewall.org/wiki/TracInstall\">TracInstall – The Trac Project</a>\r\n<li><a href=\"http://labs.unoh.net/2009/12/2009python.html\">ウノウラボ by Zynga Japan: 2009年版Python開発環境を整えよう</a>\r\n<li><a href=\"http://pypi.python.org/pypi/virtualenv/\">virtualenv 1.8.4 : Python Package Index</a>\r\n<li><a href=\"http://attosoft.info/trac/wiki/TracJaInstall\">TracJaInstall – attosoft.info Trac</a>\r\n<li><a href=\"http://d.hatena.ne.jp/taisuke_h/20071109/1194598962\">Tracのリポジトリブラウザで文字化け - 道ばたに仰ぐ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/orangehat/20080421\">tracの高速化 - World Wide Wonderful</a>\r\n</ul>','さくらのレンタルサーバーにTracをインストールする','','inherit','open','open','','235-revision-8','','','2012-12-04 21:31:52','2012-12-04 12:31:52','',235,'http://49.212.213.226/wordpress/solution-log/?p=358',0,'revision','',0),(359,1,'2012-12-02 22:58:32','2012-12-02 13:58:32','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@domain.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。\r\n\r\n\r\n参考サイト\r\n<a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-6','','','2012-12-02 22:58:32','2012-12-02 13:58:32','',290,'http://49.212.213.226/wordpress/solution-log/?p=359',0,'revision','',0),(360,1,'2012-11-28 05:59:49','2012-11-27 20:59:49','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\nまずはEPELを導入\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n\r\n\r\nhttp://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC20\r\n\r\n続いて開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall \"Development Tools\"\r\n\r\n\r\n通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n\r\nMySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n\r\nApacheをアップデートする\r\nyum install httpd httpd-devel\r\n\r\nImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n\r\nRuby 1.9.3をインストールする\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\r\ntar xjf ruby-1.9.3-p194.tar.bz2\r\ncd ruby-1.9.3-p194\r\n./configure\r\nmake\r\nmake install\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-11-28 05:59:49','2012-11-27 20:59:49','',190,'http://49.212.213.226/wordpress/solution-log/?p=360',0,'revision','',0),(361,1,'2012-12-06 17:52:53','2012-12-06 08:52:53','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\nまずはEPELを導入\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n\r\n\r\nhttp://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC20\r\n\r\n続いて開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall \"Development Tools\"\r\n\r\n\r\n通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n\r\nMySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n\r\nApacheをアップデートする\r\nyum install httpd httpd-devel\r\n\r\nImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n\r\nRuby 1.9.3をインストールする\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\r\ntar xjf ruby-1.9.3-p194.tar.bz2\r\ncd ruby-1.9.3-p194\r\n./configure\r\nmake\r\nmake install\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 17:52:53','2012-12-06 08:52:53','',190,'http://49.212.213.226/wordpress/solution-log/?p=361',0,'revision','',0),(362,1,'2012-12-06 18:09:22','2012-12-06 09:09:22','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.bz2\r\ntar xjf ruby-1.9.3-p194.tar.bz2\r\ncd ruby-1.9.3-p194\r\n./configure\r\nmake\r\nmake install\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:09:22','2012-12-06 09:09:22','',190,'http://49.212.213.226/wordpress/solution-log/?p=362',0,'revision','',0),(363,1,'2012-12-06 18:19:10','2012-12-06 09:19:10','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"/?p=13\">こちら</a>を参照。\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:19:10','2012-12-06 09:19:10','',190,'http://49.212.213.226/wordpress/solution-log/?p=363',0,'revision','',0),(364,1,'2012-12-06 18:20:03','2012-12-06 09:20:03','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n\r\nデータベースを作成する\r\nredmineと言う名前のデータベースを作る\r\n\r\n\r\nRedmineをインストールする\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:20:03','2012-12-06 09:20:03','',190,'http://49.212.213.226/wordpress/solution-log/?p=364',0,'revision','',0),(365,1,'2012-12-06 18:23:52','2012-12-06 09:23:52','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=12\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:23:52','2012-12-06 09:23:52','',190,'http://49.212.213.226/wordpress/solution-log/?p=365',0,'revision','',0),(366,1,'2012-12-02 18:55:31','2012-12-02 09:55:31','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-7','','','2012-12-02 18:55:31','2012-12-02 09:55:31','',187,'http://49.212.213.226/wordpress/solution-log/?p=366',0,'revision','',0),(367,1,'2012-12-06 18:26:54','2012-12-06 09:26:54','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n\r\n\r\nデータベース接続設定\r\n\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成します。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\nRuby 1.8.7の場合\r\n\r\nadapterの記述は、mysqlとします。mysql2はRuby 1.9以降用です。\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成します。\r\n\r\nメール送信の設定は、環境によってさまざまななので、具体的な設定はドキュメントをあたってください。\r\n以下は認証不要のSMPTサーバーの場合です。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\nRedmineが使用するgemパッケージのインストール\r\ncd /var/lib/redmine-2.1.4\r\n  302  bundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n$ mysql -u root -p\r\nEnter password: \r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql> GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql> SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:26:54','2012-12-06 09:26:54','',190,'http://49.212.213.226/wordpress/solution-log/?p=367',0,'revision','',0),(368,1,'2012-12-06 18:33:37','2012-12-06 09:33:37','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n\r\nここから始める\r\n↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする）\r\n\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine_user\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n追加されたか確認\r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine_user | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n\r\n\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n\r\nデータベースを初期構築\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもしAccess denied for user \'redmine\'@\'localhost\' (using password: YES)みたいに出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:33:37','2012-12-06 09:33:37','',190,'http://49.212.213.226/wordpress/solution-log/?p=368',0,'revision','',0),(369,1,'2012-12-06 18:38:48','2012-12-06 09:38:48','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベースユーザにredmineを追加する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# 追加されたか確認\r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:38:48','2012-12-06 09:38:48','',190,'http://49.212.213.226/wordpress/solution-log/?p=369',0,'revision','',0),(370,1,'2012-12-06 18:40:47','2012-12-06 09:40:47','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# 追加されたか確認\r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:40:47','2012-12-06 09:40:47','',190,'http://49.212.213.226/wordpress/solution-log/?p=370',0,'revision','',0),(372,1,'2012-12-07 20:18:04','2012-12-07 11:18:04','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。\r\n\r\n<h3>Eclipseのキャッシュを削除する</h3>\r\nまず現在立ち上げているEclipseがある場合は終了する。それから\r\n<pre class=\"brush: bash\">\r\neclipse -clean\r\n\r\n# シンボリックリンクを作成していない場合\r\n~/アプリケーション/eclipse/eclipse -clean\r\n</pre>\r\n\r\nこれでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/vivi192467/archives/1649289.html\">戯言Vestige - weblog of vivi -:Eclipseで起動時にフリーズした場合の解消法</a>\r\n</ul>','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','publish','open','open','','eclipse%e3%81%a7%e6%96%b0%e8%a6%8f%e3%82%bd%e3%83%95%e3%83%88%e3%82%a6%e3%82%a7%e3%82%a2%e3%81%ae%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%a7%e3%83%95%e3%83%aa%e3%83%bc%e3%82%ba','','','2013-11-05 16:37:15','2013-11-05 07:37:15','',0,'http://49.212.213.226/wordpress/solution-log/?p=372',0,'post','',0),(373,1,'2012-12-07 20:17:40','2012-12-07 11:17:40','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。その時はターミナルから\n<pre class=\"brush: bash\">\neclipse -clean\n</pre>\n\nこれでシステムのキャッシュがクリアされるようなので、再びしんk','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','inherit','open','open','','372-revision-v1','','','2012-12-07 20:17:40','2012-12-07 11:17:40','',372,'http://49.212.213.226/wordpress/solution-log/?p=373',0,'revision','',0),(374,1,'2012-12-07 20:25:32','2012-12-07 11:25:32','<b>システム→設定→キーボード・ショートカット</b>から<b>デスクトップ→端末の起動</b>の順。\r\n\r\nディフォルトは無効になっていたのでshift+ctrl+Sに設定した。','CentOS6で端末をショートカットキーで起動させる','','publish','open','open','','centos6%e3%81%a7%e7%ab%af%e6%9c%ab%e3%82%92%e3%82%b7%e3%83%a7%e3%83%bc%e3%83%88%e3%82%ab%e3%83%83%e3%83%88%e3%82%ad%e3%83%bc%e3%81%a7%e8%b5%b7%e5%8b%95%e3%81%95%e3%81%9b%e3%82%8b','','','2012-12-07 20:25:38','2012-12-07 11:25:38','',0,'http://49.212.213.226/wordpress/solution-log/?p=374',0,'post','',0),(375,1,'2012-12-07 20:24:59','2012-12-07 11:24:59','システム→設定→キーボード・ショートカットからデスクトップ→端末の起動の順。\n\nディフォルトは無効になっていたのでshift+ctrl+','CentOS6で端末をショートカットキーで起動させる','','inherit','open','open','','374-revision','','','2012-12-07 20:24:59','2012-12-07 11:24:59','',374,'http://49.212.213.226/wordpress/solution-log/?p=375',0,'revision','',0),(376,1,'2012-12-07 20:25:32','2012-12-07 11:25:32','<b>システム→設定→キーボード・ショートカット</b>から<b>デスクトップ→端末の起動</b>の順。\r\n\r\nディフォルトは無効になっていたのでshift+ctrl+Sに設定した。','CentOS6で端末をショートカットキーで起動させる','','inherit','open','open','','374-revision-2','','','2012-12-07 20:25:32','2012-12-07 11:25:32','',374,'http://49.212.213.226/wordpress/solution-log/?p=376',0,'revision','',0),(377,1,'2012-12-07 22:17:34','2012-12-07 13:17:34','新規ソフトウェアのインストールなどでフィルタ機能を使って新しくインストールするプラグインを探すと、Eclipseがフリーズし、フィルタ機能が使えなくなってしまうことがある。\n\n解決方法は、設定→インストール/更新→使用可能なソフトウェア\n\nこれで使用可能なソフトウェアの再ロードを行う。','Eclipseで新規ソフトウェアのインストールが出来なくなった時の対処法','','inherit','open','open','','374-autosave','','','2012-12-07 22:17:34','2012-12-07 13:17:34','',374,'http://49.212.213.226/wordpress/solution-log/?p=377',0,'revision','',0),(378,1,'2012-12-08 00:10:19','2012-12-07 15:10:19','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\r\n<h3>.cshrcの設定を変更する</h3>\r\n~/.cshrcを開いて以下を書き加える\r\n<pre class=\"brush: bash\">\r\nif ( $?SSH_CLIENT &amp;amp;&amp;amp; ! $?SSH_TTY ) then\r\nsetenv LANG C\r\nunsetenv LC_ALL\r\n\r\nelse if ( $?prompt ) then\r\n</pre>\r\n接続テスト\r\n\r\n<pre class=\"brush: bash\">\r\nsftp -v user@domain\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://diary.sshida.com/20041130-3-diary.ht\">WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</a></li>\r\n</ul>','さくらのスタンダードでsftpを使う','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%ae%e3%82%b9%e3%82%bf%e3%83%b3%e3%83%80%e3%83%bc%e3%83%89%e3%81%a7sftp%e3%82%92%e4%bd%bf%e3%81%86','','','2012-12-08 13:23:23','2012-12-08 04:23:23','',0,'http://49.212.213.226/wordpress/solution-log/?p=378',0,'post','',0),(379,1,'2012-12-08 00:09:32','2012-12-07 15:09:32','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやらげん','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision','','','2012-12-08 00:09:32','2012-12-07 15:09:32','',378,'http://49.212.213.226/wordpress/solution-log/?p=379',0,'revision','',0),(380,1,'2012-12-08 00:10:19','2012-12-07 15:10:19','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-2','','','2012-12-08 00:10:19','2012-12-07 15:10:19','',378,'http://49.212.213.226/wordpress/solution-log/?p=380',0,'revision','',0),(381,1,'2013-11-05 16:37:05','2013-11-05 07:37:05','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。\r\n\r\n<h3>Eclipseのキャッシュを削除する</h3>\r\nまず現在立ち上げているEclipseがある場合は終了する。それから\r\n<pre class=\"brush: bash\">\r\neclipse -clean\r\n\r\n# シンボリックリンクを作成していない場合\r\n~/アプリケーション/eclipse/eclipse -clean\r\n</pre>\r\n\r\nこれでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/vivi192467/archives/1649289.html\">戯言Vestige - weblog of vivi -:Eclipseで起動時にフリーズした場合の解消法</a>\r\n</ul>','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','inherit','open','open','','372-autosave-v1','','','2013-11-05 16:37:05','2013-11-05 07:37:05','',372,'http://49.212.213.226/wordpress/solution-log/?p=381',0,'revision','',0),(382,1,'2012-12-07 20:18:04','2012-12-07 11:18:04','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。その時はターミナルから\r\n<pre class=\"brush: bash\">\r\neclipse -clean\r\n</pre>\r\n\r\nこれでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','inherit','open','open','','372-revision-v1','','','2012-12-07 20:18:04','2012-12-07 11:18:04','',372,'http://49.212.213.226/wordpress/solution-log/?p=382',0,'revision','',0),(383,1,'2012-12-08 01:28:58','2012-12-07 16:28:58','考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。\r\n\r\n<a href=\"https://sites.google.com/site/chobimemo/eclipse/cdt-rdt\">https://sites.google.com/site/chobimemo/eclipse/cdt-rdt</a>\r\n\r\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B</a>\r\n\r\n<h3>EclipseにRemote System Explore(RSE)をインストールする</h3>\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\r\n<li>フィルター入力に<b>「Remote System Explore」</b>と入力\r\n<li>「<b>Remote System Explorer End-User Runtime</b>」と「<b>Remote System Explorer User Actions</b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://walbrix.net/blog/2010/07/eclipse-36heliosrsessh.html\">Eclipse 3.6(Helios)にRSEプラグインを導入しSSHを利用する - Walbrix Blog</a>\r\n</ul>','EclipseでRemote System Explore(RSE)を使用する','','publish','open','open','','eclipse%e3%81%a7rse%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2013-03-10 15:07:27','2013-03-10 06:07:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=383',0,'post','',0),(384,1,'2012-12-08 01:28:29','2012-12-07 16:28:29','考えてみたらリモートで開発が出きると楽かなと思い、Eclipsed','EclipseでRSEを使用する','','inherit','open','open','','383-revision','','','2012-12-08 01:28:29','2012-12-07 16:28:29','',383,'http://49.212.213.226/wordpress/solution-log/?p=384',0,'revision','',0),(385,1,'2012-12-08 01:28:58','2012-12-07 16:28:58','考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。\r\n\r\nhttps://sites.google.com/site/chobimemo/eclipse/cdt-rdt','EclipseでRSEを使用する','','inherit','open','open','','383-revision-2','','','2012-12-08 01:28:58','2012-12-07 16:28:58','',383,'http://49.212.213.226/wordpress/solution-log/?p=385',0,'revision','',0),(386,1,'2012-12-08 13:13:52','2012-12-08 04:13:52','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\n\n<h3>.cshrcの設定を変更する</h3>\n~/.cshrcを開いて以下を書き加える\n<pre class=\"brush: bash\">\nif ( $?SSH_CLIENT &amp;&amp; ! $?SSH_TTY ) then\n  setenv LANG C\n  unsetenv LC_ALL\n\nelse if ( $?prompt ) then\n</pre>\n接続テスト\n<pre class=\"brush: bash\">\nsftp -v user@domain\n</pre>\n\n\n<h3>参考サイト</h3>\n<a href=\"http://diary.sshida.com/20041130-3-diary.ht\">WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</a>','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-autosave','','','2012-12-08 13:13:52','2012-12-08 04:13:52','',378,'http://49.212.213.226/wordpress/solution-log/?p=386',0,'revision','',0),(387,1,'2012-12-08 00:11:25','2012-12-07 15:11:25','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-3','','','2012-12-08 00:11:25','2012-12-07 15:11:25','',378,'http://49.212.213.226/wordpress/solution-log/?p=387',0,'revision','',0),(389,1,'2012-12-08 13:12:20','2012-12-08 04:12:20','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\r\n\r\n<h3>.cshrcの設定を変更する</h3>\r\n~/.cshrcを開いて以下を書き加える\r\n<pre class=\"brush: bash\">\r\nif ( $?SSH_CLIENT &amp;&amp; ! $?SSH_TTY ) then\r\n  setenv LANG C\r\n  unsetenv LC_ALL\r\n\r\nelse if ( $?prompt ) then\r\n</pre>\r\n接続テスト\r\n<pre class=\"brush: bash\">\r\nsftp -v user@domain\r\n</pre>','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-4','','','2012-12-08 13:12:20','2012-12-08 04:12:20','',378,'http://49.212.213.226/wordpress/solution-log/?p=389',0,'revision','',0),(390,1,'2012-12-08 13:13:56','2012-12-08 04:13:56','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\r\n\r\n<h3>.cshrcの設定を変更する</h3>\r\n~/.cshrcを開いて以下を書き加える\r\n<pre class=\"brush: bash\">\r\nif ( $?SSH_CLIENT &amp;&amp; ! $?SSH_TTY ) then\r\n  setenv LANG C\r\n  unsetenv LC_ALL\r\n\r\nelse if ( $?prompt ) then\r\n</pre>\r\n接続テスト\r\n<pre class=\"brush: bash\">\r\nsftp -v user@domain\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://diary.sshida.com/20041130-3-diary.ht\">WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</a>','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-5','','','2012-12-08 13:13:56','2012-12-08 04:13:56','',378,'http://49.212.213.226/wordpress/solution-log/?p=390',0,'revision','',0),(391,1,'2012-12-08 13:14:25','2012-12-08 04:14:25','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\r\n\r\n<h3>.cshrcの設定を変更する</h3>\r\n~/.cshrcを開いて以下を書き加える\r\n<pre class=\"brush: bash\">\r\nif ( $?SSH_CLIENT &amp;&amp; ! $?SSH_TTY ) then\r\n  setenv LANG C\r\n  unsetenv LC_ALL\r\n\r\nelse if ( $?prompt ) then\r\n</pre>\r\n接続テスト\r\n<pre class=\"brush: bash\">\r\nsftp -v user@domain\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://diary.sshida.com/20041130-3-diary.ht\">WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</a>\r\n</ul>','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-6','','','2012-12-08 13:14:25','2012-12-08 04:14:25','',378,'http://49.212.213.226/wordpress/solution-log/?p=391',0,'revision','',0),(392,1,'2012-12-08 13:15:51','2012-12-08 04:15:51','EclipseのRSE(Remote System Explore)を使おうと思い、さくらのスタンダードにEclipseから一向に接続できない。どうやら原因は<a href=\"http://diary.sshida.com/20041130-3-diary.html\">これ</a>らしい。。。\r\n<h3>.cshrcの設定を変更する</h3>\r\n~/.cshrcを開いて以下を書き加える\r\n<code>\r\nif ( $?SSH_CLIENT &amp;&amp; ! $?SSH_TTY ) then\r\nsetenv LANG C\r\nunsetenv LC_ALL\r\n\r\nelse if ( $?prompt ) then\r\n</code>\r\n接続テスト\r\n\r\n<pre class=\"brush: bash\">\r\nsftp -v user@domain\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://diary.sshida.com/20041130-3-diary.ht\">WinSCPでscpとsftpがうまくいかないときのsshサーバの~/.cshrcの設定</a></li>\r\n</ul>','さくらのスタンダードでsftpを使う','','inherit','open','open','','378-revision-7','','','2012-12-08 13:15:51','2012-12-08 04:15:51','',378,'http://49.212.213.226/wordpress/solution-log/?p=392',0,'revision','',0),(393,1,'2012-12-08 15:55:09','2012-12-08 06:55:09','<a href=\"http://onirice.seesaa.net/article/234789398.html\">Eclipse + PDT + xdebug によるリモートデバッグ環境構築メモ: かわいいは製造可</a>\r\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">\r\nサーバー設定メモ/eclipseでPHPのリモートデバッグ環境をつくる - トヤヲ.ネット</a>','EclipseでPHPをリモートデバッグする','','publish','open','open','','eclipse%e3%81%a7php%e3%82%92%e3%83%aa%e3%83%a2%e3%83%bc%e3%83%88%e3%83%87%e3%83%90%e3%83%83%e3%82%b0%e3%81%99%e3%82%8b','','','2012-12-09 10:08:24','2012-12-09 01:08:24','',0,'http://49.212.213.226/wordpress/solution-log/?p=393',0,'post','',0),(394,1,'2012-12-08 15:55:05','2012-12-08 06:55:05','Eclipse + PDT + xdebug によるリモートデバッグ環境構築メモ: かわいいは製造可\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">\nサーバー設定メモ/eclipseでPHPのリモートデバッグ環境をつくる - トヤヲ.ネット</a>','EclipseでPHPをリモートデバッグする','','inherit','open','open','','393-revision','','','2012-12-08 15:55:05','2012-12-08 06:55:05','',393,'http://49.212.213.226/wordpress/solution-log/?p=394',0,'revision','',0),(395,1,'2012-12-09 02:22:48','2012-12-08 17:22:48','<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: bash\">\r\n#yumなどのパッケージマネージャーでインストールした場合\r\nvi /etc/php.ini\r\n\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6に最新バージョンのPHPをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abphp5-4%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-11-05 11:33:34','2013-11-05 02:33:34','',0,'http://49.212.213.226/wordpress/solution-log/?p=395',0,'post','',0),(396,1,'2012-12-09 02:22:02','2012-12-08 17:22:02','どうやらディフォルトで5.3系がインストールされているらしい。\n\n<h3>Apacheをインストールする</h3>\n<pre class=\"brush: bash\">\nyum install httpd\nyum install httpd-devel\n# apache用のSSLモジュールをインストール\nyum install mod_ssl\n</pre>\n\n<h3>PHP5.4をインストールする</h3>\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\n<pre class=\"brush: bash\">\n# 5.3系を入れる\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\n# 5.4系にバージョンアップする\nsudo yum update php* --enablerepo=remi-test\n</pre>\nインストールされているかチェック\nphp -v\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \nCopyright (c) 1997-2012 The PHP Group\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\n</pre>\n<h3>参考サイト</h3>\n<a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-09 02:22:02','2012-12-08 17:22:02','',395,'http://49.212.213.226/wordpress/solution-log/?p=396',0,'revision','',0),(397,1,'2013-11-05 11:33:52','2013-11-05 02:33:52','<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: bash\">\r\n#yumなどのパッケージマネージャーでインストールした場合\r\nvi /etc/php.ini\r\n\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6に最新バージョンのPHPをインストールする','','inherit','open','open','','395-autosave-v1','','','2013-11-05 11:33:52','2013-11-05 02:33:52','',395,'http://49.212.213.226/wordpress/solution-log/?p=397',0,'revision','',0),(398,1,'2012-12-09 02:22:48','2012-12-08 17:22:48','どうやらディフォルトで5.3系がインストールされているらしい。\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-09 02:22:48','2012-12-08 17:22:48','',395,'http://49.212.213.226/wordpress/solution-log/?p=398',0,'revision','',0),(399,1,'2012-12-09 02:25:32','2012-12-08 17:25:32','どうやらディフォルトで5.3系がインストールされているらしい。\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/installa\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-09 02:25:32','2012-12-08 17:25:32','',395,'http://49.212.213.226/wordpress/solution-log/?p=399',0,'revision','',0),(400,1,'2012-12-08 15:55:09','2012-12-08 06:55:09','<a href=\"http://onirice.seesaa.net/article/234789398.html\">Eclipse + PDT + xdebug によるリモートデバッグ環境構築メモ: かわいいは製造可</a>\r\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">\r\nサーバー設定メモ/eclipseでPHPのリモートデバッグ環境をつくる - トヤヲ.ネット</a>','EclipseでPHPをリモートデバッグする','','inherit','open','open','','393-revision-2','','','2012-12-08 15:55:09','2012-12-08 06:55:09','',393,'http://49.212.213.226/wordpress/solution-log/?p=400',0,'revision','',0),(401,1,'2012-12-09 09:28:45','2012-12-09 00:28:45','どうやらディフォルトで5.3系がインストールされているらしい。\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-09 09:28:45','2012-12-09 00:28:45','',395,'http://49.212.213.226/wordpress/solution-log/?p=401',0,'revision','',0),(402,1,'2012-12-09 12:58:08','2012-12-09 03:58:08','さくらのVPSにJenkins環境を整えるメモ。\r\n\r\n<h3>Xdebugをインストールする</h3>\r\nPECLからインストールする\r\n<pre class=\"brush: bash\">\r\npecl install xdebug\r\n</pre>\r\n<h3>PHPUnitをインストールする</h3>\r\n<b>/usr/share/pear/PHPUnit</b>にインストールされる。インストールコマンドは良く変更されるので<a href=\"http://www.phpunit.de/manual/3.8/ja/installation.html\">PHPUnitのHP</a>を良く確認する。\r\n<pre class=\"brush: bash\">\r\npear config-set auto_discover 1\r\npear install pear.phpunit.de/PHPUnit\r\n</pre>\r\n<h3>phpDocumentorをインストールする</h3>\r\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする。<b>/usr/share/pear/PhpDocumentor</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpdoc.org\r\npear install phpdoc/phpDocumentor-alpha\r\n</pre>\r\n<h3>その他のライブラリをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abjenkins-phpunit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-17 20:53:37','2013-03-17 11:53:37','',0,'http://49.212.213.226/wordpress/solution-log/?p=402',0,'post','',0),(403,1,'2012-12-09 12:56:44','2012-12-09 03:56:44','','自動下書き','','inherit','open','open','','402-revision','','','2012-12-09 12:56:44','2012-12-09 03:56:44','',402,'http://49.212.213.226/wordpress/solution-log/?p=403',0,'revision','',0),(404,1,'2012-12-09 12:57:15','2012-12-09 03:57:15','','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-2','','','2012-12-09 12:57:15','2012-12-09 03:57:15','',402,'http://49.212.213.226/wordpress/solution-log/?p=404',0,'revision','',0),(405,1,'2012-12-09 12:58:08','2012-12-09 03:58:08','<blockquote>\r\n<p>\r\npecl install xdebug<br />\r\npear channel-discover components.ez.no<br />\r\npear channel-discover pear.phpunit.de<br />\r\npear channel-discover pear.phpmd.org<br />\r\n\r\npear channel-discover pear.symfony-project.com<br />\r\npear channel-discover pear.symfony.com<br />\r\npear channel-discover pecl.php.net<br />\r\npear channel-discover pear.pdepend.org<br />\r\npear channel-discover pear.netpirates.net<br />\r\npear install --alldeps PhpDocumentor<br />\r\npear install --alldeps phpunit/phpcpd<br />\r\npear install --alldeps phpmd/PHP_PMD<br />\r\npear install --alldeps phpunit/PHPUnit\r\n\r\n</p>\r\n</blockquote>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-3','','','2012-12-09 12:58:08','2012-12-09 03:58:08','',402,'http://49.212.213.226/wordpress/solution-log/?p=405',0,'revision','',0),(406,1,'2013-03-17 20:53:25','2013-03-17 11:53:25','さくらのVPSにJenkins環境を整えるメモ。\n\n<h3>Xdebugをインストールする</h3>\nPECLからインストールする\n<pre class=\"brush: bash\">\npecl install xdebug\n</pre>\n<h3>PHPUnitをインストールする</h3>\n<b>/usr/share/pear/PHPUnit</b>にインストールされる。インストールコマンドは良く変更されるので<a href=\"http://www.phpunit.de/manual/3.8/ja/installation.html\">PHPUnitのHP</a>を良く確認する。\n<pre class=\"brush: bash\">\npear channel-discover components.ez.no\npear channel-discover pear.phpunit.de\nsudo pear install phpunit/PHPUnit\n</pre>\n<h3>phpDocumentorをインストールする</h3>\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする。<b>/usr/share/pear/PhpDocumentor</b>にインストールされる\n<pre class=\"brush: bash\">\npear channel-discover pear.phpdoc.org\npear install phpdoc/phpDocumentor-alpha\n</pre>\n<h3>その他のライブラリをインストールする</h3>\n<pre class=\"brush: bash\">\npear channel-discover pear.phpmd.org\npear channel-discover pear.symfony-project.com\npear channel-discover pear.symfony.com\npear channel-discover pecl.php.net\npear channel-discover pear.pdepend.org\npear channel-discover pear.netpirates.net\npear install --alldeps phpunit/phpcpd\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\n</pre>\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-autosave','','','2013-03-17 20:53:25','2013-03-17 11:53:25','',402,'http://49.212.213.226/wordpress/solution-log/?p=406',0,'revision','',0),(407,1,'2012-12-09 12:59:37','2012-12-09 03:59:37','<blockquote>\r\npecl install xdebug\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps PhpDocumentor\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD\r\npear install --alldeps phpunit/PHPUnit\r\n</blockquote>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-4','','','2012-12-09 12:59:37','2012-12-09 03:59:37','',402,'http://49.212.213.226/wordpress/solution-log/?p=407',0,'revision','',0),(408,1,'2012-12-04 20:00:24','2012-12-04 11:00:24','<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\nOrder deny,allow\r\nAllow from all\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-17','','','2012-12-04 20:00:24','2012-12-04 11:00:24','',201,'http://49.212.213.226/wordpress/solution-log/?p=408',0,'revision','',0),(409,1,'2012-12-09 13:10:14','2012-12-09 04:10:14','<h3>Javaをインストールする</h3>\r\nJavaがインストールされていない場合はインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -qa java-1.7.0-openjdk\r\nyum -y install java-1.7.0-openjdk\r\n</pre>\r\n\r\n<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n\r\nOrder deny,allow\r\nAllow from all\r\n</pre>\r\n\r\n/etc/sysconfig/jenkinsを開き最後の行に\r\n<pre class=\"brush: bash\">\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot;\r\n</pre>\r\nを追加。\r\n\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-18','','','2012-12-09 13:10:14','2012-12-09 04:10:14','',201,'http://49.212.213.226/wordpress/solution-log/?p=409',0,'revision','',0),(410,1,'2012-12-09 13:21:32','2012-12-09 04:21:32','<h3>Javaをインストールする</h3>\r\nJavaがインストールされていない場合はインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -qa java-1.7.0-openjdk\r\nyum -y install java-1.7.0-openjdk\r\n</pre>\r\n\r\n<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n</pre>\r\n書き込み内容\r\n<pre class=\"brush: bash\">\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n</pre>\r\nJenkinsの設定ファイルを書き換える\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/jenkins\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot; #最終行を書き換え\r\n</pre>\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<pre class=\"brush: bash\">\r\nhttpd -k stop\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-19','','','2012-12-09 13:21:32','2012-12-09 04:21:32','',201,'http://49.212.213.226/wordpress/solution-log/?p=410',0,'revision','',0),(411,1,'2012-12-09 13:22:50','2012-12-09 04:22:50','<h3>Javaをインストールする</h3>\r\nJavaがインストールされていない場合はインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -qa java-1.7.0-openjdk\r\nyum -y install java-1.7.0-openjdk\r\n</pre>\r\n\r\n<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n# 書き込み内容\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n</pre>\r\nJenkinsの設定ファイルを書き換える\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/jenkins\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot; #最終行を書き換え\r\n</pre>\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<pre class=\"brush: bash\">\r\nhttpd -k stop\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-20','','','2012-12-09 13:22:50','2012-12-09 04:22:50','',201,'http://49.212.213.226/wordpress/solution-log/?p=411',0,'revision','',0),(412,1,'2012-12-09 13:02:20','2012-12-09 04:02:20','<pre class=\"brush: bash\">\r\npecl install xdebug\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps PhpDocumentor\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\npear install --alldeps phpunit/PHPUnit\r\n</pre>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-5','','','2012-12-09 13:02:20','2012-12-09 04:02:20','',402,'http://49.212.213.226/wordpress/solution-log/?p=412',0,'revision','',0),(413,1,'2012-12-09 18:00:28','2012-12-09 09:00:28','<pre class=\"brush: bash\">\r\n# PEARの設定を表示する\r\npear config-show\r\nConfiguration (channel pear.php.net):\r\n=====================================\r\nAuto-discover new Channels     auto_discover    &lt;not set&gt;\r\nDefault Channel                default_channel  pear.php.net\r\nHTTP Proxy Server Address      http_proxy       &lt;not set&gt;\r\nPEAR server [DEPRECATED]       master_server    pear.php.net\r\nDefault Channel Mirror         preferred_mirror pear.php.net\r\nRemote Configuration File      remote_config    &lt;not set&gt;\r\nPEAR executables directory     bin_dir          /usr/bin\r\nPEAR documentation directory   doc_dir          /usr/share/pear/doc\r\nPHP extension directory        ext_dir          /usr/lib64/php/modules\r\nPEAR directory                 php_dir          /usr/share/pear\r\nPEAR Installer cache directory cache_dir        /var/cache/php-pear\r\nPEAR configuration file        cfg_dir          /etc/pear\r\ndirectory\r\nPEAR data directory            data_dir         /usr/share/pear/data\r\nPEAR Installer download        download_dir     /tmp/pear/download\r\ndirectory\r\nPHP CLI/CGI binary             php_bin          /usr/bin/php\r\nphp.ini location               php_ini          &lt;not set&gt;\r\n--program-prefix passed to     php_prefix       &lt;not set&gt;\r\nPHP\'s ./configure\r\n--program-suffix passed to     php_suffix       &lt;not set&gt;\r\nPHP\'s ./configure\r\nPEAR Installer temp directory  temp_dir         /var/tmp\r\nPEAR test directory            test_dir         /usr/share/pear/test\r\nPEAR www files directory       www_dir          /var/www/html\r\nCache TimeToLive               cache_ttl        3600\r\nPreferred Package State        preferred_state  stable\r\nUnix file mask                 umask            22\r\nDebug Log Level                verbose          1\r\nPEAR password (for             password         &lt;not set&gt;\r\nmaintainers)\r\nSignature Handling Program     sig_bin          /usr/bin/gpg\r\nSignature Key Directory        sig_keydir       /etc/pearkeys\r\nSignature Key Id               sig_keyid        &lt;not set&gt;\r\nPackage Signature Type         sig_type         gpg\r\nPEAR username (for             username         &lt;not set&gt;\r\nmaintainers)\r\nUser Configuration File        Filename         /root/.pearrc\r\nSystem Configuration File      Filename         /etc/pear.conf\r\n</pre>','PEARに関する覚書き','','publish','open','open','','pear%e3%81%ab%e9%96%a2%e3%81%99%e3%82%8b%e8%a6%9a%e6%9b%b8%e3%81%8d','','','2012-12-19 18:43:09','2012-12-19 09:43:09','',0,'http://49.212.213.226/wordpress/solution-log/?p=413',0,'post','',0),(414,1,'2012-12-09 18:00:02','2012-12-09 09:00:02','<pre class=\"brush: bash\">\n# PEARの設定を表示する\npear config-show\n</pre>','PEARに関する覚書き','','inherit','open','open','','413-revision','','','2012-12-09 18:00:02','2012-12-09 09:00:02','',413,'http://49.212.213.226/wordpress/solution-log/?p=414',0,'revision','',0),(415,1,'2012-12-09 18:00:28','2012-12-09 09:00:28','<pre class=\"brush: bash\">\r\n# PEARの設定を表示する\r\npear config-show\r\n</pre>','PEARに関する覚書き','','inherit','open','open','','413-revision-2','','','2012-12-09 18:00:28','2012-12-09 09:00:28','',413,'http://49.212.213.226/wordpress/solution-log/?p=415',0,'revision','',0),(416,1,'2012-12-09 13:48:42','2012-12-09 04:48:42','<pre class=\"brush: bash\">\r\npecl install xdebug\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps PhpDocumentor\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\npear install --alldeps phpunit/PHPUnit\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-6','','','2012-12-09 13:48:42','2012-12-09 04:48:42','',402,'http://49.212.213.226/wordpress/solution-log/?p=416',0,'revision','',0),(417,1,'2012-12-09 18:17:13','2012-12-09 09:17:13','さくらのVPSにJenkins環境を整えるメモ。\r\n\r\n<h3>Xdebugをインストールする</h3>\r\nPECLからインストールする\r\n<pre class=\"brush: bash\">\r\npecl install xdebug\r\n</pre>\r\n\r\n<h3>PHPUnitをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\nsudo pear install phpunit/PHPUnit\r\n</pre>\r\n\r\n<h3>phpDocumentorをインストールする</h3>\r\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpdoc.org\r\npear install phpdoc/phpDocumentor-alpha\r\n</pre>\r\n\r\n<h3>その他のライブラリをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-7','','','2012-12-09 18:17:13','2012-12-09 09:17:13','',402,'http://49.212.213.226/wordpress/solution-log/?p=417',0,'revision','',0),(418,1,'2012-12-09 18:20:13','2012-12-09 09:20:13','さくらのVPSにJenkins環境を整えるメモ。\r\n\r\n<h3>Xdebugをインストールする</h3>\r\nPECLからインストールする\r\n<pre class=\"brush: bash\">\r\npecl install xdebug\r\n</pre>\r\n\r\n<h3>PHPUnitをインストールする</h3>\r\n<b>/usr/share/pear/PHPUnit</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\nsudo pear install phpunit/PHPUnit\r\n</pre>\r\n\r\n<h3>phpDocumentorをインストールする</h3>\r\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする。<b>/usr/share/pear/PhpDocumentor</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpdoc.org\r\npear install phpdoc/phpDocumentor-alpha\r\n</pre>\r\n\r\n<h3>その他のライブラリをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-8','','','2012-12-09 18:20:13','2012-12-09 09:20:13','',402,'http://49.212.213.226/wordpress/solution-log/?p=418',0,'revision','',0),(419,1,'2012-12-09 20:08:13','2012-12-09 11:08:13','<del datetime=\"2012-12-29T19:26:01+00:00\"><a href=\"http://net-newbie.com/putty.html\">PuTTYでssh2プロトコルを使ってssh接続</a></del>\r\n\r\nPutytyだとフォーマットの変換などが入り面倒なので<a href=\"http://ttssh2.sourceforge.jp/\">Tera Term</a>を使う。','Windwos7で公開鍵秘密鍵を発行する','','publish','open','open','','windwos7%e3%81%a7%e5%85%ac%e9%96%8b%e9%8d%b5%e7%a7%98%e5%af%86%e9%8d%b5%e3%82%92%e7%99%ba%e8%a1%8c%e3%81%99%e3%82%8b','','','2012-12-30 04:27:51','2012-12-29 19:27:51','',0,'http://49.212.213.226/wordpress/solution-log/?p=419',0,'post','',0),(420,1,'2012-12-09 20:07:51','2012-12-09 11:07:51','PuTTYでssh2プロトコルを使ってssh接続','Windwos7で公開鍵秘密鍵を発行する','','inherit','open','open','','419-revision','','','2012-12-09 20:07:51','2012-12-09 11:07:51','',419,'http://49.212.213.226/wordpress/solution-log/?p=420',0,'revision','',0),(421,1,'2012-12-09 18:41:10','2012-12-09 09:41:10','さくらのVPSにJenkins環境を整えるメモ。\r\n\r\n<h3>Xdebugをインストールする</h3>\r\nPECLからインストールする\r\n<pre class=\"brush: bash\">\r\npecl install xdebug\r\n</pre>\r\n\r\n<h3>PHPUnitをインストールする</h3>\r\n<b>/usr/share/pear/PHPUnit</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\nsudo pear install phpunit/PHPUnit\r\n</pre>\r\n\r\n<h3>phpDocumentorをインストールする</h3>\r\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする。<b>/usr/share/pear/PhpDocumentor</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpdoc.org\r\npear install phpdoc/phpDocumentor-alpha\r\n</pre>\r\n\r\n<h3>その他のライブラリをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-9','','','2012-12-09 18:41:10','2012-12-09 09:41:10','',402,'http://49.212.213.226/wordpress/solution-log/?p=421',0,'revision','',0),(422,1,'2012-12-09 10:30:59','2012-12-09 01:30:59','どうやらディフォルトで5.3系がインストールされているらしい。\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>http.confの編集</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-09 10:30:59','2012-12-09 01:30:59','',395,'http://49.212.213.226/wordpress/solution-log/?p=422',0,'revision','',0),(423,1,'2012-12-11 13:32:42','2012-12-11 04:32:42','どうやらディフォルトで5.3系がインストールされているらしい。\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>http.confの編集</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-11 13:32:42','2012-12-11 04:32:42','',395,'http://49.212.213.226/wordpress/solution-log/?p=423',0,'revision','',0),(424,1,'2012-12-04 20:02:20','2012-12-04 11:02:20','<h3>FileZillaをインストールする</h3>\r\n最初は<a href=\"http://gftp.seul.org/\">gFTP</a>を<a href=\"http://ja.528p.com/linux/client6/CD004-gftp-settei.html\">RPMからインストール</a>しようと思ったけど、<a href=\"http://serverfault.com/questions/116686/how-to-install-glib-in-a-centos-server\">依存関係でシステムがイカれるかも</a>とか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumから<a href=\"http://filezilla-project.org/\">FileZilla</a>をインストールすることにした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a></li>\r\n</ul>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-9','','','2012-12-04 20:02:20','2012-12-04 11:02:20','',306,'http://49.212.213.226/wordpress/solution-log/?p=424',0,'revision','',0),(425,1,'2012-12-06 18:41:39','2012-12-06 09:41:39','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-06 18:41:39','2012-12-06 09:41:39','',190,'http://49.212.213.226/wordpress/solution-log/?p=425',0,'revision','',0),(426,1,'2012-12-11 13:37:47','2012-12-11 04:37:47','http://www.tooyama.org/yum-addrepo-epel.html\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\nRedmineが使用するgemパッケージのインストール\r\ngem install bundler --no-rdoc --no-ri\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-11 13:37:47','2012-12-11 04:37:47','',190,'http://49.212.213.226/wordpress/solution-log/?p=426',0,'revision','',0),(427,1,'2012-12-11 13:44:19','2012-12-11 04:44:19','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<hr>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n&lt;b&gt;Redmineが使用するgemパッケージのインストール&lt;/b&gt;\r\n&lt;hr&gt;\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-11 13:44:19','2012-12-11 04:44:19','',190,'http://49.212.213.226/wordpress/solution-log/?p=427',0,'revision','',0),(428,1,'2012-12-11 14:04:59','2012-12-11 05:04:59','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\"></pre>\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.1.4/script/rails server webrick -e production\r\n<pre class=\"brush: bash\"></pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-11 14:04:59','2012-12-11 05:04:59','',190,'http://49.212.213.226/wordpress/solution-log/?p=428',0,'revision','',0),(429,1,'2012-12-11 14:20:29','2012-12-11 05:20:29','<a href=\"./?p=190\">Redmineのインストール</a>が一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。メモでもつけようかと思ったけど、<a href=\"http://redmine.jp/tech_note/first-step/admin/\">Redmineを使い始めるための初期設定 | Redmine.JP</a>と言う素晴らしいサイトがあるので、とりあえず分からないところだけメモを取るようにする。','Redmineを使ってプロジェクトを管理する','','publish','open','open','','redmine%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e3%83%97%e3%83%ad%e3%82%b8%e3%82%a7%e3%82%af%e3%83%88%e3%82%92%e7%ae%a1%e7%90%86%e3%81%99%e3%82%8b','','','2012-12-11 15:55:37','2012-12-11 06:55:37','',0,'http://49.212.213.226/wordpress/solution-log/?p=429',0,'post','',0),(430,1,'2012-12-11 14:19:39','2012-12-11 05:19:39','Redmineのインストールが一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。','Redmineを使ってプロジェクトを管理する','','inherit','open','open','','429-revision','','','2012-12-11 14:19:39','2012-12-11 05:19:39','',429,'http://49.212.213.226/wordpress/solution-log/?p=430',0,'revision','',0),(431,1,'2012-12-11 15:55:06','2012-12-11 06:55:06','<a href=\"./?p=190\">Redmineのインストール</a>が一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。メモでもつけようかと思ったけど、Redmineを使い始めるための初期設定 | Redmine.JP','Redmineを使ってプロジェクトを管理する','','inherit','open','open','','429-autosave','','','2012-12-11 15:55:06','2012-12-11 06:55:06','',429,'http://49.212.213.226/wordpress/solution-log/?p=431',0,'revision','',0),(432,1,'2012-12-11 14:20:29','2012-12-11 05:20:29','<a href=\"./?p=190\">Redmineのインストール</a>が一応終わって正常動作を始めたのでさっそくプロジェクト管理をやってみる。','Redmineを使ってプロジェクトを管理する','','inherit','open','open','','429-revision-2','','','2012-12-11 14:20:29','2012-12-11 05:20:29','',429,'http://49.212.213.226/wordpress/solution-log/?p=432',0,'revision','',0),(434,1,'2012-12-13 22:07:47','2012-12-13 13:07:47','http://den2sn.hatenablog.com/entry/20100326/1269589662\r\n\r\nどうもうまく行かない。。。。\r\n\r\n<pre class=\"brush: bash\">\r\nsvnadmin dump /home/smokingarage/var/svn/mvc | svndumpfilter include --drop-empty-revs --renumber-revs /home/smokingarage/var/svn/mvc/neriphp/trunk &gt; neri.dmp\r\nsvnadmin load /home/smokingarage/var/svn/neriphp &lt; /home/smokingarage/neri.dmp\r\n</pre>','Subversionコマンドメモ','','publish','open','open','','subversion%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%83%a1%e3%83%a2','','','2012-12-13 22:07:47','2012-12-13 13:07:47','',0,'http://49.212.213.226/wordpress/solution-log/?p=434',0,'post','',0),(435,1,'2012-12-13 22:07:23','2012-12-13 13:07:23','http://den2sn.hatenablog.com/entry/20100326/1269589662\n\nどうもうまく行かない。。。。\n\n<pre class=\"brush: bash\"></pre>\nsvnadmin dump /home/smokingarage/var/svn/mvc | svndumpfilter include --drop-empty-revs --renumber-revs /home/smokingarage/var/svn/mvc/neriphp/trunk > neri.dmp\n','Subversionコマンドメモ','','inherit','open','open','','434-revision','','','2012-12-13 22:07:23','2012-12-13 13:07:23','',434,'http://49.212.213.226/wordpress/solution-log/?p=435',0,'revision','',0),(436,1,'2012-12-02 21:03:05','2012-12-02 12:03:05','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\nどうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitのサイトから最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker&lt;/kbd&gt;\r\n</pre>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-9','','','2012-12-02 21:03:05','2012-12-02 12:03:05','',165,'http://49.212.213.226/wordpress/solution-log/?p=436',0,'revision','',0),(437,1,'2012-12-16 01:01:12','2012-12-15 16:01:12','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitのサポートページで必要ライブラリを確認。\r\n<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB</a>\r\nどうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-10','','','2012-12-16 01:01:12','2012-12-15 16:01:12','',165,'http://49.212.213.226/wordpress/solution-log/?p=437',0,'revision','',0),(438,1,'2012-12-16 01:14:33','2012-12-15 16:14:33','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認/h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-11','','','2012-12-16 01:14:33','2012-12-15 16:14:33','',165,'http://49.212.213.226/wordpress/solution-log/?p=438',0,'revision','',0),(439,1,'2012-12-04 21:34:31','2012-12-04 12:34:31','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@domain.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-7','','','2012-12-04 21:34:31','2012-12-04 12:34:31','',290,'http://49.212.213.226/wordpress/solution-log/?p=439',0,'revision','',0),(440,1,'2012-12-16 01:39:00','2012-12-15 16:39:00','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\n<h3>インポートされたリポジトリの確認</h3>\r\n<pre class=\"brush: bash\">\r\ncd git-repository\r\ngit log\r\n</pre>\r\n操作方法が分からないときはhを入力するとHELPが表示される\r\n<pre class=\"brush: bash\">\r\n                   SUMMARY OF LESS COMMANDS\r\n\r\n      Commands marked with * may be preceded by a number, N.\r\n      Notes in parentheses indicate the behavior if N is given.\r\n\r\n  h  H                 Display this help.\r\n  q  :q  Q  :Q  ZZ     Exit.\r\n ---------------------------------------------------------------------------\r\n\r\n                           MOVING\r\n\r\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\r\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\r\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\r\n  b  ^B  ESC-v      *  Backward one window (or N lines).\r\n  z                 *  Forward  one window (and set window to N).\r\n  w                 *  Backward one window (and set window to N).\r\n  ESC-SPACE         *  Forward  one window, but don\'t stop at end-of-file.\r\n  d  ^D             *  Forward  one half-window (and set half-window to N).\r\n  u  ^U             *  Backward one half-window (and set half-window to N).\r\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\r\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\r\nHELP -- Press RETURN for more, or q when done\r\n</pre>\r\n\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n<a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\r\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-8','','','2012-12-16 01:39:00','2012-12-15 16:39:00','',290,'http://49.212.213.226/wordpress/solution-log/?p=440',0,'revision','',0),(441,1,'2012-12-16 01:39:59','2012-12-15 16:39:59','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\n<h3>インポートされたリポジトリの確認</h3>\r\n<pre class=\"brush: bash\">\r\ncd git-repository\r\ngit log\r\n</pre>\r\n操作方法が分からないときはhを入力するとHELPが表示される\r\n<pre class=\"brush: bash\">\r\n                   SUMMARY OF LESS COMMANDS\r\n\r\n      Commands marked with * may be preceded by a number, N.\r\n      Notes in parentheses indicate the behavior if N is given.\r\n\r\n  h  H                 Display this help.\r\n  q  :q  Q  :Q  ZZ     Exit.\r\n ---------------------------------------------------------------------------\r\n\r\n                           MOVING\r\n\r\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\r\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\r\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\r\n  b  ^B  ESC-v      *  Backward one window (or N lines).\r\n  z                 *  Forward  one window (and set window to N).\r\n  w                 *  Backward one window (and set window to N).\r\n  ESC-SPACE         *  Forward  one window, but don\'t stop at end-of-file.\r\n  d  ^D             *  Forward  one half-window (and set half-window to N).\r\n  u  ^U             *  Backward one half-window (and set half-window to N).\r\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\r\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\r\nHELP -- Press RETURN for more, or q when done\r\n</pre>\r\n\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n<li><a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\r\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-9','','','2012-12-16 01:39:59','2012-12-15 16:39:59','',290,'http://49.212.213.226/wordpress/solution-log/?p=441',0,'revision','',0),(442,1,'2012-12-16 02:15:06','2012-12-15 17:15:06','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nとりあえずさくらのレンタルサーバにあるリポジトリからローカルにインポートしてみる。authors.txtと言うファイルを作り、gitのユーザー名を作る。(no author)を設定しないと<b>Author: (no author) not defined in authors.txt file</b>と言うエラーメッセージが出て正しくインポート出来ない。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\nvi authors.txt\r\nSVN_USER_NAME = SVN_USER_NAME &lt;hoge@example.com&gt;\r\n(no author) = somebody &lt;somoeone@example.com&gt;\r\ngit svn clone svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\n<h3>インポートされたリポジトリの確認</h3>\r\n<pre class=\"brush: bash\">\r\ncd git-repository\r\ngit log\r\n</pre>\r\n操作方法が分からないときはhを入力するとHELPが表示される\r\n<pre class=\"brush: bash\">\r\n                   SUMMARY OF LESS COMMANDS\r\n\r\n      Commands marked with * may be preceded by a number, N.\r\n      Notes in parentheses indicate the behavior if N is given.\r\n\r\n  h  H                 Display this help.\r\n  q  :q  Q  :Q  ZZ     Exit.\r\n ---------------------------------------------------------------------------\r\n\r\n                           MOVING\r\n\r\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\r\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\r\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\r\n  b  ^B  ESC-v      *  Backward one window (or N lines).\r\n  z                 *  Forward  one window (and set window to N).\r\n  w                 *  Backward one window (and set window to N).\r\n  ESC-SPACE         *  Forward  one window, but don\'t stop at end-of-file.\r\n  d  ^D             *  Forward  one half-window (and set half-window to N).\r\n  u  ^U             *  Backward one half-window (and set half-window to N).\r\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\r\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\r\nHELP -- Press RETURN for more, or q when done\r\n</pre>\r\n\r\nEclipseのEGit経由でgitレポジトリの中身を確認すると、ディレクトリ構成がSubversion時と変わってしまっている。。。ローカル環境でSubversion→gitの移行をやると、今のリポジトリーの状態で10分くらいかかるので、さくらのVPSにSubversionとgitをインストールしてからやり直そうとおもう。\r\n\r\nさくらのスタンダートにsubversion-perlをどうやって入れるのか分からないので。。。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n<li><a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\r\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\r\n<li><a href=\"http://blokspeed.net/blog/2010/09/converting-from-subversion-to-git/\">Converting from Subversion to Git | Blokspeed.net</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-10','','','2012-12-16 02:15:06','2012-12-15 17:15:06','',290,'http://49.212.213.226/wordpress/solution-log/?p=442',0,'revision','',0),(444,1,'2012-12-17 18:12:47','2012-12-17 09:12:47','ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。\r\n\r\n\r\n<h3>gitをインストールする</h3>\r\n$HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。\r\n<pre class=\"brush: bash\">\r\ncd $HOME/local/scr\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure -prefix=$HOME/local\r\ngmake\r\ngmake install\r\n</pre>\r\n\r\n\r\n\r\n<h3>インストールの確認</h3>\r\n<b>$HOME/.cshrc</b>でパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは\r\n<pre class=\"brush: bash\">\r\n/home/smokingarage/local/bin/git --version\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://noumenon-th.net/text-hymn/2011/01/git.php\">さくらのレンタルサーバ（スタンダード）にGitをインストール - テクスト讃歌</a>\r\n</ul>','さくらのスタンダードにgitをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%ae%e3%82%b9%e3%82%bf%e3%83%b3%e3%83%80%e3%83%bc%e3%83%89%e3%81%abgit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-02 10:27:19','2013-01-02 01:27:19','',0,'http://49.212.213.226/wordpress/solution-log/?p=444',0,'post','',0),(445,1,'2012-12-17 18:12:22','2012-12-17 09:12:22','ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。\n\n<h3>gitをインストールする</h3>\n$HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。\n</pre>\ncd $HOME/local/scr\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\ntar -xzvf git-1.8.0.tar.gz\ncd git-1.8.0\n./configure -prefix=$HOME/local\ngmake\ngmake install\n</pre>\n\n\n<h3>インストールの確認</h3>\n<b>$HOME/.cshrc</b>でパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは\n<pre class=\"brush: bash\">\n/home/smokingarage/local/bin/git --version\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://noumenon-th.net/text-hymn/2011/01/git.php\">さくらのレンタルサーバ（スタンダード）にGitをインストール - テクスト讃歌</a>\n</ul>','さくらのスタンダードにgitをインストールする','','inherit','open','open','','444-revision','','','2012-12-17 18:12:22','2012-12-17 09:12:22','',444,'http://49.212.213.226/wordpress/solution-log/?p=445',0,'revision','',0),(446,1,'2012-12-17 18:12:47','2012-12-17 09:12:47','ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。\r\n<h3>gitをインストールする</h3>\r\n$HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。\r\n</pre>\r\ncd $HOME/local/scr\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure -prefix=$HOME/local\r\ngmake\r\ngmake install\r\n</pre>\r\n<h3>インストールの確認</h3>\r\n<b>$HOME/.cshrc</b>でパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは\r\n<pre class=\"brush: bash\">\r\n/home/smokingarage/local/bin/git --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://noumenon-th.net/text-hymn/2011/01/git.php\">さくらのレンタルサーバ（スタンダード）にGitをインストール - テクスト讃歌</a>\r\n</ul>','さくらのスタンダードにgitをインストールする','','inherit','open','open','','444-revision-2','','','2012-12-17 18:12:47','2012-12-17 09:12:47','',444,'http://49.212.213.226/wordpress/solution-log/?p=446',0,'revision','',0),(447,1,'2012-12-09 18:01:38','2012-12-09 09:01:38','<pre class=\"brush: bash\">\r\n# PEARの設定を表示する\r\npear config-show\r\n</pre>','PEARに関する覚書き','','inherit','open','open','','413-revision-3','','','2012-12-09 18:01:38','2012-12-09 09:01:38','',413,'http://49.212.213.226/wordpress/solution-log/?p=447',0,'revision','',0),(448,1,'2012-12-04 20:39:44','2012-12-04 11:39:44','<h3>PECL::ssh2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\n\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\',\r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/</a></li>\r\n</ul>','CentOS6にPECL::ssh2をインストールする','','inherit','open','open','','183-revision-10','','','2012-12-04 20:39:44','2012-12-04 11:39:44','',183,'http://49.212.213.226/wordpress/solution-log/?p=448',0,'revision','',0),(449,1,'2012-12-24 02:03:59','2012-12-23 17:03:59','<h3>PECL::ssh2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\n\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\',\r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">Installing SSH2 Extension for PHP on CentOS 5 &#124;  Dynamic Hosting Blog/</a></li>\r\n</ul>','CentOS6にPECL::ssh2をインストールする','','inherit','open','open','','183-revision-11','','','2012-12-24 02:03:59','2012-12-23 17:03:59','',183,'http://49.212.213.226/wordpress/solution-log/?p=449',0,'revision','',0),(451,1,'2012-12-30 04:27:06','2012-12-29 19:27:06','<del datetime=\"2012-12-29T19:26:01+00:00\"><a href=\"http://net-newbie.com/putty.html\">PuTTYでssh2プロトコルを使ってssh接続</a></del>\n\nPutytyだとフォーマットの変換などが入り面倒なのでTeraTermをt','Windwos7で公開鍵秘密鍵を発行する','','inherit','open','open','','419-autosave','','','2012-12-30 04:27:06','2012-12-29 19:27:06','',419,'http://49.212.213.226/wordpress/solution-log/?p=451',0,'revision','',0),(452,1,'2012-12-09 20:08:13','2012-12-09 11:08:13','<a href=\"http://net-newbie.com/putty.html\">PuTTYでssh2プロトコルを使ってssh接続</a>','Windwos7で公開鍵秘密鍵を発行する','','inherit','open','open','','419-revision-2','','','2012-12-09 20:08:13','2012-12-09 11:08:13','',419,'http://49.212.213.226/wordpress/solution-log/?p=452',0,'revision','',0),(453,1,'2012-12-11 14:18:07','2012-12-11 05:18:07','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh epel-release-6-7.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.1.4/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-11 14:18:07','2012-12-11 05:18:07','',190,'http://49.212.213.226/wordpress/solution-log/?p=453',0,'revision','',0),(454,1,'2012-12-02 22:27:16','2012-12-02 13:27:16','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre class=\"brush: bash\">wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\ntar xvzf rubygem-1.8.24.tgz\r\ntar xvzf rubygems-1.8.24.tgz\r\ncd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre class=\"brush: bash\">yum -y install gcc\r\nyum -y install make\r\nyum -y install gcc-c++\r\nyum -y install zlib-devel\r\nyum -y install httpd-devel\r\nyum -y install openssl-devel\r\nyum -y install curl-devel</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル。ただしpassenger-install-apache2-moduleコマンドでapache2-moduleをインストールするとき、上記のモノが入ってない場合は、自分で入れろと警告が出る。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install&lt;/pre&gt;\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n</pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-11','','','2012-12-02 22:27:16','2012-12-02 13:27:16','',13,'http://49.212.213.226/wordpress/solution-log/?p=454',0,'revision','',0),(455,1,'2012-12-31 05:57:05','2012-12-30 20:57:05','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://rubyforge.org/frs/download.php/76134/redmine-2.1.4.tar.gz\r\ncd /var/lib\r\ntar xzf /root/redmine-2.1.4.tar.gz\r\nln -s redmine-2.1.4 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.1.4/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-31 05:57:05','2012-12-30 20:57:05','',190,'http://49.212.213.226/wordpress/solution-log/?p=455',0,'revision','',0),(456,1,'2012-12-31 06:26:52','2012-12-30 21:26:52','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'passwd\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.1.4/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-31 06:26:52','2012-12-30 21:26:52','',190,'http://49.212.213.226/wordpress/solution-log/?p=456',0,'revision','',0),(457,1,'2012-12-31 07:04:33','2012-12-30 22:04:33','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.4\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.1.2\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.1.4/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-31 07:04:33','2012-12-30 22:04:33','',190,'http://49.212.213.226/wordpress/solution-log/?p=457',0,'revision','',0),(458,1,'2012-12-31 07:33:15','2012-12-30 22:33:15','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-31 07:33:15','2012-12-30 22:33:15','',190,'http://49.212.213.226/wordpress/solution-log/?p=458',0,'revision','',0),(459,1,'2012-12-31 14:24:12','2012-12-31 05:24:12','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\nservice httpd start # Apacheを機動させておく\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\nまた<a href=\"./?p=605\">Redmineインストールディレクトリの権限の設定</a>も行う事。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','publish','open','open','','centos6-3%e3%81%a7apache%e4%b8%8a%e3%81%a7redmine%e3%82%92%e5%ae%9f%e8%a1%8c%e3%81%99%e3%82%8b','','','2013-03-18 17:58:15','2013-03-18 08:58:15','',0,'http://49.212.213.226/wordpress/solution-log/?p=459',0,'post','',0),(460,1,'2012-12-31 14:24:03','2012-12-31 05:24:03','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\n\n\n<h3>Passengerのインストール</h3>\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\n<pre class=\"brush: bash\">\ngem install passenger --no-rdoc --no-ri\n</pre>\n\n\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\n<pre class=\"brush: bash\">\npassenger-install-apache2-module\n</pre>\n\n<b>/etc/httpd/conf.d/passenger.conf</b>を作成し<b>passenger-install-apache2-module --snippet</b>で表示される設定を書き込む。\n<pre class=\"brush: bash\">\n# Passengerの基本設定。\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\n#\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\nPassengerRuby /usr/local/bin/ruby\n</pre>\n\n\n<h3>Apacheの起動および自動起動の設定</h3>\n<pre class=\"brush: bash\">\n/etc/init.d/httpd start\nchkconfig httpd on\n</pre>\n\n\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\n<pre class=\"brush: bash\">\nln -s /var/lib/redmine/public /var/www/html/redmine\n</pre>\n<b>/etc/httpd/conf.d/passenger.conf</b>に以下の設定を追加。\n<pre class=\"brush: bash\">\nRackBaseURI /redmine\n</pre>\n設定後、Apacheを再起動。\n<pre class=\"brush: bash\">\n/etc/init.d/httpd configtest\n/etc/init.d/httpd graceful\n</pre>\n\n\n<h3>参考サイト</h3>\n<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision','','','2012-12-31 14:24:03','2012-12-31 05:24:03','',459,'http://49.212.213.226/wordpress/solution-log/?p=460',0,'revision','',0),(461,1,'2012-12-31 14:24:12','2012-12-31 05:24:12','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n<b>/etc/httpd/conf.d/passenger.conf</b>を作成し<b>passenger-install-apache2-module --snippet</b>で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n<b>/etc/httpd/conf.d/passenger.conf</b>に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-2','','','2012-12-31 14:24:12','2012-12-31 05:24:12','',459,'http://49.212.213.226/wordpress/solution-log/?p=461',0,'revision','',0),(462,1,'2012-12-31 14:45:13','2012-12-31 05:45:13','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n<b>/etc/httpd/conf.d/passenger.conf</b>を作成し<b>passenger-install-apache2-module --snippet</b>で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n<b>/etc/httpd/conf.d/passenger.conf</b>に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-3','','','2012-12-31 14:45:13','2012-12-31 05:45:13','',459,'http://49.212.213.226/wordpress/solution-log/?p=462',0,'revision','',0),(463,1,'2012-12-31 17:02:40','2012-12-31 08:02:40','権限の設定でハマったのでメモ。\r\n\r\n\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの権限を書き換える</h3>\r\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>\r\n</ul>','CentOS6.3にWordPressをインストールする','','publish','open','open','','centos6-3%e3%81%abwordpress%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-02 10:25:00','2013-01-02 01:25:00','',0,'http://49.212.213.226/wordpress/solution-log/?p=463',0,'post','',0),(464,1,'2012-12-31 17:01:52','2012-12-31 08:01:52','権限の設定でハマったのでメモ。\n\n<h3>WordPressをダウンロード、解凍する</h3>\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\n<pre class=\"brush: bash\">\ncd /path/to/wordpressfolder\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\nmv wordpress blogfolder\n</pre>\n\n<h3>データベースを作成する</h3>\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\n<pre class=\"brush: bash\">\nmysql -u root -p #パスワードを入力\nCREATE DATABASE wordpress-db;\nGRANT ALL ON wordpress-db.* TO user_name@localhost IDENTIFIED BY \'パスワード\';\n</pre>\n\n<h3>WordPressの権限を書き換える</h3>\nユーザーに権限を与えるのかと思ったが、どうやらApacheに与えるらしい。。。\n<pre class=\"brush: bash\">\nchown -R apache:apache blogfolder\n</pre>\n\n<h3>WordPressの初期設定を行いブログを開設する</h3>\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\n\n\n\n<h3>参考サイト</h3>\n<a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision','','','2012-12-31 17:01:52','2012-12-31 08:01:52','',463,'http://49.212.213.226/wordpress/solution-log/?p=464',0,'revision','',0),(465,1,'2012-12-31 17:02:40','2012-12-31 08:02:40','権限の設定でハマったのでメモ。\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO user_name@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n<h3>WordPressの権限を書き換える</h3>\r\nユーザーに権限を与えるのかと思ったが、どうやらApacheに与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n<h3>参考サイト</h3>\r\n<a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision-2','','','2012-12-31 17:02:40','2012-12-31 08:02:40','',463,'http://49.212.213.226/wordpress/solution-log/?p=465',0,'revision','',0),(466,1,'2012-12-06 18:27:54','2012-12-06 09:27:54','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的にはphpMyAdminのサイトからzip版をDLして任意のフォルダに解凍するのみ。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-8','','','2012-12-06 18:27:54','2012-12-06 09:27:54','',187,'http://49.212.213.226/wordpress/solution-log/?p=466',0,'revision','',0),(467,1,'2013-01-01 08:14:34','2012-12-31 23:14:34','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-9','','','2013-01-01 08:14:34','2012-12-31 23:14:34','',187,'http://49.212.213.226/wordpress/solution-log/?p=467',0,'revision','',0),(468,1,'2013-01-01 08:19:31','2012-12-31 23:19:31','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-10','','','2013-01-01 08:19:31','2012-12-31 23:19:31','',187,'http://49.212.213.226/wordpress/solution-log/?p=468',0,'revision','',0),(469,1,'2013-01-01 08:23:26','2012-12-31 23:23:26','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ol>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n</ol>','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-11','','','2013-01-01 08:23:26','2012-12-31 23:23:26','',187,'http://49.212.213.226/wordpress/solution-log/?p=469',0,'revision','',0),(470,1,'2013-01-01 08:23:56','2012-12-31 23:23:56','<h3>MySQLをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを起動してユーザー名やパスワードなどの設定をいじる\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n</ul>','CentOSにMySQLをインストールする','','inherit','open','open','','187-revision-12','','','2013-01-01 08:23:56','2012-12-31 23:23:56','',187,'http://49.212.213.226/wordpress/solution-log/?p=470',0,'revision','',0),(471,1,'2013-01-01 12:25:25','2013-01-01 03:25:25','普通にyumインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL.5系をインストールする。\r\n\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld stop\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。『/etc/my.cnf』を以下のように修正する\r\n<pre class=\"brush: bash\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n</ul>','CentOSに6.3にMySQL5.5系をインストールする','','inherit','open','open','','187-revision-13','','','2013-01-01 12:25:25','2013-01-01 03:25:25','',187,'http://49.212.213.226/wordpress/solution-log/?p=471',0,'revision','',0),(472,1,'2013-01-01 12:26:25','2013-01-01 03:26:25','普通にyumインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld stop\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。『/etc/my.cnf』を以下のように修正する\r\n<pre class=\"brush: bash\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n</ul>','CentOSに6.3にMySQL5.5系をインストールする','','inherit','open','open','','187-revision-14','','','2013-01-01 12:26:25','2013-01-01 03:26:25','',187,'http://49.212.213.226/wordpress/solution-log/?p=472',0,'revision','',0),(473,1,'2013-01-01 12:31:38','2013-01-01 03:31:38','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: bash\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminのサイト</a>からzip版をDLして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系をインストールする','','inherit','open','open','','187-revision-15','','','2013-01-01 12:31:38','2013-01-01 03:31:38','',187,'http://49.212.213.226/wordpress/solution-log/?p=473',0,'revision','',0),(474,1,'2013-01-01 12:33:01','2013-01-01 03:33:01','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: bash\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をDLして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\nhistory\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系をインストールする','','inherit','open','open','','187-revision-16','','','2013-01-01 12:33:01','2013-01-01 03:33:01','',187,'http://49.212.213.226/wordpress/solution-log/?p=474',0,'revision','',0),(475,1,'2012-12-31 07:36:07','2012-12-30 22:36:07','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &quot;Development Tools&quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2012-12-31 07:36:07','2012-12-30 22:36:07','',190,'http://49.212.213.226/wordpress/solution-log/?p=475',0,'revision','',0),(476,1,'2013-01-01 12:37:03','2013-01-01 03:37:03','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\n\n<h3>CentOSパッケージの追加インストール</h3>\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\n<pre class=\"brush: bash\">\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\nrpm -ivh epel-release-6-8.noarch.rpm\n</pre>\n\nyumで追加インストール\n<pre class=\"brush: bash\">\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\nyum groupinstall &amp;quot;Development Tools&amp;quot;\n# 通信関係を入れたりアップデートする\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\n# MySQLをアップデートする（既に導入済み）\nyum install mysql-server mysql-devel\n# Apacheをアップデートする（一応やっておく）\nyum install httpd httpd-devel\n# ImageMagickをインストールアップデートする（多分入ってない）\nyum install ImageMagick ImageMagick-devel\n</pre><h3>Ruby 1.9.3をインストールする</h3>\n<a href=\"./?p=13\">こちら</a>を参照。Passengerはインストールする必要は無い。<h3>データベースを作成する</h3>\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。<h3>Redmineをインストールする</h3>\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\ncd /var/lib\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\nln -s redmine-2.2.0 redmine\nls -l\n</pre>\n\nデータベース接続設定\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\n\n    production:\n      adapter: mysql2\n      database: redmine\n      host: localhost\n      username: redmine\n      password: foobar\n      encoding: utf8  \n\n下線部は、MySQLの設定で使用した名前に合わせます。\n\nメール送信設定\n\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\n\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\n\n    production:\n      email_delivery:\n        delivery_method: :smtp\n        smtp_settings:\n          address: \"localhost\"\n          port: 25\n          domain: \'example.com\'\n\n\n<h3>Redmineが使用するgemパッケージのインストール</h3>\n<b>bundlerのインストール</b>\n<pre class=\"brush: bash\">\ngem install bundler --no-rdoc --no-ri\n</pre>\n<b>Redmineが使用するgemパッケージのインストール</b>\n<pre class=\"brush: bash\">\ncd /var/lib/redmine-2.2.0\nbundle install --path vendor/bundler --without development test postgresql sqlite\n</pre><h3>Redmineの初期化</h3>\nまずデータベース登録ユーザにredmineがあるか確かめる。\n<pre class=\"brush: bash\">\nmysql -u root -p\nEnter password: \n\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\n+------+-----------+\n| User | Host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | localhost |\n+------+-----------+\n</pre>\n\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\n<pre class=\"brush: bash\">\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\nQuery OK, 0 rows affected (0.00 sec)\n\n# redmineがユーザとして追加されたか確認\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\n+--------------+-----------+\n| User         | Host      |\n+--------------+-----------+\n| root         | 127.0.0.1 |\n| redmine      | localhost |\n| root         | localhost |\n+--------------+-----------+\n3 rows in set (0.00 sec)\n</pre>\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\nデータベーステーブルRedmineの作成\n<pre class=\"brush: bash\">\nCREATE DATABASE redmine;\n</pre>\nセッションデータの暗号化の鍵生成\n<pre class=\"brush: bash\">\ncd /var/lib/redmine-2.2.0\nbundle exec rake generate_secret_token\n</pre>\n\nデータベースを初期構築\n<pre class=\"brush: bash\">\nRAILS_ENV=production bundle exec rake db:migrate\n</pre>\n\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\n\n動作確認\n<pre class=\"brush: bash\">\n# Apacheを起動する\nhttpd -k start\n# MySQLを起動する\nservice mysqld start\n# WEBrick起動する\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\n</pre>\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。<h3>RedmineをAapcheと同期させる</h3>\nRedmineをコマンドから立ち上げずに、常に使える状態にする。Passengerを導入しApacheと同期させる。<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考に設定してみた。\n\n<b>Passengerのインストール</b>\n<pre class=\"brush: bash\">\ngem install passenger --no-rdoc --no-ri\n</pre>\n<b>PassengerのApache用モジュールのインストール</b>\n<pre class=\"brush: bash\">\npassenger-install-apache2-module\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:37:03','2013-01-01 03:37:03','',190,'http://49.212.213.226/wordpress/solution-log/?p=476',0,'revision','',0),(477,1,'2013-01-01 12:37:13','2013-01-01 03:37:13','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\nRedmineをコマンドから立ち上げずに、常に使える状態にする。Passengerを導入しApacheと同期させる。<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考に設定してみた。\r\n\r\n<b>Passengerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n<b>PassengerのApache用モジュールのインストール</b>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:37:13','2013-01-01 03:37:13','',190,'http://49.212.213.226/wordpress/solution-log/?p=477',0,'revision','',0),(478,1,'2013-01-01 12:39:41','2013-01-01 03:39:41','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">こちら</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちら</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"/?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:39:41','2013-01-01 03:39:41','',190,'http://49.212.213.226/wordpress/solution-log/?p=478',0,'revision','',0),(479,1,'2013-01-01 12:42:24','2013-01-01 03:42:24','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。MySQLの設定については<a href=\"./?p=187\">こちら</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:42:24','2013-01-01 03:42:24','',190,'http://49.212.213.226/wordpress/solution-log/?p=479',0,'revision','',0),(480,1,'2013-01-01 12:44:43','2013-01-01 03:44:43','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ずアップデートしておく事。</b>MySQLの設定については<a href=\"./?p=187\">こちらのエントリー</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:44:43','2013-01-01 03:44:43','',190,'http://49.212.213.226/wordpress/solution-log/?p=480',0,'revision','',0),(481,1,'2013-01-01 12:46:02','2013-01-01 03:46:02','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ずアップデートしておく事。</b>MySQLの設定については<a href=\"./?p=187\">こちらのエントリー</a>を参照。\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\nデータベース接続設定\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\nメール送信設定\r\n\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。\r\n\r\nメール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: \"localhost\"\r\n          port: 25\r\n          domain: \'example.com\'\r\n\r\n\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:46:02','2013-01-01 03:46:02','',190,'http://49.212.213.226/wordpress/solution-log/?p=481',0,'revision','',0),(482,1,'2013-01-01 12:50:09','2013-01-01 03:50:09','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n<b>データベース接続設定</b>\r\n<Redmineインストールディレクトリ>/config/database.ymlを作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n<b>メール送信設定</b>\r\n<Redmineインストールディレクトリ>/config/configuration.ymlを作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:50:09','2013-01-01 03:50:09','',190,'http://49.212.213.226/wordpress/solution-log/?p=482',0,'revision','',0),(483,1,'2013-01-01 12:52:35','2013-01-01 03:52:35','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n<b>データベース接続設定</b>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n<b>メール送信設定</b>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードはredmine-ver/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:52:35','2013-01-01 03:52:35','',190,'http://49.212.213.226/wordpress/solution-log/?p=483',0,'revision','',0),(484,1,'2013-01-01 12:54:32','2013-01-01 03:54:32','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n<b>データベース接続設定</b>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n<b>メール送信設定</b>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:54:32','2013-01-01 03:54:32','',190,'http://49.212.213.226/wordpress/solution-log/?p=484',0,'revision','',0),(485,1,'2013-01-01 12:55:29','2013-01-01 03:55:29','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<b>bundlerのインストール</b>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<b>Redmineが使用するgemパッケージのインストール</b>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無いので追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\nセッションデータの暗号化の鍵生成\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\nデータベースを初期構築\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n動作確認\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n<a href=\"./?p=463\">こちらのエントリー</a>を参考にする。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 12:55:29','2013-01-01 03:55:29','',190,'http://49.212.213.226/wordpress/solution-log/?p=485',0,'revision','',0),(486,1,'2013-01-01 13:00:41','2013-01-01 04:00:41','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストール</h3>\r\n<h4>bundlerのインストール</h4>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h4>Redmineが使用するgemパッケージのインストール</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n<h3>Redmineの初期化</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h4>動作確認</h4>\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=463\">こちらのエントリー</a>を参考。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 13:00:41','2013-01-01 04:00:41','',190,'http://49.212.213.226/wordpress/solution-log/?p=486',0,'revision','',0),(487,1,'2013-01-01 13:38:26','2013-01-01 04:38:26','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\nデータベーステーブルRedmineの作成\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=463\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 13:38:26','2013-01-01 04:38:26','',190,'http://49.212.213.226/wordpress/solution-log/?p=487',0,'revision','',0),(488,1,'2013-01-01 13:39:52','2013-01-01 04:39:52','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: \'example.com\'\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO \'redmine\'@\'localhost\' IDENTIFIED BY \'パスワード\';\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=463\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 13:39:52','2013-01-01 04:39:52','',190,'http://49.212.213.226/wordpress/solution-log/?p=488',0,'revision','',0),(489,1,'2012-12-31 14:46:53','2012-12-31 05:46:53','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-4','','','2012-12-31 14:46:53','2012-12-31 05:46:53','',459,'http://49.212.213.226/wordpress/solution-log/?p=489',0,'revision','',0),(490,1,'2013-01-01 13:47:17','2013-01-01 04:47:17','権限の設定でハマったのでメモ。\n\n\n<h3>WordPressをダウンロード、解凍する</h3>\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\n<pre class=\"brush: bash\">\ncd /path/to/wordpressfolder\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\nmv wordpress blogfolder\n</pre>\n\n<h3>データベースを作成する</h3>\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\n<pre class=\"brush: bash\">\nmysql -u root -p #パスワードを入力\nCREATE DATABASE wordpress-db;\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\n</pre>\n\n<h3>WordPressの権限を書き換える</h3>\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\n<pre class=\"brush: bash\">\nchown -R apache:apache blogfolder\n</pre>\n\n<h3>WordPressの初期設定を行いブログを開設する</h3>\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>\n</ul>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-autosave','','','2013-01-01 13:47:17','2013-01-01 04:47:17','',463,'http://49.212.213.226/wordpress/solution-log/?p=490',0,'revision','',0),(491,1,'2012-12-31 17:04:44','2012-12-31 08:04:44','権限の設定でハマったのでメモ。\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n<h3>WordPressの権限を書き換える</h3>\r\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n<h3>参考サイト</h3>\r\n<a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision-3','','','2012-12-31 17:04:44','2012-12-31 08:04:44','',463,'http://49.212.213.226/wordpress/solution-log/?p=491',0,'revision','',0),(492,1,'2013-01-01 12:34:18','2013-01-01 03:34:18','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: bash\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-17','','','2013-01-01 12:34:18','2013-01-01 03:34:18','',187,'http://49.212.213.226/wordpress/solution-log/?p=492',0,'revision','',0),(493,1,'2013-01-01 13:55:47','2013-01-01 04:55:47','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre>\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-18','','','2013-01-01 13:55:47','2013-01-01 04:55:47','',187,'http://49.212.213.226/wordpress/solution-log/?p=493',0,'revision','',0),(494,1,'2013-01-01 13:56:41','2013-01-01 04:56:41','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<code>\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</code>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-19','','','2013-01-01 13:56:41','2013-01-01 04:56:41','',187,'http://49.212.213.226/wordpress/solution-log/?p=494',0,'revision','',0),(495,1,'2013-01-01 13:59:58','2013-01-01 04:59:58','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[Plain Text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/Plain Text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-20','','','2013-01-01 13:59:58','2013-01-01 04:59:58','',187,'http://49.212.213.226/wordpress/solution-log/?p=495',0,'revision','',0),(496,1,'2013-01-01 14:00:41','2013-01-01 05:00:41','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-21','','','2013-01-01 14:00:41','2013-01-01 05:00:41','',187,'http://49.212.213.226/wordpress/solution-log/?p=496',0,'revision','',0),(497,1,'2013-01-01 14:07:17','2013-01-01 05:07:17','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text padlinenumbers=\"3\"]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-22','','','2013-01-01 14:07:17','2013-01-01 05:07:17','',187,'http://49.212.213.226/wordpress/solution-log/?p=497',0,'revision','',0),(498,1,'2013-01-01 14:08:35','2013-01-01 05:08:35','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text padlinenumbers=\"3\" gutter=\"false\"]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-23','','','2013-01-01 14:08:35','2013-01-01 05:08:35','',187,'http://49.212.213.226/wordpress/solution-log/?p=498',0,'revision','',0),(499,1,'2013-01-01 14:11:00','2013-01-01 05:11:00','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text gutter=\"false\"]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-24','','','2013-01-01 14:11:00','2013-01-01 05:11:00','',187,'http://49.212.213.226/wordpress/solution-log/?p=499',0,'revision','',0),(500,1,'2013-01-01 14:13:28','2013-01-01 05:13:28','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<table border=\"0\">\r\n<tbody>\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</tbody>\r\n</table>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-25','','','2013-01-01 14:13:28','2013-01-01 05:13:28','',187,'http://49.212.213.226/wordpress/solution-log/?p=500',0,'revision','',0),(501,1,'2013-01-01 14:15:26','2013-01-01 05:15:26','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre>\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-26','','','2013-01-01 14:15:26','2013-01-01 05:15:26','',187,'http://49.212.213.226/wordpress/solution-log/?p=501',0,'revision','',0),(502,1,'2013-01-01 14:31:29','2013-01-01 05:31:29','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-27','','','2013-01-01 14:31:29','2013-01-01 05:31:29','',187,'http://49.212.213.226/wordpress/solution-log/?p=502',0,'revision','',0),(503,1,'2013-01-01 16:37:33','2013-01-01 07:37:33','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-28','','','2013-01-01 16:37:33','2013-01-01 07:37:33','',187,'http://49.212.213.226/wordpress/solution-log/?p=503',0,'revision','',0),(504,1,'2013-01-01 16:42:28','2013-01-01 07:42:28','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-29','','','2013-01-01 16:42:28','2013-01-01 07:42:28','',187,'http://49.212.213.226/wordpress/solution-log/?p=504',0,'revision','',0),(505,1,'2013-01-01 16:44:05','2013-01-01 07:44:05','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-30','','','2013-01-01 16:44:05','2013-01-01 07:44:05','',187,'http://49.212.213.226/wordpress/solution-log/?p=505',0,'revision','',0),(506,1,'2013-01-01 13:47:38','2013-01-01 04:47:38','権限の設定でハマったのでメモ。\r\n\r\n\r\n\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの権限を書き換える</h3>\r\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>\r\n</ul>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision-4','','','2013-01-01 13:47:38','2013-01-01 04:47:38','',463,'http://49.212.213.226/wordpress/solution-log/?p=506',0,'revision','',0),(507,1,'2013-01-02 10:24:02','2013-01-02 01:24:02','権限の設定でハマったのでメモ。\r\n\r\n\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの権限を書き換える</h3>\r\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>\r\n</ul>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision-5','','','2013-01-02 10:24:02','2013-01-02 01:24:02','',463,'http://49.212.213.226/wordpress/solution-log/?p=507',0,'revision','',0),(508,1,'2013-01-02 10:24:27','2013-01-02 01:24:27','権限の設定でハマったのでメモ。\r\n\r\n\r\n<h3>WordPressをダウンロード、解凍する</h3>\r\n最新版は<a href=\"http://ja.wordpress.org/\">こちら</a>から確認する。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.5-ja.zip\r\nunzip wordpress-3.5-ja.zip  #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nrootですべてやっても良いけど、危険なので一応WordPress用のデータベースユーザーを作成し対応する\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p #パスワードを入力\r\nCREATE DATABASE wordpress-db;\r\nGRANT ALL ON wordpress-db.* TO wpuser@localhost IDENTIFIED BY \'パスワード\';\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの権限を書き換える</h3>\r\nCentOSでユーザを作成し、そのユーザに権限を与えるのかと思ったが、どうやらApacheに権限を与えるらしい。。。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache blogfolder\r\n</pre>\r\n\r\n\r\n\r\n<h3>WordPressの初期設定を行いブログを開設する</h3>\r\n上記の設定が済んだらWordPressのトップページにアクセスしてブログを開設する\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/wordpress.shtml\">ブログサイト構築(WordPress) -CentOSで自宅サーバー構築</a>\r\n</ul>','CentOS6.3にWordPressをインストールする','','inherit','open','open','','463-revision-6','','','2013-01-02 10:24:27','2013-01-02 01:24:27','',463,'http://49.212.213.226/wordpress/solution-log/?p=508',0,'revision','',0),(509,1,'2013-01-01 13:45:12','2013-01-01 04:45:12','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-5','','','2013-01-01 13:45:12','2013-01-01 04:45:12','',459,'http://49.212.213.226/wordpress/solution-log/?p=509',0,'revision','',0),(510,1,'2012-12-17 18:13:45','2012-12-17 09:13:45','ノートPCからさくらのVPSにSSHで繋ごうと思ったのだが、鍵認証の設定がうまくいかず、さくらのスタンダードでもgitを操作出来るようにした。\r\n<h3>gitをインストールする</h3>\r\n$HOME/local以下にgitを入れる。Subversionもこのディレクトリ以下に入っているので。\r\n<pre class=\"brush: bash\">\r\ncd $HOME/local/scr\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure -prefix=$HOME/local\r\ngmake\r\ngmake install\r\n</pre>\r\n<h3>インストールの確認</h3>\r\n<b>$HOME/.cshrc</b>でパスの設定をいじる必要があるが、ちょっと時間がないのでとりあえずは\r\n<pre class=\"brush: bash\">\r\n/home/smokingarage/local/bin/git --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://noumenon-th.net/text-hymn/2011/01/git.php\">さくらのレンタルサーバ（スタンダード）にGitをインストール - テクスト讃歌</a>\r\n</ul>','さくらのスタンダードにgitをインストールする','','inherit','open','open','','444-revision-3','','','2012-12-17 18:13:45','2012-12-17 09:13:45','',444,'http://49.212.213.226/wordpress/solution-log/?p=510',0,'revision','',0),(511,1,'2012-12-11 13:33:07','2012-12-11 04:33:07','どうやらディフォルトで5.3系がインストールされているらしい。\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n<h3>http.confの編集</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','さくらのVPSにPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2012-12-11 13:33:07','2012-12-11 04:33:07','',395,'http://49.212.213.226/wordpress/solution-log/?p=511',0,'revision','',0),(512,1,'2013-01-02 10:30:05','2013-01-02 01:30:05','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confの編集</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-02 10:30:05','2013-01-02 01:30:05','',395,'http://49.212.213.226/wordpress/solution-log/?p=512',0,'revision','',0),(513,1,'2013-01-02 10:34:29','2013-01-02 01:34:29','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n[text]\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n[/text]\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-02 10:34:29','2013-01-02 01:34:29','',395,'http://49.212.213.226/wordpress/solution-log/?p=513',0,'revision','',0),(516,1,'2013-01-02 12:28:58','2013-01-02 03:28:58','PC用のテンプレートからだとスマホからアクセスした時に表示が見にくいのでWordPressブログをもう一つ用意して同期する。\r\n\r\nhttp://linuxserver.jp/%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89/DB/MySQL/mysqldump%E3%81%A8cron%E3%81%A7%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97.php','WordPressをPC閲覧用とスマホ閲覧用に分ける','','publish','open','open','','wordpress%e3%82%92pc%e9%96%b2%e8%a6%a7%e7%94%a8%e3%81%a8%e3%82%b9%e3%83%9e%e3%83%9b%e9%96%b2%e8%a6%a7%e7%94%a8%e3%81%ab%e5%88%86%e3%81%91%e3%82%8b','','','2013-01-02 12:28:58','2013-01-02 03:28:58','',0,'http://49.212.213.226/wordpress/solution-log/?p=516',0,'post','',0),(517,1,'2013-01-02 12:28:13','2013-01-02 03:28:13','PC用のテンプレートからだとスマホからアクセスした時に表示が見にくいのでWordPressブログをもう一つ用意して同期する。\n\nhttp://linuxserver.jp/%E3%82%B5%E3%83%BC%E3%83%90%E6%A7%8B%E7%AF%89/DB/MySQL/mysqldump%E3%81%A8cron%E3%81%A7%E3%81%AE%E8%87%AA%E5%8B%95%E3%83%90%E3%83%83%E3%82%AF%E3%82%A2%E3%83%83%E3%83%97.php','WordPressをPC閲覧用とスマホ閲覧用に分ける','','inherit','open','open','','516-revision','','','2013-01-02 12:28:13','2013-01-02 03:28:13','',516,'http://49.212.213.226/wordpress/solution-log/?p=517',0,'revision','',0),(519,1,'2013-01-02 15:15:18','2013-01-02 06:15:18','http://centlinuxer.blog37.fc2.com/blog-entry-36.html','cronを使うための準備','','publish','open','open','','cron%e3%82%92%e4%bd%bf%e3%81%86%e3%81%9f%e3%82%81%e3%81%ae%e6%ba%96%e5%82%99','','','2013-01-02 15:15:18','2013-01-02 06:15:18','',0,'http://49.212.213.226/wordpress/solution-log/?p=519',0,'post','',0),(520,1,'2013-01-02 15:14:52','2013-01-02 06:14:52','','cronを使うための準備','','inherit','open','open','','519-revision','','','2013-01-02 15:14:52','2013-01-02 06:14:52','',519,'http://49.212.213.226/wordpress/solution-log/?p=520',0,'revision','',0),(521,1,'2013-01-02 19:09:03','2013-01-02 10:09:03','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきパッケージでもないと思う。\r\n<pre class=\"brush: bash\">yum install telnet</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<br />\r\n<br />\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','publish','open','open','','apache%e3%81%a7%e3%82%b5%e3%83%bc%e3%83%90%e6%83%85%e5%a0%b1%e3%81%ae%e9%9a%a0%e8%94%bd%e3%82%92%e8%a1%8c%e3%81%86','','','2013-01-06 21:16:29','2013-01-06 12:16:29','',0,'http://49.212.213.226/wordpress/solution-log/?p=521',0,'post','',0),(522,1,'2013-01-02 19:08:58','2013-01-02 10:08:58','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと本に書いてあったので調べてみた。\n\n<h3>CentOS6.3にtelnetをインストールする</h3>\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\n<pre class=\"brush: bash\">\nyum install telnet\n</pre>\n\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\ntelnetでヘッダフィールドレスポンスのみ確認できる\n<pre class=\"brush: bash\">\ntelnet example.com 80\n...省略...\nHEAD / HTTP/1.1\n&lt; return &gt; x2\n\nHTTP/1.1 400 Bad Request\nDate: Wed, 02 Jan 2013 09:38:44 GMT\nServer: Apache/2.2.15 (CentOS)\nConnection: close\nContent-Type: text/html; charset=iso-8859-1\n</pre>\nどうやらサーバ情報が表示されてしまってるみたいだ\n\n\n<h3>ServerTokensを設定する</h3>\nCentOS6.3はディフォルトでServerTokensがFullになっているのでProductOnlyに設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定するServerSignatureもoffに指定しておく。\n<pre class=\"brush: bash\">\nvi /etc/httpd/conf/httpd.conf\n/ServerTokens # ServerTokensを検索\ni\nServerTokens ProductOnly\n&lt; Esc &gt;\n:\nw\nq\n&lt; Enter &gt;\n/ServerSignature # ServerSignatureを検索\ni\nServerSignature Off\n&lt; Esc &gt;\n:\nw\nq\n&lt; Enter &gt;\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony&#039;s Place</a>\n<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a>\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision','','','2013-01-02 19:08:58','2013-01-02 10:08:58','',521,'http://49.212.213.226/wordpress/solution-log/?p=522',0,'revision','',0),(523,1,'2013-01-02 19:09:03','2013-01-02 10:09:03','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと本に書いてあったので調べてみた。\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトでServerTokensがFullになっているのでProductOnlyに設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定するServerSignatureもoffに指定しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;\r\n:\r\nw\r\nq\r\n&lt; Enter &gt;\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;\r\n:\r\nw\r\nq\r\n&lt; Enter &gt;\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony&#039;s Place</a>\r\n<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-2','','','2013-01-02 19:09:03','2013-01-02 10:09:03','',521,'http://49.212.213.226/wordpress/solution-log/?p=523',0,'revision','',0),(524,1,'2013-01-06 21:05:53','2013-01-06 12:05:53','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\n<h3>CentOS6.3にtelnetをインストールする</h3>\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきパッケージでもないと思う。\n<pre class=\"brush: bash\">yum install telnet</pre>\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\ntelnetでヘッダフィールドレスポンスのみ確認できる\n<pre class=\"brush: bash\">\ntelnet example.com 80\nHEAD / HTTP/1.1\n&lt; return &gt; x2\n\nHTTP/1.1 400 Bad Request\nDate: Wed, 02 Jan 2013 09:38:44 GMT\nServer: Apache/2.2.15 (CentOS)\nConnection: close\nContent-Type: text/html; charset=iso-8859-1</pre>\nどうやらサーバ情報が表示されてしまってるみたいだ\n<br />\n<br />\n<h3>ServerTokensを設定する</h3>\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\n\n<pre class=\"brush: bash\">\nvi /etc/httpd/conf/httpd.conf\n/ServerTokens # ServerTokensを検索\ni\nServerTokens ProductOnly\n&lt; Esc &gt;:w\n/ServerSignature # ServerSignatureを検索\ni\nServerSignature Off\n&lt; Esc &gt;:wq\nhttpd -k restart # Apacheを再起動する\n</pre>\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-autosave','','','2013-01-06 21:05:53','2013-01-06 12:05:53','',521,'http://49.212.213.226/wordpress/solution-log/?p=524',0,'revision','',0),(525,1,'2013-01-02 19:09:50','2013-01-02 10:09:50','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと本に書いてあったので調べてみた。\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトでServerTokensがFullになっているのでProductOnlyに設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定するServerSignatureもoffに指定しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;\r\n:\r\nw\r\nq\r\n&lt; Enter &gt;\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;\r\n:\r\nw\r\nq\r\n&lt; Enter &gt;\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony&#039;s Place</a>\r\n<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-3','','','2013-01-02 19:09:50','2013-01-02 10:09:50','',521,'http://49.212.213.226/wordpress/solution-log/?p=525',0,'revision','',0),(526,1,'2013-01-02 19:14:57','2013-01-02 10:14:57','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと本に書いてあったので調べてみた。\r\n\r\n\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトでServerTokensがFullになっているのでProductOnlyに設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定するServerSignatureもoffに指定しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;\r\n:\r\nw\r\n&lt; Enter &gt;\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;\r\n:\r\nw\r\nq\r\n&lt; Enter &gt;\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony&#039;s Place</a>\r\n<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-4','','','2013-01-02 19:14:57','2013-01-02 10:14:57','',521,'http://49.212.213.226/wordpress/solution-log/?p=526',0,'revision','',0),(527,1,'2013-01-02 19:17:13','2013-01-02 10:17:13','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと本に書いてあったので調べてみた。\r\n\r\n\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony&#039;s Place</a>\r\n<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-5','','','2013-01-02 19:17:13','2013-01-02 10:17:13','',521,'http://49.212.213.226/wordpress/solution-log/?p=527',0,'revision','',0),(528,1,'2013-01-02 19:19:15','2013-01-02 10:19:15','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-6','','','2013-01-02 19:19:15','2013-01-02 10:19:15','',521,'http://49.212.213.226/wordpress/solution-log/?p=528',0,'revision','',0),(529,1,'2013-01-02 19:50:27','2013-01-02 10:50:27','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-7','','','2013-01-02 19:50:27','2013-01-02 10:50:27','',521,'http://49.212.213.226/wordpress/solution-log/?p=529',0,'revision','',0),(530,1,'2013-01-02 19:51:43','2013-01-02 10:51:43','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-8','','','2013-01-02 19:51:43','2013-01-02 10:51:43','',521,'http://49.212.213.226/wordpress/solution-log/?p=530',0,'revision','',0),(531,1,'2013-01-03 12:20:34','2013-01-03 03:20:34','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n\r\n\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install telnet\r\n</pre>\r\n\r\n\r\n\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n\r\n\r\n\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-9','','','2013-01-03 12:20:34','2013-01-03 03:20:34','',521,'http://49.212.213.226/wordpress/solution-log/?p=531',0,'revision','',0),(532,1,'2013-01-03 12:25:34','2013-01-03 03:25:34','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<code class=\"brush: bash\">yum install telnet</code>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-10','','','2013-01-03 12:25:34','2013-01-03 03:25:34','',521,'http://49.212.213.226/wordpress/solution-log/?p=532',0,'revision','',0),(533,1,'2013-01-03 12:26:28','2013-01-03 03:26:28','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">yum install telnet</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\n...省略...\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1\r\n</pre>\r\n\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-11','','','2013-01-03 12:26:28','2013-01-03 03:26:28','',521,'http://49.212.213.226/wordpress/solution-log/?p=533',0,'revision','',0),(534,1,'2013-01-03 12:29:44','2013-01-03 03:29:44','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">yum install telnet</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre>telnet example.com 80\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-12','','','2013-01-03 12:29:44','2013-01-03 03:29:44','',521,'http://49.212.213.226/wordpress/solution-log/?p=534',0,'revision','',0),(535,1,'2013-01-03 18:01:31','2013-01-03 09:01:31','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\r\n\r\n<h3>CentOS6.3のディスクイメージを入手する</h3>\r\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを<a href=\"http://isoredirect.centos.org/centos/6/isos/i386/\">ダウンロードサイト</a>から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。今の所外付けのHDD内にダウンロード済みのCentOS6.3のディスクイメージがあるのでそちらを使う。\r\n\r\n\r\n<h3>VMware Playerをインストールする</h3>\r\n<a href=\"http://www.vmware.com/\">VMware Playerのサイト</a>からWindows用のインストールファイルを<a href=\"http://www.vmware.com/support/product-support/player.html\">ダウンロードして</a>通常通りインストールする。\r\n\r\n\r\n<h3>仮想OSの設定ファイルを作成する</h3>\r\nVMware Playerはのみの対応なので、CentOSが日本語にならない。なので<a href=\"http://www.easyvmx.com/\">EasyVMX!のサイト</a>で仮想OSの設定ファイルを作成する。\r\n<ol>\r\n<li>easyvmx 2.0をクリック\r\n<li>仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック\r\n<li>(仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。\r\n</ol>\r\n\r\n\r\n<h3>CentOS6.3をインストールする</h3>\r\n前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。\r\n<pre class=\"brush: bash\">\r\nide1:0.deviceType = &quot;cdrom-image&quot;\r\nide1:0.fileName = &quot;(isoイメージのあるパス)\\centosdvd.iso&quot;\r\n</pre>\r\nその後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.centos.org/\">www.centos.org - The Community ENTerprise Operating System</a>\r\n<li><a href=\"http://www.mlexp.com/wiki/index.php?VMWare%20Player%20%A5%E1%A5%E2\">VMWare Player メモ - MLEXP Wiki</a>\r\n<li><a href=\"http://www.vmware.com/jp\">VMware の仮想化によるインフラストラクチャの最適化</a>\r\n</ul>','Windows7にVMware Player + CentOS6.3をインストールする','','publish','open','open','','windows7%e3%81%abvmware-player-centos6-3%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-10-05 19:53:30','2013-10-05 10:53:30','',0,'http://49.212.213.226/wordpress/solution-log/?p=535',0,'post','',0),(536,1,'2013-01-03 18:00:17','2013-01-03 09:00:17','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\n\n\n<h3>CentOS6.3のディスクイメージを入手する</h3>\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。\n\n\n<h3>VMware PlayerにCentOS6.3をインストールする</h3>\nVMware PlayerのサイトからWindows用のインストールファイルをダウンロードしてインストール。立ち上げたVMware PlayerからCentOS6.3のisoイメージを選択する。VMware PlayerがCentOSを認識しない場合は適宜選択する。\n\n\n<h3>CentOS6.3をインストールする</h3>\n最初はデモバージョンで立ち上がるらしく、OSで色々と作業をしても、状態が保存されない。CentOSのデスクトップ上にインストールアイコンがあるので、そちらからWindwosのディスクにインストールする。\n\n\n\n<h3>参考サイト</h3>\nhttp://pc-os.seesaa.net/article/45894579.html\nhttp://www.yukun.info/blog/2011/02/vmware-player-centos.html\n','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-01-03 18:00:17','2013-01-03 09:00:17','',535,'http://49.212.213.226/wordpress/solution-log/?p=536',0,'revision','',0),(537,1,'2013-01-03 18:01:31','2013-01-03 09:01:31','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\r\n<h3>CentOS6.3のディスクイメージを入手する</h3>\r\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。\r\n<h3>VMware PlayerにCentOS6.3をインストールする</h3>\r\nVMware PlayerのサイトからWindows用のインストールファイルをダウンロードしてインストール。立ち上げたVMware PlayerからCentOS6.3のisoイメージを選択する。VMware PlayerがCentOSを認識しない場合は適宜選択する。\r\n<h3>CentOS6.3をインストールする</h3>\r\n最初はデモバージョンで立ち上がるらしく、OSで色々と作業をしても、状態が保存されない。CentOSのデスクトップ上にインストールアイコンがあるので、そちらからWindwosのディスクにインストールする。\r\n<h3>参考サイト</h3>\r\nhttp://pc-os.seesaa.net/article/45894579.html\r\nhttp://www.yukun.info/blog/2011/02/vmware-player-centos.html\r\nhttps://my.vmware.com/jp/','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-01-03 18:01:31','2013-01-03 09:01:31','',535,'http://49.212.213.226/wordpress/solution-log/?p=537',0,'revision','',0),(538,1,'2012-12-04 17:40:42','2012-12-04 08:40:42','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード（なぜか/tmpフォルダにダウンロードされる）</li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /tmp\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\neclipse.iniの最終行に\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\nと記述する\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから「eclipse」と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-16','','','2012-12-04 17:40:42','2012-12-04 08:40:42','',157,'http://49.212.213.226/wordpress/solution-log/?p=538',0,'revision','',0),(539,1,'2013-01-05 11:56:18','2013-01-05 02:56:18','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでその場で解答</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード<del datetime=\"2013-01-05T02:52:03+00:00\">（なぜか/tmpフォルダにダウンロードされる）</del></li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\npleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。\r\n<pre class=\"brush: bash\">\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\n『<b>/usr/local/share/eclipse/eclipse.ini</b>』の最終行に設定を記述する\r\n<pre class=\"brush: text\">\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\n</pre>\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから<b>「eclipse」</b>と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-17','','','2013-01-05 11:56:18','2013-01-05 02:56:18','',157,'http://49.212.213.226/wordpress/solution-log/?p=539',0,'revision','',0),(540,1,'2013-01-03 12:30:50','2013-01-03 03:30:50','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">yum install telnet</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<br />\r\n<br />\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-13','','','2013-01-03 12:30:50','2013-01-03 03:30:50','',521,'http://49.212.213.226/wordpress/solution-log/?p=540',0,'revision','',0),(541,1,'2013-01-05 12:03:08','2013-01-05 03:03:08','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<code class=\"brush: bash\">yum install telnet</code>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<code class=\"brush: bash\">\r\ntelnet example.com 80\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1</code>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<br />\r\n<br />\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-14','','','2013-01-05 12:03:08','2013-01-05 03:03:08','',521,'http://49.212.213.226/wordpress/solution-log/?p=541',0,'revision','',0),(542,1,'2013-01-05 13:04:21','2013-01-05 04:04:21','どうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。\r\n\r\n<h3>Remiをインストールする</h3>\r\nまずEPELリポジトリが入っているか確認し、入っていなければ<a href=\"./?p=548\">インストールする</a>。Remiは個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\n</pre>\r\n\r\n\r\n<h3>Remiの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/remi.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\r\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','publish','open','open','','centos6-3%e3%81%abremi%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-05 15:58:19','2013-01-05 06:58:19','',0,'http://49.212.213.226/wordpress/solution-log/?p=542',0,'post','',0),(543,1,'2013-01-05 13:04:14','2013-01-05 04:04:14','<h3>remiをインストールする</h3>\nどうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\n<pre class=\"brush: bash\">\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\n</pre>\n\n<h3>remiの設定を変更する</h3>\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\n<pre class=\"brush: bash\">\ncat /etc/yum.repos.d/remi.repo\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','inherit','open','open','','542-revision','','','2013-01-05 13:04:14','2013-01-05 04:04:14','',542,'http://49.212.213.226/wordpress/solution-log/?p=543',0,'revision','',0),(544,1,'2013-01-05 13:04:21','2013-01-05 04:04:21','<h3>remiをインストールする</h3>\r\nどうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\n</pre>\r\n\r\n<h3>remiの設定を変更する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/remi.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\r\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','inherit','open','open','','542-revision-2','','','2013-01-05 13:04:21','2013-01-05 04:04:21','',542,'http://49.212.213.226/wordpress/solution-log/?p=544',0,'revision','',0),(545,1,'2013-01-05 15:58:08','2013-01-05 06:58:08','どうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。\n\n<h3>Remiをインストールする</h3>\nまずEPELリポジトリが入っているか確認し、入っていなければ<a href=\"./?p=548\">インストールする</a>。Remiは個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\n<pre class=\"brush: bash\">\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\n</pre>\n\n<h3>Remiの設定を確認する</h3>\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\n<pre class=\"brush: bash\">\ncat /etc/yum.repos.d/remi.repo\n</pre>\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','inherit','open','open','','542-autosave','','','2013-01-05 15:58:08','2013-01-05 06:58:08','',542,'http://49.212.213.226/wordpress/solution-log/?p=545',0,'revision','',0),(546,1,'2013-01-05 13:04:49','2013-01-05 04:04:49','<h3>remiをインストールする</h3>\r\nどうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\n</pre>\r\n\r\n<h3>remiの設定を変更する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/remi.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\r\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','inherit','open','open','','542-revision-3','','','2013-01-05 13:04:49','2013-01-05 04:04:49','',542,'http://49.212.213.226/wordpress/solution-log/?p=546',0,'revision','',0),(547,1,'2013-01-02 10:35:52','2013-01-02 01:35:52','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n[text]\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n[/text]\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-02 10:35:52','2013-01-02 01:35:52','',395,'http://49.212.213.226/wordpress/solution-log/?p=547',0,'revision','',0),(548,1,'2013-01-05 13:29:24','2013-01-05 04:29:24','<h3>EPELリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\n# 32bit版64bit版共通\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','publish','open','open','','centos6-3%e3%81%abepel%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%82%92%e8%bf%bd%e5%8a%a0%e3%81%99%e3%82%8b','','','2013-02-27 13:34:17','2013-02-27 04:34:17','',0,'http://49.212.213.226/wordpress/solution-log/?p=548',0,'post','',0),(549,1,'2013-01-05 13:28:37','2013-01-05 04:28:37','<h3>EPEリポジトリを追加する</h3>\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\n<pre class=\"brush: bash\">\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\n</pre>\n\n\n<h3>Remiの設定を確認する</h3>\n念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/epel.repo』を開いて、[epel]のenabled=1をenabled=0に変更する。\n<pre class=\"brush: bash\">\ncat /etc/yum.repos.d/epel.repo\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\n<li>CentOSにepel、remiリポジトリを追加する | ExiZ.org\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision','','','2013-01-05 13:28:37','2013-01-05 04:28:37','',548,'http://49.212.213.226/wordpress/solution-log/?p=549',0,'revision','',0),(550,1,'2013-02-27 13:29:42','2013-02-27 04:29:42','<h3>EPELリポジトリを追加する</h3>\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\n<pre class=\"brush: bash\">\n# 32bit版\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\n＃ 64bit版\nftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\n</pre>\n\n\n<h3>EPELの設定を確認する</h3>\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\n<pre class=\"brush: bash\">\ncat /etc/yum.repos.d/epel.repo\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-autosave','','','2013-02-27 13:29:42','2013-02-27 04:29:42','',548,'http://49.212.213.226/wordpress/solution-log/?p=550',0,'revision','',0),(551,1,'2013-01-05 13:29:24','2013-01-05 04:29:24','<h3>EPEリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>Remiの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『/etc/yum.repos.d/epel.repo』を開いて、[epel]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li>CentOSにepel、remiリポジトリを追加する | ExiZ.org\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-2','','','2013-01-05 13:29:24','2013-01-05 04:29:24','',548,'http://49.212.213.226/wordpress/solution-log/?p=551',0,'revision','',0),(552,1,'2013-01-05 13:31:26','2013-01-05 04:31:26','<h3>EPEリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、[epel]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li>CentOSにepel、remiリポジトリを追加する | ExiZ.org\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-3','','','2013-01-05 13:31:26','2013-01-05 04:31:26','',548,'http://49.212.213.226/wordpress/solution-log/?p=552',0,'revision','',0),(553,1,'2013-01-05 13:11:20','2013-01-05 04:11:20','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は事前に追加しておくこと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n[text]\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n[/text]\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-05 13:11:20','2013-01-05 04:11:20','',395,'http://49.212.213.226/wordpress/solution-log/?p=553',0,'revision','',0),(554,1,'2013-01-01 16:54:35','2013-01-01 07:54:35','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後yumのremiリポジトリから5.5系をインストールする。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# yumのremiリポジトリを追加\r\nrpm -Uvh http://rpms.famillecollet.com/enterprise/remi-release-5.rpm\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-31','','','2013-01-01 16:54:35','2013-01-01 07:54:35','',187,'http://49.212.213.226/wordpress/solution-log/?p=554',0,'revision','',0),(555,1,'2013-01-05 13:07:22','2013-01-05 04:07:22','<h3>Remiをインストールする</h3>\r\nどうやらCentOSでPHP+MySQLのアップデートを行うには<a href=\"http://rpms.famillecollet.com/\">Remi</a>リポジトリが相性が良いらしい。個人でアップデートされているものらしいので、もしかしたらURLが変わるかもしれないしサイト自体が閉鎖される可能性があるが、現時点では以下のコマンドでインストール出来る。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\n</pre>\r\n\r\n\r\n<h3>Remiの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/remi.repo</b>』を開いて、[remi]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/remi.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://rpms.famillecollet.com/\">Les RPM de Remi</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n<li><a href=\"http://kencom.biz/archives/2009/0312162117.php\">remi レポジトリを追加 - KENCOM.BIZ</a>\r\n</ul>','CentOS6.3にRemiリポジトリをインストールする','','inherit','open','open','','542-revision-4','','','2013-01-05 13:07:22','2013-01-05 04:07:22','',542,'http://49.212.213.226/wordpress/solution-log/?p=555',0,'revision','',0),(556,1,'2013-01-05 13:31:56','2013-01-05 04:31:56','<h3>EPEリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、[epel]のenabled=1をenabled=0に変更する。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-4','','','2013-01-05 13:31:56','2013-01-05 04:31:56','',548,'http://49.212.213.226/wordpress/solution-log/?p=556',0,'revision','',0),(557,1,'2013-01-05 13:34:37','2013-01-05 04:34:37','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\n行数はあくまで目安。\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n[text]\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n[/text]\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-05 13:34:37','2013-01-05 04:34:37','',395,'http://49.212.213.226/wordpress/solution-log/?p=557',0,'revision','',0),(558,1,'2013-01-05 13:37:44','2013-01-05 04:37:44','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/6/i386/epel-release-6-7.noarch.rpm\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-6.rpm\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-32','','','2013-01-05 13:37:44','2013-01-05 04:37:44','',187,'http://49.212.213.226/wordpress/solution-log/?p=558',0,'revision','',0),(559,1,'2013-01-05 12:03:58','2013-01-05 03:03:58','Apacheのセキュリティ対策でサーバ情報の隠蔽を行った方が良いと「<a href=\"http://www.amazon.co.jp/dp/4774150363\">サーバ構築の実際がわかる Apache[実践]運用/管理</a>」に書いてあったので調べてみた。\r\n<h3>CentOS6.3にtelnetをインストールする</h3>\r\n標準だとtelnetはインストールされていないのでyumでインストールする。おそらくソースからインストールすべきライブラリでもないと思う。\r\n<pre class=\"brush: bash\">yum install telnet</pre>\r\n<h3>HTTPレスポンスを利用したApacheのバージョン情報の確認をする</h3>\r\ntelnetでヘッダフィールドレスポンスのみ確認できる\r\n<pre class=\"brush: bash\">\r\ntelnet example.com 80\r\nHEAD / HTTP/1.1\r\n&lt; return &gt; x2\r\n\r\nHTTP/1.1 400 Bad Request\r\nDate: Wed, 02 Jan 2013 09:38:44 GMT\r\nServer: Apache/2.2.15 (CentOS)\r\nConnection: close\r\nContent-Type: text/html; charset=iso-8859-1</pre>\r\nどうやらサーバ情報が表示されてしまってるみたいだ\r\n<br />\r\n<br />\r\n<h3>ServerTokensを設定する</h3>\r\nCentOS6.3はディフォルトで<b>ServerTokens</b>が<b>OS</b>になっているので<b>ProductOnly</b>に設定しなおす。ついでに404 NOT FOUNDのページ表示の時にフッタにApacheのバージョン情報を表示するオプションを設定する<b>ServerSignature</b>も<b>Off</b>に指定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n/ServerTokens # ServerTokensを検索\r\ni\r\nServerTokens ProductOnly\r\n&lt; Esc &gt;:w\r\n/ServerSignature # ServerSignatureを検索\r\ni\r\nServerSignature Off\r\n&lt; Esc &gt;:wq\r\nhttpd -k restart # Apacheを再起動する\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.tonycode.com/tech-stuff/http-notes/making-http-requests-via-telnet\">Making HTTP requests via telnet - Tony\'s Place</a></li>\r\n	<li><a href=\"http://uguisu.skr.jp/Windows/vi.html\">viコマンド（vimコマンド）一覧（検索・置換）</a></li>\r\n</ul>','Apacheでサーバ情報の隠蔽を行う','','inherit','open','open','','521-revision-15','','','2013-01-05 12:03:58','2013-01-05 03:03:58','',521,'http://49.212.213.226/wordpress/solution-log/?p=559',0,'revision','',0),(560,1,'2012-12-02 22:36:08','2012-12-02 13:36:08','<h3>秘密鍵および公開鍵の作成</h3>\r\nローカルのCentOSから\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\n</pre>\r\nこれで、/root/.sshに、秘密鍵(id_rsa)と公開鍵(id_rsa.pub)が作成される。\r\n<h3>さくらVPSに公開キーをアップ</h3>\r\nVPSコントロールパネルを呼び出す\r\n<a href=\"https://secure.sakura.ad.jp/vpscontrol/main/\">https://secure.sakura.ad.jp/vpscontrol/main/</a>\r\n\r\nリモートコンソールを起動\r\n\r\n~/.ssh/authorized_keysをパーミッション600で作成\r\n\r\nローカルマシーンの/root/.ssh/id_rsa.pubをaurhorized_keysにペーストする\r\n\r\nローカルもしくはサーバにknown_hostsがある場合は削除しておく','さくらのVPSでSSHの初期設定を行う','','inherit','open','open','','5-revision-7','','','2012-12-02 22:36:08','2012-12-02 13:36:08','',5,'http://49.212.213.226/wordpress/solution-log/?p=560',0,'revision','',0),(561,1,'2013-01-06 18:26:52','2013-01-06 09:26:52','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'wr39p34k4b\';\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-33','','','2013-01-06 18:26:52','2013-01-06 09:26:52','',187,'http://49.212.213.226/wordpress/solution-log/?p=561',0,'revision','',0),(562,1,'2012-12-31 06:10:38','2012-12-30 21:10:38','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nrailsをインストールしたり、apacheと連動させるためのライブラリをインストールしたりするためのrubygemsをインストールする\r\n<pre class=\"brush: bash\">wget http://production.cf.rubygems.org/rubygems/rubygems-1.8.24.tgz\r\ntar xvzf rubygems-1.8.24.tgz\r\ncd rubygems-1.8.24</pre>\r\nとりあえずこの後updateしたりinstallコマンド辺りでエラーが出るなら、以下のライブラリがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\nyum -y install gcc, make, gcc-c++, zlib-devel, httpd-devel, openssl-devel, curl-devel\r\n</pre>\r\n必要なモノがインストールされていなかったらインストールし、Rubyを再コンパイル。ただしpassenger-install-apache2-moduleコマンドでapache2-moduleをインストールするとき、上記のモノが入ってない場合は、自分で入れろと警告が出る。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install&lt;/pre&gt;\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n</pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-12','','','2012-12-31 06:10:38','2012-12-30 21:10:38','',13,'http://49.212.213.226/wordpress/solution-log/?p=562',0,'revision','',0),(563,1,'2013-01-07 10:50:20','2013-01-07 01:50:20','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\n\n<h4>libyamlのインストール</h4>\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\n\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\ntar zxvf yaml-0.1.4.tar.gz\ncd yaml-0.1.4\n./configure --prefix=/usr/local\nmake\nsudo make install\n</pre>\n\n<h4>rubyのインストール</h4>\nlibyamlがインストール出来たので、今度はRubyをインストール。\n<pre class=\"brush: bash\">cd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\ntar zxvf ruby-1.9.3-p286.tar.gz\ncd ruby-1.9.3-p286\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nsudo make install</pre>\n\n<h4>rubygemsのインストール</h4>\nRuby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。\n\n\n<h4>Railsのインストール</h4>\n<pre class=\"brush: bash\">gem install rails</pre>\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\n\n<h4>Passenger のインストール</h4>\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\n<pre class=\"brush: bash\">gem install passenger\npassenger-install-apache2-module</pre>\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\n<pre class=\"brush: bash\">cd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\ntar zxvf ruby-1.9.3-p286.tar.gz\ncd ruby-1.9.3-p286\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\nmake\nsudo make install&lt;/pre&gt;\nvim /etc/httpd/conf.d/ruby-passenger.conf\n\n#######################ruby-passenger.conf は以下の通り作成\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\nPassengerRuby /usr/bin/ruby\n#######################\n</pre>\n\n<h4>FastCGI（fcgi）のインストール</h4>\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\nとりあえず一休み。。。\n\n<h4>RDTキットのインストール</h4>\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-13','','','2013-01-07 10:50:20','2013-01-07 01:50:20','',13,'http://49.212.213.226/wordpress/solution-log/?p=563',0,'revision','',0),(564,1,'2013-01-01 13:43:12','2013-01-01 04:43:12','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-01 13:43:12','2013-01-01 04:43:12','',190,'http://49.212.213.226/wordpress/solution-log/?p=564',0,'revision','',0),(566,1,'2013-03-03 02:22:26','2013-03-02 17:22:26','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\n\n<h3>CentOS6.3のディスクイメージを入手する</h3>\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを<a href=\"http://isoredirect.centos.org/centos/6/isos/i386/\">ダウンロードサイト</a>から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。今の所外付けのHDD内にダウンロード済みのCentOS6.3のディスクイメージがあるのでそちらを使う。\n\n\n<h3>VMware Playerをインストールする</h3>\n<a href=\"http://www.vmware.com/\">VMware Playerのサイト</a>からWindows用のインストールファイルを<a href=\"http://www.vmware.com/support/product-support/player.html\">ダウンロードして</a>通常通りインストールする。\n\n\n<h3>仮想OSの設定ファイルを作成する</h3>\nVMware Playerはのみの対応なので、CentOSが日本語にならない。なので<a href=\"http://www.easyvmx.com/\">EasyVMX!のサイト</a>で仮想OSの設定ファイルを作成する。\n<ol>\n<li>easyvmx 2.0をクリック\n<li>仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック\n<li>(仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。\n</ol>\n\n\n<h3>CentOS6.3をインストールする</h3>\n前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。\n<pre class=\"brush: bash\">\nide1:0.deviceType = &quot;cdrom-image&quot;\nide1:0.fileName = &quot;(isoイメージのあるパス)\\centosdvd.iso&quot;\n</pre>\nその後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.centos.org/\">www.centos.org - The Community ENTerprise Operating System</a>\n<li><a href=\"http://www.mlexp.com/wiki/index.php?VMWare%20Player%20%A5%E1%A5%E2\">VMWare Player メモ - MLEXP Wiki</a>\n<li><a href=\"http://www.vmware.com/jp\">VMware の仮想化によるインフラストラクチャの最適化</a>\n</ul>','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-autosave-v1','','','2013-03-03 02:22:26','2013-03-02 17:22:26','',535,'http://49.212.213.226/wordpress/solution-log/?p=566',0,'revision','',0),(567,1,'2013-01-03 18:01:32','2013-01-03 09:01:32','<p>WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。</p><h3>CentOS6.3のディスクイメージを入手する</h3><p>VMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。</p><h3>VMware PlayerにCentOS6.3をインストールする</h3><p>VMware PlayerのサイトからWindows用のインストールファイルをダウンロードしてインストール。立ち上げたVMware PlayerからCentOS6.3のisoイメージを選択する。VMware PlayerがCentOSを認識しない場合は適宜選択する。</p><h3>CentOS6.3をインストールする</h3><p>最初はデモバージョンで立ち上がるらしく、OSで色々と作業をしても、状態が保存されない。CentOSのデスクトップ上にインストールアイコンがあるので、そちらからWindwosのディスクにインストールする。</p><h3>参考サイト</h3><p>http://pc-os.seesaa.net/article/45894579.html<br /> http://www.yukun.info/blog/2011/02/vmware-player-centos.html<br /> https://my.vmware.com/jp/</p>','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-01-03 18:01:32','2013-01-03 09:01:32','',535,'http://49.212.213.226/wordpress/solution-log/?p=567',0,'revision','',0),(568,1,'2013-01-08 19:34:00','2013-01-08 10:34:00','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらInternal Errorが出た。\r\n\r\n<h3>RedmineのGemFileを使用する</h3>\r\n結局のところ、/path/to/redmineのGemFileに記述してあるライブラリ通りの設定でないとRedmineが正しく機動しない事が判明。<b>RedmineのGemFile通りのライブラリを必ずインストールする事！</b>\r\n\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\nhttp://blog.ruby.iijgio.com/2012/12/27/redmine220\r\n\r\n\r\n','RedmineのMy AccountでInternal Errorが出る','','publish','open','open','','redmine%e3%81%aemy-account%e3%81%a7internal-error%e3%81%8c%e5%87%ba%e3%82%8b','','','2013-01-09 22:24:54','2013-01-09 13:24:54','',0,'http://49.212.213.226/wordpress/solution-log/?p=568',0,'post','',0),(569,1,'2013-01-08 19:32:13','2013-01-08 10:32:13','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\n<h3>参考リンク</h3>\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\nhttp://www10.atwiki.jp/bambooflow/pages/273.html','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision','','','2013-01-08 19:32:13','2013-01-08 10:32:13','',568,'http://49.212.213.226/wordpress/solution-log/?p=569',0,'revision','',0),(570,1,'2013-01-08 19:34:00','2013-01-08 10:34:00','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-2','','','2013-01-08 19:34:00','2013-01-08 10:34:00','',568,'http://49.212.213.226/wordpress/solution-log/?p=570',0,'revision','',0),(571,1,'2013-01-08 19:38:27','2013-01-08 10:38:27','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\n\r\ni18nのバージョンを指定する！\r\n','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-3','','','2013-01-08 19:38:27','2013-01-08 10:38:27','',568,'http://49.212.213.226/wordpress/solution-log/?p=571',0,'revision','',0),(572,1,'2013-01-09 16:26:12','2013-01-09 07:26:12','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\n\n<h3>RedmineのGemFileを使用する</3>\n結局のところ、/path/to/redmineのGemFileに記述してあるライブラリ通りの設定でないとRedmineが正しく機動しない事が判明。<b>RedmineのGemFile通りのライブラリを必ずインストールする！\n\n<h3>参考リンク</h3>\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\nhttp://blog.ruby.iijgio.com/2012/12/27/redmine220\n\n\n','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-autosave','','','2013-01-09 16:26:12','2013-01-09 07:26:12','',568,'http://49.212.213.226/wordpress/solution-log/?p=572',0,'revision','',0),(573,1,'2013-01-08 20:21:34','2013-01-08 11:21:34','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\n\r\ni18nのバージョンを指定する！\r\n\r\n\r\nどうもRedmine Rails Rubyはそれぞれのバージョンを合わせないと動かないらしい。。。\r\n\r\nついでにgemのバージョンもなんか怪しい。。。\r\n','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-4','','','2013-01-08 20:21:34','2013-01-08 11:21:34','',568,'http://49.212.213.226/wordpress/solution-log/?p=573',0,'revision','',0),(574,1,'2013-01-08 21:02:40','2013-01-08 12:02:40','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\n\r\ni18nのバージョンを指定する！\r\n\r\n\r\nどうもRedmine Rails Rubyはそれぞれのバージョンを合わせないと動かないらしい。。。\r\n\r\nついでにgemのバージョンもなんか怪しい。。。\r\n\r\n2. Gemfileファイルの修正が必要なんだろうなぁ。。。\r\nhttp://blog.ruby.iijgio.com/2012/12/27/redmine220\r\n\r\n\r\nGemfileの指示書通りにインストールしないとダメなんですね。。。。','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-5','','','2013-01-08 21:02:40','2013-01-08 12:02:40','',568,'http://49.212.213.226/wordpress/solution-log/?p=574',0,'revision','',0),(575,1,'2013-01-08 21:09:17','2013-01-08 12:09:17','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらエラーが出た。\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\n\r\ni18nのバージョンを指定する！\r\n\r\n\r\nどうもRedmine Rails Rubyはそれぞれのバージョンを合わせないと動かないらしい。。。\r\n\r\nついでにgemのバージョンもなんか怪しい。。。\r\n\r\n2. Gemfileファイルの修正が必要なんだろうなぁ。。。\r\nhttp://blog.ruby.iijgio.com/2012/12/27/redmine220\r\n\r\n\r\nGemfileの指示書通りにインストールしないとダメなんですね。。。。\r\n\r\n\r\nremine2.2.0だとGemFileによれば。。。\r\n\r\n\r\ngem \'rails\', \'3.2.9\'\r\ngem \"jquery-rails\", \"~> 2.0.2\"\r\ngem \"i18n\", \"~> 0.6.0\"\r\ngem \"coderay\", \"~> 1.0.6\"\r\ngem \"fastercsv\", \"~> 1.5.0\", :platforms => [:mri_18, :mingw_18, :jruby]\r\ngem \"builder\", \"3.0.0\"\r\n\r\n\r\n','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-6','','','2013-01-08 21:09:17','2013-01-08 12:09:17','',568,'http://49.212.213.226/wordpress/solution-log/?p=575',0,'revision','',0),(576,1,'2013-01-09 16:27:09','2013-01-09 07:27:09','Redmineの初期設定で、adminでログインして、My Accountから日本語を設定しようとしたらInternal Errorが出た。\r\n\r\n<h3>RedmineのGemFileを使用する</3>\r\n結局のところ、/path/to/redmineのGemFileに記述してあるライブラリ通りの設定でないとRedmineが正しく機動しない事が判明。<b>RedmineのGemFile通りのライブラリを必ずインストールする事！</b>\r\n\r\n<h3>参考リンク</h3>\r\nhttp://assimane.blog.so-net.ne.jp/2011-01-03\r\nhttp://www10.atwiki.jp/bambooflow/pages/273.html\r\nhttp://blog.redmine.jp/articles/redmine-1_2-installation_centos/\r\nhttp://blog.ruby.iijgio.com/2012/12/27/redmine220\r\n\r\n\r\n','RedmineのMy AccountでInternal Errorが出る','','inherit','open','open','','568-revision-7','','','2013-01-09 16:27:09','2013-01-09 07:27:09','',568,'http://49.212.213.226/wordpress/solution-log/?p=576',0,'revision','',0),(577,1,'2013-01-10 02:12:27','2013-01-09 17:12:27','なんとなくやってみた。\r\n\r\n<h3>vsftpdをインストールする</h3>\r\n標準では入って無いのでインストールする\r\n<pre class=\"brush: bash\">\r\nyum install vsftpd\r\n</pre>\r\n\r\n\r\n<h3>vsftpd.confを設定する</h3>\r\n『<b>/etc/vsftpd/vsftpd.conf</b>』を編集する。他にも設定すべきところがあるが、動作確認のみしたいので。\r\n<pre class=\"brush: bash\">\r\nanonymous_enable=YES\r\n</pre>\r\n\r\n\r\n<h3>vsftpdを起動する</h3>\r\n<pre class=\"brush: bash\">\r\nservice vsftpd start\r\n</pre>\r\n\r\n\r\n<h3>クライアントのCentOSにFTPクライアントをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install ftp\r\n</pre>\r\n\r\n\r\n<h3>FTPサーバへ接続する</h3>\r\n<pre class=\"brush: bash\">\r\nftp -v ip\r\n</pre>\r\n\r\n\r\n<h3>FTPサーバへブラウザからアクセスする</h3>\r\nftp://anonymous@url/ftp/pubにアクセスする。ファイルは/var/ftpにあるものが表示される。','CentOS6.3にFTPサーバをインストールする','','publish','open','open','','centos6-3%e3%81%abftp%e3%82%b5%e3%83%bc%e3%83%90%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-10 02:12:27','2013-01-09 17:12:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=577',0,'post','',0),(578,1,'2013-01-10 02:11:49','2013-01-09 17:11:49','なんとなくやってみた。\n\n<h3>vsftpdをインストールする</h3>\n標準では入って無いのでインストールする\n<pre class=\"brush: bash\">\nyum install vsftpd\n</pre>\n\n\n<h3>vsftpd.confを設定する</h3>\n『<b>/etc/vsftpd/vsftpd.conf</b>』を編集する。他にも設定すべきところがあるが、動作確認のみしたいので。\n<pre class=\"brush: bash\">\nanonymous_enable=YES\n</pre>\n\n\n<h3>vsftpdを起動する</h3>\n<pre class=\"brush: bash\">\nservice vsftpd start\n</pre>\n\n\n<h3>クライアントのCentOSにFTPクライアントをインストールする</h3>\n<pre class=\"brush: bash\">\nyum -y install ftp\n</pre>\n\n\n<h3>FTPサーバへ接続する</h3>\n<pre class=\"brush: bash\">\nftp -v ip\n</pre>\n\n\n<h3>FTPサーバへブラウザからアクセスする</h3>\nftp://anonymous@url/ftp/pub','CentOS6.3にFTPサーバをインストールする','','inherit','open','open','','577-revision','','','2013-01-10 02:11:49','2013-01-09 17:11:49','',577,'http://49.212.213.226/wordpress/solution-log/?p=578',0,'revision','',0),(579,1,'2013-01-07 10:28:56','2013-01-07 01:28:56','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n[php]\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[\'Servers\'][$i][\'controlhost\'] = \'\';\r\n$cfg[\'Servers\'][$i][\'controluser\'] = \'pma\';\r\n$cfg[\'Servers\'][$i][\'controlpass\'] = \'パスワード\'; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[\'Servers\'][$i][\'pmadb\'] = \'phpmyadmin\';\r\n$cfg[\'Servers\'][$i][\'bookmarktable\'] = \'pma_bookmark\';\r\n$cfg[\'Servers\'][$i][\'relation\'] = \'pma_relation\';\r\n$cfg[\'Servers\'][$i][\'table_info\'] = \'pma_table_info\';\r\n$cfg[\'Servers\'][$i][\'table_coords\'] = \'pma_table_coords\';\r\n$cfg[\'Servers\'][$i][\'pdf_pages\'] = \'pma_pdf_pages\';\r\n$cfg[\'Servers\'][$i][\'column_info\'] = \'pma_column_info\';\r\n$cfg[\'Servers\'][$i][\'history\'] = \'pma_history\';\r\n$cfg[\'Servers\'][$i][\'table_uiprefs\'] = \'pma_table_uiprefs\';\r\n$cfg[\'Servers\'][$i][\'tracking\'] = \'pma_tracking\';\r\n$cfg[\'Servers\'][$i][\'designer_coords\'] = \'pma_designer_coords\';\r\n$cfg[\'Servers\'][$i][\'userconfig\'] = \'pma_userconfig\';\r\n$cfg[\'Servers\'][$i][\'recent\'] = \'pma_recent\';\r\n/* Contrib / Swekey authentication */\r\n$cfg[\'Servers\'][$i][\'auth_swekey_config\'] = \'/etc/swekey-pma.conf\';\r\n[/php]\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-34','','','2013-01-07 10:28:56','2013-01-07 01:28:56','',187,'http://49.212.213.226/wordpress/solution-log/?p=579',0,'revision','',0),(580,1,'2013-01-19 00:56:02','2013-01-18 15:56:02','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n[text]\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n[/text]\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-35','','','2013-01-19 00:56:02','2013-01-18 15:56:02','',187,'http://49.212.213.226/wordpress/solution-log/?p=580',0,'revision','',0),(581,1,'2013-01-19 00:57:42','2013-01-18 15:57:42','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-36','','','2013-01-19 00:57:42','2013-01-18 15:57:42','',187,'http://49.212.213.226/wordpress/solution-log/?p=581',0,'revision','',0),(582,1,'2013-01-07 11:34:08','2013-01-07 02:34:08','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-07 11:34:08','2013-01-07 02:34:08','',190,'http://49.212.213.226/wordpress/solution-log/?p=582',0,'revision','',0),(584,1,'2012-12-24 02:05:04','2012-12-23 17:05:04','<h3>PECL::ssh2をインストールする</h3>\r\nインストールにはPEARおよびlibssh2、libssh2-develが必要。適宜インストールしておく。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install php-devel php-pear libssh2 libssh2-devel\r\npecl install ssh2 channel://pecl.php.net/ssh2-0.12\r\n</pre>\r\n\r\nphp.iniを開き、extension=ssh2.soを書き加える\r\n<h3>PECL::ssh2を使ったPHPのサンプルコード</h3>\r\n[php]\r\n&lt;?php\r\n\r\n$connection = ssh2_connect(\'ssh.host\', 22);\r\n\r\nif (ssh2_auth_password($connection, \'user\', \'pass\')) {\r\n	echo &quot;Authentication Successful!\\n&quot;;\r\n} else {\r\n	die(\'Authentication Failed...\');\r\n}\r\n\r\nssh2_scp_send($connection, \'/remote/file\',\r\n\'/local/file\', 0644);\r\n\r\n?&gt;\r\n[/php]\r\n\r\nファイル名はローカルとリモートで必ずフルパスで指定すること！\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.dynamichosting.biz/2011/01/10/installing-ssh2-extension-for-php-on-centos-5/\">Installing SSH2 Extension for PHP on CentOS 5 &#124;  Dynamic Hosting Blog</a></li>\r\n</ul>','CentOS6にPECL::ssh2をインストールする','','inherit','open','open','','183-revision-12','','','2012-12-24 02:05:04','2012-12-23 17:05:04','',183,'http://49.212.213.226/wordpress/solution-log/?p=584',0,'revision','',0),(585,1,'2013-01-05 18:25:39','2013-01-05 09:25:39','<h3>EPEリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-5','','','2013-01-05 18:25:39','2013-01-05 09:25:39','',548,'http://49.212.213.226/wordpress/solution-log/?p=585',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (586,1,'2013-01-05 18:37:51','2013-01-05 09:37:51','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3><del datetime=\"2013-01-05T09:35:55+00:00\">http.confのを編集する</del></h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n[text]\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n[/text]\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-05 18:37:51','2013-01-05 09:37:51','',395,'http://49.212.213.226/wordpress/solution-log/?p=586',0,'revision','',0),(587,1,'2012-12-08 01:26:26','2012-12-07 16:26:26','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。\r\n\r\n<h3>Eclipseのキャッシュを削除する</h3>\r\nまず現在立ち上げているEclipseがある場合は終了する。それから\r\n<pre class=\"brush: bash\">\r\neclipse -clean\r\n</pre>\r\n\r\nこれでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/vivi192467/archives/1649289.html\">戯言Vestige - weblog of vivi -:Eclipseで起動時にフリーズした場合の解消法</a>\r\n</ul>','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','inherit','open','open','','372-revision-v1','','','2012-12-08 01:26:26','2012-12-07 16:26:26','',372,'http://49.212.213.226/wordpress/solution-log/?p=587',0,'revision','',0),(588,1,'2012-12-11 13:34:43','2012-12-11 04:34:43','<h3>FileZillaをインストールする</h3>\r\n最初は<a href=\"http://gftp.seul.org/\">gFTP</a>を<a href=\"http://ja.528p.com/linux/client6/CD004-gftp-settei.html\">RPMからインストール</a>しようと思ったけど、<a href=\"http://serverfault.com/questions/116686/how-to-install-glib-in-a-centos-server\">依存関係でシステムがイカれるかも</a>とか言う書き込みを見てしまったし、他のサイトの記事を見ても非常に面倒くさそうだったので、yumから<a href=\"http://filezilla-project.org/\">FileZilla</a>をインストールすることにした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel list install filezilla #パッケージがあるか確認\r\nyum --enablerepo=epel install filezilla #インストール\r\n</pre>\r\n\r\n\r\nインストールが完了すると、CentOS6のツールバーからアプリケーション→インターネット→FileZillaで立ち上がる。ターミナルからは立ち上げないと思うのでとりあえずはこれで良しとしておく。\r\n<h3>FileZillaを設定する</h3>\r\n基本的にはFFFTPとそんなに変わらない感じ。FileZillaの上部になるホスト、ユーザー名、パスワードの欄に必要事項を記入してクイック接続をクリック。ポートは設定しなくても、FileZilla側が接続時に勝手に見つけてくれる感じだ。\r\n\r\nまた一回接続すると、接続履歴が残るので次回からは簡単に目的のサーバにFTP接続できるようになる。\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://slackhack.net/?p=282\">CentOS6.2 FileZillaのインストール | SlackHack</a></li>\r\n</ul>','CentOS6.3でFileZillaを使用する','','inherit','open','open','','306-revision-10','','','2012-12-11 13:34:43','2012-12-11 04:34:43','',306,'http://49.212.213.226/wordpress/solution-log/?p=588',0,'revision','',0),(589,1,'2012-12-16 07:29:10','2012-12-15 22:29:10','一人プロジェクトの場合、Subversionみたいなガチガチのバージョン管理を使う必要も無いなと思う所もあり、gitに移行することにした。参考にしたのは<a href=\"http://www.amazon.co.jp/dp/427406767X\">入門git</a>\r\n<h3>git-svnが利用できるか確認する</h3>\r\nまずgitとSubversionを連携させるためのツールがインストールされているか確認する\r\n<pre class=\"brush: bash\">\r\ngit svn --version\r\n</pre>\r\n<b>Can\'t locate SVN/Core.pm in @INC...</b>とエラーが出る。どうやらSubversion用のPerlのバインディングがインストールされていないらしい。とりあえずはyumで対応する。\r\n<pre class=\"brush: bash\">\r\nyum install subversion-perl\r\n</pre>\r\n簡単に入る。何かしらgitプロジェクトを作成し、gitの作業ツリー内で再びバージョンを確かめると\r\n<pre class=\"brush: bash\">\r\n</pre>\r\n移行の準備は整った。\r\n<h3>Subversionリポジトリをインポートする</h3>\r\nさくらのレンタルサーバにあるリポジトリからローカルにリビジョン番号を指定してインポートしてみる。\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ngit svn clone -r {start_rev}:{end_rev} svn+ssh://{username}@{domain}.sakura.ne.jp/home/{username}/var/svn/{repo}\r\n</pre>\r\n<h3>インポートされたリポジトリの確認</h3>\r\n<pre class=\"brush: bash\">\r\ncd git-repository\r\ngit log\r\n</pre>\r\n操作方法が分からないときはhを入力するとHELPが表示される\r\n<pre class=\"brush: bash\">\r\n                   SUMMARY OF LESS COMMANDS\r\n\r\n      Commands marked with * may be preceded by a number, N.\r\n      Notes in parentheses indicate the behavior if N is given.\r\n\r\n  h  H                 Display this help.\r\n  q  :q  Q  :Q  ZZ     Exit.\r\n ---------------------------------------------------------------------------\r\n\r\n                           MOVING\r\n\r\n  e  ^E  j  ^N  CR  *  Forward  one line   (or N lines).\r\n  y  ^Y  k  ^K  ^P  *  Backward one line   (or N lines).\r\n  f  ^F  ^V  SPACE  *  Forward  one window (or N lines).\r\n  b  ^B  ESC-v      *  Backward one window (or N lines).\r\n  z                 *  Forward  one window (and set window to N).\r\n  w                 *  Backward one window (and set window to N).\r\n  ESC-SPACE         *  Forward  one window, but don&#039;t stop at end-of-file.\r\n  d  ^D             *  Forward  one half-window (and set half-window to N).\r\n  u  ^U             *  Backward one half-window (and set half-window to N).\r\n  ESC-)  RightArrow *  Left  one half screen width (or N positions).\r\n  ESC-(  LeftArrow  *  Right one half screen width (or N positions).\r\nHELP -- Press RETURN for more, or q when done\r\n</pre>\r\n<h3>リポジトリの分割</h3>\r\n<a href=\"http://git-scm.com/docs/git-filter-branch\">git-filter-branchコマンド</a>を使う。フォルダ名が途中で変更されていたりする場合は、別途マージする必要がある。\r\n<pre class=\"brush: bash\">\r\ngit filter-branch --subdirectory-filter {target_dir} HEAD\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://parrot.hatenadiary.jp/entry/20111025/1319519285\">SubversionのリポジトリをGitリポジトリに移行する - どっかのBlogの前身のような</a>\r\n<li><a href=\"http://c-brains.jp/blog/wsg/12/07/05-161309.php\">Subversion リポジトリを Git に移行してみるよ | バシャログ。</a>\r\n<li><a href=\"http://tnakamura.hatenablog.com/entry/20090502/1241229944\">git log で表示される画面の操作方法メモ - present</a>\r\n<li><a href=\"http://blokspeed.net/blog/2010/09/converting-from-subversion-to-git/\">Converting from Subversion to Git | Blokspeed.net</a>\r\n<li><a href=\"http://design-ambience.com/wordpress/?p=378\">git svn 使い方メモ | Design Ambience Blog</a>\r\n<li><a href=\"http://git-scm.com/docs/git-filter-branch\">git | git-filter-branch(1) Manual Page</a>\r\n</ul>','CentOS6でSubversionからgitに移行する','','inherit','open','open','','290-revision-11','','','2012-12-16 07:29:10','2012-12-15 22:29:10','',290,'http://49.212.213.226/wordpress/solution-log/?p=589',0,'revision','',0),(590,1,'2012-11-12 21:06:45','2012-11-12 12:06:45','「＆nbsp;（※＆は小文字）」を使う','WordPressで改行する','','inherit','open','open','','140-revision-2','','','2012-11-12 21:06:45','2012-11-12 12:06:45','',140,'http://49.212.213.226/wordpress/solution-log/?p=590',0,'revision','',0),(591,1,'2012-12-04 00:49:35','2012-12-03 15:49:35','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n[perl]\r\n#!C:\\xampp\\perl\\bin\\perl.exe\r\nprint &quot;Content-type: text/html\\n\\n&quot;;\r\nprint &quot;Hello World.&quot;;\r\n[/perl]','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-23','','','2012-12-04 00:49:35','2012-12-03 15:49:35','',118,'http://49.212.213.226/wordpress/solution-log/?p=591',0,'revision','',0),(592,1,'2013-01-19 17:15:14','2013-01-19 08:15:14','<h3>EclipseにEPIC - Eclipse Perl Integrationをインストールする</h3>\r\n<ol>\r\n	<li>「ヘルプ」→「新規ソフトウェアのインストール」→「使用可能なソフトウェアサイト」</li>\r\n	<li>EPICと入力しフィルタをかける</li>\r\n	<li>作業対象から「EPIC - Eclipse Perl Integration - http://e-p-i-c.sf.net/updates」を選択</li>\r\n	<li>チェックボックスにチェックを入れ次へをクリック</li>\r\n</ol>\r\n<h3>環境変数を通す</h3>\r\n<ol>\r\n	<li>「コントロールパネル」→「システム」→「システムの詳細設定」を選択し、表示されたウィンドウの「環境変数」ボタンをクリック</li>\r\n	<li>変数の一覧に「PATH」がない場合は「新規」を選択し、変数名に「PATH」、変数値に「C:\\www\\php-5.2.9-Win32」など実行ファイルがある階層を入力。\r\n変数の一覧に「PATH」がある場合は「PATH」を選択した後「編集」を選択し、上記のように変数値を入力。</li>\r\n</ol>\r\n<h3>Perlスクリプトを作成する</h3>\r\nファイルの拡張子を.plにし、コンテンツタイプをしっかりと指定する。\r\n<pre class=\"brush :perl\">\r\n#!C:\\xampp\\perl\\bin\\perl.exe\r\nprint &quot;Content-type: text/html\\n\\n&quot;;\r\nprint &quot;Hello World.&quot;;\r\n</pre>','Windows7 + XAMPPでPerlを使う','','inherit','open','open','','118-revision-24','','','2013-01-19 17:15:14','2013-01-19 08:15:14','',118,'http://49.212.213.226/wordpress/solution-log/?p=592',0,'revision','',0),(593,1,'2012-12-02 19:26:51','2012-12-02 10:26:51','掲示板の設定をスマホ用に変える。\r\n\r\n\r\nメタ情報にJavaScriptでアペンドチャイルドする。長いのでビヨンセする（発音がデスチャに似てるから）とでも呼ぶことにしようかね。ビヨンセ以外、知らんし目\r\n\r\n[javascript]\r\n&lt;script type=&quot;text/javascript&quot;&gt;// &lt;![CDATA[\r\nvar meta = document.createElement(&quot;meta&quot;);\r\nmeta.setAttribute(&quot;name&quot;, &quot;viewport&quot;);\r\nmeta.setAttribute(&quot;content&quot;,&quot;user-scalable=no, width=device-width&quot;);\r\ndocument.getElementsByTagName(&quot;head&quot;)[0].appendChild(meta);\r\n// ]]&gt;&lt;/script&gt;\r\n[/javascript]\r\n\r\n条件式使えばブラウザ毎に表示制御出来そうだが、動作が不安定になりそうなのと、各ブラウザの対応状況とか調べるのがだるいのでまた元気な時に手を出す予定。','スマホ用に表示幅を変える','','inherit','open','open','','209-revision-6','','','2012-12-02 19:26:51','2012-12-02 10:26:51','',209,'http://49.212.213.226/wordpress/solution-log/?p=593',0,'revision','',0),(595,1,'2013-01-19 02:25:31','2013-01-18 17:25:31','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-19 02:25:31','2013-01-18 17:25:31','',190,'http://49.212.213.226/wordpress/solution-log/?p=595',0,'revision','',0),(596,1,'2013-01-20 16:52:40','2013-01-20 07:52:40','Redmineのバージョンを確認するには「<b>ソースから確認する</b>」方法と「<b>管理画面から確認する</b>」方法と2種類ある。\r\n\r\n<h3>Redmineのバージョンをソースから確認する</h3>\r\n「<b>redmine_dir/lib/redmine/version.rb</b>」にバージョンが記述されているファイルがある。\r\n<pre class=\"brush: bash\">\r\ncd redmine_dir/lib/redmine/\r\ncat version.rb\r\nrequire &#039;rexml/document&#039;\r\n\r\nmodule Redmine\r\n  module VERSION #:nodoc:\r\n    MAJOR = 2\r\n    MINOR = 2\r\n    TINY  = 1\r\n\r\n    # Branch values:\r\n    # * official release: nil\r\n    # * stable branch:    stable\r\n    # * trunk:            devel\r\n    BRANCH = &#039;stable&#039;\r\n</pre>\r\n\r\n<h3>Redmineのバージョンを管理画面から確認する</h3>\r\n管理者権限を持ったユーザーで「<b>管理</b>」→「<b>情報</b>」画面を開く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/faq/system_management/redmine-version/\">使用中のRedmineのバージョンを確認する | Redmine.JP</a>\r\n</ul>','Redmineのバージョンを確認する','','publish','open','open','','redmine%e3%81%ae%e3%83%90%e3%83%bc%e3%82%b8%e3%83%a7%e3%83%b3%e3%82%92%e7%a2%ba%e8%aa%8d%e3%81%99%e3%82%8b','','','2013-01-20 16:56:27','2013-01-20 07:56:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=596',0,'post','',0),(597,1,'2013-01-20 16:50:32','2013-01-20 07:50:32','バージョン確認の方法「ソースから確認する」方法と「管理画面から確認する」方法と2種類ある。\n\n<h3>Redmineのバージョンをソースから確認する</h3>\n「<b>redmine_dir/lib/redmine/version.rb</b>」にバージョンが記述されているファイルがある。\n<pre class=\"brush: bash\">\ncd redmine_dir/lib/redmine/\ncat version.rb\nrequire &#039;rexml/document&#039;\n\nmodule Redmine\n  module VERSION #:nodoc:\n    MAJOR = 2\n    MINOR = 1\n    TINY  = 6\n\n    # Branch values:\n    # * official release: nil\n    # * stable branch:    stable\n    # * trunk:            devel\n    BRANCH = &#039;stable&#039;\n</pre>\n\n<h3>Redmineのバージョンを管理画面から確認する</h3>\n管理者権限を持ったユーザーで「管理」→「情報」画面を開く。\n\n<h3>参考サイト</h3>\n使用中のRedmineのバージョンを確認する','Redmineのバージョンを確認する','','inherit','open','open','','596-revision','','','2013-01-20 16:50:32','2013-01-20 07:50:32','',596,'http://49.212.213.226/wordpress/solution-log/?p=597',0,'revision','',0),(598,1,'2013-01-20 16:51:32','2013-01-20 07:51:32','バージョン確認の方法「ソースから確認する」方法と「管理画面から確認する」方法と2種類ある。\n\n<h3>Redmineのバージョンをソースから確認する</h3>\n「<b>redmine_dir/lib/redmine/version.rb</b>」にバージョンが記述されているファイルがある。\n<pre class=\"brush: bash\">\ncd redmine_dir/lib/redmine/\ncat version.rb\nrequire &#039;rexml/document&#039;\n\nmodule Redmine\n  module VERSION #:nodoc:\n    MAJOR = 2\n    MINOR = 1\n    TINY  = 6\n\n    # Branch values:\n    # * official release: nil\n    # * stable branch:    stable\n    # * trunk:            devel\n    BRANCH = &#039;stable&#039;\n</pre>\n\n<h3>Redmineのバージョンを管理画面から確認する</h3>\n管理者権限を持ったユーザーで「管理」→「情報」画面を開く。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://redmine.jp/faq/system_management/redmine-version/\">使用中のRedmineのバージョンを確認する | Redmine.JP</a>\n</ul>','Redmineのバージョンを確認する','','inherit','open','open','','596-revision-2','','','2013-01-20 16:51:32','2013-01-20 07:51:32','',596,'http://49.212.213.226/wordpress/solution-log/?p=598',0,'revision','',0),(599,1,'2013-01-20 16:52:40','2013-01-20 07:52:40','Redmineのバージョンを確認するには「<b>ソースから確認する</b>」方法と「<b>管理画面から確認する</b>」方法と2種類ある。\r\n\r\n<h3>Redmineのバージョンをソースから確認する</h3>\r\n「<b>redmine_dir/lib/redmine/version.rb</b>」にバージョンが記述されているファイルがある。\r\n<pre class=\"brush: bash\">\r\ncd redmine_dir/lib/redmine/\r\ncat version.rb\r\nrequire &#039;rexml/document&#039;\r\n\r\nmodule Redmine\r\n  module VERSION #:nodoc:\r\n    MAJOR = 2\r\n    MINOR = 1\r\n    TINY  = 6\r\n\r\n    # Branch values:\r\n    # * official release: nil\r\n    # * stable branch:    stable\r\n    # * trunk:            devel\r\n    BRANCH = &#039;stable&#039;\r\n</pre>\r\n\r\n<h3>Redmineのバージョンを管理画面から確認する</h3>\r\n管理者権限を持ったユーザーで「管理」→「情報」画面を開く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/faq/system_management/redmine-version/\">使用中のRedmineのバージョンを確認する | Redmine.JP</a>\r\n</ul>','Redmineのバージョンを確認する','','inherit','open','open','','596-revision-3','','','2013-01-20 16:52:40','2013-01-20 07:52:40','',596,'http://49.212.213.226/wordpress/solution-log/?p=599',0,'revision','',0),(600,1,'2013-01-20 16:55:22','2013-01-20 07:55:22','Redmineのバージョンを確認するには「<b>ソースから確認する</b>」方法と「<b>管理画面から確認する</b>」方法と2種類ある。\r\n\r\n<h3>Redmineのバージョンをソースから確認する</h3>\r\n「<b>redmine_dir/lib/redmine/version.rb</b>」にバージョンが記述されているファイルがある。\r\n<pre class=\"brush: bash\">\r\ncd redmine_dir/lib/redmine/\r\ncat version.rb\r\nrequire &#039;rexml/document&#039;\r\n\r\nmodule Redmine\r\n  module VERSION #:nodoc:\r\n    MAJOR = 2\r\n    MINOR = 2\r\n    TINY  = 1\r\n\r\n    # Branch values:\r\n    # * official release: nil\r\n    # * stable branch:    stable\r\n    # * trunk:            devel\r\n    BRANCH = &#039;stable&#039;\r\n</pre>\r\n\r\n<h3>Redmineのバージョンを管理画面から確認する</h3>\r\n管理者権限を持ったユーザーで「管理」→「情報」画面を開く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/faq/system_management/redmine-version/\">使用中のRedmineのバージョンを確認する | Redmine.JP</a>\r\n</ul>','Redmineのバージョンを確認する','','inherit','open','open','','596-revision-4','','','2013-01-20 16:55:22','2013-01-20 07:55:22','',596,'http://49.212.213.226/wordpress/solution-log/?p=600',0,'revision','',0),(601,1,'2013-01-20 16:39:22','2013-01-20 07:39:22','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.1-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-20 16:39:22','2013-01-20 07:39:22','',190,'http://49.212.213.226/wordpress/solution-log/?p=601',0,'revision','',0),(602,1,'2013-01-20 17:01:04','2013-01-20 08:01:04','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-20 17:01:04','2013-01-20 08:01:04','',190,'http://49.212.213.226/wordpress/solution-log/?p=602',0,'revision','',0),(603,1,'2013-01-20 18:08:02','2013-01-20 09:08:02','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-20 18:08:02','2013-01-20 09:08:02','',190,'http://49.212.213.226/wordpress/solution-log/?p=603',0,'revision','',0),(604,1,'2013-01-20 18:22:15','2013-01-20 09:22:15','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\n<pre class=\"brush: bash\">\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# MySQLを起動する\r\nservice mysqld start\r\n# WEBrick起動する\r\nruby /var/lib/redmine-2.2.0/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-20 18:22:15','2013-01-20 09:22:15','',190,'http://49.212.213.226/wordpress/solution-log/?p=604',0,'revision','',0),(605,1,'2013-01-20 23:51:08','2013-01-20 14:51:08','Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。調べてみるとファイルを添付したチケットを作成するときにInternal Errorがでるようだ。どうやら権限の設定がうまくいって無かったらしい。\r\n\r\n<h3>Redmineインストールディレクトリの権限を変更する</h3>\r\n標準だとrootになっているので、これをApacheに変更する\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\nまたPassengerの設定によっては「www-data」に変更する必要があるみたいだ。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/tech_note/apache-passenger/\">Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP</a>\r\n<li><a href=\"http://www.redmine.org/boards/2/topics/14105\">Uploading files/documents fails - Redmine</a>\r\n<li><a href=\"http://us.generation-nt.com/bug-575462-redmine-plus-apache2-shows-permission-error-access-redmine-default-session-yml-help-196674531.html\">Bug#575462: redmine + apache2 shows permission error to access  /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</a>\r\n</ul>','Redmineでチケットが新規作成出来ない','','publish','open','open','','redmine%e3%81%a7%e3%83%81%e3%82%b1%e3%83%83%e3%83%88%e3%81%8c%e6%96%b0%e8%a6%8f%e4%bd%9c%e6%88%90%e5%87%ba%e6%9d%a5%e3%81%aa%e3%81%84','','','2013-01-21 00:02:34','2013-01-20 15:02:34','',0,'http://49.212.213.226/wordpress/solution-log/?p=605',0,'post','',0),(606,1,'2013-01-20 23:43:56','2013-01-20 14:43:56','Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。どうやら権限の設定がうまくいって無かったらしい。\n\n<h3>Redmineインストールディレクトリの権限を変更する</h3>\n標準だとrootになっているので、これをApacheに変更する\n<pre class=\"brush: bash\">\nchown -R apache:apache /var/lib/redmine\n</pre>\nまたPassengerの設定によっては「www-data」に変更する必要があるみたいだ。\n\n<h3>参考サイト</h3>\n<ul>\n<li>http://redmine.jp/tech_note/apache-passenger/\n<li><a href=\"http://www.redmine.org/boards/2/topics/14105\">Uploading files/documents fails - Redmine</a>\n<li><a href=\"http://us.generation-nt.com/bug-575462-redmine-plus-apache2-shows-permission-error-access-redmine-default-session-yml-help-196674531.html\">Bug#575462: redmine + apache2 shows permission error to access  /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</a>\n</ul>','Redmineでチケットが新規作成出来ない','','inherit','open','open','','605-revision','','','2013-01-20 23:43:56','2013-01-20 14:43:56','',605,'http://49.212.213.226/wordpress/solution-log/?p=606',0,'revision','',0),(607,1,'2013-01-20 23:44:56','2013-01-20 14:44:56','Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。どうやら権限の設定がうまくいって無かったらしい。\n\n<h3>Redmineインストールディレクトリの権限を変更する</h3>\n標準だとrootになっているので、これをApacheに変更する\n<pre class=\"brush: bash\">\nchown -R apache:apache /var/lib/redmine\n</pre>\nまたPassengerの設定によっては「www-data」に変更する必要があるみたいだ。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://redmine.jp/tech_note/apache-passenger/\">Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP</a>\n<li><a href=\"http://www.redmine.org/boards/2/topics/14105\">Uploading files/documents fails - Redmine</a>\n<li><a href=\"http://us.generation-nt.com/bug-575462-redmine-plus-apache2-shows-permission-error-access-redmine-default-session-yml-help-196674531.html\">Bug#575462: redmine + apache2 shows permission error to access  /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</a>\n</ul>','Redmineでチケットが新規作成出来ない','','inherit','open','open','','605-revision-2','','','2013-01-20 23:44:56','2013-01-20 14:44:56','',605,'http://49.212.213.226/wordpress/solution-log/?p=607',0,'revision','',0),(608,1,'2013-01-20 23:54:58','2013-01-20 14:54:58','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\nまた<a href=\"./?p=605\">Redmineインストールディレクトリの権限の設定</a>も行う事。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-autosave','','','2013-01-20 23:54:58','2013-01-20 14:54:58','',459,'http://49.212.213.226/wordpress/solution-log/?p=608',0,'revision','',0),(609,1,'2013-01-02 10:26:10','2013-01-02 01:26:10','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-6','','','2013-01-02 10:26:10','2013-01-02 01:26:10','',459,'http://49.212.213.226/wordpress/solution-log/?p=609',0,'revision','',0),(610,1,'2013-01-20 23:51:08','2013-01-20 14:51:08','Redmineでチケットを新たに作成しようと思ったらInternal Errorに遭遇した。どうやら権限の設定がうまくいって無かったらしい。\r\n\r\n<h3>Redmineインストールディレクトリの権限を変更する</h3>\r\n標準だとrootになっているので、これをApacheに変更する\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\nまたPassengerの設定によっては「www-data」に変更する必要があるみたいだ。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/tech_note/apache-passenger/\">Apache上でRuby on Railsアプリケーションを動かす／Passenger(mod_rails for Apache)の利用 | Redmine.JP</a>\r\n<li><a href=\"http://www.redmine.org/boards/2/topics/14105\">Uploading files/documents fails - Redmine</a>\r\n<li><a href=\"http://us.generation-nt.com/bug-575462-redmine-plus-apache2-shows-permission-error-access-redmine-default-session-yml-help-196674531.html\">Bug#575462: redmine + apache2 shows permission error to access  /etc/redmine/default/session.yml, help, FAQ, forums, question, answer, advice, opinion and howto for Windows, Linux and Mac OS X</a>\r\n</ul>','Redmineでチケットが新規作成出来ない','','inherit','open','open','','605-revision-3','','','2013-01-20 23:51:08','2013-01-20 14:51:08','',605,'http://49.212.213.226/wordpress/solution-log/?p=610',0,'revision','',0),(611,1,'2012-12-16 01:15:06','2012-12-15 16:15:06','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認</h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-12','','','2012-12-16 01:15:06','2012-12-15 16:15:06','',165,'http://49.212.213.226/wordpress/solution-log/?p=611',0,'revision','',0),(612,1,'2013-01-21 03:56:08','2013-01-20 18:56:08','git-revertでコミット履歴を消せるらしい。。。\r\nhttp://www.kernel.org/pub/software/scm/git/docs/git-revert.html\r\n\r\n参考サイト\r\nhttp://labs.timedia.co.jp/2011/02/git-various-undo.html','Gitメモ','','publish','open','open','','git%e3%83%a1%e3%83%a2','','','2013-01-21 03:56:08','2013-01-20 18:56:08','',0,'http://49.212.213.226/wordpress/solution-log/?p=612',0,'post','',0),(613,1,'2013-01-21 03:56:04','2013-01-20 18:56:04','git-revertでコミット履歴を消せるらしい。。。\nhttp://www.kernel.org/pub/software/scm/git/docs/git-revert.html\n\n参考サイト\nhttp://labs.timedia.co.jp/2011/02/git-various-undo.html','Gitメモ','','inherit','open','open','','612-revision','','','2013-01-21 03:56:04','2013-01-20 18:56:04','',612,'http://49.212.213.226/wordpress/solution-log/?p=613',0,'revision','',0),(617,1,'2013-01-19 01:00:39','2013-01-18 16:00:39','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-37','','','2013-01-19 01:00:39','2013-01-18 16:00:39','',187,'http://49.212.213.226/wordpress/solution-log/?p=617',0,'revision','',0),(618,1,'2013-01-22 14:37:29','2013-01-22 05:37:29','さくらのVPS上でWindows XPを動かそうと思い、いろいろと画策中。。。\r\n\r\nhttp://dharry.hatenablog.com/entry/20090912/1252690650\r\n\r\nhttp://www.howtoforge.com/vmware_server_centos5.0\r\n\r\nhttp://morishige.jp/blog/archives/43','CentOS6.3にVMware Playerをインストールする','','publish','open','open','','centos6-3%e3%81%abvmware-player%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-01-22 14:37:29','2013-01-22 05:37:29','',0,'http://49.212.213.226/wordpress/solution-log/?p=618',0,'post','',0),(620,1,'2013-01-22 13:46:52','2013-01-22 04:46:52','さくらのVPS上でWindows XPを動かそうと思い、いろいろと画策中。。。\n\nhttp://dharry.hatenablog.com/entry/20090912/1252690650','CentOS6.3にVMware Playerをインストールする','','inherit','open','open','','618-revision','','','2013-01-22 13:46:52','2013-01-22 04:46:52','',618,'http://49.212.213.226/wordpress/solution-log/?p=620',0,'revision','',0),(621,1,'2013-01-22 14:04:21','2013-01-22 05:04:21','さくらのVPS上でWindows XPを動かそうと思い、いろいろと画策中。。。\r\n\r\nhttp://dharry.hatenablog.com/entry/20090912/1252690650\r\n\r\nhttp://www.howtoforge.com/vmware_server_centos5.0','CentOS6.3にVMware Playerをインストールする','','inherit','open','open','','618-revision-2','','','2013-01-22 14:04:21','2013-01-22 05:04:21','',618,'http://49.212.213.226/wordpress/solution-log/?p=621',0,'revision','',0),(622,1,'2013-01-25 22:50:04','2013-01-25 13:50:04','<a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">さくらの公式サイト</a>によると、どうやら初期設定で変更をかける必要があるらしい。\r\n\r\n<h3>ethtoolコマンドでtcp segmentation offloadをoffにする</h3>\r\n<pre class=\"brush: bash\">\r\nethtool -K eth0 tso off\r\nethtool -k eth0\r\nOffload parameters for eth0:\r\nrx-checksumming: on\r\ntx-checksumming: on\r\nscatter-gather: on\r\ntcp-segmentation-offload: off # onからoffになった\r\nudp-fragmentation-offload: on\r\ngeneric-segmentation-offload: on\r\ngeneric-receive-offload: off\r\nlarge-receive-offload: off\r\n</pre>\r\n\r\n<h3>reboot時にも設定を有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/udev/rules.d/50-eth_tso.rules\r\n# 以下の内容を記述\r\nACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth0&quot;, RUN+=&quot;/sbin/ethtool -K eth0 tso off&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/laranjeiras/20101120\">1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 - 橙工房 Atelier Laranjeiras</a>\r\n<li><a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">[001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search - さくらインターネット</a>\r\n</ul>','さくらのVPSで回線速度が遅くアクセスに時間がかかる','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%a7%e5%9b%9e%e7%b7%9a%e9%80%9f%e5%ba%a6%e3%81%8c%e9%81%85%e3%81%8f%e3%82%a2%e3%82%af%e3%82%bb%e3%82%b9%e3%81%ab%e6%99%82%e9%96%93%e3%81%8c%e3%81%8b','','','2013-01-26 02:32:12','2013-01-25 17:32:12','',0,'http://49.212.213.226/wordpress/solution-log/?p=622',0,'post','',0),(623,1,'2013-01-25 22:49:34','2013-01-25 13:49:34','<a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">さくらの公式サイト</a>によると、どうやら初期設定で変更をかける必要があるらしい。\n\n<h3>ethtoolコマンドでtcp segmentation offloadをoffにする</h3>\n<pre class=\"brush: bash\">\nethtool -K eth0 tso off\nethtool -k eth0\nOffload parameters for eth0:\nrx-checksumming: on\ntx-checksumming: on\nscatter-gather: on\ntcp-segmentation-offload: off # onからoffになった\nudp-fragmentation-offload: on\ngeneric-segmentation-offload: on\ngeneric-receive-offload: off\nlarge-receive-offload: off\n</pre>\n\n<h3>reboot時にも設定を有効にする</h3>\n<pre class=\"brush: bash\">\nvi /etc/udev/rules.d/50-eth_tso.rules\n# 以下の内容を記述\nACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth0&quot;, RUN+=&quot;/sbin/ethtool -K eth0 tso off&quot;\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li>1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 - 橙工房 Atelier Laranjeiras\n<li><a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">[001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search - さくらインターネット</a>\n</ul>','さくらのVPSで回線速度が遅くアクセスに時間がかかる','','inherit','open','open','','622-revision','','','2013-01-25 22:49:34','2013-01-25 13:49:34','',622,'http://49.212.213.226/wordpress/solution-log/?p=623',0,'revision','',0),(624,1,'2013-01-25 22:49:42','2013-01-25 13:49:42','<a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">さくらの公式サイト</a>によると、どうやら初期設定で変更をかける必要があるらしい。\r\n\r\n<h3>ethtoolコマンドでtcp segmentation offloadをoffにする</h3>\r\n<pre class=\"brush: bash\">\r\nethtool -K eth0 tso off\r\nethtool -k eth0\r\nOffload parameters for eth0:\r\nrx-checksumming: on\r\ntx-checksumming: on\r\nscatter-gather: on\r\ntcp-segmentation-offload: off # onからoffになった\r\nudp-fragmentation-offload: on\r\ngeneric-segmentation-offload: on\r\ngeneric-receive-offload: off\r\nlarge-receive-offload: off\r\n</pre>\r\n\r\n<h3>reboot時にも設定を有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/udev/rules.d/50-eth_tso.rules\r\n# 以下の内容を記述\r\nACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth0&quot;, RUN+=&quot;/sbin/ethtool -K eth0 tso off&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/laranjeiras/20101120/p\">1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 - 橙工房 Atelier Laranjeiras</a>\r\n<li><a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">[001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search - さくらインターネット</a>\r\n</ul>','さくらのVPSで回線速度が遅くアクセスに時間がかかる','','inherit','open','open','','622-revision-2','','','2013-01-25 22:49:42','2013-01-25 13:49:42','',622,'http://49.212.213.226/wordpress/solution-log/?p=624',0,'revision','',0),(626,1,'2013-01-26 02:32:04','2013-01-25 17:32:04','<a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">さくらの公式サイト</a>によると、どうやら初期設定で変更をかける必要があるらしい。\r\n\r\n<h3>ethtoolコマンドでtcp segmentation offloadをoffにする</h3>\r\n<pre class=\"brush: bash\">\r\nethtool -K eth0 tso off\r\nethtool -k eth0\r\nOffload parameters for eth0:\r\nrx-checksumming: on\r\ntx-checksumming: on\r\nscatter-gather: on\r\ntcp-segmentation-offload: off # onからoffになった\r\nudp-fragmentation-offload: on\r\ngeneric-segmentation-offload: on\r\ngeneric-receive-offload: off\r\nlarge-receive-offload: off\r\n</pre>\r\n\r\n<h3>reboot時にも設定を有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/udev/rules.d/50-eth_tso.rules\r\n# 以下の内容を記述\r\nACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth0&quot;, RUN+=&quot;/sbin/ethtool -K eth0 tso off&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/laranjeiras/20101120\">1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 - 橙工房 Atelier Laranjeiras</a>\r\n<li><a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">[001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search - さくらインターネット</a>\r\n</ul>','さくらのVPSで回線速度が遅くアクセスに時間がかかる','','inherit','open','open','','622-autosave','','','2013-01-26 02:32:04','2013-01-25 17:32:04','',622,'http://49.212.213.226/wordpress/solution-log/?p=626',0,'revision','',0),(627,1,'2013-01-25 22:50:04','2013-01-25 13:50:04','<a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">さくらの公式サイト</a>によると、どうやら初期設定で変更をかける必要があるらしい。\r\n\r\n<h3>ethtoolコマンドでtcp segmentation offloadをoffにする</h3>\r\n<pre class=\"brush: bash\">\r\nethtool -K eth0 tso off\r\nethtool -k eth0\r\nOffload parameters for eth0:\r\nrx-checksumming: on\r\ntx-checksumming: on\r\nscatter-gather: on\r\ntcp-segmentation-offload: off # onからoffになった\r\nudp-fragmentation-offload: on\r\ngeneric-segmentation-offload: on\r\ngeneric-receive-offload: off\r\nlarge-receive-offload: off\r\n</pre>\r\n\r\n<h3>reboot時にも設定を有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/udev/rules.d/50-eth_tso.rules\r\n# 以下の内容を記述\r\nACTION==&quot;add&quot;, SUBSYSTEM==&quot;net&quot;, KERNEL==&quot;eth0&quot;, RUN+=&quot;/sbin/ethtool -K eth0 tso off&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/laranjeiras/20101120/p\">1TSOが原因でさくらVPSへのウェブアクセスが異常に遅くなるトラブルに遭遇 - 橙工房 Atelier Laranjeiras</a>\r\n<li><a href=\"http://sakura.cb-faq.com/faq/public/app/servlet/qadoc?QID=001387\">[001387]さくらのVPSで「CentOS」を利用していますが、回線速度が遅くアクセスに時間がかかります。 | FAQ Search - さくらインターネット</a>\r\n</ul>','さくらのVPSで回線速度が遅くアクセスに時間がかかる','','inherit','open','open','','622-revision-3','','','2013-01-25 22:50:04','2013-01-25 13:50:04','',622,'http://49.212.213.226/wordpress/solution-log/?p=627',0,'revision','',0),(630,1,'2013-01-27 04:06:48','2013-01-26 19:06:48','','130127_0408','','inherit','open','open','','130127_0408','','','2013-01-27 04:06:48','2013-01-26 19:06:48','',0,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/01/130127_0408.jpg',0,'attachment','image/jpeg',0),(638,1,'2013-01-27 05:42:02','2013-01-26 20:42:02','どうもシェルスクリプトのテストを書いちゃった方が作業が速い気がして来たのでshunit2を調べてテストを書いてみる事にした。スクリプト言語だとブラウザで確認した方が速かったが、シェルスクリプトは待ち時間も長いし、一回発動させるとteardownに使う時間ももったいない。\r\n\r\nhttp://d.hatena.ne.jp/kaakaa_hoe/20120908\r\nhttp://code.google.com/p/shunit2/','シェルスクリプトのテストを書く','','publish','open','open','','%e3%82%b7%e3%82%a7%e3%83%ab%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88%e3%81%ae%e3%83%86%e3%82%b9%e3%83%88%e3%82%92%e6%9b%b8%e3%81%8f','','','2013-01-27 05:42:02','2013-01-26 20:42:02','',0,'http://49.212.213.226/wordpress/solution-log/?p=638',0,'post','',0),(639,1,'2013-01-27 05:41:34','2013-01-26 20:41:34','どうもシェルスクリプトのテストを書いちゃった方が作業が速い気がして来たのでshunit2を調べてテストを書いてみる事にした。スクリプト言語だとブラウザで確認した方が速かったが、シェルスクリプトは待ち時間も長いし、一回発動させるとteardownに使う時間ももったいない。\n\nhttp://d.hatena.ne.jp/kaakaa_hoe/20120908\nhttp://code.google.com/p/shunit2/','シェルスクリプトのテストを書く','','inherit','open','open','','638-revision','','','2013-01-27 05:41:34','2013-01-26 20:41:34','',638,'http://49.212.213.226/wordpress/solution-log/?p=639',0,'revision','',0),(640,1,'2013-01-27 20:31:02','2013-01-27 11:31:02','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror ssh://{user}@{yourdomain}:{port}/var/git/{git-repo}\r\n</pre>\r\n<del datetime=\"2013-04-29T04:44:58+00:00\">SSHのポート番号を変更している場合は『<b>/etc/ssh/ssh_config</b>』でポート番号の設定を変更しておく。</del>\r\n\r\n\r\n<h3>ローカルにリモートリポジトリをCLONEする</h3>\r\n初期設定だとSSHで取得することになっている。ローカルでリモートリポジトリを取得するには\r\n<pre class=\"brush: bash\">\r\n# リポジトリをダウンロードするディレクトリに移動\r\ncd /repodir\r\ngit clone ssh://{user}@{yourdomain}:{port}/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n<li><a href=\"http://gom.hatenablog.com/entry/20080907/1220767941\">Gitリポジトリにポートを指定してSSHで接続する - gom68の日記</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','publish','open','open','','%e3%83%ad%e3%83%bc%e3%82%ab%e3%83%ab%e3%81%a7%e4%bd%9c%e6%88%90%e3%81%97%e3%81%9fgit%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%82%92%e3%83%aa%e3%83%a2%e3%83%bc%e3%83%88%e3%81%b8%e3%83%97','','','2013-04-29 13:47:22','2013-04-29 04:47:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=640',0,'post','',0),(641,1,'2013-01-27 20:27:15','2013-01-27 11:27:15','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\n<pre class=\"brush: bash\">\nremote: error: refusing to update checked out branch: refs/heads/master\nremote: error: By default, updating the current branch in a non-bare repository\nremote: error: is denied, because it will make the index and work tree inconsistent\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\nremote: error: the work tree to HEAD.\nremote: error: \nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\nremote: error: its current branch; however, this is not recommended unless you\nremote: error: arranged to update its work tree to match what you pushed in some\nremote: error: other way.\nremote: error: \nremote: error: To squelch this message and still keep the default behaviour, set\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\n</pre>\n\n<h3>リモートにGitリポジトリを作成する</h3>\n共有リポジトリを作成するにはオプションを設定する\n<pre class=\"brush: bash\">\nmkdir git-repo\ncd git-repo\ngit init --bare --shared\n</pre>\n\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\n<pre class=\"brush: bash\">\ncd git-repo\ngit push --mirror {user}@ips:/var/git/{git-repo}\n\n<h3>参考サイト</h3>\nhttp://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision','','','2013-01-27 20:27:15','2013-01-27 11:27:15','',640,'http://49.212.213.226/wordpress/solution-log/?p=641',0,'revision','',0),(642,1,'2013-01-27 20:29:15','2013-01-27 11:29:15','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\n<pre class=\"brush: bash\">\nremote: error: refusing to update checked out branch: refs/heads/master\nremote: error: By default, updating the current branch in a non-bare repository\nremote: error: is denied, because it will make the index and work tree inconsistent\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\nremote: error: the work tree to HEAD.\nremote: error: \nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\nremote: error: its current branch; however, this is not recommended unless you\nremote: error: arranged to update its work tree to match what you pushed in some\nremote: error: other way.\nremote: error: \nremote: error: To squelch this message and still keep the default behaviour, set\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\n</pre>\n\n<h3>リモートにGitリポジトリを作成する</h3>\n共有リポジトリを作成するにはオプションを設定する\n<pre class=\"brush: bash\">\nmkdir git-repo\ncd git-repo\ngit init --bare --shared\n</pre>\n\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\n<pre class=\"brush: bash\">\ncd git-repo\ngit push --mirror {user}@ips:/var/git/{git-repo}\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-2','','','2013-01-27 20:29:15','2013-01-27 11:29:15','',640,'http://49.212.213.226/wordpress/solution-log/?p=642',0,'revision','',0),(643,1,'2013-01-27 20:29:59','2013-01-27 11:29:59','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror {user}@ips:/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-3','','','2013-01-27 20:29:59','2013-01-27 11:29:59','',640,'http://49.212.213.226/wordpress/solution-log/?p=643',0,'revision','',0),(644,1,'2013-01-27 20:30:53','2013-01-27 11:30:53','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror {user}@{yourdomain}:/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-4','','','2013-01-27 20:30:53','2013-01-27 11:30:53','',640,'http://49.212.213.226/wordpress/solution-log/?p=644',0,'revision','',0),(646,1,'2013-02-02 13:26:45','2013-02-02 04:26:45','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる このコマンドは無効化も知れない\r\nyum groupinstall &quot;Desktop&quot; &quot;Desktop Platform&quot; &quot;General Purpose Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;;\r\n</pre>\r\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nsudo service vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\nポートフォワーディングについては<a href=\"./?p=687\">別エントリー</a>で。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n<a href=\"http://morrey22.hatenablog.com/entry/2013/04/14/212837\">CUIで入れたCentOS6にGUIを追加する - 東の森</a>\r\n</ul>','さくらのVPSでVNCを起動する','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%a7vnc%e3%82%92%e8%b5%b7%e5%8b%95%e3%81%99%e3%82%8b','','','2015-04-28 00:47:50','2015-04-27 15:47:50','',0,'http://49.212.213.226/wordpress/solution-log/?p=646',0,'post','',0),(647,1,'2013-02-02 13:11:21','2013-02-02 04:11:21','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\n\n<h3>1. 必要なパッケージのインストール</h3>\n<h4>サーバ</h4>\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\n<pre class=\"brush: bash\">\nyum install tigervnc-server\nyum groupinstall Desktop\n</pre>\n<h4>クライアント</h4>\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\n<pre class=\"brush: bash\">\nyum install vnc\n</pre>\n\n<h3>VNCサーバの設定</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加\nVNCSERVERS=&quot;1:vncuser&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\n</pre>\n複数ユーザを設定する場合は\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\n</pre>\n\n<h3>VNCユーザの設定</h3>\n<pre class=\"brush: bash\">\nvncpasswd &lt;enter&gt;\nPassword: ****** &lt;enter&gt;\nVerify: ***** &lt;enter&gt;\n</pre>\n\n<h3>パケットフィルタリングの設定</h3>\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/iptables\n# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n# 追記\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\n# 追記終了\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n# iptablesサービスを再起動する\nservice iptables restart\n</pre>\n\n<h3>VNCサービスの起動</h3>\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。\n<pre class=\"brush: bash\">\nservice vncserver start\n/etc/init.d/messagebus start\n</pre>\n\n<h3>クライアントからVNCを使う</h3>\nクライアントがCentOS6の場合は\n\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\n\nF8でフルスクリーンモードの切り替え設定がかの','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 13:11:21','2013-02-02 04:11:21','',646,'http://49.212.213.226/wordpress/solution-log/?p=647',0,'revision','',0),(648,1,'2013-02-02 13:12:21','2013-02-02 04:12:21','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\n\n<h3>1. 必要なパッケージのインストール</h3>\n<h4>サーバ</h4>\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\n<pre class=\"brush: bash\">\nyum install tigervnc-server\nyum groupinstall Desktop\n</pre>\n<h4>クライアント</h4>\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\n<pre class=\"brush: bash\">\nyum install vnc\n</pre>\n\n<h3>VNCサーバの設定</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加\nVNCSERVERS=&quot;1:vncuser&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\n</pre>\n複数ユーザを設定する場合は\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\n</pre>\n\n<h3>VNCユーザの設定</h3>\n<pre class=\"brush: bash\">\nvncpasswd &lt;enter&gt;\nPassword: ****** &lt;enter&gt;\nVerify: ***** &lt;enter&gt;\n</pre>\n\n<h3>パケットフィルタリングの設定</h3>\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/iptables\n# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n# 追記\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\n# 追記終了\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n# iptablesサービスを再起動する\nservice iptables restart\n</pre>\n\n<h3>VNCサービスの起動</h3>\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。\n<pre class=\"brush: bash\">\nservice vncserver start\n/etc/init.d/messagebus start\n</pre>\n\n<h3>クライアントからVNCを使う</h3>\nクライアントがCentOS6の場合は\n\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\n\nF8でフルスクリーンモードの切り替え設定が可能になる\n\n\n<h3>参考サイト</h3>\n','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 13:12:21','2013-02-02 04:12:21','',646,'http://49.212.213.226/wordpress/solution-log/?p=648',0,'revision','',0),(649,1,'2013-02-02 13:26:06','2013-02-02 04:26:06','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nクライアントがCentOS6の場合は\r\n\r\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\r\n\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 13:26:06','2013-02-02 04:26:06','',646,'http://49.212.213.226/wordpress/solution-log/?p=649',0,'revision','',0),(651,1,'2015-04-28 00:47:18','2015-04-27 15:47:18','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\n\n<h3>1. 必要なパッケージのインストール</h3>\n<h4>サーバ</h4>\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\n<pre class=\"brush: bash\">\nyum install tigervnc-server\nyum groupinstall &quot;Desktop&quot;;\nyum install -y gnome*  # システムモニターなどが使えるようになる このコマンドは無効化も知れない\nyum groupinstall &quot;Desktop&quot; &quot;Desktop Platform&quot; &quot;General Purpose Desktop&quot;\nyum groupinstall &quot;X Window System&quot;;\n</pre>\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\n<h4>クライアント</h4>\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\n<pre class=\"brush: bash\">\nyum install vnc\n</pre>\n\n<h3>VNCサーバの設定</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\nVNCSERVERS=&quot;1:vncuser&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\n</pre>\n複数ユーザを設定する場合は\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\n</pre>\n\n<h3>VNCユーザの設定</h3>\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\n<pre class=\"brush: bash\">\nsu vncuser\nvncpasswd &lt;enter&gt;\nPassword: ****** &lt;enter&gt;\nVerify: ***** &lt;enter&gt;\n</pre>\n\n<h3>パケットフィルタリングの設定</h3>\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/iptables\n# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n# 追記\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\n# 追記終了\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n# iptablesサービスを再起動する\nservice iptables restart\n</pre>\n\n<h3>VNCサービスの起動</h3>\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\n<pre class=\"brush: bash\">\nsudo service vncserver start\n/etc/init.d/messagebus start\n</pre>\n\n<h3>クライアントからVNCを使う</h3>\nF8でフルスクリーンモードの切り替え設定が可能になる\n\n<h4>デスクトップから起動する</h4>\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\n\n<h4>端末から起動する</h3>\n<pre class=\"brush: bash\">\nvncviewer yourhost:1\n</pre>\n\nポートフォワーディングについては<a href=\"./?p=687\">別エントリー</a>で。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\n\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-autosave-v1','','','2015-04-28 00:47:18','2015-04-27 15:47:18','',646,'http://49.212.213.226/wordpress/solution-log/?p=651',0,'revision','',0),(652,1,'2013-02-02 13:26:45','2013-02-02 04:26:45','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nクライアントがCentOS6の場合は\r\n\r\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\r\n\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 13:26:45','2013-02-02 04:26:45','',646,'http://49.212.213.226/wordpress/solution-log/?p=652',0,'revision','',0),(653,1,'2013-02-02 20:16:38','2013-02-02 11:16:38','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\r\n\r\n<h3>FireFoxをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install firefox\r\n</pre>\r\n\r\n\r\n<h3>FireFoxをアップデートする</h3>\r\nremiリポジトリがインストールされているのを確認したら\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi update firefox\r\n</pre>\r\n\r\n\r\n<h3>FLASHプラグインをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n## Adobe Repository 32-bit x86 ##\r\nrpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm\r\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\r\n \r\n## Adobe Repository 64-bit x86_64 ##\r\nrpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\r\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\r\n\r\n# Update Repositories\r\nyum check-update\r\n\r\nyum install flash-plugin nspluginwrapper alsa-plugins-pulseaudio libcurl\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/nanjakkun/20111229/1325169540\">CentOS 6.2に最新版のFirefoxとFlash Playerをインストール - なんじゃくにっき</a>\r\n<li><a href=\"http://www.if-not-true-then-false.com/2010/install-adobe-flash-player-10-on-fedora-centos-red-hat-rhel/http://\">Adobe Flash Player 11.2 on Fedora 18/17, CentOS/RHEL 6.3/5.8</a>\r\n</ul>\r\n','CentOS6にFireFoxをインストールする','','publish','open','open','','centos6%e3%81%abfirefox%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-02-19 16:38:54','2013-02-19 07:38:54','',0,'http://49.212.213.226/wordpress/solution-log/?p=653',0,'post','',0),(654,1,'2013-02-02 20:15:33','2013-02-02 11:15:33','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\n\n<h3>FireFoxをインストールする</h3>\n<pre class=\"brush: bash\">\nyum install firefox\n</pre>\n\n\n<h3>FireFoxをアップデートする</h3>\nremiリポジトリがインストールされているのを確認したら\n<pre class=\"brush bash\">\nyum --enablerepo=remi update firefox\n</pre>\n\n<h3>参考サイト</h3>\nhttp://d.hatena.ne.jp/nanjakkun/20111229/1325169540\n','CentOS6にFireFoxをインストールする','','inherit','open','open','','653-revision','','','2013-02-02 20:15:33','2013-02-02 11:15:33','',653,'http://49.212.213.226/wordpress/solution-log/?p=654',0,'revision','',0),(655,1,'2013-02-02 20:16:33','2013-02-02 11:16:33','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\n\n<h3>FireFoxをインストールする</h3>\n<pre class=\"brush: bash\">\nyum install firefox\n</pre>\n\n\n<h3>FireFoxをアップデートする</h3>\nremiリポジトリがインストールされているのを確認したら\n<pre class=\"brush bash\">\nyum --enablerepo=remi update firefox\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://d.hatena.ne.jp/nanjakkun/20111229/1325169540\">CentOS 6.2に最新版の<li>FirefoxとFlash Playerをインストール - なんじゃくにっき</a>\n</ul>\n','CentOS6にFireFoxをインストールする','','inherit','open','open','','653-revision-2','','','2013-02-02 20:16:33','2013-02-02 11:16:33','',653,'http://49.212.213.226/wordpress/solution-log/?p=655',0,'revision','',0),(656,1,'2013-02-02 20:24:18','2013-02-02 11:24:18','VNC環境で日本語を使いたかったので\r\n\r\n<h3>日本語関連のパッケージをグループインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Japanese Support&quot;\r\n</pre>\r\n\r\n<h3>システムの文字セットを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/i18n\r\n# 変更\r\nLANG=&quot;ja_JP.UTF-8&quot; \r\n</pre>\r\n\r\n<h3>システムを再起動する</h3>\r\n<pre class=\"brush: bash\">\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>日本語入力をONにする</h3>\r\n<b>システム</b>→<b>設定</b>→<b>入力メソッド</b>\r\n『<b>入力メソッドの機能を有効にする</b>』にチェックを入れる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<a href=\"http://www.server-world.info/query?os=CentOS_6&p=japanese\"><li>CentOS 6 - 日本語環境にする ： Server World</a>\r\n</ul>','CentOS6を日本語環境にする','','publish','open','open','','centos6%e3%82%92%e6%97%a5%e6%9c%ac%e8%aa%9e%e7%92%b0%e5%a2%83%e3%81%ab%e3%81%99%e3%82%8b','','','2013-02-02 22:40:10','2013-02-02 13:40:10','',0,'http://49.212.213.226/wordpress/solution-log/?p=656',0,'post','',0),(657,1,'2013-02-02 20:23:29','2013-02-02 11:23:29','VNC環境で日本語を使いたかったので\n\n<h3>日本語関連のパッケージをグループインストールする</h3>\n<pre class=\"brush: bash\">\nyum -y groupinstall &quot;Japanese Support&quot;\n</pre>\n\n<h3>システムの文字セットを変更する</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/i18n\n# 変更\nLANG=&quot;ja_JP.UTF-8&quot; \n</pre>\n\n<h3>システムを再起動する</h3>\n<pre class=\"brush: bash\">\nreboot\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li>CentOS 6 - 日本語環境にする ： Server World','CentOS6を日本語環境にする','','inherit','open','open','','656-revision','','','2013-02-02 20:23:29','2013-02-02 11:23:29','',656,'http://49.212.213.226/wordpress/solution-log/?p=657',0,'revision','',0),(658,1,'2013-02-02 20:23:54','2013-02-02 11:23:54','VNC環境で日本語を使いたかったので\r\n\r\n<h3>日本語関連のパッケージをグループインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Japanese Support&quot;\r\n</pre>\r\n\r\n<h3>システムの文字セットを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/i18n\r\n# 変更\r\nLANG=&quot;ja_JP.UTF-8&quot; \r\n</pre>\r\n\r\n<h3>システムを再起動する</h3>\r\n<pre class=\"brush: bash\">\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<a href=\"http://www.server-world.info/query?os=CentOS_6&p=japanese\"><li>CentOS 6 - 日本語環境にする ： Server World</a>\r\n</ul>','CentOS6を日本語環境にする','','inherit','open','open','','656-revision-2','','','2013-02-02 20:23:54','2013-02-02 11:23:54','',656,'http://49.212.213.226/wordpress/solution-log/?p=658',0,'revision','',0),(659,1,'2013-02-02 20:03:22','2013-02-02 11:03:22','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nクライアントがCentOS6の場合は\r\n\r\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\r\n\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 20:03:22','2013-02-02 11:03:22','',646,'http://49.212.213.226/wordpress/solution-log/?p=659',0,'revision','',0),(660,1,'2013-02-02 22:39:58','2013-02-02 13:39:58','VNC環境で日本語を使いたかったので\r\n\r\n<h3>日本語関連のパッケージをグループインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Japanese Support&quot;\r\n</pre>\r\n\r\n<h3>システムの文字セットを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/i18n\r\n# 変更\r\nLANG=&quot;ja_JP.UTF-8&quot; \r\n</pre>\r\n\r\n<h3>システムを再起動する</h3>\r\n<pre class=\"brush: bash\">\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>日本語入力をONにする</h3>\r\n<b>システム</b>→<b>設定</b>→<b>入力メソッド</b>\r\n『<b>入力メソッドの機能を有効にする</b>』にチェックを入れる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<a href=\"http://www.server-world.info/query?os=CentOS_6&p=japanese\"><li>CentOS 6 - 日本語環境にする ： Server World</a>\r\n</ul>','CentOS6を日本語環境にする','','inherit','open','open','','656-autosave','','','2013-02-02 22:39:58','2013-02-02 13:39:58','',656,'http://49.212.213.226/wordpress/solution-log/?p=660',0,'revision','',0),(661,1,'2013-02-02 20:24:18','2013-02-02 11:24:18','VNC環境で日本語を使いたかったので\r\n\r\n<h3>日本語関連のパッケージをグループインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Japanese Support&quot;\r\n</pre>\r\n\r\n<h3>システムの文字セットを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/i18n\r\n# 変更\r\nLANG=&quot;ja_JP.UTF-8&quot; \r\n</pre>\r\n\r\n<h3>システムを再起動する</h3>\r\n<pre class=\"brush: bash\">\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<a href=\"http://www.server-world.info/query?os=CentOS_6&p=japanese\"><li>CentOS 6 - 日本語環境にする ： Server World</a>\r\n</ul>','CentOS6を日本語環境にする','','inherit','open','open','','656-revision-3','','','2013-02-02 20:24:18','2013-02-02 11:24:18','',656,'http://49.212.213.226/wordpress/solution-log/?p=661',0,'revision','',0),(662,1,'2013-02-02 21:17:04','2013-02-02 12:17:04','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nクライアントがCentOS6の場合は\r\n\r\nデスクトップ→アプリケーション→インターネット→TigerVNC Viewver\r\n\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-02 21:17:04','2013-02-02 12:17:04','',646,'http://49.212.213.226/wordpress/solution-log/?p=662',0,'revision','',0),(663,1,'2013-02-03 11:22:14','2013-02-03 02:22:14','<p style=\"text-align: right;\"><a href=\"/redmine/issues/190\" target=\"_blank\">Redmine参照</a></p>\r\nVNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">ssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\"># ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\n# アクセス権限を変更する\r\nchmod 600 config\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a></li>\r\n	<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a></li>\r\n	<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun\'s Blog</a></li>\r\n	<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a></li>\r\n</ul>','公開鍵秘密鍵を設定する','','publish','open','open','','%e5%85%ac%e9%96%8b%e9%8d%b5%e7%a7%98%e5%af%86%e9%8d%b5%e3%82%92%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b','','','2015-11-02 01:43:52','2015-11-01 16:43:52','',0,'http://49.212.213.226/wordpress/solution-log/?p=663',0,'post','',0),(664,1,'2013-02-03 11:21:04','2013-02-03 02:21:04','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\n\n<h3>キーペアを作成する</h3>\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\n<pre class=\"brush: bash\">\nssh-keygen -t rsa\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</pre>\n\n<h3>ログイン設定をする</h3>\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\n<pre class=\"brush: bash\">\nvi /etc/ssh/sshd_config\n\n# 以下の行のコメントを外して保存\nPubkeyAuthentication yes\nPasswordAuthentication no\n\n# SSH のサービスを再起動\n/etc/init.d/sshd restart\n</pre>\n\n<h3>ローカルに秘密鍵を保存する</h3>\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\n<pre class=\"brush: bash\">\n# ローカルPCで操作する\ncd ~/.ssh\nchmod 600 id_rsa\nvi config\n# 以下の設定を書き込む\nHost example.com\n  User sshuser\n  Port 22\n  Hostname example.com\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\n\nmv id_rasa id_rsa-sshuser\\@example.com\n</pre>\nこれでSSH接続出きるようになる\n\n<h3>参考サイト</h3>\n<a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a>\n<a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a>','公開鍵秘密鍵を設定する','','inherit','open','open','','663-revision-v1','','','2013-02-03 11:21:04','2013-02-03 02:21:04','',663,'http://49.212.213.226/wordpress/solution-log/?p=664',0,'revision','',0),(665,1,'2013-02-03 11:22:04','2013-02-03 02:22:04','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\n\n<h3>キーペアを作成する</h3>\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\n<pre class=\"brush: bash\">\nssh-keygen -t rsa\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\nchmod 600 ~/.ssh/authorized_keys\n</pre>\n\n<h3>ログイン設定をする</h3>\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\n<pre class=\"brush: bash\">\nvi /etc/ssh/sshd_config\n\n# 以下の行のコメントを外して保存\nPubkeyAuthentication yes\nPasswordAuthentication no\n\n# SSH のサービスを再起動\n/etc/init.d/sshd restart\n</pre>\n\n<h3>ローカルに秘密鍵を保存する</h3>\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\n<pre class=\"brush: bash\">\n# ローカルPCで操作する\ncd ~/.ssh\nchmod 600 id_rsa\nvi config\n# 以下の設定を書き込む\nHost example.com\n  User sshuser\n  Port 22\n  Hostname example.com\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\n\nmv id_rasa id_rsa-sshuser\\@example.com\n</pre>\nこれでSSH接続出きるようになる\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a>\n<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a>\n</ul>','公開鍵秘密鍵を設定する','','inherit','open','open','','663-revision-v1','','','2013-02-03 11:22:04','2013-02-03 02:22:04','',663,'http://49.212.213.226/wordpress/solution-log/?p=665',0,'revision','',0),(667,1,'2013-02-09 19:59:14','2013-02-09 10:59:14','Redmineが若干遅いのでチューニングを試みる。\r\n\r\n<h3>avahi-daemonを停止する</h3>\r\nCentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。\r\n<pre class=\"brush: bash\">\r\n# 起動設定を確認\r\nchkconfig --list | grep avahi-\r\navahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off\r\n# 自動で起動しないようにする\r\nchkconfig avahi-daemon off\r\n# 起動設定を確認\r\nchkconfig --list | grep avahi-\r\navahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off\r\n\r\nreboot\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/z3100/20110821/1313898326\">Windows7でRedmineが異様に遅い - 3100</a>\r\n<li><a href=\"http://blog.goo.ne.jp/takuminews/e/34b8038fef21e264b9ef39d9c7cec08d\">Fedora/RHEL/CentOS等でのavahi-daemonの停止 - 情報技術の四方山話</a>\r\n</ul>','Redmineのパフォーマンスチューニング','','publish','open','open','','redmine%e3%81%ae%e3%83%91%e3%83%95%e3%82%a9%e3%83%bc%e3%83%9e%e3%83%b3%e3%82%b9%e3%83%81%e3%83%a5%e3%83%bc%e3%83%8b%e3%83%b3%e3%82%b0','','','2013-02-09 19:59:14','2013-02-09 10:59:14','',0,'http://49.212.213.226/wordpress/solution-log/?p=667',0,'post','',0),(668,1,'2013-02-09 19:57:49','2013-02-09 10:57:49','Redmineが若干遅いのでチューニングを試みる。\n\n<h3>avahi-daemonを停止する</h3>\nCentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。\n<pre class=\"brush: bash\">\n# 起動設定を確認\nchkconfig --list | grep avahi-\navahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off\n# 自動で起動しないようにする\nchkconfig avahi-daemon off\n# 起動設定を確認\nchkconfig --list | grep avahi-\navahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off\n\nreboot\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li>Windows7でRedmineが異様に遅い - 3100\n<li>\n</ul>','Redmineのパフォーマンスチューニング','','inherit','open','open','','667-revision','','','2013-02-09 19:57:49','2013-02-09 10:57:49','',667,'http://49.212.213.226/wordpress/solution-log/?p=668',0,'revision','',0),(669,1,'2013-02-09 19:58:49','2013-02-09 10:58:49','Redmineが若干遅いのでチューニングを試みる。\n\n<h3>avahi-daemonを停止する</h3>\nCentOSはディフォルトでavahi-daemonが起動するようになっているので無効にする。\n<pre class=\"brush: bash\">\n# 起動設定を確認\nchkconfig --list | grep avahi-\navahi-daemon 0:off 1:off 2:off 3:on 4:on 5:on 6:off\n# 自動で起動しないようにする\nchkconfig avahi-daemon off\n# 起動設定を確認\nchkconfig --list | grep avahi-\navahi-daemon 0:off 1:off 2:off 3:off 4:off 5:off 6:off\n\nreboot\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://d.hatena.ne.jp/z3100/20110821/1313898326\">Windows7でRedmineが異様に遅い - 3100</a>\n<li><a href=\"http://blog.goo.ne.jp/takuminews/e/34b8038fef21e264b9ef39d9c7cec08d\">Fedora/RHEL/CentOS等でのavahi-daemonの停止 - 情報技術の四方山話</a>\n</ul>','Redmineのパフォーマンスチューニング','','inherit','open','open','','667-revision-2','','','2013-02-09 19:58:49','2013-02-09 10:58:49','',667,'http://49.212.213.226/wordpress/solution-log/?p=669',0,'revision','',0),(670,1,'2013-02-12 05:08:50','2013-02-11 20:08:50','ADW.Launcherをインストールする','IS06でテサリングをする','','publish','open','open','','is06%e3%81%a7%e3%83%86%e3%82%b5%e3%83%aa%e3%83%b3%e3%82%b0%e3%82%92%e3%81%99%e3%82%8b','','','2013-02-12 05:08:50','2013-02-11 20:08:50','',0,'http://49.212.213.226/wordpress/solution-log/?p=670',0,'post','',0),(671,1,'2013-02-12 05:08:06','2013-02-11 20:08:06','AW','IS06でテサリングをする','','inherit','open','open','','670-revision','','','2013-02-12 05:08:06','2013-02-11 20:08:06','',670,'http://49.212.213.226/wordpress/solution-log/?p=671',0,'revision','',0),(672,1,'2013-04-29 13:47:06','2013-04-29 04:47:06','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror ssh://{user}@{yourdomain}:{port}/var/git/{git-repo}\r\n</pre>\r\n<del datetime=\"2013-04-29T04:44:58+00:00\">SSHのポート番号を変更している場合は『<b>/etc/ssh/ssh_config</b>』でポート番号の設定を変更しておく。</del>\r\n\r\n\r\n<h3>ローカルにリモートリポジトリをCLONEする</h3>\r\n初期設定だとSSHで取得することになっている。ローカルでリモートリポジトリを取得するには\r\n<pre class=\"brush: bash\">\r\n# リポジトリをダウンロードするディレクトリに移動\r\ncd /repodir\r\ngit clone ssh://{user}@{yourdomain}:{port}/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n<li><a href=\"http://gom.hatenablog.com/entry/20080907/1220767941\">Gitリポジトリにポートを指定してSSHで接続する - gom68の日記</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-autosave','','','2013-04-29 13:47:06','2013-04-29 04:47:06','',640,'http://49.212.213.226/wordpress/solution-log/?p=672',0,'revision','',0),(673,1,'2013-01-27 20:31:02','2013-01-27 11:31:02','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror {user}@{yourdomain}:/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-5','','','2013-01-27 20:31:02','2013-01-27 11:31:02','',640,'http://49.212.213.226/wordpress/solution-log/?p=673',0,'revision','',0),(674,1,'2013-02-12 17:07:33','2013-02-12 08:07:33','少し前からEgitを使っているが、ユーザー毎のSSHの設定でかなりハマったのでメモ。\r\n\r\n<h3>EclipseにEgitをインストールする</h3>\r\nWindowsでEclipseを使う場合は<strong>Aptanaプラグインの使用時に注意する</strong>。EclipseのAptanaのGitドライバの関係で、Gitのコミットメッセージが文字化けする場合がある。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\r\n<li>フィルター入力に<b>「Egit」</b>と入力\r\n<li>すべての選択肢にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>SSHの設定をする</h3>\r\n2時間ほどハマった。ディフォルトだとEclipseが鍵ファイルをうまくみつけられないので.ssh/configに設定を書き込む\r\n<pre class=\"brush: bash\">\r\nHost hoge # 接続名（なんでもよい）\r\nHostName {yourhostname} # 接続先のドメイン名やIPアドレス\r\nUser {sshuser} # SSH接続ユーザー名\r\nPreferredAuthentications publickey\r\nIdentityFile ~/.ssh/id_rsa # 鍵ファイルの場所\r\n</pre>\r\n\r\nEclipse側ではディフォルトで鍵ファイルを見つけに行く設定が\r\n<b>Eclipse</b>→<b>ウィンドウ</b>→<b>設定</b>→<b>一般</b>→<b>ネットワーク接続</b>→<b>SSH2</b>\r\nにある。適切に設定されているか確認する。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://dogmap.jp/2011/10/27/ssh_config/\">ssh 接続を簡単にする ~/.ssh/config | dogmap.jp</a>\r\n<li><a href=\"http://qiita.com/shin1988/items/90cd428b5a3b64560e8b\" target=\"_blank\">Git - rails開発してたらコミットコメントが文字化けた話 - Qiita</a></il>\r\n<li><a href=\"http://www.k-brand.gr.jp/log/002510\" target=\"_blank\">Ktouth Brand. on Web - 解決：Aptana(eclipse) + EGit のコミットログ文字化けと化けたログの修正方法</a></il>\r\n</ul>','EclipseにEgitをインストールする','','publish','open','open','','eclipse%e3%81%abegit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2015-05-29 16:54:54','2015-05-29 07:54:54','',0,'http://49.212.213.226/wordpress/solution-log/?p=674',0,'post','',0),(675,1,'2013-02-12 17:06:58','2013-02-12 08:06:58','','EclipseにEgitをインストールする','','inherit','open','open','','674-revision-v1','','','2013-02-12 17:06:58','2013-02-12 08:06:58','',674,'http://49.212.213.226/wordpress/solution-log/?p=675',0,'revision','',0),(676,1,'2013-01-05 12:00:09','2013-01-05 03:00:09','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでそのフォルダで解凍する</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード<del datetime=\"2013-01-05T02:52:03+00:00\">（なぜか/tmpフォルダにダウンロードされる）</del></li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\npleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。\r\n<pre class=\"brush: bash\">\r\nunzip pleiades.zip\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\n/root/ダウンロード/\r\ncp -a pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\n『<b>/usr/local/share/eclipse/eclipse.ini</b>』の最終行に設定を記述する\r\n<pre class=\"brush: text\">\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\n</pre>\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから<b>「eclipse」</b>と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-18','','','2013-01-05 12:00:09','2013-01-05 03:00:09','',157,'http://49.212.213.226/wordpress/solution-log/?p=676',0,'revision','',0),(677,1,'2015-05-29 16:53:18','2015-05-29 07:53:18','少し前からEgitを使っているが、ユーザー毎のSSHの設定でかなりハマったのでメモ。\n\n<h3>EclipseにEgitをインストールする</h3>\nWindowsでEclipseを使う場合は<strong>Aptanaプラグインの使用時に注意する</strong>。EclipseのAptanaのGitドライバの関係で、Gitのコミットメッセージが文字化けする場合がある。\n<ol>\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\n<li>フィルター入力に<b>「Egit」</b>と入力\n<li>すべての選択肢にチェックを入れインストールする\n</ol>\n\n<h3>SSHの設定をする</h3>\n2時間ほどハマった。ディフォルトだとEclipseが鍵ファイルをうまくみつけられないので.ssh/configに設定を書き込む\n<pre class=\"brush: bash\">\nHost hoge # 接続名（なんでもよい）\nHostName {yourhostname} # 接続先のドメイン名やIPアドレス\nUser {sshuser} # SSH接続ユーザー名\nPreferredAuthentications publickey\nIdentityFile ~/.ssh/id_rsa # 鍵ファイルの場所\n</pre>\n\nEclipse側ではディフォルトで鍵ファイルを見つけに行く設定が\n<b>Eclipse</b>→<b>ウィンドウ</b>→<b>設定</b>→<b>一般</b>→<b>ネットワーク接続</b>→<b>SSH2</b>\nにある。適切に設定されているか確認する。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://dogmap.jp/2011/10/27/ssh_config/\">ssh 接続を簡単にする ~/.ssh/config | dogmap.jp</a>\n<li><a href=\"http://qiita.com/shin1988/items/90cd428b5a3b64560e8b\" target=\"_blank\">Git - rails開発してたらコミットコメントが文字化けた話 - Qiita</a></il>\n<li><a href=\"http://www.k-brand.gr.jp/log/002510\" target=\"_blank\">Ktouth Brand. on Web - 解決：Aptana(eclipse) + EGit のコミットログ文字化けと化けたログの修正方法</a></il>\n</ul>','EclipseにEgitをインストールする','','inherit','open','open','','674-autosave-v1','','','2015-05-29 16:53:18','2015-05-29 07:53:18','',674,'http://49.212.213.226/wordpress/solution-log/?p=677',0,'revision','',0),(678,1,'2013-02-12 17:07:33','2013-02-12 08:07:33','http://www.ne.jp/asahi/hishidama/home/tech/git/egit.html','EclipseにEgitをインストールする','','inherit','open','open','','674-revision-v1','','','2013-02-12 17:07:33','2013-02-12 08:07:33','',674,'http://49.212.213.226/wordpress/solution-log/?p=678',0,'revision','',0),(679,1,'2013-02-13 02:36:11','2013-02-12 17:36:11','SSHの設定をいじっているときに、一般ユーザーでログインしているのに、パスワードひとつでrootに昇格出来てしまい非常に驚いた。セキュリティー的に全くダメなのでこの設定を無効にし、wheelグループに属するユーザー以外にroot権限を持たせないようにする。\r\n\r\n<h3>参考サイト</h3>\r\nhttp://d.hatena.ne.jp/Hossy/20091025/p1','CentOS6でsuをほぼ無効にする','','publish','open','open','','centos6%e3%81%a7su%e3%82%92%e3%81%bb%e3%81%bc%e7%84%a1%e5%8a%b9%e3%81%ab%e3%81%99%e3%82%8b','','','2013-02-13 02:36:11','2013-02-12 17:36:11','',0,'http://49.212.213.226/wordpress/solution-log/?p=679',0,'post','',0),(680,1,'2013-02-13 02:35:38','2013-02-12 17:35:38','SSHの設定をいじっているときに、一般ユーザーでログインしているのに、パスワードひとつでrootに昇格出来てしまい非常に驚いた。セキュリティー的に全くダメなのでこの設定を無効にし、wheelグループに属するユーザー以外にroot権限をもt','CentOS6でsuをほぼ無効にする','','inherit','open','open','','679-revision','','','2013-02-13 02:35:38','2013-02-12 17:35:38','',679,'http://49.212.213.226/wordpress/solution-log/?p=680',0,'revision','',0),(681,1,'2013-02-03 06:49:46','2013-02-02 21:49:46','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-03 06:49:46','2013-02-02 21:49:46','',646,'http://49.212.213.226/wordpress/solution-log/?p=681',0,'revision','',0),(682,1,'2013-02-14 13:59:13','2013-02-14 04:59:13','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 13:59:13','2013-02-14 04:59:13','',646,'http://49.212.213.226/wordpress/solution-log/?p=682',0,'revision','',0),(683,1,'2013-02-14 14:54:56','2013-02-14 05:54:56','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800X600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 14:54:56','2013-02-14 05:54:56','',646,'http://49.212.213.226/wordpress/solution-log/?p=683',0,'revision','',0),(684,1,'2013-02-14 14:55:42','2013-02-14 05:55:42','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 14:55:42','2013-02-14 05:55:42','',646,'http://49.212.213.226/wordpress/solution-log/?p=684',0,'revision','',0),(685,1,'2013-02-14 15:10:45','2013-02-14 06:10:45','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 15:10:45','2013-02-14 06:10:45','',646,'http://49.212.213.226/wordpress/solution-log/?p=685',0,'revision','',0),(686,1,'2013-02-14 15:16:07','2013-02-14 06:16:07','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 15:16:07','2013-02-14 06:16:07','',646,'http://49.212.213.226/wordpress/solution-log/?p=686',0,'revision','',0),(687,1,'2013-02-14 15:53:20','2013-02-14 06:53:20','<h3>SSH接続ポート番号を指定する</h3>\r\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\r\n\r\n<h3>ポートフォワーディングで接続確認をする</h3>\r\nポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意\r\n<pre class=\"brush: bash\">\r\n# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名]\r\n\r\n$ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user\r\n</pre>\r\n\r\n<h3>VNC Viewerを起動する</h3>\r\nVNC SERVERの設定をポートフォワーディング用に設定する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 2560x800 -localhost&quot;\r\n</pre>\r\n\r\nローカルマシーンで以下のコマンドで起動させる。\r\n<pre class=\"brush: bash\">\r\nvncviewer -via {vncuser}@{hostname} localhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\r\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\r\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','publish','open','open','','centos6%e3%81%a7vnc%e3%82%92%e3%83%9d%e3%83%bc%e3%83%88%e3%83%95%e3%82%a9%e3%83%af%e3%83%bc%e3%83%87%e3%82%a3%e3%83%b3%e3%82%b0%e3%81%a7%e6%8e%a5%e7%b6%9a%e3%81%99%e3%82%8b','','','2014-12-14 19:49:22','2014-12-14 10:49:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=687',0,'post','',0),(688,1,'2013-02-14 15:52:49','2013-02-14 06:52:49','','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2013-02-14 15:52:49','2013-02-14 06:52:49','',687,'http://49.212.213.226/wordpress/solution-log/?p=688',0,'revision','',0),(689,1,'2013-02-15 16:06:00','2013-02-15 07:06:00','RedmineやWordPressなど、ディフォルトのズームが100%だと文字が小さくて見にくいのでアドオンで対応する。\r\n\r\n<h3>Default FullZoom Level 5.0をFireFoxインストールする</h3>\r\n<b>FireFox</b>→<b>ツール</b>→<b>アドオン</b>\r\n「<b>Default FullZoom Level</b>」を検索し、インストールする。','FireFoxでズームをドメイン毎に指定する','','publish','open','open','','firefox%e3%81%a7%e3%82%ba%e3%83%bc%e3%83%a0%e3%82%92%e3%83%89%e3%83%a1%e3%82%a4%e3%83%b3%e6%af%8e%e3%81%ab%e6%8c%87%e5%ae%9a%e3%81%99%e3%82%8b','','','2013-02-15 16:06:00','2013-02-15 07:06:00','',0,'http://49.212.213.226/wordpress/solution-log/?p=689',0,'post','',0),(690,1,'2013-02-15 16:04:46','2013-02-15 07:04:46','RedmineやWordPressなど、ディフォルトのズームが100%だと文字が小さくて見にくいのでアドオンで対応する。\n\n<h3>Default FullZoom Level 5.0をFireFoxインストールする</h3>\nFireFox→ツール→アドオン\nDefault FullZoom Levelを検索\nインストールする。','FireFoxでズームをドメイン毎に指定する','','inherit','open','open','','689-revision','','','2013-02-15 16:04:46','2013-02-15 07:04:46','',689,'http://49.212.213.226/wordpress/solution-log/?p=690',0,'revision','',0),(691,1,'2013-02-15 16:05:46','2013-02-15 07:05:46','RedmineやWordPressなど、ディフォルトのズームが100%だと文字が小さくて見にくいのでアドオンで対応する。\n\n<h3>Default FullZoom Level 5.0をFireFoxインストールする</h3>\n<b>FireFox</b>→<b>ツール</b>→<b>アドオン</b>\n「<b>Default FullZoom Level</b>を検索し、インストールする。','FireFoxでズームをドメイン毎に指定する','','inherit','open','open','','689-revision-2','','','2013-02-15 16:05:46','2013-02-15 07:05:46','',689,'http://49.212.213.226/wordpress/solution-log/?p=691',0,'revision','',0),(694,1,'2013-02-03 11:22:14','2013-02-03 02:22:14','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\">\r\n# ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port 22\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a>\r\n<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','open','open','','663-revision-v1','','','2013-02-03 11:22:14','2013-02-03 02:22:14','',663,'http://49.212.213.226/wordpress/solution-log/?p=694',0,'revision','',0),(695,1,'2013-02-02 20:16:38','2013-02-02 11:16:38','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\r\n\r\n<h3>FireFoxをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install firefox\r\n</pre>\r\n\r\n\r\n<h3>FireFoxをアップデートする</h3>\r\nremiリポジトリがインストールされているのを確認したら\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi update firefox\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/nanjakkun/20111229/1325169540\">CentOS 6.2に最新版の<li>FirefoxとFlash Playerをインストール - なんじゃくにっき</a>\r\n</ul>\r\n','CentOS6にFireFoxをインストールする','','inherit','open','open','','653-revision-3','','','2013-02-02 20:16:38','2013-02-02 11:16:38','',653,'http://49.212.213.226/wordpress/solution-log/?p=695',0,'revision','',0),(696,1,'2013-02-19 16:38:35','2013-02-19 07:38:35','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\r\n\r\n<h3>FireFoxをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install firefox\r\n</pre>\r\n\r\n\r\n<h3>FireFoxをアップデートする</h3>\r\nremiリポジトリがインストールされているのを確認したら\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi update firefox\r\n</pre>\r\n\r\n\r\n<h3>FLASHプラグインをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n## Adobe Repository 32-bit x86 ##\r\nrpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm\r\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\r\n \r\n## Adobe Repository 64-bit x86_64 ##\r\nrpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm\r\nrpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-adobe-linux\r\n\r\n# Update Repositories\r\nyum check-update\r\n\r\nyum install flash-plugin nspluginwrapper alsa-plugins-pulseaudio libcurl\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/nanjakkun/20111229/1325169540\">CentOS 6.2に最新版のFirefoxとFlash Playerをインストール - なんじゃくにっき</a>\r\n<li><a href=\"http://www.if-not-true-then-false.com/2010/install-adobe-flash-player-10-on-fedora-centos-red-hat-rhel/http://\">Adobe Flash Player 11.2 on Fedora 18/17, CentOS/RHEL 6.3/5.8</a>\r\n</ul>\r\n','CentOS6にFireFoxをインストールする','','inherit','open','open','','653-autosave','','','2013-02-19 16:38:35','2013-02-19 07:38:35','',653,'http://49.212.213.226/wordpress/solution-log/?p=696',0,'revision','',0),(697,1,'2013-02-17 23:00:15','2013-02-17 14:00:15','VNC環境を整え、VNCサーバ上でもFireFoxが使えると便利だと思い試してみる。\r\n\r\n<h3>FireFoxをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install firefox\r\n</pre>\r\n\r\n\r\n<h3>FireFoxをアップデートする</h3>\r\nremiリポジトリがインストールされているのを確認したら\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi update firefox\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/nanjakkun/20111229/1325169540\">CentOS 6.2に最新版のFirefoxとFlash Playerをインストール - なんじゃくにっき</a>\r\n</ul>\r\n','CentOS6にFireFoxをインストールする','','inherit','open','open','','653-revision-4','','','2013-02-17 23:00:15','2013-02-17 14:00:15','',653,'http://49.212.213.226/wordpress/solution-log/?p=697',0,'revision','',0),(698,1,'2013-03-10 15:07:09','2013-03-10 06:07:09','考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。\n\n<a href=\"https://sites.google.com/site/chobimemo/eclipse/cdt-rdt\">https://sites.google.com/site/chobimemo/eclipse/cdt-rdt</a>\n\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B</a>\n\n<h3>EclipseにRemote System Explore(RSE)をインストールする</h3>\n<ol>\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\n<li>フィルター入力に<b>「Remote System Explore」</b>と入力\n<li>「<b>Remote System Explorer End-User Runtime</b>」と「<b>Remote System Explorer User Actions</b>」にチェックを入れインストールする\n</ol>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://walbrix.net/blog/2010/07/eclipse-36heliosrsessh.html\">Eclipse 3.6(Helios)にRSEプラグインを導入しSSHを利用する - Walbrix Blog</a>\n</ul>','EclipseでRemote System Explore(RSE)を使用する','','inherit','open','open','','383-autosave','','','2013-03-10 15:07:09','2013-03-10 06:07:09','',383,'http://49.212.213.226/wordpress/solution-log/?p=698',0,'revision','',0),(699,1,'2012-12-08 01:30:24','2012-12-07 16:30:24','考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。\r\n\r\n<a href=\"https://sites.google.com/site/chobimemo/eclipse/cdt-rdt\">https://sites.google.com/site/chobimemo/eclipse/cdt-rdt</a>\r\n\r\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B</a>\r\n\r\n眠いので明日また続きを行う。。。','EclipseでRSEを使用する','','inherit','open','open','','383-revision-3','','','2012-12-08 01:30:24','2012-12-07 16:30:24','',383,'http://49.212.213.226/wordpress/solution-log/?p=699',0,'revision','',0),(700,1,'2013-02-21 12:52:56','2013-02-21 03:52:56','cronでサーバのrebootが効いているのかどうか確認するためのコマンドは「<b>w</b>」\r\n\r\n<pre class=\"brush: bash\">\r\nw\r\n 12:51:10 up 2 min,  1 user,  load average: 0.15, 0.12, 0.05\r\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\r\nroot     pts/1    example.com. 12:49    0.00s  0.02s  0.00s w\r\n</pre>','サーバの状態を確認する','','publish','open','open','','%e3%82%b5%e3%83%bc%e3%83%90%e3%81%ae%e7%8a%b6%e6%85%8b%e3%82%92%e7%a2%ba%e8%aa%8d%e3%81%99%e3%82%8b','','','2013-02-21 12:52:56','2013-02-21 03:52:56','',0,'http://49.212.213.226/wordpress/solution-log/?p=700',0,'post','',0),(701,1,'2013-02-21 12:52:06','2013-02-21 03:52:06','cronでサーバのrebootが効いているのかどうか確認するためのコマンド\n\n<pre class=\"brush: bash\">\n[root@localhost ~]# w\n 12:51:10 up 2 min,  1 user,  load average: 0.15, 0.12, 0.05\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     pts/1    example.com. 12:49    0.00s  0.02s  0.00s w\n</pre>','サーバの状態を確認する','','inherit','open','open','','700-revision','','','2013-02-21 12:52:06','2013-02-21 03:52:06','',700,'http://49.212.213.226/wordpress/solution-log/?p=701',0,'revision','',0),(702,1,'2013-02-21 12:52:08','2013-02-21 03:52:08','cronでサーバのrebootが効いているのかどうか確認するためのコマンド\r\n\r\n<pre class=\"brush: bash\">\r\n[root@localhost ~]# w\r\n 12:51:10 up 2 min,  1 user,  load average: 0.15, 0.12, 0.05\r\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\r\nroot     pts/1    example.com. 12:49    0.00s  0.02s  0.00s w\r\n</pre>','サーバの状態を確認する','','inherit','open','open','','700-revision-2','','','2013-02-21 12:52:08','2013-02-21 03:52:08','',700,'http://49.212.213.226/wordpress/solution-log/?p=702',0,'revision','',0),(703,1,'2013-02-21 12:52:46','2013-02-21 03:52:46','cronでサーバのrebootが効いているのかどうか確認するためのコマンドは「<b>w</b>」\r\n\r\n<pre class=\"brush: bash\">\r\nw\r\n 12:51:10 up 2 min,  1 user,  load average: 0.15, 0.12, 0.05\r\nUSER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT\r\nroot     pts/1    example.com. 12:49    0.00s  0.02s  0.00s w\r\n</pre>','サーバの状態を確認する','','inherit','open','open','','700-revision-3','','','2013-02-21 12:52:46','2013-02-21 03:52:46','',700,'http://49.212.213.226/wordpress/solution-log/?p=703',0,'revision','',0),(704,1,'2013-01-19 17:03:25','2013-01-19 08:03:25','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install httpd\r\nyum install httpd-devel\r\n# apache用のSSLモジュールをインストール\r\nyum install mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3><del datetime=\"2013-01-05T09:35:55+00:00\">http.confのを編集する</del></h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-01-19 17:03:25','2013-01-19 08:03:25','',395,'http://49.212.213.226/wordpress/solution-log/?p=704',0,'revision','',0),(705,1,'2013-02-21 18:43:48','2013-02-21 09:43:48','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3><del datetime=\"2013-01-05T09:35:55+00:00\">http.confのを編集する</del></h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n#782行目 PHPの拡張子に対する処理を追加します\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-02-21 18:43:48','2013-02-21 09:43:48','',395,'http://49.212.213.226/wordpress/solution-log/?p=705',0,'revision','',0),(706,1,'2013-01-22 04:22:43','2013-01-21 19:22:43','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-38','','','2013-01-22 04:22:43','2013-01-21 19:22:43','',187,'http://49.212.213.226/wordpress/solution-log/?p=706',0,'revision','',0),(707,1,'2013-02-21 19:24:30','2013-02-21 10:24:30','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくはSourceForgeのサイトの「Problems with the download? Please use this direct link, or try another mirror. 」を右クリックでダウンロード出きるのでwgetでもいける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-39','','','2013-02-21 19:24:30','2013-02-21 10:24:30','',187,'http://49.212.213.226/wordpress/solution-log/?p=707',0,'revision','',0),(708,1,'2013-02-21 19:29:29','2013-02-21 10:29:29','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくは<a href=\"http://sourceforge.net/projects/phpmyadmin/files/phpMyAdmin/\">phpMyAdmin -  Browse /phpMyAdmin at SourceForge.net</a>からでも取得出きるのでwgetで行ける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-40','','','2013-02-21 19:29:29','2013-02-21 10:29:29','',187,'http://49.212.213.226/wordpress/solution-log/?p=708',0,'revision','',0),(709,1,'2013-02-12 16:29:23','2013-02-12 07:29:23','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror {user}@{yourdomain}:/var/git/{git-repo}\r\n</pre>\r\n\r\n\r\n<h3>ローカルにリモートリポジトリをCLONEする</h3>\r\n初期設定だとSSHで取得することになっている。ローカルでリモートリポジトリを取得するには\r\n<pre class=\"brush: bash\">\r\n# リポジトリをダウンロードするディレクトリに移動\r\ncd /repodir\r\ngit clone ssh://{user}@{yourdomain}/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-6','','','2013-02-12 16:29:23','2013-02-12 07:29:23','',640,'http://49.212.213.226/wordpress/solution-log/?p=709',0,'revision','',0),(711,1,'2013-01-19 17:00:23','2013-01-19 08:00:23','<h3>EPELリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-6','','','2013-01-19 17:00:23','2013-01-19 08:00:23','',548,'http://49.212.213.226/wordpress/solution-log/?p=711',0,'revision','',0),(712,1,'2013-02-27 13:29:48','2013-02-27 04:29:48','<h3>EPELリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\n# 32bit版\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n＃ 64bit版\r\nftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-7','','','2013-02-27 13:29:48','2013-02-27 04:29:48','',548,'http://49.212.213.226/wordpress/solution-log/?p=712',0,'revision','',0),(713,1,'2013-02-27 13:31:09','2013-02-27 04:31:09','<h3>EPELリポジトリを追加する</h3>\r\n<a href=\"http://fedoraproject.org/wiki/EPEL/\">EPELの公式サイト</a>の<a href=\"http://fedoraproject.org/wiki/EPEL/FAQ#How_can_I_install_the_packages_from_the_EPEL_software_repository.3F\">FAQ</a>にインストール方法があった。\r\n<pre class=\"brush: bash\">\r\n# 32bit版\r\nrpm -Uvh http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\r\n# 64bit版\r\nftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\n\r\n<h3>EPELの設定を確認する</h3>\r\n念のため、優先順位の設定を確認しておく。『<b>/etc/yum.repos.d/epel.repo</b>』を開いて、<b>[epel]</b>の<b>enabled=</b>を<b>enabled=1</b>にする。\r\n<pre class=\"brush: bash\">\r\ncat /etc/yum.repos.d/epel.repo\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fedoraproject.org/wiki/EPEL/\">EPEL/ - FedoraProject</a>\r\n<li><a href=\"http://exiz.org/linux/2012121818242/\">CentOSにepel、remiリポジトリを追加する | ExiZ.org</a>\r\n</ul>','CentOS6.3にEPELリポジトリを追加する','','inherit','open','open','','548-revision-8','','','2013-02-27 13:31:09','2013-02-27 04:31:09','',548,'http://49.212.213.226/wordpress/solution-log/?p=713',0,'revision','',0),(714,1,'2013-01-20 18:27:18','2013-01-20 09:27:18','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずは<a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">こちらのサイト</a>を参考に<a href=\"http://fedoraproject.org/wiki/EPEL/ja\">EPEL</a>を導入。最新バージョンは<a href=\"ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/\">ftp://ftp.kddilabs.jp/Linux/packages/fedora/epel/6/i386/</a>で確認してみる。\r\n<pre class=\"brush: bash\">\r\nwget http://ftp-srv2.kddilabs.jp/Linux/distributions/fedora/epel/6/i386/epel-release-6-8.noarch.rpm\r\nrpm -ivh epel-release-6-8.noarch.rpm\r\n</pre>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-01-20 18:27:18','2013-01-20 09:27:18','',190,'http://49.212.213.226/wordpress/solution-log/?p=714',0,'revision','',0),(715,1,'2013-01-07 10:50:35','2013-01-07 01:50:35','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまずlibyamlをインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nlibyamlがインストール出来たので、今度はRubyをインストール。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nRuby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。\r\n\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install&lt;/pre&gt;\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n</pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-14','','','2013-01-07 10:50:35','2013-01-07 01:50:35','',13,'http://49.212.213.226/wordpress/solution-log/?p=715',0,'revision','',0),(716,1,'2013-02-27 13:37:10','2013-02-27 04:37:10','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-02-27 13:37:10','2013-02-27 04:37:10','',190,'http://49.212.213.226/wordpress/solution-log/?p=716',0,'revision','',0),(717,1,'2013-02-27 13:58:33','2013-02-27 04:58:33','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-02-27 13:58:33','2013-02-27 04:58:33','',190,'http://49.212.213.226/wordpress/solution-log/?p=717',0,'revision','',0),(718,1,'2013-02-27 13:59:20','2013-02-27 04:59:20','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-02-27 13:59:20','2013-02-27 04:59:20','',190,'http://49.212.213.226/wordpress/solution-log/?p=718',0,'revision','',0),(719,1,'2013-02-21 19:38:57','2013-02-21 10:38:57','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくは<a href=\"http://sourceforge.net/projects/phpmyadmin/files/phpMyAdmin/\">phpMyAdmin -  Browse /phpMyAdmin at SourceForge.net</a>からでも取得出きるのでwgetで行ける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。mcryptインストール後はMySQLとApacheを再起動する。\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\nservice mysqld restart\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-41','','','2013-02-21 19:38:57','2013-02-21 10:38:57','',187,'http://49.212.213.226/wordpress/solution-log/?p=719',0,'revision','',0),(720,1,'2013-02-27 14:02:12','2013-02-27 05:02:12','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>のでインストールする事\r\n<pre class=\"brush: bash\">\r\nGem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.\r\n\r\n        /usr/local/bin/ruby extconf.rb \r\nchecking for rb_thread_blocking_region()... yes\r\nchecking for rb_wait_for_single_fd()... yes\r\nchecking for mysql.h... no\r\nchecking for mysql/mysql.h... no\r\n-----\r\nmysql.h is missing.  please check your installation of mysql and try again.\r\n-----\r\n*** extconf.rb failed ***\r\nCould not create Makefile due to some reason, probably lack of\r\nnecessary libraries and/or headers.  Check the mkmf.log file for more\r\ndetails.  You may need configuration options.\r\n\r\nProvided configuration options:\r\n	--with-opt-dir\r\n	--with-opt-include\r\n	--without-opt-include=${opt-dir}/include\r\n	--with-opt-lib\r\n	--without-opt-lib=${opt-dir}/lib\r\n	--with-make-prog\r\n	--without-make-prog\r\n	--srcdir=.\r\n	--curdir\r\n	--ruby=/usr/local/bin/ruby\r\n	--with-mysql-config\r\n	--without-mysql-config\r\n\r\n\r\nGem files will remain installed in /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11 for inspection.\r\nResults logged to /var/lib/redmine/vendor/bundler/ruby/1.9.1/gems/mysql2-0.3.11/ext/mysql2/gem_make.out\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-02-27 14:02:12','2013-02-27 05:02:12','',190,'http://49.212.213.226/wordpress/solution-log/?p=720',0,'revision','',0),(721,1,'2012-12-04 00:45:13','2012-12-03 15:45:13','デスクトップにWindows XP環境を構築するときのメモ\r\n<h3>データのバックアップ</h3>\r\nSubversionやgit等も使い、忘れずに行う。\r\n<h3>LANドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Atheros L2 Ethernet Driver」をインストールする。これでインターネットに接続できるようになる。\r\n<h3>サービスパックを適用する</h3>\r\n<ol>\r\n<li>マクロソフトのサイトからWindows XP SP2をダウンロード、インストール</li>\r\n<li>SP3をダウンロード、インストール\r\nSP3はSP2が適応されてないとインストール出来ないので注意</ol>\r\n</li>\r\n</ol>\r\n<h3>オーディオドライバをインストール</h3>\r\nP5GC-MX/1333 CD-ROMから「Realteck Audio Driver」をインストールする\r\n<h3>グラフィックカードドライバをインストール</h3>\r\nAutorun DriverのラベルのCDからインストールする\r\n<h3>USBドライバをインストールする</h3>\r\nP5GC-MX/1333 CD-ROMからChipset_Intel945G_Chipset_V9001011のフォルダ内のsetup.exeを実行する。それ以外は宣伝用のソフトなのでいじらない。（曖昧なので何か機会があったら書き直す）\r\n\r\n後は適宜Lhaz等をインストールする。','Windows XPの再インストールメモ','','inherit','open','open','','174-revision-4','','','2012-12-04 00:45:13','2012-12-03 15:45:13','',174,'http://49.212.213.226/wordpress/solution-log/?p=721',0,'revision','',0),(722,1,'2013-01-07 23:00:34','2013-01-07 14:00:34','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\r\n\r\n<h3>CentOS6.3のディスクイメージを入手する</h3>\r\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを<a href=\"http://isoredirect.centos.org/centos/6/isos/i386/\">ダウンロードサイト</a>から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。\r\n\r\n\r\n<h3>VMware Playerをインストールする</h3>\r\n<a href=\"http://www.vmware.com/\">VMware Playerのサイト</a>からWindows用のインストールファイルをダウンロードして通常通りインストールする。\r\n\r\n\r\n<h3>仮想OSの設定ファイルを作成する</h3>\r\nVMware Playerはのみの対応なので、CentOSが日本語にならない。なので<a href=\"http://www.easyvmx.com/\">EasyVMX!のサイト</a>で仮想OSの設定ファイルを作成する。\r\n<ol>\r\n<li>easyvmx 2.0をクリック\r\n<li>仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック\r\n<li>(仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。\r\n</ol>\r\n\r\n\r\n<h3>CentOS6.3をインストールする</h3>\r\n前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。\r\n<pre class=\"brush: bash\">\r\nide1:0.deviceType = &quot;cdrom-image&quot;\r\nide1:0.fileName = &quot;(isoイメージのあるパス)\\centosdvd.iso&quot;\r\n</pre>\r\nその後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.centos.org/\">www.centos.org - The Community ENTerprise Operating System</a>\r\n<li><a href=\"http://www.mlexp.com/wiki/index.php?VMWare%20Player%20%A5%E1%A5%E2\">VMWare Player メモ - MLEXP Wiki</a>\r\n<li><a href=\"http://www.vmware.com/jp\">VMware の仮想化によるインフラストラクチャの最適化</a>\r\n</ul>','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-01-07 23:00:34','2013-01-07 14:00:34','',535,'http://49.212.213.226/wordpress/solution-log/?p=722',0,'revision','',0),(723,1,'2013-03-03 01:59:30','2013-03-02 16:59:30','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\r\n\r\n<h3>CentOS6.3のディスクイメージを入手する</h3>\r\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを<a href=\"http://isoredirect.centos.org/centos/6/isos/i386/\">ダウンロードサイト</a>から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。\r\n\r\n\r\n<h3>VMware Playerをインストールする</h3>\r\n<a href=\"http://www.vmware.com/\">VMware Playerのサイト</a>からWindows用のインストールファイルを<a href=\"http://www.vmware.com/support/product-support/player.html\">ダウンロードして</a>通常通りインストールする。\r\n\r\n\r\n<h3>仮想OSの設定ファイルを作成する</h3>\r\nVMware Playerはのみの対応なので、CentOSが日本語にならない。なので<a href=\"http://www.easyvmx.com/\">EasyVMX!のサイト</a>で仮想OSの設定ファイルを作成する。\r\n<ol>\r\n<li>easyvmx 2.0をクリック\r\n<li>仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック\r\n<li>(仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。\r\n</ol>\r\n\r\n\r\n<h3>CentOS6.3をインストールする</h3>\r\n前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。\r\n<pre class=\"brush: bash\">\r\nide1:0.deviceType = &quot;cdrom-image&quot;\r\nide1:0.fileName = &quot;(isoイメージのあるパス)\\centosdvd.iso&quot;\r\n</pre>\r\nその後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.centos.org/\">www.centos.org - The Community ENTerprise Operating System</a>\r\n<li><a href=\"http://www.mlexp.com/wiki/index.php?VMWare%20Player%20%A5%E1%A5%E2\">VMWare Player メモ - MLEXP Wiki</a>\r\n<li><a href=\"http://www.vmware.com/jp\">VMware の仮想化によるインフラストラクチャの最適化</a>\r\n</ul>','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-03-03 01:59:30','2013-03-02 16:59:30','',535,'http://49.212.213.226/wordpress/solution-log/?p=723',0,'revision','',0),(724,1,'2013-01-21 00:26:23','2013-01-20 15:26:23','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。通常は入って無いと思われるので最初に入れておいた方が無難。\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認</h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-13','','','2013-01-21 00:26:23','2013-01-20 15:26:23','',165,'http://49.212.213.226/wordpress/solution-log/?p=724',0,'revision','',0),(725,1,'2013-03-03 07:35:11','2013-03-02 22:35:11','gitを使う必要が出てきたのでインストール。\r\n<h3>必要環境の確認</h3>\r\nまずgitの<a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">サポートページ</a>で必要ライブラリを確認。どうやらcURLやopenSSLなどが必要らしい\r\n<pre class=\"brush: bash\">\r\nyum install curl-devel expat-devel gettext-devel openssl-devel zlib-devel perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitをインストール</h3>\r\ngitの<a href=\"http://code.google.com/p/git-core/downloads/list\">リポジトリサイト</a>から最新版を入手してインストール\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://git-core.googlecode.com/files/git-1.8.0.tar.gz\r\ntar -xzvf git-1.8.0.tar.gz\r\ncd git-1.8.0\r\n./configure --prefix=/usr/local/\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<b>Can\'t locate ExtUtils/MakeMaker.pm in @INC...</b>って言うエラーが出る場合は、perl-ExtUtils-MakeMakerをインストール。\r\n<pre class=\"brush: bash\">\r\nyum install perl-ExtUtils-MakeMaker\r\n</pre>\r\n<h3>gitの確認</h3>\r\nバージョンを確認してみる\r\n<pre class=\"brush: bash\">\r\ngit --version\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://git-scm.com/book/ja/%E4%BD%BF%E3%81%84%E5%A7%8B%E3%82%81%E3%82%8B-Git%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">Git - Gitのインストール</a>\r\n<li><a href=\"http://git-scm.com/book/ja/\">Git - Book</a>\r\n</ul>','CentOS6にgitをインストールする','','inherit','open','open','','165-revision-14','','','2013-03-03 07:35:11','2013-03-02 22:35:11','',165,'http://49.212.213.226/wordpress/solution-log/?p=725',0,'revision','',0),(726,1,'2014-12-14 19:49:18','2014-12-14 10:49:18','<h3>SSH接続ポート番号を指定する</h3>\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\n\n<h3>ポートフォワーディングで接続確認をする</h3>\nポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意\n<pre class=\"brush: bash\">\n# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名]\n\n$ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user\n</pre>\n\n<h3>VNC Viewerを起動する</h3>\nVNC SERVERの設定をポートフォワーディング用に設定する。\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/vncservers\nVNCSERVERS=&quot;1:vncuser&quot;\nVNCSERVERARGS[1]=&quot;-geometry 2560x800 -localhost&quot;\n</pre>\n\nローカルマシーンで以下のコマンドで起動させる。\n<pre class=\"brush: bash\">\nvncviewer -via {vncuser}@{hostname} localhost:1\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-autosave-v1','','','2014-12-14 19:49:18','2014-12-14 10:49:18','',687,'http://49.212.213.226/wordpress/solution-log/?p=726',0,'revision','',0),(727,1,'2013-02-14 15:53:20','2013-02-14 06:53:20','このサイトの手順どおり\r\nhttp://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2013-02-14 15:53:20','2013-02-14 06:53:20','',687,'http://49.212.213.226/wordpress/solution-log/?p=727',0,'revision','',0),(729,1,'2013-03-10 01:37:57','2013-03-09 16:37:57','CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/rc.d/rc.sysinit\r\n# 以下を末尾に追加する\r\nfor tty in /dev/tty[1-9]*; do\r\nsetleds -D +num &lt; $tty\r\ndone\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://paki2.blog110.fc2.com/blog-entry-414.html\">centosでnumlockを起動時に有効にする</a>\r\n<li><a href=\"http://www.geocities.jp/sugachan1973/doc/funto76.html\">Linuxシステムの起動スクリプト(inittab、rc.sysinit、rc)を解読</a>\r\n</ul>\r\n\r\nhttp://pkgs.org/centos-6-rhel-6/repoforge-x86_64/numlockx-1.1-1.el6.rf.x86_64.rpm.html','CentOSで6.3でを起動時にNum Lockを有効にする','','publish','open','open','','centos%e3%81%a76-3%e3%81%a7%e3%82%92%e8%b5%b7%e5%8b%95%e6%99%82%e3%81%abnum-lock%e3%82%92%e6%9c%89%e5%8a%b9%e3%81%ab%e3%81%99%e3%82%8b','','','2013-03-10 01:59:10','2013-03-09 16:59:10','',0,'http://49.212.213.226/wordpress/solution-log/?p=729',0,'post','',0),(730,1,'2013-03-10 01:37:12','2013-03-09 16:37:12','CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。\n\n<pre class=\"brush: bash\">\nvi /etc/rc.d/rc.sysinit\n# 以下を末尾に追加する\nfor tty in /dev/tty[1-9]*; do\nsetleds -D +num &lt; $tty\ndone\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://paki2.blog110.fc2.com/blog-entry-414.html\">centosでnumlockを起動時に有効にする</a>\n<li>\n</ul>','CentOSで6.3でを起動時にNum Lockを有効にする','','inherit','open','open','','729-revision','','','2013-03-10 01:37:12','2013-03-09 16:37:12','',729,'http://49.212.213.226/wordpress/solution-log/?p=730',0,'revision','',0),(731,1,'2013-03-10 01:37:36','2013-03-09 16:37:36','CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/rc.d/rc.sysinit\r\n# 以下を末尾に追加する\r\nfor tty in /dev/tty[1-9]*; do\r\nsetleds -D +num &lt; $tty\r\ndone\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://paki2.blog110.fc2.com/blog-entry-414.html\">centosでnumlockを起動時に有効にする</a>\r\n<li><a href=\"http://www.geocities.jp/sugachan1973/doc/funto76.html\">Linuxシステムの起動スクリプト(inittab、rc.sysinit、rc)を解読</a>\r\n</ul>','CentOSで6.3でを起動時にNum Lockを有効にする','','inherit','open','open','','729-revision-2','','','2013-03-10 01:37:36','2013-03-09 16:37:36','',729,'http://49.212.213.226/wordpress/solution-log/?p=731',0,'revision','',0),(732,1,'2013-03-10 01:37:57','2013-03-09 16:37:57','CentOSを立ち上げたときにいつもキーボードのNum Lockが有効になっておらず面倒なので対応する。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/rc.d/rc.sysinit\r\n# 以下を末尾に追加する\r\nfor tty in /dev/tty[1-9]*; do\r\nsetleds -D +num &lt; $tty\r\ndone\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://paki2.blog110.fc2.com/blog-entry-414.html\">centosでnumlockを起動時に有効にする</a>\r\n<li><a href=\"http://www.geocities.jp/sugachan1973/doc/funto76.html\">Linuxシステムの起動スクリプト(inittab、rc.sysinit、rc)を解読</a>\r\n</ul>','CentOSで6.3でを起動時にNum Lockを有効にする','','inherit','open','open','','729-revision-3','','','2013-03-10 01:37:57','2013-03-09 16:37:57','',729,'http://49.212.213.226/wordpress/solution-log/?p=732',0,'revision','',0),(733,1,'2013-02-21 02:53:08','2013-02-20 17:53:08','考えてみたらリモートで開発が出きると楽かなと思い、Eclipseでその手の方法がないのか調べたらあった。\r\n\r\n<a href=\"https://sites.google.com/site/chobimemo/eclipse/cdt-rdt\">https://sites.google.com/site/chobimemo/eclipse/cdt-rdt</a>\r\n\r\n<a href=\"http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B\">http://toyao.net/xoops/modules/xpwiki/?%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E8%A8%AD%E5%AE%9A%E3%83%A1%E3%83%A2%2Feclipse%E3%81%A7PHP%E3%81%AE%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E3%83%87%E3%83%90%E3%83%83%E3%82%B0%E7%92%B0%E5%A2%83%E3%82%92%E3%81%A4%E3%81%8F%E3%82%8B</a>\r\n\r\n<h3>EclipseにRemote System Explore(RSE)をインストールする</h3>\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\r\n<li>フィルター入力に<b>「Remote System Explore」</b>と入力\r\n<li>「<b>Remote System Explorer End-User Runtime</b>」と「Remote System Explorer User Actions」にチェックを入れインストールする\r\n</ol>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://walbrix.net/blog/2010/07/eclipse-36heliosrsessh.html\">Eclipse 3.6(Helios)にRSEプラグインを導入しSSHを利用する - Walbrix Blog</a>\r\n</ul>','EclipseでRemote System Explore(RSE)を使用する','','inherit','open','open','','383-revision-4','','','2013-02-21 02:53:08','2013-02-20 17:53:08','',383,'http://49.212.213.226/wordpress/solution-log/?p=733',0,'revision','',0),(734,1,'2013-02-21 18:55:37','2013-02-21 09:55:37','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-02-21 18:55:37','2013-02-21 09:55:37','',395,'http://49.212.213.226/wordpress/solution-log/?p=734',0,'revision','',0),(735,1,'2013-02-12 17:50:25','2013-02-12 08:50:25','<h3>Eclipseをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://www.eclipse.org/downloads/\">http://www.eclipse.org/downloads/</a>より「Eclipse Classic 4.2.1」を選択しブラウザでダウンロード</li>\r\n	<li>「/root/ダウンロード」にダウンロードされるのでそのフォルダで解凍する</li>\r\n	<li>mvコマンドで「/usr/local/share」へ移動させる</li>\r\n</ol>\r\n<pre class=\"brush: bash\">\r\ncd /root/ダウンロード\r\ntar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz\r\nmv eclipse /usr/local/share/\r\n</pre>\r\n\r\n\r\n* tar xvf eclipse-SDK-4.2.1-linux-gtk.tar.gz /usr/local/share/では\r\n\r\n<pre class=\"brush: bash\">\r\ntar: /usr/local/share: アーカイブ内に見つかりません\r\ntar: 前のエラーにより失敗ステータスで終了します\r\n</pre>\r\n\r\n\r\nとエラーが出て、インストール出来なかった。また理由を探る。\r\n<h3>Pleiadesをインストールする</h3>\r\n<ol>\r\n	<li><a href=\"http://mergedoc.sourceforge.jp/\">http://mergedoc.sourceforge.jp/</a>から最新版 1.3.5をブラウザでダウンロード<del datetime=\"2013-01-05T02:52:03+00:00\">（なぜか/tmpフォルダにダウンロードされる）</del></li>\r\n	<li>zipファイルを解凍してEclipseにコピー</li>\r\n	<li>eclipse.iniを書き換える</li>\r\n</ol>\r\npleiadesのZIPアーカイブは、フォルダなしで展開されるので、事前に展開するフォルダを作成しておく。\r\n<pre class=\"brush: bash\">\r\nmkdir /root/ダウンロード/pleiades\r\nunzip pleiades.zip -d /root/ダウンロード/pleiades/\r\ncp -a /root/ダウンロード/pleiades/* /usr/local/share/eclipse/\r\n</pre>\r\n\r\n『<b>/usr/local/share/eclipse/eclipse.ini</b>』の最終行に設定を記述する\r\n<pre class=\"brush: text\">\r\n-javaagent:/usr/local/share/eclipse/plugins/jp.sourceforge.mergedoc.pleiades/pleiades.jar\r\n</pre>\r\n\r\n*この記述は絶対パスで指定しないとシンボリックリンクでEclipseを立ち上げるとき、Eclipseがpleaiades.jarを見つけられずにエラーとなる。\r\n<h3>シンボリックリンクを作成する</h3>\r\nデスクトップにショートカットアイコンを作成し、/usr/binにもリンクを通す\r\n\r\n<pre class=\"brush: bash\">\r\ncd /root/デスクトップ/\r\nln -s /usr/local/share/eclipse/eclipse eclipse\r\nln -s /usr/local/share/eclipse/eclipse /usr/local/bin\r\n</pre>\r\n\r\n\r\nこれでデスクトップからショートカットアイコンで起動でき、尚かつターミナルから<b>「eclipse」</b>と入力すればEclipseが立ち上がるようになる。\r\n<h3>PDT(PHP Developing Tools)をインストールする</h3>\r\n<a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">http://wiki.eclipse.org/PDT/Installation_3.1.x</a>\r\n基本的には上記URLの通りに入れる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/tkizm/20120701/1341121980\">Mac版 Eclipse4.2の日本語化手順 - いっぽんの猟銃のむこうに (DAIZOじいさんとGun)</a></li>\r\n	<li><a href=\"http://wiki.eclipse.org/PDT/Installation_3.1.x\">PDT/Installation 3.1.x - Eclipsepedi</a></li>\r\n</ul>','CentOS6にEclipse + Pleiades + PDTをインストールする','','inherit','open','open','','157-revision-19','','','2013-02-12 17:50:25','2013-02-12 08:50:25','',157,'http://49.212.213.226/wordpress/solution-log/?p=735',0,'revision','',0),(736,1,'2012-12-04 21:01:25','2012-12-04 12:01:25','<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-「このファイルに関するテストの実行」にショートカットキーを割り当てる\r\n<h3>php.iniの書き換え</h3>\r\nphp.iniをしっかりと書き換える必要がある\r\n「PHP統合開発環境PDT2」などを参考にする\r\n<h3>MakeGoodのインストール</h3>\r\n<h3>パスを設定する</h3>\r\nhttp://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f1\r\n\r\nプロジェクトにもパスを設定する\r\nhttp://d.hatena.ne.jp/Kenji_s/20110722/1311314734\r\n<h3>ショートカットキーの設定</h3>\r\n-Confort Mouse 4500のドライバをインストール\r\n-Confort Mouse 4500のプログラムの設定にEclipseを追加\r\n-Eclipseでショートカットキーを設定\r\n-このファイルに関するテストの実行にショートカットキーを割り当てる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://tatsunet.net/2012/03/phpunit-1.html\">PHPUnitによる単体テスト環境構築(Eclipse) - TATSUNET</a>\r\n<li><a href=\"http://d.hatena.ne.jp/aTaGo/20100924/1285314675#20100924f2\">EclipsePDT+PHPUnit+XDebug+MakeGoodでphpのTDD - あたご型護衛艦日記</a>\r\n<li><a href=\"http://d.hatena.ne.jp/Kenji_s/20110722/1311314734\">Eclipse/PDT から PHPUnit/CIUnit のテストを自動実行する - A Day in Serenity @ kenjis</a>\r\n</ul>','Windows XP sp3でのEclipse + PHPUnitに関する覚書','','inherit','open','open','','335-revision-4','','','2012-12-04 21:01:25','2012-12-04 12:01:25','',335,'http://49.212.213.226/wordpress/solution-log/?p=736',0,'revision','',0),(738,1,'2013-03-04 15:13:38','2013-03-04 06:13:38','<h3>SSH接続ポート番号を指定する</h3>\r\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\r\n\r\n\r\n<h3>VNC Viewerを起動する</h3>\r\nローカルマシーンで以下のコマンドで起動させる。\r\n<pre class=\"brush: bash\">\r\nvncviewer -via {vncuser}@{hostname} localhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\r\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\r\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2013-03-04 15:13:38','2013-03-04 06:13:38','',687,'http://49.212.213.226/wordpress/solution-log/?p=738',0,'revision','',0),(739,1,'2013-03-13 00:22:52','2013-03-12 15:22:52','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\r\n\r\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\r\nダウンロードしてインストールタイプのEclipseプラグイン版がAptana Studioの<a href=\"http://www.aptana.com/products/studio3/download\">HPにアップされている</a>がEclipseのプラグインインストーラを使用する。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\r\n<li>「<b>Aptana Studio 3 Plugin</b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.aptana.com/\">Aptana</a>\r\n<li><a href=\"http://www.system-act.com/eclipse/aptana.html\">Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT</a>\r\n</ul>','EclipseにAptanaをインストールする','','publish','open','open','','eclipse%e3%81%abaptana%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-13 00:22:52','2013-03-12 15:22:52','',0,'http://49.212.213.226/wordpress/solution-log/?p=739',0,'post','',0),(740,1,'2013-03-13 00:19:38','2013-03-12 15:19:38','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\n\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\nソース盤がAptana StudioのHPにアップされているがEclipseのプラグインインストーラを使用する。\n<ol>\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\n<li>「<b>Aptana Studio 3 Plugin/b>」にチェックを入れインストールする\n</ol>\n\n<h3>参考サイト</h3>\n<ul>\n<li>Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT\n</ul>','EclipseにAptanaをインストールする','','inherit','open','open','','739-revision','','','2013-03-13 00:19:38','2013-03-12 15:19:38','',739,'http://49.212.213.226/wordpress/solution-log/?p=740',0,'revision','',0),(741,1,'2013-03-13 00:20:38','2013-03-12 15:20:38','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\n\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\nダウンロードEclipseプラグイン版がAptana StudioのHPにアップされているがEclipseのプラグインインストーラを使用する。\n<ol>\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\n<li>「<b>Aptana Studio 3 Plugin/b>」にチェックを入れインストールする\n</ol>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.system-act.com/eclipse/aptana.html\">Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT</a>\n</ul>','EclipseにAptanaをインストールする','','inherit','open','open','','739-revision-2','','','2013-03-13 00:20:38','2013-03-12 15:20:38','',739,'http://49.212.213.226/wordpress/solution-log/?p=741',0,'revision','',0),(742,1,'2013-03-13 00:21:26','2013-03-12 15:21:26','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\r\n\r\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\r\nダウンロードしてインストールタイプのEclipseプラグイン版がAptana StudioのHPにアップされているがEclipseのプラグインインストーラを使用する。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\r\n<li>「<b>Aptana Studio 3 Plugin/b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.aptana.com/\">Aptana</a>\r\n<li><a href=\"http://www.system-act.com/eclipse/aptana.html\">Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT</a>\r\n</ul>','EclipseにAptanaをインストールする','','inherit','open','open','','739-revision-3','','','2013-03-13 00:21:26','2013-03-12 15:21:26','',739,'http://49.212.213.226/wordpress/solution-log/?p=742',0,'revision','',0),(743,1,'2013-03-13 00:22:14','2013-03-12 15:22:14','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\r\n\r\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\r\nダウンロードしてインストールタイプのEclipseプラグイン版がAptana Studioの<a href=\"http://www.aptana.com/products/studio3/download\">HPにアップされている</a>がEclipseのプラグインインストーラを使用する。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\r\n<li>「<b>Aptana Studio 3 Plugin/b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.aptana.com/\">Aptana</a>\r\n<li><a href=\"http://www.system-act.com/eclipse/aptana.html\">Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT</a>\r\n</ul>','EclipseにAptanaをインストールする','','inherit','open','open','','739-revision-4','','','2013-03-13 00:22:14','2013-03-12 15:22:14','',739,'http://49.212.213.226/wordpress/solution-log/?p=743',0,'revision','',0),(744,1,'2013-03-13 00:22:44','2013-03-12 15:22:44','Eclipseでプロジェクトを扱うときに静的HTMLで書かれたサイトは「<b>Webプロジェクト</b>」として扱いたいので<a href=\"http://www.aptana.com/\">Aptana Studio</a>をインストールする。\r\n\r\n<h3>EclipseにAptana Studio 3プラグインをインストールする</h3>\r\nダウンロードしてインストールタイプのEclipseプラグイン版がAptana Studioの<a href=\"http://www.aptana.com/products/studio3/download\">HPにアップされている</a>がEclipseのプラグインインストーラを使用する。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:へ「<b>http://download.aptana.com/studio3/plugin/install/</b>」と入力\r\n<li>「<b>Aptana Studio 3 Plugin</b>」にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.aptana.com/\">Aptana</a>\r\n<li><a href=\"http://www.system-act.com/eclipse/aptana.html\">Eclipse Webプロジェクト開発プラグイン Aptana Studio - System House ACT</a>\r\n</ul>','EclipseにAptanaをインストールする','','inherit','open','open','','739-revision-5','','','2013-03-13 00:22:44','2013-03-12 15:22:44','',739,'http://49.212.213.226/wordpress/solution-log/?p=744',0,'revision','',0),(745,1,'2013-03-13 02:15:14','2013-03-12 17:15:14','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを755に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','publish','open','open','','centos6%e3%81%a7mod_userdir%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2015-11-16 22:31:48','2015-11-16 13:31:48','',0,'http://49.212.213.226/wordpress/solution-log/?p=745',0,'post','',0),(746,1,'2013-03-13 02:08:11','2013-03-12 17:08:11','<h3>mod_userdirの設定をする</h3>\n\n<h3>SELinuxを無効にする</h3>\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\n<pre class=\"brush: bash\">\nvi /etc/selinux/config\n# SELinuxを有効にする。\nSELINUX=enforcing\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li>apacheでmod_userdir.c - BIGLOBEなんでも相談室\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:08:11','2013-03-12 17:08:11','',745,'http://49.212.213.226/wordpress/solution-log/?p=746',0,'revision','',0),(747,1,'2013-03-13 02:09:11','2013-03-12 17:09:11','<h3>mod_userdirの設定をする</h3>\n\n<h3>SELinuxを無効にする</h3>\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\n<pre class=\"brush: bash\">\nvi /etc/selinux/config\n# SELinuxを有効にする。\nSELINUX=enforcing\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:09:11','2013-03-12 17:09:11','',745,'http://49.212.213.226/wordpress/solution-log/?p=747',0,'revision','',0),(748,1,'2013-03-13 02:13:23','2013-03-12 17:13:23','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=enforcing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:13:23','2013-03-12 17:13:23','',745,'http://49.212.213.226/wordpress/solution-log/?p=748',0,'revision','',0),(749,1,'2013-03-13 02:14:41','2013-03-12 17:14:41','動作確認は「<b>http://localhost/~{user}/」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=enforcing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:14:41','2013-03-12 17:14:41','',745,'http://49.212.213.226/wordpress/solution-log/?p=749',0,'revision','',0),(750,1,'2013-03-13 02:14:55','2013-03-12 17:14:55','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=enforcing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:14:55','2013-03-12 17:14:55','',745,'http://49.212.213.226/wordpress/solution-log/?p=750',0,'revision','',0),(752,1,'2013-03-13 02:15:14','2013-03-12 17:15:14','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=enforcing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:15:14','2013-03-12 17:15:14','',745,'http://49.212.213.226/wordpress/solution-log/?p=752',0,'revision','',0),(753,1,'2013-02-27 14:16:04','2013-02-27 05:16:04','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-02-27 14:16:04','2013-02-27 05:16:04','',190,'http://49.212.213.226/wordpress/solution-log/?p=753',0,'revision','',0),(754,1,'2013-03-16 20:35:11','2013-03-16 11:35:11','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-03-16 20:35:11','2013-03-16 11:35:11','',190,'http://49.212.213.226/wordpress/solution-log/?p=754',0,'revision','',0),(755,1,'2013-01-20 23:55:19','2013-01-20 14:55:19','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\nまた<a href=\"./?p=605\">Redmineインストールディレクトリの権限の設定</a>も行う事。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-7','','','2013-01-20 23:55:19','2013-01-20 14:55:19','',459,'http://49.212.213.226/wordpress/solution-log/?p=755',0,'revision','',0),(756,1,'2012-12-09 13:26:25','2012-12-09 04:26:25','<h3>Javaをインストールする</h3>\r\nJavaがインストールされていない場合はインストールする。\r\n<pre class=\"brush: bash\">\r\nrpm -qa java-1.7.0-openjdk\r\nyum -y install java-1.7.0-openjdk\r\n</pre>\r\n<h3>Jenkinsをインストールする</h3>\r\n基本的には公式ページを参考にする。\r\n<a href=\"http://pkg.jenkins-ci.org/redhat/\">http://pkg.jenkins-ci.org/redhat/</a>\r\n<pre class=\"brush: bash\">\r\nsudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo\r\nsudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key\r\nyum install jenkins\r\n</pre>\r\n<h3>Jenkinsを起動する</h3>\r\nJenkinsはポート8080がディフォルト。\r\n<pre class=\"brush: bash\">\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\nブラウザから<a href=\"http://localhost:8080/\">http://localhost:8080/</a>へアクセス。\r\n<h3>JenkinsとApacheを連携させる</h3>\r\nまずプロキシの設定をmod_proxy経由で行う。mod_proxyの設定はhttpd.confに書き込む事も出きるが、読みにくくなるのでmod_proxy.confに書き込む。\r\n<pre class=\"brush: bash\">\r\ncd /etc/httpd/conf.d\r\nvi mod_proxy.conf\r\n# 書き込み内容\r\nProxyPass /jenkins http://localhost:8080/jenkins\r\nProxyPassReverse /jenkins http://localhost:8080/jenkins\r\nProxyRequests Off\r\n</pre>\r\nJenkinsの設定ファイルを書き換える\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/jenkins\r\nJENKINS_ARGS=&quot;--prefix=/jenkins&quot; #最終行を書き換え\r\n</pre>\r\nApacheとJenkinsを立ち上げれば、http://localhost/jenkinsよりJenkinsに入れる\r\n<pre class=\"brush: bash\">\r\nhttpd -k stop\r\nhttpd -k start\r\n/sbin/service jenkins start\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://pkg.jenkins-ci.org/redhat/\">RedHat Linux RPM packages for Jenkins</a></li>\r\n	<li><a href=\"http://webos-goodies.jp/archives/51261261.html\">Apache のリバースプロキシの設定方法 | WebOS Goodies</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/hiranasu/20110507/1304781709\">jenkinsとapacheの連携 - Dev3TechHack</a></li>\r\n</ul>','CentOS6.3にJenkinsをインストールする','','inherit','open','open','','201-revision-21','','','2012-12-09 13:26:25','2012-12-09 04:26:25','',201,'http://49.212.213.226/wordpress/solution-log/?p=756',0,'revision','',0),(758,1,'2013-03-17 01:27:06','2013-03-16 16:27:06','記事がバラバラになっているのでまとめておく。\r\n\r\n<h3>Apacheの自動機動設定を行う</h3>\r\n想定される環境だと既にApacheはインストール済み。\r\n<pre class=\"brush: bash\">\r\nservice httpd restart\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\nこちらの<a href=\"./?p=395\">エントリー</a>を参考にする\r\n\r\n<h3>MySQL+phpMyAdminをインストールする</h3>\r\nこちらの<a href=\"./?p=187\">エントリー</a>を参考にする','CentOS6でApache、PHP、MySQLの初期設定を行う','','publish','open','open','','centos6%e3%81%a7apache%e3%80%81php%e3%80%81mysql%e3%81%ae%e5%88%9d%e6%9c%9f%e8%a8%ad%e5%ae%9a%e3%82%92%e8%a1%8c%e3%81%86','','','2013-03-17 01:27:27','2013-03-16 16:27:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=758',0,'post','',0),(759,1,'2013-03-10 17:15:33','2013-03-10 08:15:33','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-03-10 17:15:33','2013-03-10 08:15:33','',395,'http://49.212.213.226/wordpress/solution-log/?p=759',0,'revision','',0),(760,1,'2013-03-17 01:23:02','2013-03-16 16:23:02','どうやらyumだと5.3系がインストールされるらしい。\r\n\r\n\r\n\r\n<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHP5.4をインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6.3にPHP5.4をインストールする','','inherit','open','open','','395-revision-v1','','','2013-03-17 01:23:02','2013-03-16 16:23:02','',395,'http://49.212.213.226/wordpress/solution-log/?p=760',0,'revision','',0),(761,1,'2013-03-17 01:23:24','2013-03-16 16:23:24','記事がバラバラになっているのでまとめておく。\n\n<h3>Apacheの自動機動設定を行う</h3>\n想定される環境だと既にApacheはインストール済み。\n<pre class=\"brush: bash\">\nservice httpd restart\nchkconfig httpd on\n</pre>\n\n\n<h3>PHPをインストールする</h3>\nこちらの<a href=\"./?p=395\">エントリー</a>を参考にする\n\n<h3>MySQL+phpMyAdminをインストールする</h3>\nこちらのエントリーを参考にする','CentOS6でApache、PHP、MySQLの初期設定を行う','','inherit','open','open','','758-revision','','','2013-03-17 01:23:24','2013-03-16 16:23:24','',758,'http://49.212.213.226/wordpress/solution-log/?p=761',0,'revision','',0),(762,1,'2013-03-17 01:25:12','2013-03-16 16:25:12','記事がバラバラになっているのでまとめておく。\r\n\r\n<h3>Apacheの自動機動設定を行う</h3>\r\n想定される環境だと既にApacheはインストール済み。\r\n<pre class=\"brush: bash\">\r\nservice httpd restart\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\nこちらの<a href=\"./?p=395\">エントリー</a>を参考にする\r\n\r\n<h3>MySQL+phpMyAdminをインストールする</h3>\r\nこちらの<a href=\"/?p=187\">エントリー</a>を参考にする','CentOS6でApache、PHP、MySQLの初期設定を行う','','inherit','open','open','','758-revision-2','','','2013-03-17 01:25:12','2013-03-16 16:25:12','',758,'http://49.212.213.226/wordpress/solution-log/?p=762',0,'revision','',0),(763,1,'2013-03-17 01:26:23','2013-03-16 16:26:23','記事がバラバラになっているのでまとめておく。\n\n<h3>Apacheの自動機動設定を行う</h3>\n想定される環境だと既にApacheはインストール済み。\n<pre class=\"brush: bash\">\nservice httpd restart\nchkconfig httpd on\n</pre>\n\n\n<h3>PHPをインストールする</h3>\nこちらの<a href=\"./?p=395\">エントリー</a>を参考にする\n\n<h3>MySQL+phpMyAdminをインストールする</h3>\nこちらの<a href=\"/?p=187\">エントリー</a>を参考にする','CentOS6でApache、PHP、MySQLの初期設定を行う','','inherit','open','open','','758-revision-3','','','2013-03-17 01:26:23','2013-03-16 16:26:23','',758,'http://49.212.213.226/wordpress/solution-log/?p=763',0,'revision','',0),(764,1,'2013-03-17 01:27:06','2013-03-16 16:27:06','記事がバラバラになっているのでまとめておく。\r\n\r\n<h3>Apacheの自動機動設定を行う</h3>\r\n想定される環境だと既にApacheはインストール済み。\r\n<pre class=\"brush: bash\">\r\nservice httpd restart\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\nこちらの<a href=\"./?p=395\">エントリー</a>を参考にする\r\n\r\n<h3>MySQL+phpMyAdminをインストールする</h3>\r\nこちらの<a href=\"./?p=187\">エントリー</a>を参考にする','CentOS6でApache、PHP、MySQLの初期設定を行う','','inherit','open','open','','758-revision-4','','','2013-03-17 01:27:06','2013-03-16 16:27:06','',758,'http://49.212.213.226/wordpress/solution-log/?p=764',0,'revision','',0),(765,1,'2013-02-27 14:14:14','2013-02-27 05:14:14','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server mysql-devel\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server mysql-devel\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくは<a href=\"http://sourceforge.net/projects/phpmyadmin/files/phpMyAdmin/\">phpMyAdmin -  Browse /phpMyAdmin at SourceForge.net</a>からでも取得出きるのでwgetで行ける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。mcryptインストール後はMySQLとApacheを再起動する。\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\nservice mysqld restart\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOSに6.3にMySQL5.5系とphpMyAdminをインストールする','','inherit','open','open','','187-revision-42','','','2013-02-27 14:14:14','2013-02-27 05:14:14','',187,'http://49.212.213.226/wordpress/solution-log/?p=765',0,'revision','',0),(766,1,'2013-03-17 01:31:24','2013-03-16 16:31:24','yumからのインストールだと、MySQL5.1系がインストールされ、どうやらこれがPHP5.4.9と親和性が取れないらしく、phpMyAdminでエラーが出てしまう。なのでMySQL5.5系をインストールする。\r\n<h3>MySQL5.5系をインストールする</h3>\r\n5.1系が既にインストールされている場合、最初に5.1系を削除。その後Remiリポジトリから5.5系をインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。\r\n<pre class=\"brush: bash\">\r\n# MySQLを停止する\r\n/etc/rc.d/init.d/mysqld stop\r\n# MySQLを削除する\r\nyum erase mysql mysql-server mysql-devel\r\n# 5.5系をインストール\r\nyum --enablerepo=remi install mysql mysql-server mysql-devel\r\n</pre>\r\n<h3>MySQLの初期設定を行う</h3>\r\nMySQLを初めて起動する場合、ユーザー名やパスワードなどの設定を行う必要がある\r\n<pre class=\"brush: bash\">\r\n/etc/rc.d/init.d/mysqld start\r\nmysql_secure_installation\r\n</pre>\r\nこのあと適宜ユーザー名やパスワードを設定する\r\n<h3>MySQLのバージョンを確認する</h3>\r\n一応ここでバージョンを確認しておく\r\n<pre class=\"brush: bash\">\r\nmysql --version\r\nmysql  Ver 14.14 Distrib 5.5.29, for Linux (x86_64) using readline 5.1\r\n</pre>\r\n\r\n<h3>my.confを設定する</h3>\r\n<a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">こちらのサイト</a>を参考にしてみた。<b>『/etc/my.cnf』</b>を以下のように修正する\r\n<pre class=\"brush: text\">\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\ncharacter-set-server=utf8\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n</pre>\r\n<h3>phpMyAdminをインストールする</h3>\r\n基本的には<a href=\"http://www.phpmyadmin.net\">phpMyAdminの公式サイト</a>からzip版をダウンロードして任意のフォルダに解凍する。svn版はメンテナンスが止まっているみたいなので使わない。phpMyAdminは<strong>MySQLの初期設定が終わっていないと立ち上がらないので注意</strong>。\r\nまたダウンロードしたアーカイブをscpでサーバにアップする場合は\r\n<pre class=\"brush: bash\">\r\ncd /path/to/phpMyAdmin-3.5.5-all-languages.tar.gz\r\nscp phpMyAdmin-3.5.5-all-languages.tar.gz user@uri-adress:/var/www/html\r\n</pre>\r\nもしくは<a href=\"http://sourceforge.net/projects/phpmyadmin/files/phpMyAdmin/\">phpMyAdmin -  Browse /phpMyAdmin at SourceForge.net</a>からでも取得出きるのでwgetで行ける。\r\n\r\nphpMyAdminのアーカイブを展開する場合は\r\n<pre class=\"brush: bash\">\r\ntar xfvz phpMyAdmin-3.5.5-all-languages.tar.gz \r\nmv phpMyAdmin-3.5.5-all-languages phpmyadmin\r\n</pre>\r\n\r\n\r\n\r\n<h3>phpMyAdminの設定をする</h3>\r\n初期設定のままだと<b>「phpMyAdmin の設定保存場所が完全に設定されていないため、いくつかの拡張機能が無効になっています。理由についてはこちらをご覧ください。」</b>と言う警告が出るので設定をいじる。\r\n\r\n<h4>データベースとテーブルを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\n# データベースphpmyadminとテーブルを作成する\r\nmysql&gt; source /var/www/html/phpmyadmin/examples/create_tables.sql; \r\nGRANT ALL ON phpmyadmin.* TO pma@localhost IDENTIFIED BY &#039;パスワード&#039;;\r\n</pre>\r\n\r\n<h4>phpMyAdminの設定ファイルを設定する</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html/phpmyadmin\r\ncp config.sample.inc.php config.inc.php\r\nvi config.inc.php\r\n</pre>\r\n以下の設定で運用するようにする。他の箇所はコメントアウトしない。<b>pmaのパスワード変更を忘れずに行う</b>。\r\n<pre class=\"brush: php\">\r\n/*\r\n * phpMyAdmin configuration storage settings.\r\n */\r\n\r\n/* User used to manipulate with storage */\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlhost&#039;] = &#039;&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controluser&#039;] = &#039;pma&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;controlpass&#039;] = &#039;パスワード&#039;; #ディフォルトだと危険なので変更をかけておく\r\n\r\n/* Storage database and tables */\r\n$cfg[&#039;Servers&#039;][$i][&#039;pmadb&#039;] = &#039;phpmyadmin&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;bookmarktable&#039;] = &#039;pma_bookmark&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;relation&#039;] = &#039;pma_relation&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_info&#039;] = &#039;pma_table_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_coords&#039;] = &#039;pma_table_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;pdf_pages&#039;] = &#039;pma_pdf_pages&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;column_info&#039;] = &#039;pma_column_info&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;history&#039;] = &#039;pma_history&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;table_uiprefs&#039;] = &#039;pma_table_uiprefs&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;tracking&#039;] = &#039;pma_tracking&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;designer_coords&#039;] = &#039;pma_designer_coords&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;userconfig&#039;] = &#039;pma_userconfig&#039;;\r\n$cfg[&#039;Servers&#039;][$i][&#039;recent&#039;] = &#039;pma_recent&#039;;\r\n/* Contrib / Swekey authentication */\r\n$cfg[&#039;Servers&#039;][$i][&#039;auth_swekey_config&#039;] = &#039;/etc/swekey-pma.conf&#039;;\r\n</pre>\r\n\r\n\r\n<h4>設定を反映させる</h4>\r\nphpMyAdminからログアウト。ブラウザのキャッシュをクリアして再びログインする。\r\n\r\n\r\n<h3>php-mcryptをインストールする</h3>\r\n<b>「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」</b>と言う警告が出ている場合はphp-mcryptをインストールする。<b>事前に<a href=\"./?p=542\">Remiリポジトリが追加されているか確認</a>しておく事</b>。mcryptインストール後はMySQLとApacheを再起動する。\r\n<pre class=\"brush: bash\">\r\nyum -y install --enablerepo=remi php-mcrypt\r\nservice mysqld restart\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>MySQLの自動起動設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/takaya030/20120630/1341072325\">MySQL 5.0 から 5.5 へアップデート - takaya030の備忘録</a>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html#SEC19\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://centossrv.com/phpmyadmin.shtml\">MySQL用GUI設定ツール導入(phpMyAdmin) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://www.phpmyadmin.ne\">phpMyAdmin</a>\r\n<li><a href=\"http://d.hatena.ne.jp/yasuhallabo/20111204/1323015635\">「phpMyAdmin の設定保存場所が完全に設定されていないため～」の解消 - やすはるラボ</a>\r\n<li><a href=\"http://d.hatena.ne.jp/susan-style/20110929/1317289484\">centos6+phpmyadminで「mcrypt 拡張がありません。PHP の設定をチェックしてみてください。」 - [Swb:]渋谷に住むWEBデザイナの備忘録</a>\r\n</ul>','CentOS6に最新バージョンのMySQLとphpMyAdminをインストールする','','inherit','open','open','','187-revision-43','','','2013-03-17 01:31:24','2013-03-16 16:31:24','',187,'http://49.212.213.226/wordpress/solution-log/?p=766',0,'revision','',0),(767,1,'2012-12-11 13:31:24','2012-12-11 04:31:24','さくらのVPSにJenkins環境を整えるメモ。\r\n\r\n<h3>Xdebugをインストールする</h3>\r\nPECLからインストールする\r\n<pre class=\"brush: bash\">\r\npecl install xdebug\r\n</pre>\r\n<h3>PHPUnitをインストールする</h3>\r\n<b>/usr/share/pear/PHPUnit</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover components.ez.no\r\npear channel-discover pear.phpunit.de\r\nsudo pear install phpunit/PHPUnit\r\n</pre>\r\n<h3>phpDocumentorをインストールする</h3>\r\n<a href=\"http://www.phpdoc.org/\">phpDocumentorの公式サイト</a>を参考にする。<b>/usr/share/pear/PhpDocumentor</b>にインストールされる\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpdoc.org\r\npear install phpdoc/phpDocumentor-alpha\r\n</pre>\r\n<h3>その他のライブラリをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\npear channel-discover pear.phpmd.org\r\npear channel-discover pear.symfony-project.com\r\npear channel-discover pear.symfony.com\r\npear channel-discover pecl.php.net\r\npear channel-discover pear.pdepend.org\r\npear channel-discover pear.netpirates.net\r\npear install --alldeps phpunit/phpcpd\r\npear install --alldeps phpmd/PHP_PMD # PHPコードの妥当性を調べるライブラリ\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.ryuzee.com/contents/blog/5645\">CakePHP2.0+Jenkinsで継続的インテグレーションを行う方法 | Ryuzee.com</a>\r\n<li><a href=\"http://log.miraoto.com/2012/08/656/\">CakePHP2.X+PHPUnit+jenkinsでテストを自動化する | ミラボ</a>\r\n<ul>','さくらのVPSにJenkins + PHPUnitをインストールする','','inherit','open','open','','402-revision-10','','','2012-12-11 13:31:24','2012-12-11 04:31:24','',402,'http://49.212.213.226/wordpress/solution-log/?p=767',0,'revision','',0),(768,1,'2013-02-27 13:50:09','2013-02-27 04:50:09','そろそろPHPに見切りをつけようと思い、Rubyの勉強のためRuby環境をローカルに構築する。\r\n\r\n<h4>libyamlのインストール</h4>\r\nRubyをyumで入れると、1.8系しか入らないのでソースから入れる事にする。\r\n\r\nまず<a href=\"http://pyyaml.org/wiki/LibYAML\">libyaml</a>をインストール。libyaml-0.so.2等が/usr/local/lib以下にインストールされるように<b>./configure --prefix=/usr/local</b>を指定。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=/usr/local\r\nmake\r\nsudo make install\r\n</pre>\r\n\r\n<h4>rubyのインストール</h4>\r\nRubyをインストール。最新版は<a href=\"ftp://ftp.ruby-lang.org/pub/ruby/\">ここ</a>から確認出来る。\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install</pre>\r\n\r\n<h4>rubygemsのインストール</h4>\r\nRuby1.9より標準で組み込まれているのでそれより以前のバージョンを使うときのみ手動でインストールする。\r\n\r\n\r\n<h4>Railsのインストール</h4>\r\n<pre class=\"brush: bash\">gem install rails</pre>\r\n結構時間がかかる。Rdocとかかなりの数をインストールするみたいな感じ。\r\n\r\n<h4>Passenger のインストール</h4>\r\nRailsとApacheを連動させるPasssengerをインストールする。これがないと基本的にRailsが動かない。\r\n<pre class=\"brush: bash\">gem install passenger\r\npassenger-install-apache2-module</pre>\r\nこのプロセスでエラーが出て必要ライブラリをインストールするように指示が出た場合は、各ライブラリをインストールしなおしてRubyを再コンパイル\r\n<pre class=\"brush: bash\">cd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p286.tar.gz\r\ntar zxvf ruby-1.9.3-p286.tar.gz\r\ncd ruby-1.9.3-p286\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nsudo make install&lt;/pre&gt;\r\nvim /etc/httpd/conf.d/ruby-passenger.conf\r\n\r\n#######################ruby-passenger.conf は以下の通り作成\r\nLoadModule passenger_module /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/lib/ruby/gems/1.8/gems/passenger-2.2.9\r\nPassengerRuby /usr/bin/ruby\r\n#######################\r\n</pre>\r\n\r\n<h4>FastCGI（fcgi）のインストール</h4>\r\nhttp://www.movabletype.jp/documentation/developer/server/fastcgi.html\r\nとりあえず一休み。。。\r\n\r\n<h4>RDTキットのインストール</h4>\r\nhttp://www.kkaneko.com/rinkou/javaintro/ruby.html','CentOS6.3にRuby1.9をインストールする','','inherit','open','open','','13-revision-15','','','2013-02-27 13:50:09','2013-02-27 04:50:09','',13,'http://49.212.213.226/wordpress/solution-log/?p=768',0,'revision','',0),(769,1,'2013-03-17 00:59:08','2013-03-16 15:59:08','<a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">こちらのサイト</a>を参考にした。\r\n\r\n\r\n\r\n<h3>Passengerのインストール</h3>\r\n<a href=\"http://www.modrails.com/\">Phusion Passenger</a>をインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n</pre>\r\n\r\n\r\n\r\n<h3>PassengerのApache用モジュールのインストールと設定</h3>\r\n<pre class=\"brush: bash\">\r\npassenger-install-apache2-module\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』を作成し「<b>passenger-install-apache2-module --snippet</b>」で表示される設定を書き込む。\r\n<pre class=\"brush: bash\">\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apacheの起動および自動起動の設定</h3>\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n\r\n\r\n<h3>Apache上のPassengerでRedmineを実行するための設定</h3>\r\nサブディレクトリでRedmineを実行する設定をする。シンボリックリンクを作成し、URLのディレクトリ名部分で使いたい名前を設定する。\r\n<pre class=\"brush: bash\">\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n</pre>\r\n『<b>/etc/httpd/conf.d/passenger.conf</b>』に以下の設定を追加。\r\n<pre class=\"brush: bash\">\r\nRackBaseURI /redmine\r\n</pre>\r\nまた<a href=\"./?p=605\">Redmineインストールディレクトリの権限の設定</a>も行う事。\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n</pre>\r\n設定後、Apacheを再起動。\r\n<pre class=\"brush: bash\">\r\n/etc/init.d/httpd configtest\r\n/etc/init.d/httpd graceful\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/redmine-2_1-installation_centos/\">Redmine 2.1をCentOS 6.3にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','CentOS6.3でApache上でRedmineを実行する','','inherit','open','open','','459-revision-8','','','2013-03-17 00:59:08','2013-03-16 15:59:08','',459,'http://49.212.213.226/wordpress/solution-log/?p=769',0,'revision','',0),(770,1,'2013-03-18 20:50:45','2013-03-18 11:50:45','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cacheのインストール確認を行う</h3>\r\n想定される環境だと<b>mod_cache</b>および<b>mod_disk_cache</b>は既にインストール済み。\r\n<pre class=\"brush: bash\">\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\n「<b>/etc/httpd/conf.d/cache.conf</b>」にモジュールの設定を書く。<a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">マニュアル</a>によると「<b>CacheDirLevelsの値 X CacheDirLengthの値</b>」は「<b>20</b>」以下でなければならないので注意。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュデータの保存先\r\n        CacheRoot /var/cache/apache\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n　　　　# キャッシュデータを保管するディレクトリの階層の深さ\r\n        CacheDirLevels 5\r\n\r\n        # キャッシュデータを保管するディレクトリの文字数\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n\r\n# キャッシュ保管ディレクトリの権限を変更しておく\r\nmkdir /var/cache/apache\r\nchown apache:apache /var/cache/apache\r\n\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.machu.jp/diary/20100626.html#p01\">Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)</a>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">mod_disk_cache - Apache HTTP サーバ</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','publish','open','open','','centos6%e3%81%aeapache%e3%81%a7mod_cache%e3%82%92%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b','','','2013-03-18 20:50:45','2013-03-18 11:50:45','',0,'http://49.212.213.226/wordpress/solution-log/?p=770',0,'post','',0),(771,1,'2013-03-18 20:36:13','2013-03-18 11:36:13','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\n\n<h3>mod_cahceの設定を行う</h3>\nディフォルトだとmod_cache、mod_disk_cacheは既にインストール済みなので「/etc/httpd/conf.d/cache.conf」にモジュールの設定を書く\n\n<pre class=\"brush: bash\">\n# mod_cacheがインストールされているか確認\nhttpd -M | grep cache\nSyntax OK\ncache_module (shared)\ndisk_cache_module (shared)\n\nvi /etc/httpd/conf.d/cache.conf\n# LoadModule cache_module modules/mod_cache.so\n# LoadModule disk_cache_module modules/mod_disk_cache.so\n\n&lt;IfModule mod_cache.c&gt;\n    &lt;IfModule mod_disk_cache.c&gt;\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\n        CacheIgnoreCacheControl On\n\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\n        CacheIgnoreNoLastMod On\n\n        # Set-Cookie ヘッダをキャッシュしない\n        CacheIgnoreHeaders Set-Cookie\n\n        # キャッシュ対象とするパスの指定\n        CacheEnable disk /\n\n        # キャッシュを保存するディレクトリ\n        CacheRoot /var/cache/apache\n\n        CacheDirLevels 5\n        CacheDirLength 3\n    &lt;/IfModule&gt;\n&lt;/IfModule&gt;\n\n# Apacheを再起動する\nservice httpd restart\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\n<li>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision','','','2013-03-18 20:36:13','2013-03-18 11:36:13','',770,'http://49.212.213.226/wordpress/solution-log/?p=771',0,'revision','',0),(772,1,'2013-03-18 20:38:10','2013-03-18 11:38:10','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\n\n<h3>mod_cahceの設定を行う</h3>\nディフォルトだとmod_cache、mod_disk_cacheは既にインストール済みなので「/etc/httpd/conf.d/cache.conf」にモジュールの設定を書く\n\n<pre class=\"brush: bash\">\n# mod_cacheがインストールされているか確認\nhttpd -M | grep cache\nSyntax OK\ncache_module (shared)\ndisk_cache_module (shared)\n\nvi /etc/httpd/conf.d/cache.conf\n# LoadModule cache_module modules/mod_cache.so\n# LoadModule disk_cache_module modules/mod_disk_cache.so\n\n&lt;IfModule mod_cache.c&gt;\n    &lt;IfModule mod_disk_cache.c&gt;\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\n        CacheIgnoreCacheControl On\n\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\n        CacheIgnoreNoLastMod On\n\n        # Set-Cookie ヘッダをキャッシュしない\n        CacheIgnoreHeaders Set-Cookie\n\n        # キャッシュ対象とするパスの指定\n        CacheEnable disk /\n\n        # キャッシュを保存するディレクトリ\n        CacheRoot /var/cache/apache\n\n        CacheDirLevels 5\n        CacheDirLength 3\n    &lt;/IfModule&gt;\n&lt;/IfModule&gt;\n\n# Apacheを再起動する\nservice httpd restart\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\n<li><a href=\"mod_disk_cache - Apache HTTP サーバ\">http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html</a>\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-2','','','2013-03-18 20:38:10','2013-03-18 11:38:10','',770,'http://49.212.213.226/wordpress/solution-log/?p=772',0,'revision','',0),(773,1,'2013-03-18 20:38:45','2013-03-18 11:38:45','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\nディフォルトだとmod_cache、mod_disk_cacheは既にインストール済みなので「/etc/httpd/conf.d/cache.conf」にモジュールの設定を書く\r\n\r\n<pre class=\"brush: bash\">\r\n# mod_cacheがインストールされているか確認\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n        # キャッシュを保存するディレクトリ\r\n        CacheRoot /var/cache/apache\r\n\r\n        CacheDirLevels 5\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n</pre>\r\n\r\n<pre class=\"brush: bash\">\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\r\n<li><a href=\"mod_disk_cache - Apache HTTP サーバ\">http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-3','','','2013-03-18 20:38:45','2013-03-18 11:38:45','',770,'http://49.212.213.226/wordpress/solution-log/?p=773',0,'revision','',0),(774,1,'2013-03-18 20:41:21','2013-03-18 11:41:21','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cacheのインストール確認を行う</h3>\r\n想定される環境だと<b>mod_cache</b>および<b>mod_disk_cache</b>は既にインストール済み。\r\n<pre class=\"brush: bash\">\r\n# mod_cacheがインストールされているか確認\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\n「<b>/etc/httpd/conf.d/cache.conf</b>」にモジュールの設定を書く\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n        # キャッシュを保存するディレクトリ\r\n        CacheRoot /var/cache/apache\r\n\r\n        CacheDirLevels 5\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\r\n<li><a href=\"mod_disk_cache - Apache HTTP サーバ\">http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-4','','','2013-03-18 20:41:21','2013-03-18 11:41:21','',770,'http://49.212.213.226/wordpress/solution-log/?p=774',0,'revision','',0),(775,1,'2013-03-18 20:48:07','2013-03-18 11:48:07','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cacheのインストール確認を行う</h3>\r\n想定される環境だと<b>mod_cache</b>および<b>mod_disk_cache</b>は既にインストール済み。\r\n<pre class=\"brush: bash\">\r\n# mod_cacheがインストールされているか確認\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\n「<b>/etc/httpd/conf.d/cache.conf</b>」にモジュールの設定を書く。<a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">マニュアル</a>によると「<b>CacheDirLevelsの値 X CacheDirLengthの値</b>」は「<b>20</b>」以下でなければならないので注意。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュデータの保存先\r\n        CacheRoot /var/cache/apache\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n　　　　# キャッシュデータを保管するディレクトリの階層の深さ\r\n        CacheDirLevels 5\r\n\r\n        # キャッシュデータを保管するディレクトリの文字数\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n\r\n# キャッシュ保管ディレクトリの権限を変更しておく\r\nmkdir /var/cache/apache\r\nchown apache:apache /var/cache/apache\r\n\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\r\n<li><a href=\"mod_disk_cache - Apache HTTP サーバ\">http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-5','','','2013-03-18 20:48:07','2013-03-18 11:48:07','',770,'http://49.212.213.226/wordpress/solution-log/?p=775',0,'revision','',0),(776,1,'2013-03-18 20:48:33','2013-03-18 11:48:33','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cacheのインストール確認を行う</h3>\r\n想定される環境だと<b>mod_cache</b>および<b>mod_disk_cache</b>は既にインストール済み。\r\n<pre class=\"brush: bash\">\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\n「<b>/etc/httpd/conf.d/cache.conf</b>」にモジュールの設定を書く。<a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">マニュアル</a>によると「<b>CacheDirLevelsの値 X CacheDirLengthの値</b>」は「<b>20</b>」以下でなければならないので注意。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュデータの保存先\r\n        CacheRoot /var/cache/apache\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n　　　　# キャッシュデータを保管するディレクトリの階層の深さ\r\n        CacheDirLevels 5\r\n\r\n        # キャッシュデータを保管するディレクトリの文字数\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n\r\n# キャッシュ保管ディレクトリの権限を変更しておく\r\nmkdir /var/cache/apache\r\nchown apache:apache /var/cache/apache\r\n\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)\">http://www.machu.jp/diary/20100626.html#p01</a>\r\n<li><a href=\"mod_disk_cache - Apache HTTP サーバ\">http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-6','','','2013-03-18 20:48:33','2013-03-18 11:48:33','',770,'http://49.212.213.226/wordpress/solution-log/?p=776',0,'revision','',0),(777,1,'2013-03-18 20:50:33','2013-03-18 11:50:33','Redmineが若干早くなるかもしれないのでmod_cacheを設定してみた。\r\n\r\n<h3>mod_cacheのインストール確認を行う</h3>\r\n想定される環境だと<b>mod_cache</b>および<b>mod_disk_cache</b>は既にインストール済み。\r\n<pre class=\"brush: bash\">\r\nhttpd -M | grep cache\r\nSyntax OK\r\ncache_module (shared)\r\ndisk_cache_module (shared)\r\n</pre>\r\n\r\n<h3>mod_cahceの設定を行う</h3>\r\n「<b>/etc/httpd/conf.d/cache.conf</b>」にモジュールの設定を書く。<a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">マニュアル</a>によると「<b>CacheDirLevelsの値 X CacheDirLengthの値</b>」は「<b>20</b>」以下でなければならないので注意。\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/cache.conf\r\n\r\n# 以下を書き込む\r\n# LoadModule cache_module modules/mod_cache.so\r\n# LoadModule disk_cache_module modules/mod_disk_cache.so\r\n\r\n&lt;IfModule mod_cache.c&gt;\r\n    &lt;IfModule mod_disk_cache.c&gt;\r\n        # リクエストの Cache-Control: no-cache ヘッダを無視してキャッシュを返す\r\n        CacheIgnoreCacheControl On\r\n\r\n        # レスポンスにLast-Modifiedヘッダがなくてもキャッシュ対象にする\r\n        CacheIgnoreNoLastMod On\r\n\r\n        # Set-Cookie ヘッダをキャッシュしない\r\n        CacheIgnoreHeaders Set-Cookie\r\n\r\n        # キャッシュデータの保存先\r\n        CacheRoot /var/cache/apache\r\n\r\n        # キャッシュ対象とするパスの指定\r\n        CacheEnable disk /\r\n\r\n　　　　# キャッシュデータを保管するディレクトリの階層の深さ\r\n        CacheDirLevels 5\r\n\r\n        # キャッシュデータを保管するディレクトリの文字数\r\n        CacheDirLength 3\r\n    &lt;/IfModule&gt;\r\n&lt;/IfModule&gt;\r\n\r\n# キャッシュ保管ディレクトリの権限を変更しておく\r\nmkdir /var/cache/apache\r\nchown apache:apache /var/cache/apache\r\n\r\n# Apacheを再起動する\r\nservice httpd restart\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.machu.jp/diary/20100626.html#p01\">Apache の mod_cache で日記の高速化に挑戦してみた - まちゅダイアリー(2010-06-26)</a>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_disk_cache.html\">mod_disk_cache - Apache HTTP サーバ</a>\r\n</ul>','CentOS6のApacheでmod_cacheを設定する','','inherit','open','open','','770-revision-7','','','2013-03-18 20:50:33','2013-03-18 11:50:33','',770,'http://49.212.213.226/wordpress/solution-log/?p=777',0,'revision','',0),(778,1,'2013-03-18 21:20:45','2013-03-18 12:20:45','現在のところ使い勝手が良いfarend fancyをインストールする。\r\n\r\n<a href=\"https://github.com/farend/redmine_theme_farend_fancy\">https://github.com/farend/redmine_theme_farend_fancy</a>へアクセス→Git-Read-OnlyのURLを参照し、「<b>/redmine-install-dir/public/themes/</b>」に<b>git cloneコマンド</b>で配置する。','Redmineにテーマをインストールする','','publish','open','open','','redmine%e3%81%ab%e3%83%86%e3%83%bc%e3%83%9e%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-18 21:26:03','2013-03-18 12:26:03','',0,'http://49.212.213.226/wordpress/solution-log/?p=778',0,'post','',0),(779,1,'2013-03-18 21:19:55','2013-03-18 12:19:55','現在のところ使い勝手が良いfarend fancyをインストールする。\n\n<a href=\"https://github.com/farend/redmine_theme_farend_basic\">https://github.com/farend/redmine_theme_farend_basic</a>へアクセス→Git-Read-OnlyのURLを参照し、「/redmine-install-dir/public/themes/」にgit cloneコマンドで配置する。','Redmineにテーマをインストールする','','inherit','open','open','','778-revision','','','2013-03-18 21:19:55','2013-03-18 12:19:55','',778,'http://49.212.213.226/wordpress/solution-log/?p=779',0,'revision','',0),(780,1,'2013-03-18 21:20:21','2013-03-18 12:20:21','現在のところ使い勝手が良いfarend fancyをインストールする。\r\n\r\n<a href=\"https://github.com/farend/redmine_theme_farend_basic\">https://github.com/farend/redmine_theme_farend_basic</a>へアクセス→Git-Read-OnlyのURLを参照し、「<b>/redmine-install-dir/public/themes/</b>」に<b>git cloneコマンド</b>で配置する。','Redmineにテーマをインストールする','','inherit','open','open','','778-revision-2','','','2013-03-18 21:20:21','2013-03-18 12:20:21','',778,'http://49.212.213.226/wordpress/solution-log/?p=780',0,'revision','',0),(781,1,'2013-03-18 21:20:45','2013-03-18 12:20:45','現在のところ使い勝手が良いfarend fancyをインストールする。\r\n\r\n<a href=\"https://github.com/farend/redmine_theme_farend_basic\">https://github.com/farend/redmine_theme_farend_basic</a>へアクセス→Git-Read-OnlyのURLを参照し、「<b>/redmine-install-dir/public/themes/</b>」に<b>git cloneコマンド</b>で配置する。','Redmineにテーマをインストールする','','inherit','open','open','','778-revision-3','','','2013-03-18 21:20:45','2013-03-18 12:20:45','',778,'http://49.212.213.226/wordpress/solution-log/?p=781',0,'revision','',0),(782,1,'2013-03-20 22:49:05','2013-03-20 13:49:05','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\r\n\r\n<h3>VLC media playerのインストール準備</h3>\r\nVLC media playerのインストールには<a href=\"./?p=542\">Remi</a>、<a href=\"./?p=548\">EPEL</a>、RPMFusionがインストールされている必要がある。\r\n\r\n<pre class=\"brush: bash\">\r\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm\r\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm\r\n</pre>\r\n\r\n<h3>VLC media playerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi-test info vlc # パッケージの確認\r\nyum --enablerepo=remi-test install vlc\r\n</pre>\r\n\r\n\r\n動画を再生する場合はCentOS6のデスクトップメニューから「<b>アプリケーション</b>」→「<b>サウンドとビデオ</b>」→「<b>動画プレイヤー</b>」から<b>VLC media player</b>を起動させる。\r\n\r\nサポートされないフォーマットのファイルは<b>VLC media player</b>のインストラクションに従いプラグイン等をインストールする。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.videolan.org/vlc/\">VideoLAN - Official page for VLC media player, the Open Source video framework!</a>\r\n<li><a href=\"http://www.tecmint.com/install-vlc-media-player-in-rhel-centos-6-3-5-6-fedora-17-12/\">Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</a>\r\n</ul>','CentOS6で動画を閲覧する','','publish','open','open','','centos6%e3%81%a7%e5%8b%95%e7%94%bb%e3%82%92%e9%96%b2%e8%a6%a7%e3%81%99%e3%82%8b','','','2013-03-20 22:49:05','2013-03-20 13:49:05','',0,'http://49.212.213.226/wordpress/solution-log/?p=782',0,'post','',0),(783,1,'2013-03-20 22:45:58','2013-03-20 13:45:58','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\n\n<h3>VLC media playerのインストール準備</h3>\nVLC media playerのインストールにはRemi、EPEL、RPMFusionがインストールされている必要がある。Remiのインストール方法はこちらを参照。EPELのインストール方法はこちらを参照。\n\n<pre class=\"brush: bash\">\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm\n</pre>\n\n<h3>VLC media playerをインストールする</h3>\n<pre class=\"brush: bash\">\nyum --enablerepo=remi-test info vlc # パッケージの確認\nyum --enablerepo=remi-test install vlc\n</pre>\n\n\n動画を再生する場合はCentOS6のデスクトップメニューから「<b>アプリケーション</b>」→「<b>サウンドとビデオ</b>」→「<b>動画プレイヤー</b>」から<b>VLC media player</b>を起動させる。\n\n再生出来ないファイルは<b>VLC media player</b>のインストラクションに従いプラグイン等をインストールする。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.tecmint.com/install-vlc-media-player-in-rhel-centos-6-3-5-6-fedora-17-12/\">Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</a>\n<li><a href=\"http://www.videolan.org/vlc/\">VideoLAN - Official page for VLC media player, the Open Source video framework!</a>\n</ul>','CentOS6で動画を閲覧する','','inherit','open','open','','782-revision','','','2013-03-20 22:45:58','2013-03-20 13:45:58','',782,'http://49.212.213.226/wordpress/solution-log/?p=783',0,'revision','',0),(784,1,'2013-03-20 22:46:58','2013-03-20 13:46:58','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\n\n<h3>VLC media playerのインストール準備</h3>\nVLC media playerのインストールにはRemi、EPEL、RPMFusionがインストールされている必要がある。Remiのインストール方法はこちらを参照。EPELのインストール方法はこちらを参照。\n\n<pre class=\"brush: bash\">\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm\n</pre>\n\n<h3>VLC media playerをインストールする</h3>\n<pre class=\"brush: bash\">\nyum --enablerepo=remi-test info vlc # パッケージの確認\nyum --enablerepo=remi-test install vlc\n</pre>\n\n\n動画を再生する場合はCentOS6のデスクトップメニューから「<b>アプリケーション</b>」→「<b>サウンドとビデオ</b>」→「<b>動画プレイヤー</b>」から<b>VLC media player</b>を起動させる。\n\nサポートされないフォーマットのファイルは<b>VLC media player</b>のインストラクションに従いプラグイン等をインストールする。\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.tecmint.com/install-vlc-media-player-in-rhel-centos-6-3-5-6-fedora-17-12/\">Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</a>\n<li><a href=\"http://www.videolan.org/vlc/\">VideoLAN - Official page for VLC media player, the Open Source video framework!</a>\n</ul>','CentOS6で動画を閲覧する','','inherit','open','open','','782-revision-2','','','2013-03-20 22:46:58','2013-03-20 13:46:58','',782,'http://49.212.213.226/wordpress/solution-log/?p=784',0,'revision','',0),(785,1,'2013-03-20 22:48:05','2013-03-20 13:48:05','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\r\n\r\n<h3>VLC media playerのインストール準備</h3>\r\nVLC media playerのインストールには<a href=\"./?p=542\">Remi</a>、<a href=\"./?p=548\">EPEL</a>、RPMFusionがインストールされている必要がある。\r\n\r\n<pre class=\"brush: bash\">\r\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/free/el/updates/6/i386/rpmfusion-free-release-6-1.noarch.rpm\r\nyum localinstall --nogpgcheck http://download1.rpmfusion.org/nonfree/el/updates/6/i386/rpmfusion-nonfree-release-6-1.noarch.rpm\r\n</pre>\r\n\r\n<h3>VLC media playerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=remi-test info vlc # パッケージの確認\r\nyum --enablerepo=remi-test install vlc\r\n</pre>\r\n\r\n\r\n動画を再生する場合はCentOS6のデスクトップメニューから「<b>アプリケーション</b>」→「<b>サウンドとビデオ</b>」→「<b>動画プレイヤー</b>」から<b>VLC media player</b>を起動させる。\r\n\r\nサポートされないフォーマットのファイルは<b>VLC media player</b>のインストラクションに従いプラグイン等をインストールする。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.tecmint.com/install-vlc-media-player-in-rhel-centos-6-3-5-6-fedora-17-12/\">Install VLC (Media Player) in RHEL/CentOS 6.3/5.6, Fedora 17-1</a>\r\n<li><a href=\"http://www.videolan.org/vlc/\">VideoLAN - Official page for VLC media player, the Open Source video framework!</a>\r\n</ul>','CentOS6で動画を閲覧する','','inherit','open','open','','782-revision-3','','','2013-03-20 22:48:05','2013-03-20 13:48:05','',782,'http://49.212.213.226/wordpress/solution-log/?p=785',0,'revision','',0),(787,1,'2013-03-25 10:42:01','2013-03-25 01:42:01','<h3>VMWare Playerをインストールする</h3>\r\nhttps://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0\r\n\r\nさくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある\r\nhttp://communities.vmware.com/docs/DOC-8970\r\nvmx.allowNested = TRUE\r\n\r\n\r\nローカルのCentOSでEpson LP-S2000を使う場合は、ドライバをインストールした後、一度電源を入れて認識させ、プリンタを削除してもう一度接続し直す。\r\n\r\n<h3>VMWare Playerをアンインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n/usr/bin/vmware-installer -u vmware-player\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\r\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\r\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\r\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%aecentos%e3%81%abvmware-player-windows-xp%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-03-25 13:09:55','2013-03-25 04:09:55','',0,'http://49.212.213.226/wordpress/solution-log/?p=787',0,'post','',0),(788,1,'2013-03-25 10:40:29','2013-03-25 01:40:29','<h3>VMWare Playerをインストールする</h3>\n\n\n\n<h3>VMWare Playerをアンインストールする</h3>\n<pre class=\"brash: bash\">\n/usr/bin/vmware-installer -u vmware-player\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\n<li>VMware Communities: Running Nested VMs\n<li>\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-revision','','','2013-03-25 10:40:29','2013-03-25 01:40:29','',787,'http://49.212.213.226/wordpress/solution-log/?p=788',0,'revision','',0),(789,1,'2013-03-25 10:41:29','2013-03-25 01:41:29','<h3>VMWare Playerをインストールする</h3>\n\n\n\n<h3>VMWare Playerをアンインストールする</h3>\n<pre class=\"brash: bash\">\n/usr/bin/vmware-installer -u vmware-player\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-revision-2','','','2013-03-25 10:41:29','2013-03-25 01:41:29','',787,'http://49.212.213.226/wordpress/solution-log/?p=789',0,'revision','',0),(790,1,'2013-03-25 10:41:47','2013-03-25 01:41:47','<h3>VMWare Playerをインストールする</h3>\r\n\r\n\r\n\r\n<h3>VMWare Playerをアンインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n/usr/bin/vmware-installer -u vmware-player\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\r\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\r\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\r\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-revision-3','','','2013-03-25 10:41:47','2013-03-25 01:41:47','',787,'http://49.212.213.226/wordpress/solution-log/?p=790',0,'revision','',0),(791,1,'2013-03-25 13:09:39','2013-03-25 04:09:39','<h3>VMWare Playerをインストールする</h3>\nhttps://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0\n\nさくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある\nhttp://communities.vmware.com/docs/DOC-8970\nvmx.allowNested = TRUE\n\n\nローカルのCentOSでEpson LP-S2000を使う場合は、ドライバをインストールした後、一度電源を入れて認識させ、どらいばw\n\n<h3>VMWare Playerをアンインストールする</h3>\n<pre class=\"brush: bash\">\n/usr/bin/vmware-installer -u vmware-player\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-autosave','','','2013-03-25 13:09:39','2013-03-25 04:09:39','',787,'http://49.212.213.226/wordpress/solution-log/?p=791',0,'revision','',0),(792,1,'2013-03-25 10:42:01','2013-03-25 01:42:01','<h3>VMWare Playerをインストールする</h3>\r\n\r\n\r\n\r\n<h3>VMWare Playerをアンインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n/usr/bin/vmware-installer -u vmware-player\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\r\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\r\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\r\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-revision-4','','','2013-03-25 10:42:01','2013-03-25 01:42:01','',787,'http://49.212.213.226/wordpress/solution-log/?p=792',0,'revision','',0),(793,1,'2013-03-25 10:57:02','2013-03-25 01:57:02','<h3>VMWare Playerをインストールする</h3>\r\nhttps://my.vmware.com/web/vmware/free#desktop_end_user_computing/vmware_player/5_0\r\n\r\nさくらのVPSからVMWare Playerを使うにはバイバスを通す必要がある\r\nhttp://communities.vmware.com/docs/DOC-8970\r\nvmx.allowNested = TRUE\r\n\r\n\r\n\r\n<h3>VMWare Playerをアンインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n/usr/bin/vmware-installer -u vmware-player\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://communities.vmware.com/message/2000733\">VMware Communities: VMware Player connot run on this CPU</a>\r\n<li><a href=\"http://communities.vmware.com/docs/DOC-8970\">VMware Communities: Running Nested VMs</a>\r\n<li><a href=\"http://www.netdip.com/uninstall-vmware-player-20d/\">Uninstall Vmware Player</a>\r\n</u>','さくらのVPSのCentOSにVMWare Player + Windows XPをインストールする','','inherit','open','open','','787-revision-5','','','2013-03-25 10:57:02','2013-03-25 01:57:02','',787,'http://49.212.213.226/wordpress/solution-log/?p=793',0,'revision','',0),(794,1,'2013-03-12 23:31:38','2013-03-12 14:31:38','<h3>SSH接続ポート番号を指定する</h3>\r\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\r\n\r\n<h3>ポートフォワーディングで接続確認をする</h3>\r\nポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う\r\n<pre class=\"brush: bash\">\r\n# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名]\r\n\r\n$ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user\r\n</pre>\r\n\r\n<h3>VNC Viewerを起動する</h3>\r\nローカルマシーンで以下のコマンドで起動させる。\r\n<pre class=\"brush: bash\">\r\nvncviewer -via {vncuser}@{hostname} localhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\r\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\r\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2013-03-12 23:31:38','2013-03-12 14:31:38','',687,'http://49.212.213.226/wordpress/solution-log/?p=794',0,'revision','',0),(795,1,'2013-02-14 15:52:14','2013-02-14 06:52:14','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\nポートフォワーディングについては別エントリーで。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-02-14 15:52:14','2013-02-14 06:52:14','',646,'http://49.212.213.226/wordpress/solution-log/?p=795',0,'revision','',0),(796,1,'2013-03-26 10:58:47','2013-03-26 01:58:47','<h3>SSH接続ポート番号を指定する</h3>\r\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\r\n\r\n<h3>ポートフォワーディングで接続確認をする</h3>\r\nポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う\r\n<pre class=\"brush: bash\">\r\n# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名]\r\n\r\n$ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user\r\n</pre>\r\n\r\n<h3>VNC Viewerを起動する</h3>\r\nVNC SERVERの設定をポートフォワーディング用に設定する。\r\n<pre class=\"brush: bash\">\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 2560x800 -localhost&quot;\r\n</pre>\r\n\r\nローカルマシーンで以下のコマンドで起動させる。\r\n<pre class=\"brush: bash\">\r\nvncviewer -via {vncuser}@{hostname} localhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\r\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\r\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2013-03-26 10:58:47','2013-03-26 01:58:47','',687,'http://49.212.213.226/wordpress/solution-log/?p=796',0,'revision','',0),(797,1,'2013-03-31 20:49:29','2013-03-31 11:49:29','実験的にやってみる。\r\n\r\n<h3>libyamlをインストールする</h3>\r\n後々色々とエラーが出るので必ずインストールする！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=~/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Rubyをインストールする</h3>\r\nRubyは2.0をインストールする\r\n<pre class=\"brush: bash\">\r\ncd $HOME/local/src\r\nwget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz \r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc --prefix=$HOME/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>.cshrcを変更する</h3>\r\n新たにインストールしたRubyにパスを通す\r\n<pre class=\"brush: bash\">\r\nvi $HOME/.cshrc\r\n# set pathに$HOME/local/binを追加\r\n\r\n# .cshrcを反映させる\r\nsource $HOME/.cshrc\r\n\r\n# Rubyのパスを調べる\r\nwhich ruby\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\ncd $HOME/www\r\nwget http://www.redmine.org/releases/redmine-2.4.2.tar.gz\r\ntar zxvf redmine-2.4.2.tar.gz\r\nmv redmine-2.4.2 redmine\r\n\r\ngem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない\r\ngem install bundler --no-rdoc --no-ri\r\n\r\ncd /redmine-install-dir\r\nbundle install --without development test\r\n\r\n\r\nbundle exec rake generate_secret_token\r\nrake db:migrate RAILS_ENV=production\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n<pre class=\"brush: bash\">\r\nruby /redmine-install-dir/script/rails server webrick -e production\r\n</pre>\r\nhttp://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://t100life.blog121.fc2.com/blog-entry-148.html\">さくらインターネットに、RedMineをインストールする。 @ t100のプログラミング脱出作戦</a>\r\n<li><a href=\"http://stackoverflow.com/questions/15721588/cant-run-server-or-bundle-update\">ruby on rails - can&#39;t run server or bundle update - Stack Overflow</a>\r\n<li><a href=\"http://serverfault.com/questions/442150/how-to-fix-ruby-installation-is-missing-psych-for-yaml-output-on-centos\">How to fix &quot;ruby installation is missing psych (for YAML output).&quot; on CentOS? - Server Fault</a>\r\n<li><a href=\"http://d.hatena.ne.jp/mikage014/20091021/p1\">ソースからインストールしたRuby 1.9.1をアンインストールする方法 - mikage014の日記</a>\r\n<li><a href=\"http://mcnc.jp/wiki/wikird/index.php?Linux%2F%A5%DE%A5%CB%A5%E5%A5%A2%A5%EB%2Fweb%2FRedmine%2F%A4%B5%A4%AF%A4%E9%A5%B5%A1%BC%A5%D0%A4%D8%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB\">Linux/マニュアル/web/Redmine/さくらサーバへインストール - mechanical Wiki</a>\r\n</ul>','さくらのスタンダードにRedmineをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%ae%e3%82%b9%e3%82%bf%e3%83%b3%e3%83%80%e3%83%bc%e3%83%89%e3%81%abredmine%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2014-01-02 00:04:03','2014-01-01 15:04:03','',0,'http://49.212.213.226/wordpress/solution-log/?p=797',0,'post','',0),(798,1,'2013-03-31 20:48:55','2013-03-31 11:48:55','実験的にやってみる。\n\n<h3>Rubyをインストールする</h3>\n','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-revision-v1','','','2013-03-31 20:48:55','2013-03-31 11:48:55','',797,'http://49.212.213.226/wordpress/solution-log/?p=798',0,'revision','',0),(799,1,'2014-01-02 00:03:24','2014-01-01 15:03:24','実験的にやってみる。\r\n\r\n<h3>libyamlをインストールする</h3>\r\n後々色々とエラーが出るので必ずインストールする！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=~/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Rubyをインストールする</h3>\r\nRubyは2.0をインストールする\r\n<pre class=\"brush: bash\">\r\ncd $HOME/local/src\r\nwget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz \r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc --prefix=$HOME/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>.cshrcを変更する</h3>\r\n新たにインストールしたRubyにパスを通す\r\n<pre class=\"brush: bash\">\r\nvi $HOME/.cshrc\r\n# set pathに$HOME/local/binを追加\r\n\r\n# .cshrcを反映させる\r\nsource $HOME/.cshrc\r\n\r\n# Rubyのパスを調べる\r\nwhich ruby\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\ncd $HOME/www\r\nwget http://www.redmine.org/releases/redmine-2.4.2.tar.gz\r\ntar zxvf redmine-2.4.2.tar.gz\r\nmv redmine-2.4.2 redmine\r\n\r\ngem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない\r\ngem install bundler --no-rdoc --no-ri\r\n\r\ncd /redmine-install-dir\r\nbundle install --without development test\r\n\r\n\r\nbundle exec rake generate_secret_token\r\nrake db:migrate RAILS_ENV=production\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n<pre class=\"brush: bash\">\r\nruby /redmine-install-dir/script/rails server webrick -e production\r\n</pre>\r\nhttp://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://t100life.blog121.fc2.com/blog-entry-148.html\">さくらインターネットに、RedMineをインストールする。 @ t100のプログラミング脱出作戦</a>\r\n<li><a href=\"http://stackoverflow.com/questions/15721588/cant-run-server-or-bundle-update\">ruby on rails - can&#39;t run server or bundle update - Stack Overflow</a>\r\n<li><a href=\"http://serverfault.com/questions/442150/how-to-fix-ruby-installation-is-missing-psych-for-yaml-output-on-centos\">How to fix &quot;ruby installation is missing psych (for YAML output).&quot; on CentOS? - Server Fault</a>\r\n<li><a href=\"http://d.hatena.ne.jp/mikage014/20091021/p1\">ソースからインストールしたRuby 1.9.1をアンインストールする方法 - mikage014の日記</a>\r\n<li><a href=\"http://mcnc.jp/wiki/wikird/index.php?Linux%2F%A5%DE%A5%CB%A5%E5%A5%A2%A5%EB%2Fweb%2FRedmine%2F%A4%B5%A4%AF%A4%E9%A5%B5%A1%BC%A5%D0%A4%D8%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB\">Linux/マニュアル/web/Redmine/さくらサーバへインストール - mechanical Wiki</a>\r\n</ul>','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-autosave-v1','','','2014-01-02 00:03:24','2014-01-01 15:03:24','',797,'http://49.212.213.226/wordpress/solution-log/?p=799',0,'revision','',0),(800,1,'2013-03-31 20:49:29','2013-03-31 11:49:29','実験的にやってみる。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=brush: bash\">\r\n/home/smokingarage/local/lib/ruby/gems/1.9.1/gems/bundler-1.3.4/bin/bundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-revision-v1','','','2013-03-31 20:49:29','2013-03-31 11:49:29','',797,'http://49.212.213.226/wordpress/solution-log/?p=800',0,'revision','',0),(801,1,'2013-04-01 02:42:07','2013-03-31 17:42:07','実験的にやってみる。\r\n\r\n<h3>libyamlをインストールする</h3>\r\n後々色々とエラーが出るので必ずインストールする！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=~/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS6にソールからRubyをインストールする場合と若干違うので注意！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/home/{yourdomain}/local --enable-shared --disable-install-doc --with-opt-dir=/home/{yourdomain}/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\ncd /redmine-install-dir\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.3-stable redmine\r\n\r\ngem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない\r\ngem install bundler --no-rdoc --no-ri\r\n\r\ncd /redmine-install-dir\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\nrake db:migrate RAILS_ENV=production\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n<pre class=\"brush: bash\">\r\nruby /redmine-install-dir/script/rails server webrick -e production\r\n</pre>\r\nhttp://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://t100life.blog121.fc2.com/blog-entry-148.html\">さくらインターネットに、RedMineをインストールする。 @ t100のプログラミング脱出作戦</a>\r\n<li><a href=\"http://stackoverflow.com/questions/15721588/cant-run-server-or-bundle-update\">ruby on rails - can&#39;t run server or bundle update - Stack Overflow</a>\r\n</ul>','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-revision-v1','','','2013-04-01 02:42:07','2013-03-31 17:42:07','',797,'http://49.212.213.226/wordpress/solution-log/?p=801',0,'revision','',0),(802,1,'2013-04-01 02:46:29','2013-03-31 17:46:29','実験的にやってみる。\r\n\r\n<h3>libyamlをインストールする</h3>\r\n後々色々とエラーが出るので必ずインストールする！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=~/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS6にソールからRubyをインストールする場合と若干違うので注意！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/home/{yourdomain}/local --enable-shared --disable-install-doc --with-opt-dir=/home/{yourdomain}/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\ncd /redmine-install-dir\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.3-stable redmine\r\n\r\ngem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない\r\ngem install bundler --no-rdoc --no-ri\r\n\r\ncd /redmine-install-dir\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n\r\nrake db:migrate RAILS_ENV=production\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n<pre class=\"brush: bash\">\r\nruby /redmine-install-dir/script/rails server webrick -e production\r\n</pre>\r\nhttp://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://t100life.blog121.fc2.com/blog-entry-148.html\">さくらインターネットに、RedMineをインストールする。 @ t100のプログラミング脱出作戦</a>\r\n<li><a href=\"http://stackoverflow.com/questions/15721588/cant-run-server-or-bundle-update\">ruby on rails - can&#39;t run server or bundle update - Stack Overflow</a>\r\n<li><a href=\"http://serverfault.com/questions/442150/how-to-fix-ruby-installation-is-missing-psych-for-yaml-output-on-centos\">How to fix &quot;ruby installation is missing psych (for YAML output).&quot; on CentOS? - Server Fault</a>\r\n<li><a href=\"http://d.hatena.ne.jp/mikage014/20091021/p1\">ソースからインストールしたRuby 1.9.1をアンインストールする方法 - mikage014の日記</a>\r\n</ul>','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-revision-v1','','','2013-04-01 02:46:29','2013-03-31 17:46:29','',797,'http://49.212.213.226/wordpress/solution-log/?p=802',0,'revision','',0),(804,1,'2013-03-26 15:00:19','2013-03-26 06:00:19','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる\r\nyum groupinstall &quot;X Window System&quot;\r\n</pre>\r\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nservice vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\nポートフォワーディングについては<a href=\"./?p=687\">別エントリー</a>で。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2013-03-26 15:00:19','2013-03-26 06:00:19','',646,'http://49.212.213.226/wordpress/solution-log/?p=804',0,'revision','',0),(805,1,'2013-02-24 19:44:20','2013-02-24 10:44:20','Gitリポジトリの初期化の時に、共有オプションを有効にしないと以下のようなエラーがでる。\r\n<pre class=\"brush: bash\">\r\nremote: error: refusing to update checked out branch: refs/heads/master\r\nremote: error: By default, updating the current branch in a non-bare repository\r\nremote: error: is denied, because it will make the index and work tree inconsistent\r\nremote: error: with what you pushed, and will require &#039;git reset --hard&#039; to match\r\nremote: error: the work tree to HEAD.\r\nremote: error: \r\nremote: error: You can set &#039;receive.denyCurrentBranch&#039; configuration variable to\r\nremote: error: &#039;ignore&#039; or &#039;warn&#039; in the remote repository to allow pushing into\r\nremote: error: its current branch; however, this is not recommended unless you\r\nremote: error: arranged to update its work tree to match what you pushed in some\r\nremote: error: other way.\r\nremote: error: \r\nremote: error: To squelch this message and still keep the default behaviour, set\r\nremote: error: &#039;receive.denyCurrentBranch&#039; configuration variable to &#039;refuse&#039;.\r\n</pre>\r\n\r\n<h3>リモートにGitリポジトリを作成する</h3>\r\n共有リポジトリを作成するにはオプションを設定する\r\n<pre class=\"brush: bash\">\r\nmkdir git-repo\r\ncd git-repo\r\ngit init --bare --shared\r\n</pre>\r\n\r\n<h3>ローカルリポジトリをリモートにPUSHする</h3>\r\n一番最初にPUSHするときは<b>--mirrorオプション</b>を有効にする\r\n<pre class=\"brush: bash\">\r\ncd git-repo\r\ngit push --mirror {user}@{yourdomain}:/var/git/{git-repo}\r\n</pre>\r\nSSHのポート番号を変更している場合は『<b>/etc/ssh/ssh_config</b>』でポート番号の設定を変更しておく。\r\n\r\n\r\n<h3>ローカルにリモートリポジトリをCLONEする</h3>\r\n初期設定だとSSHで取得することになっている。ローカルでリモートリポジトリを取得するには\r\n<pre class=\"brush: bash\">\r\n# リポジトリをダウンロードするディレクトリに移動\r\ncd /repodir\r\ngit clone ssh://{user}@{yourdomain}/var/git/{git-repo}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://sourceforge.jp/docs/Git%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9\">Gitの使い方 - SourceForge.JP ヘルプ - SourceForge.JP</a>\r\n</ul>','ローカルで作成したGitリポジトリをリモートへプッシュする','','inherit','open','open','','640-revision-7','','','2013-02-24 19:44:20','2013-02-24 10:44:20','',640,'http://49.212.213.226/wordpress/solution-log/?p=805',0,'revision','',0),(807,1,'2013-05-03 00:37:24','2013-05-02 15:37:24','どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。\r\n\r\n<h3>Google YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/yum.repos.d/google-chorme.repo\r\n\r\n# 64 bit 版の場合\r\n[google-chrome]\r\nname=google-chrome - 64-bit\r\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\r\n\r\n# 32 bit 版の場合\r\n[google-chrome]\r\nname=google-chrome - 32-bit\r\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/i386\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\r\n</pre>\r\n\r\n<h3>Chromeをインストールする</h3>\r\nインストール可能なパッケージを調べる\r\n<pre class=\"brush: bash\">\r\nyum list &#039;*chrome*&#039;\r\nLoaded plugins: fastestmirror, refresh-packagekit\r\nLoading mirror speeds from cached hostfile\r\n * base: rsync.atworks.co.jp\r\n * epel: ftp.jaist.ac.jp\r\n * extras: rsync.atworks.co.jp\r\n * updates: rsync.atworks.co.jp\r\ngoogle-chrome                                 |  951 B     00:00     \r\ngoogle-chrome/primary                         | 1.4 kB     00:00     \r\ngoogle-chrome                                 3/3\r\nInstalled Packages\r\nxorg-x11-drv-openchrome.x86_64                0.2.904-4.el6       @base        \r\nAvailable Packages\r\ngoogle-chrome-beta.x86_64                     18.0.1025.39-122785 google-chrome\r\ngoogle-chrome-stable.x86_64                   17.0.963.56-121963  google-chrome\r\ngoogle-chrome-unstable.x86_64                 19.0.1041.0-121843  google-chrome\r\nxorg-x11-drv-openchrome.i686                  0.2.904-4.el6       base         \r\nxorg-x11-drv-openchrome-devel.i686            0.2.904-4.el6       base         \r\nxorg-x11-drv-openchrome-devel.x86_64          0.2.904-4.el6       base\r\n</pre>\r\n\r\nChromeをインストールする\r\n<pre class=\"brush: bash\">\r\n# 現行版をインストールする\r\nsudo yum install google-chrome-stable\r\n\r\n# ベータ版をインストールする。\r\nsudo yum install google-chrome-beta\r\n\r\n# unstable版をインストールする。\r\nsudo yum install google-chrome-unstable\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromeをインストールする','','publish','open','open','','centos6%e3%81%abchrome%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-05-03 00:37:24','2013-05-02 15:37:24','',0,'http://49.212.213.226/wordpress/solution-log/?p=807',0,'post','',0),(809,1,'2013-05-03 00:30:47','2013-05-02 15:30:47','どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。\n\n<h3>Google YUM リポジトリを有効にする</h3>\n<pre class=\"brush: bash\">\n/etc/yum.repos.d/google-chorme.repo を作成します。\n\n64 bit 版の場合\n\n[google-chrome]\nname=google-chrome - 64-bit\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\n\n\n32 bit 版の場合\n\n[google-chrome]\nname=google-chrome - 32-bit\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/i386\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub','CentOS6にChromeをインストールする','','inherit','open','open','','807-revision-v1','','','2013-05-03 00:30:47','2013-05-02 15:30:47','',807,'http://49.212.213.226/wordpress/solution-log/?p=809',0,'revision','',0),(810,1,'2013-05-03 00:31:47','2013-05-02 15:31:47','どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。\n\n<h3>Google YUM リポジトリを有効にする</h3>\n<pre class=\"brush: bash\">\nvi /etc/yum.repos.d/google-chorme.repo\n\n# 64 bit 版の場合\n[google-chrome]\nname=google-chrome - 64-bit\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\n\n# 32 bit 版の場合\n[google-chrome]\nname=google-chrome - 32-bit\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/i386\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\n</pre>\n\n<h3></h3>','CentOS6にChromeをインストールする','','inherit','open','open','','807-revision-v1','','','2013-05-03 00:31:47','2013-05-02 15:31:47','',807,'http://49.212.213.226/wordpress/solution-log/?p=810',0,'revision','',0),(811,1,'2013-05-03 00:36:04','2013-05-02 15:36:04','どうもCentOSとFireFoxが相性が悪いのでChromeに乗り換えてみる。\r\n\r\n<h3>Google YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/yum.repos.d/google-chorme.repo\r\n\r\n# 64 bit 版の場合\r\n[google-chrome]\r\nname=google-chrome - 64-bit\r\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\r\n\r\n# 32 bit 版の場合\r\n[google-chrome]\r\nname=google-chrome - 32-bit\r\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/i386\r\nenabled=1\r\ngpgcheck=1\r\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub\r\n</pre>\r\n\r\n<h3>Chromeをインストールする</h3>\r\nインストール可能なパッケージを調べる\r\n<pre class=\"brush: bash\">\r\nyum list &#039;*chrome*&#039;\r\nLoaded plugins: fastestmirror, refresh-packagekit\r\nLoading mirror speeds from cached hostfile\r\n * base: rsync.atworks.co.jp\r\n * epel: ftp.jaist.ac.jp\r\n * extras: rsync.atworks.co.jp\r\n * updates: rsync.atworks.co.jp\r\ngoogle-chrome                                 |  951 B     00:00     \r\ngoogle-chrome/primary                         | 1.4 kB     00:00     \r\ngoogle-chrome                                 3/3\r\nInstalled Packages\r\nxorg-x11-drv-openchrome.x86_64                0.2.904-4.el6       @base        \r\nAvailable Packages\r\ngoogle-chrome-beta.x86_64                     18.0.1025.39-122785 google-chrome\r\ngoogle-chrome-stable.x86_64                   17.0.963.56-121963  google-chrome\r\ngoogle-chrome-unstable.x86_64                 19.0.1041.0-121843  google-chrome\r\nxorg-x11-drv-openchrome.i686                  0.2.904-4.el6       base         \r\nxorg-x11-drv-openchrome-devel.i686            0.2.904-4.el6       base         \r\nxorg-x11-drv-openchrome-devel.x86_64          0.2.904-4.el6       base\r\n</pre>\r\n\r\nChromeをインストールする\r\n<pre class=\"brush: bash\">\r\n# 現行版をインストールする\r\nsudo yum install google-chrome-stable\r\n\r\n# ベータ版をインストールする。\r\nsudo yum install google-chrome-beta\r\n\r\n# unstable版をインストールする。\r\nsudo yum install google-chrome-unstable\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromeをインストールする','','inherit','open','open','','807-revision-v1','','','2013-05-03 00:36:04','2013-05-02 15:36:04','',807,'http://49.212.213.226/wordpress/solution-log/?p=811',0,'revision','',0),(812,1,'2013-05-03 00:48:07','2013-05-02 15:48:07','FireFoxで言うところの<a href=\"https://addons.mozilla.org/ja/firefox/addon/default-fullzoom-level/\">Default FullZoom Leve</a>lみたいな拡張機能がないか探してたらあった。\r\n\r\n<h3>AutoZoomをインストールする</h3>\r\nChromeの「<b>ツールバー右端の設定メニュー</b>」→「<b>設定(S)</b>」→「<b>拡張機能</b>」→「<b>他の拡張機能を見る</b>」→GoogleウェブストアでAutoZoomを検索、インストール\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://productforums.google.com/forum/#!category-topic/chrome-ja/%E6%8F%90%E6%A1%88%E8%A6%81%E6%9C%9B/RTBQTZPoq1o\">Google グループ | 要望：ズーム機能の固定表示</a>\r\n</ul>','Chromeでホスト名ごとにズーム設定を記憶する機能を追加する','','publish','open','open','','chrome%e3%81%a7%e3%83%9b%e3%82%b9%e3%83%88%e5%90%8d%e3%81%94%e3%81%a8%e3%81%ab%e3%82%ba%e3%83%bc%e3%83%a0%e8%a8%ad%e5%ae%9a%e3%82%92%e8%a8%98%e6%86%b6%e3%81%99%e3%82%8b%e6%a9%9f%e8%83%bd%e3%82%92','','','2013-05-03 00:49:18','2013-05-02 15:49:18','',0,'http://49.212.213.226/wordpress/solution-log/?p=812',0,'post','',0),(813,1,'2013-05-03 00:47:10','2013-05-02 15:47:10','FireFoxで言うところの<a href=\"https://addons.mozilla.org/ja/firefox/addon/default-fullzoom-level/\">Default FullZoom Leve</a>lみたいな拡張機能がないか探してたらあった。\n\n<h3>AutoZoomをインストールする</h3>\nChromeの「<b>ツールバー右端の設定メニュー</b>」→「<b>設定(S)</b>」→「<b>拡張機能</b>」→「他の拡張機能を見る」→AutoZoomをインストール\n\n<h3>参考サイト</h3>\n<ul>\nGoogle グループ | 要望：ズーム機能の固定表示','Chromeでホスト名ごとにズーム設定を記憶する機能を追加する','','inherit','open','open','','812-revision','','','2013-05-03 00:47:10','2013-05-02 15:47:10','',812,'http://49.212.213.226/wordpress/solution-log/?p=813',0,'revision','',0),(814,1,'2013-05-03 00:47:34','2013-05-02 15:47:34','FireFoxで言うところの<a href=\"https://addons.mozilla.org/ja/firefox/addon/default-fullzoom-level/\">Default FullZoom Leve</a>lみたいな拡張機能がないか探してたらあった。\r\n\r\n<h3>AutoZoomをインストールする</h3>\r\nChromeの「<b>ツールバー右端の設定メニュー</b>」→「<b>設定(S)</b>」→「<b>拡張機能</b>」→「他の拡張機能を見る」→AutoZoomをインストール\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://productforums.google.com/forum/#!category-topic/chrome-ja/%E6%8F%90%E6%A1%88%E8%A6%81%E6%9C%9B/RTBQTZPoq1o\">Google グループ | 要望：ズーム機能の固定表示</a>\r\n</ul>','Chromeでホスト名ごとにズーム設定を記憶する機能を追加する','','inherit','open','open','','812-revision-2','','','2013-05-03 00:47:34','2013-05-02 15:47:34','',812,'http://49.212.213.226/wordpress/solution-log/?p=814',0,'revision','',0),(815,1,'2013-05-03 00:47:56','2013-05-02 15:47:56','FireFoxで言うところの<a href=\"https://addons.mozilla.org/ja/firefox/addon/default-fullzoom-level/\">Default FullZoom Leve</a>lみたいな拡張機能がないか探してたらあった。\r\n\r\n<h3>AutoZoomをインストールする</h3>\r\nChromeの「<b>ツールバー右端の設定メニュー</b>」→「<b>設定(S)</b>」→「<b>拡張機能</b>」→「<b>他の拡張機能を見る</b>」→AutoZoomをインストール\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://productforums.google.com/forum/#!category-topic/chrome-ja/%E6%8F%90%E6%A1%88%E8%A6%81%E6%9C%9B/RTBQTZPoq1o\">Google グループ | 要望：ズーム機能の固定表示</a>\r\n</ul>','Chromeでホスト名ごとにズーム設定を記憶する機能を追加する','','inherit','open','open','','812-revision-3','','','2013-05-03 00:47:56','2013-05-02 15:47:56','',812,'http://49.212.213.226/wordpress/solution-log/?p=815',0,'revision','',0),(816,1,'2013-05-03 00:48:07','2013-05-02 15:48:07','FireFoxで言うところの<a href=\"https://addons.mozilla.org/ja/firefox/addon/default-fullzoom-level/\">Default FullZoom Leve</a>lみたいな拡張機能がないか探してたらあった。\r\n\r\n<h3>AutoZoomをインストールする</h3>\r\nChromeの「<b>ツールバー右端の設定メニュー</b>」→「<b>設定(S)</b>」→「<b>拡張機能</b>」→「<b>他の拡張機能を見る</b>」→AutoZoomをインストール\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://productforums.google.com/forum/#!category-topic/chrome-ja/%E6%8F%90%E6%A1%88%E8%A6%81%E6%9C%9B/RTBQTZPoq1o\">Google グループ | 要望：ズーム機能の固定表示</a>\r\n</ul>','Chromeでホスト名ごとにズーム設定を記憶する機能を追加する','','inherit','open','open','','812-revision-4','','','2013-05-03 00:48:07','2013-05-02 15:48:07','',812,'http://49.212.213.226/wordpress/solution-log/?p=816',0,'revision','',0),(818,1,'2013-06-19 19:31:27','2013-06-19 10:31:27','http://wayohoo.com/ios/beginners/buffalo-musen-lan-aoss-can-link.html','iPhone、iPadのWi-fi接続設定','','publish','open','open','','iphone%e3%80%81ipad%e3%81%aewi-fi%e6%8e%a5%e7%b6%9a%e8%a8%ad%e5%ae%9a','','','2013-06-19 19:31:27','2013-06-19 10:31:27','',0,'http://49.212.213.226/wordpress/solution-log/?p=818',0,'post','',0),(819,1,'2013-06-19 19:31:18','2013-06-19 10:31:18','','iPhone、iPadのWi-fi接続設定','','inherit','open','open','','818-revision','','','2013-06-19 19:31:18','2013-06-19 10:31:18','',818,'http://49.212.213.226/wordpress/solution-log/?p=819',0,'revision','',0),(822,1,'2013-07-13 00:17:47','2013-07-12 15:17:47','セキュリティ上好ましくはないが、この機能を使いたい時もあるので。\r\n\r\n以下の一文を.htaccessに書く。\r\n\r\n<pre class=\"brush: bash\">\r\nOptions +Indexes\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<li>\r\n<ul><a href=\"http://cafe-system.com/system517.html\">htaccessでディレクトリのファイル一覧を表示させる方法 : 週末プログラマの開発日記</a>\r\n</li>','.htaccessでディレクトリのファイル一覧を表示させる','','publish','open','open','','htaccess%e3%81%a7%e3%83%87%e3%82%a3%e3%83%ac%e3%82%af%e3%83%88%e3%83%aa%e3%81%ae%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e4%b8%80%e8%a6%a7%e3%82%92%e8%a1%a8%e7%a4%ba%e3%81%95%e3%81%9b%e3%82%8b','','','2013-07-13 00:17:47','2013-07-12 15:17:47','',0,'http://49.212.213.226/wordpress/solution-log/?p=822',0,'post','',0),(823,1,'2013-07-13 00:15:31','2013-07-12 15:15:31','セキュリティ上好ましくはないが、この機能を使いたい時もあるので。\n\n以下の一文を.htaccessに書く。\n\n<pre class=\"brush: bash\">\nOptions +Indexes\n</pre>\n\n\n<h3>参考サイト</h3>\n<a href=\"http://cafe-system.com/system517.html\">htaccessでディレクトリのファイル一覧を表示させる方法 : 週末プログラマの開発日記</a>','.htaccessでディレクトリのファイル一覧を表示させる','','inherit','open','open','','822-revision','','','2013-07-13 00:15:31','2013-07-12 15:15:31','',822,'http://49.212.213.226/wordpress/solution-log/?p=823',0,'revision','',0),(824,1,'2013-07-13 00:15:37','2013-07-12 15:15:37','セキュリティ上好ましくはないが、この機能を使いたい時もあるので。\r\n\r\n以下の一文を.htaccessに書く。\r\n\r\n<pre class=\"brush: bash\">\r\nOptions +Indexes\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://cafe-system.com/system517.html\">htaccessでディレクトリのファイル一覧を表示させる方法 : 週末プログラマの開発日記</a>','.htaccessでディレクトリのファイル一覧を表示させる','','inherit','open','open','','822-revision-2','','','2013-07-13 00:15:37','2013-07-12 15:15:37','',822,'http://49.212.213.226/wordpress/solution-log/?p=824',0,'revision','',0),(825,1,'2013-07-13 00:16:32','2013-07-12 15:16:32','セキュリティ上好ましくはないが、この機能を使いたい時もあるので。\n\n以下の一文を.htaccessに書く。\n\n<pre class=\"brush: bash\">\nOptions +Indexes\n</pre>\n\n\n<h3>参考サイト</h3>\n<li>\n<ul><a href=\"http://cafe-system.com/system517.html\">htaccessでディレクトリのファイル一覧を表示させる方法 : 週末プログラマの開発日記</a>\n</li>','.htaccessでディレクトリのファイル一覧を表示させる','','inherit','open','open','','822-revision-3','','','2013-07-13 00:16:32','2013-07-12 15:16:32','',822,'http://49.212.213.226/wordpress/solution-log/?p=825',0,'revision','',0),(826,1,'2013-07-15 13:18:05','2013-07-15 04:18:05','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\r\n\r\n<h3>EPICをインストールする</h3>\r\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\r\n<b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\r\n<ul>\r\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\r\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.epic-ide.org/\">EPIC - Eclipse Perl Integration</a>\r\n</ul>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','publish','open','open','','eclipse%e3%81%abepic-eclipse-perl-integrarion%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-07-15 13:20:39','2013-07-15 04:20:39','',0,'http://49.212.213.226/wordpress/solution-log/?p=826',0,'post','',0),(827,1,'2013-07-15 13:13:38','2013-07-15 04:13:38','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\n\n<h3>EPICをインストールする</h3>\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\n\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\n</ol>\n\n<h3>参考サイト</h3>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','inherit','open','open','','826-revision','','','2013-07-15 13:13:38','2013-07-15 04:13:38','',826,'http://49.212.213.226/wordpress/solution-log/?p=827',0,'revision','',0),(828,1,'2013-07-15 13:15:39','2013-07-15 04:15:39','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\n\n<h3>EPICをインストールする</h3>\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\n\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\n</ol>\n\n<h3>参考サイト</h3>\n<li>\n<ul<a href=\"http://www.epic-ide.org/\">>EPIC - Eclipse Perl Integration</a>\n</li>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','inherit','open','open','','826-revision-2','','','2013-07-15 13:15:39','2013-07-15 04:15:39','',826,'http://49.212.213.226/wordpress/solution-log/?p=828',0,'revision','',0),(829,1,'2013-07-15 13:16:41','2013-07-15 04:16:41','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\r\n\r\n<h3>EPICをインストールする</h3>\r\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\r\n<ul>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\r\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\r\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.epic-ide.org/\">>EPIC - Eclipse Perl Integration</a>\r\n</ul>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','inherit','open','open','','826-revision-3','','','2013-07-15 13:16:41','2013-07-15 04:16:41','',826,'http://49.212.213.226/wordpress/solution-log/?p=829',0,'revision','',0),(830,1,'2013-07-15 13:17:22','2013-07-15 04:17:22','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\r\n\r\n<h3>EPICをインストールする</h3>\r\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\r\n<b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\r\n<ul>\r\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\r\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.epic-ide.org/\">>EPIC - Eclipse Perl Integration</a>\r\n</ul>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','inherit','open','open','','826-revision-4','','','2013-07-15 13:17:22','2013-07-15 04:17:22','',826,'http://49.212.213.226/wordpress/solution-log/?p=830',0,'revision','',0),(831,1,'2013-07-15 13:18:05','2013-07-15 04:18:05','サーバ管理を円滑にすすめるために、Perlも扱える方が良いと思い、EclipseにEpicをインストールした。\r\n\r\n<h3>EPICをインストールする</h3>\r\n基本的には<a href=\"http://www.epic-ide.org/download.php\">EPICの公式サイト</a>に掲載されているインストール手順に従う。\r\n<b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:にURLを入力する。\r\n<ul>\r\n<li>現行バージョンの場合は<b>「http://e-p-i-c.sf.net/updates」</b>と入力\r\n<li>テストバージョン（先行配布版）の場合は<b>「http://e-p-i-c.sf.net/updates/testing」</b>と入力\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.epic-ide.org/\">>EPIC - Eclipse Perl Integration</a>\r\n</ul>','EclipseにEPIC | Eclipse Perl Integrarionをインストールする','','inherit','open','open','','826-revision-5','','','2013-07-15 13:18:05','2013-07-15 04:18:05','',826,'http://49.212.213.226/wordpress/solution-log/?p=831',0,'revision','',0),(832,1,'2013-07-15 22:47:40','2013-07-15 13:47:40','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>開発者向けパッケージをインストールする</h3>\r\nこれをインストールしないとPerlでモジュールがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Development tools&quot;\r\n\r\n# インストールされるものを確認する\r\nyum groupinfo &quot;Development tools&quot;\r\n</pre>\r\n\r\n\r\n<h3>libyaml-develをインストールする</h3>\r\n最初にlibyaml-develをインストールしないと、cpan YAMLがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum install libyaml-devel\r\nyum -y install *YAML*\r\n</pre>\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\n\r\nperl -MCPAN -e shell\r\n\r\n# モジュールをアップデートしたりするときにyesコマンドを省略する\r\ncpan &gt; o conf prerequisites_policy follow\r\ncpan &gt; o conf commit\r\n\r\n# かならずCPANを最新のものにしておく\r\ncpan&gt; upgrade\r\n\r\n# CPAN YAMLをインストールする\r\ncpan&gt; install YAML\r\ncpan&gt; install Perl::Tidy\r\n</pre>\r\n\r\nPerl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「<b>Ctrl+Shift+F</b>」でコードをフォーマットできるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n<li><a href=\"http://blog.katty.in/24\">Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン</a>\r\n<li><a href=\"http://diary.overlasting.net/2010-01-14-3.html\">[O] PerlのCPANモジュールをインストールする時にyesを自動選択するには</a>\r\n<li><a href=\"http://blog.trippyboy.com/2013/cpan/cpan-cant-test-without-successful-make-%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%99%E3%82%8B%E3%81%AE%E5%B7%BB/\">[CPAN] Can&#039;t test without successful make を解消するの巻 - TrippyBoyの愉快な日々</a>\r\n</ul>','EclipseでPerl::Tidyを使用する','','publish','open','open','','centos%e3%81%abperltidy%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-11-26 20:56:54','2013-11-26 11:56:54','',0,'http://49.212.213.226/wordpress/solution-log/?p=832',0,'post','',0),(833,1,'2013-07-15 22:46:13','2013-07-15 13:46:13','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\n\n<h3>Perl::Tidyをインストールする</h3>\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\n<pre class=\"brush: bash\">\nyum install perl-CPAN\ncpan YAML\ncpan Perl::Tidy\n<pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\n</ul>','CentOSにPerl::Tidyをインストールする','','inherit','open','open','','832-revision-v1','','','2013-07-15 22:46:13','2013-07-15 13:46:13','',832,'http://49.212.213.226/wordpress/solution-log/?p=833',0,'revision','',0),(834,1,'2013-07-15 22:47:02','2013-07-15 13:47:02','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\ncpan YAML\r\ncpan Perl::Tidy\r\n<pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n</ul>','CentOSにPerl::Tidyをインストールする','','inherit','open','open','','832-revision-v1','','','2013-07-15 22:47:02','2013-07-15 13:47:02','',832,'http://49.212.213.226/wordpress/solution-log/?p=834',0,'revision','',0),(835,1,'2013-07-15 22:47:22','2013-07-15 13:47:22','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\ncpan YAML\r\ncpan Perl::Tidy\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n</ul>','CentOSにPerl::Tidyをインストールする','','inherit','open','open','','832-revision-v1','','','2013-07-15 22:47:22','2013-07-15 13:47:22','',832,'http://49.212.213.226/wordpress/solution-log/?p=835',0,'revision','',0),(836,1,'2013-11-26 20:56:32','2013-11-26 11:56:32','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>開発者向けパッケージをインストールする</h3>\r\nこれをインストールしないとPerlでモジュールがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Development tools&quot;\r\n\r\n# インストールされるものを確認する\r\nyum groupinfo &quot;Development tools&quot;\r\n</pre>\r\n\r\n\r\n<h3>libyaml-develをインストールする</h3>\r\n最初にlibyaml-develをインストールしないと、cpan YAMLがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum install libyaml-devel\r\nyum -y install *YAML*\r\n</pre>\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\n\r\nperl -MCPAN -e shell\r\n\r\n# モジュールをアップデートしたりするときにyesコマンドを省略する\r\ncpan &gt; o conf prerequisites_policy follow\r\ncpan &gt; o conf commit\r\n\r\n# かならずCPANを最新のものにしておく\r\ncpan&gt; upgrade\r\n\r\n# CPAN YAMLをインストールする\r\ncpan&gt; install YAML\r\ncpan&gt; install Perl::Tidy\r\n</pre>\r\n\r\nPerl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「<b>Ctrl+Shift+F</b>」でコードをフォーマットできるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n<li><a href=\"http://blog.katty.in/24\">Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン</a>\r\n<li><a href=\"http://diary.overlasting.net/2010-01-14-3.html\">[O] PerlのCPANモジュールをインストールする時にyesを自動選択するには</a>\r\n<li><a href=\"http://blog.trippyboy.com/2013/cpan/cpan-cant-test-without-successful-make-%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%99%E3%82%8B%E3%81%AE%E5%B7%BB/\">[CPAN] Can&#039;t test without successful make を解消するの巻 - TrippyBoyの愉快な日々</a>\r\n</ul>','EclipseでPerl::Tidyを使用する','','inherit','open','open','','832-autosave-v1','','','2013-11-26 20:56:32','2013-11-26 11:56:32','',832,'http://49.212.213.226/wordpress/solution-log/?p=836',0,'revision','',0),(837,1,'2013-07-15 22:47:40','2013-07-15 13:47:40','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\ncpan YAML\r\ncpan Perl::Tidy\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n</ul>','CentOSにPerl::Tidyをインストールする','','inherit','open','open','','832-revision-v1','','','2013-07-15 22:47:40','2013-07-15 13:47:40','',832,'http://49.212.213.226/wordpress/solution-log/?p=837',0,'revision','',0),(838,1,'2013-07-15 23:07:38','2013-07-15 14:07:38','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\ncpan YAML\r\ncpan Perl::Tidy\r\n</pre>\r\n\r\nPerl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「<b>Ctrl+Shift+F</b>」でコードをフォーマットできるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n<li><a href=\"http://blog.katty.in/24\">Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン</a>\r\n</ul>','EclipseでPerl::Tidyをインストールする','','inherit','open','open','','832-revision-v1','','','2013-07-15 23:07:38','2013-07-15 14:07:38','',832,'http://49.212.213.226/wordpress/solution-log/?p=838',0,'revision','',0),(840,1,'2013-03-16 20:35:17','2013-03-16 11:35:17','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-03-16 20:35:17','2013-03-16 11:35:17','',190,'http://49.212.213.226/wordpress/solution-log/?p=840',0,'revision','',0),(841,1,'2013-08-03 14:29:35','2013-08-03 05:29:35','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n<a href=\"./?p=13\">こちらのエントリー</a>を参照。Passengerはインストールする必要は無い。\r\n\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-03 14:29:35','2013-08-03 05:29:35','',190,'http://49.212.213.226/wordpress/solution-log/?p=841',0,'revision','',0),(843,1,'2013-08-03 15:00:36','2013-08-03 06:00:36','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-03 15:00:36','2013-08-03 06:00:36','',190,'http://49.212.213.226/wordpress/solution-log/?p=843',0,'revision','',0),(844,1,'2013-08-13 17:57:09','2013-08-13 08:57:09','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>データベースを作成する</h3>\r\nredmineと言う名前のデータベースを作る。<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\nCREATE DATABASE redmine;\r\n# データベースが作成されたか確認する\r\nSHOW DATABASES;\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-13 17:57:09','2013-08-13 08:57:09','',190,'http://49.212.213.226/wordpress/solution-log/?p=844',0,'revision','',0),(845,1,'2013-08-13 18:10:09','2013-08-13 09:10:09','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベース登録ユーザにredmineがあるか確かめる。その後Redmineに関するデータベース、データベーステーブルを作成する。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-13 18:10:09','2013-08-13 09:10:09','',190,'http://49.212.213.226/wordpress/solution-log/?p=845',0,'revision','',0),(846,1,'2013-08-13 21:11:13','2013-08-13 12:11:13','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n\r\n<h4>データベーステーブルRedmineの作成</h4>\r\nDatabase User redmineを作成する前にデータベースを作成しておく必要がある。また、<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nCREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nデータベース登録ユーザにredmineがあるか確かめる。\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-13 21:11:13','2013-08-13 12:11:13','',190,'http://49.212.213.226/wordpress/solution-log/?p=846',0,'revision','',0),(847,1,'2013-08-13 21:14:50','2013-08-13 12:14:50','Tracがどうも使いにくいのでRedmineに移行してみる実験をする。\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\nまずはEPELが導入されているか確かめる。導入されてなければ<a href=\"./?p=548\">インストールする</a>。\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# 開発パッケージを導入。こちらは使わないものもいくらか入る\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# 通信関係を入れたりアップデートする\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする（既に導入済み）Remiリポジトリ経由ならRemiリポジトリを使う事！\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする（一応やっておく）\r\nyum install httpd httpd-devel\r\n# ImageMagickをインストールアップデートする（多分入ってない）\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n\r\n<h3>Ruby 1.9.3をインストールする</h3>\r\n既にRuby 2.0.0がリリースされているが、Passengerのリリース版がRuby 2.0.0では動作しないため、Ruby 1.9.3を使用する。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p392.tar.gz\r\ntar zxvf ruby-1.9.3-p392.tar.gz\r\ncd ruby-1.9.3-p392\r\n./configure --prefix=/usr/local --enable-shared --disable-install-doc --with-opt-dir=/usr/local/lib\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベースredmineを作成する。その後データベースユーザredmineを登録する。\r\n<h4>データベースRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nmysql&gt; CREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','CentOS6.3にRedmine環境を構築する','','inherit','open','open','','190-revision-v1','','','2013-08-13 21:14:50','2013-08-13 12:14:50','',190,'http://49.212.213.226/wordpress/solution-log/?p=847',0,'revision','',0),(848,1,'2013-03-13 02:24:11','2013-03-12 17:24:11','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=enforcing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-03-13 02:24:11','2013-03-12 17:24:11','',745,'http://49.212.213.226/wordpress/solution-log/?p=848',0,'revision','',0),(849,1,'2013-08-18 15:25:10','2013-08-18 06:25:10','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-08-18 15:25:10','2013-08-18 06:25:10','',745,'http://49.212.213.226/wordpress/solution-log/?p=849',0,'revision','',0),(850,1,'2013-08-18 15:29:38','2013-08-18 06:29:38','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-08-18 15:29:38','2013-08-18 06:29:38','',745,'http://49.212.213.226/wordpress/solution-log/?p=850',0,'revision','',0),(851,1,'2013-08-18 16:05:13','2013-08-18 07:05:13','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&amp;lt;Directory /home/*/public_html&amp;gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &amp;lt;Limit GET POST OPTIONS&amp;gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &amp;lt;/Limit&amp;gt;\r\n    &amp;lt;LimitExcept GET POST OPTIONS&amp;gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &amp;lt;/LimitExcept&amp;gt;\r\n&amp;lt;/Directory&amp;gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを755に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-08-18 16:05:13','2013-08-18 07:05:13','',745,'http://49.212.213.226/wordpress/solution-log/?p=851',0,'revision','',0),(852,1,'2013-08-18 16:09:43','2013-08-18 07:09:43','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/mod_userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを755に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','open','open','','745-revision-v1','','','2013-08-18 16:09:43','2013-08-18 07:09:43','',745,'http://49.212.213.226/wordpress/solution-log/?p=852',0,'revision','',0),(854,1,'2013-09-03 15:16:58','2013-09-03 06:16:58','CentOSでのChromeのサポートが切れてしまったのでChromiumに乗り換える\r\n\r\n<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4 32bit\r\n</ul>\r\n<b>CentOS6.3以前ではChromiumが立ち上がらないので注意!!!</b>\r\n\r\n<h3>Chromium YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://people.centos.org/hughesjr/chromium/6/chromium-el6.repo -O /etc/yum.repos.d/chromium-el6.repo\r\n</pre>\r\n\r\n<h3>Chromiumをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install chromium\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromiumをインストールする','','publish','open','open','','centos6%e3%81%abchromium%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-09-03 16:11:55','2013-09-03 07:11:55','',0,'http://49.212.213.226/wordpress/solution-log/?p=854',0,'post','',0),(855,1,'2013-09-03 15:16:58','2013-09-03 06:16:58','CentOSでのChromeのサポートが切れてしまったのでChromiumに乗り換える\r\n\r\n<h3>Chromium YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://people.centos.org/hughesjr/chromium/6/chromium-el6.repo -O /etc/yum.repos.d/chromium-el6.repo\r\n</pre>\r\n\r\n<h3>Chromiumをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install chromium\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromiumをインストールする','','inherit','open','open','','854-revision-v1','','','2013-09-03 15:16:58','2013-09-03 06:16:58','',854,'http://49.212.213.226/wordpress/solution-log/?p=855',0,'revision','',0),(856,1,'2013-09-03 16:11:29','2013-09-03 07:11:29','CentOSでのChromeのサポートが切れてしまったのでChromiumに乗り換える\r\n\r\n<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4 32bit\r\n</ul>\r\n<b>CentOS6.3以前ではChromiumが立ち上がらないので注意!!!</b>\r\n\r\n<h3>Chromium YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://people.centos.org/hughesjr/chromium/6/chromium-el6.repo -O /etc/yum.repos.d/chromium-el6.repo\r\n</pre>\r\n\r\n<h3>Chromiumをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install chromium\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromiumをインストールする','','inherit','open','open','','854-autosave-v1','','','2013-09-03 16:11:29','2013-09-03 07:11:29','',854,'http://49.212.213.226/wordpress/solution-log/?p=856',0,'revision','',0),(857,1,'2013-09-03 16:11:55','2013-09-03 07:11:55','CentOSでのChromeのサポートが切れてしまったのでChromiumに乗り換える\r\n\r\n<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4 32bit\r\n</ul>\r\n<b>CentOS6.3以前ではChromiumが立ち上がらないので注意!!!</b>\r\n\r\n<h3>Chromium YUM リポジトリを有効にする</h3>\r\n<pre class=\"brush: bash\">\r\nwget http://people.centos.org/hughesjr/chromium/6/chromium-el6.repo -O /etc/yum.repos.d/chromium-el6.repo\r\n</pre>\r\n\r\n<h3>Chromiumをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install chromium\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://kaworu.jpn.org/kaworu/2012-02-10-1.php\">CentOS 6.2 に Chrome をインストールする</a>\r\n</ul>','CentOS6にChromiumをインストールする','','inherit','open','open','','854-revision-v1','','','2013-09-03 16:11:55','2013-09-03 07:11:55','',854,'http://49.212.213.226/wordpress/solution-log/?p=857',0,'revision','',0),(859,1,'2013-09-15 16:49:49','2013-09-15 07:49:49','以下に注意！\r\n<ul>\r\n<li>ポートフォワーディングが使えない\r\n<li>日本語入力は『<b>ctrl + space key』で切り替える。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/benimaroot/archives/1506861.html\">緋色のスパイラルノート : Fedora16</a>','Windows7でTigerVNCを使用する','','publish','open','open','','windows7%e3%81%a7tigervnc%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2013-09-15 16:49:49','2013-09-15 07:49:49','',0,'http://49.212.213.226/wordpress/solution-log/?p=859',0,'post','',0),(860,1,'2013-09-15 16:49:38','2013-09-15 07:49:38','以下に注意！\r\n<ul>\r\n<li>ポートフォワーディングが使えない\r\n<li>日本語入力は『<b>ctrl + space key』で切り替える。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/benimaroot/archives/1506861.html\">緋色のスパイラルノート : Fedora16</a>','Windows7でTigerVNCを使用する','','inherit','open','open','','859-revision-v1','','','2013-09-15 16:49:38','2013-09-15 07:49:38','',859,'http://49.212.213.226/wordpress/solution-log/?p=860',0,'revision','',0),(861,1,'2013-09-16 01:03:34','2013-09-15 16:03:34','VMWare Playerの実験をしようと思い、色々とやってみた。\r\n\r\n<h3>CentOSのisoファイルをさくらのVPSへアップロードする</h3>\r\nsftpでイメージをアップロードする必要がある\r\n\r\n<h3>CentOSをインストールする</h3>\r\n\r\n<h3>ネットワークの設定を行う</h3>\r\n/etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。\r\n\r\nnetwork managerをoffる。/etc/resolv.confを設定する。\r\n\r\n/etc/sysconfig/network-scripts/ifcfg-eth0を設定する\r\n\r\niptablesの設定を行う\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/bojovs/20081020/1224429418\">CentOSのネットワーク設定を手動で行う方法 - bojovs blog</a>\r\n<li><a href=\"http://kajuhome.com/centos6_inst_02.shtml\">はじめての自宅サーバ構築 - Fedora/CentOS - CentOS6 のインストール手順</a>\r\n<li><a href=\"http://mikotosnow.blog.fc2.com/blog-entry-11.html\">NetworkManagerについて - 冬日記</a>','さくらのVPSにCentOS6.4 i386をインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abcentos6-4-i386%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-09-16 01:07:36','2013-09-15 16:07:36','',0,'http://49.212.213.226/wordpress/solution-log/?p=861',0,'post','',0),(862,1,'2013-09-16 00:54:43','2013-09-15 15:54:43','','さくらのVPSにCentOS6.4','','inherit','open','open','','861-revision-v1','','','2013-09-16 00:54:43','2013-09-15 15:54:43','',861,'http://49.212.213.226/wordpress/solution-log/?p=862',0,'revision','',0),(863,1,'2013-09-16 00:58:49','2013-09-15 15:58:49','VMWare Playerの実験をしようと思い、色々とやってみた。\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/bojovs/20081020/1224429418\">CentOSのネットワーク設定を手動で行う方法 - bojovs blog</a>\r\n<li><a href=\"http://kajuhome.com/centos6_inst_02.shtml\">はじめての自宅サーバ構築 - Fedora/CentOS - CentOS6 のインストール手順</a>\r\n<li><a href=\"http://mikotosnow.blog.fc2.com/blog-entry-11.html\">NetworkManagerについて - 冬日記</a>','さくらのVPSにCentOS6.4 i386をインストールする','','inherit','open','open','','861-revision-v1','','','2013-09-16 00:58:49','2013-09-15 15:58:49','',861,'http://49.212.213.226/wordpress/solution-log/?p=863',0,'revision','',0),(864,1,'2013-09-16 01:03:16','2013-09-15 16:03:16','VMWare Playerの実験をしようと思い、色々とやってみた。\r\n\r\n<h3>CentOSのisoファイルをさくらのVPSへアップロードする</h3>\r\nsftpでイメージをアップロードする必要がある\r\n\r\n<h3>CentOSをインストールする</h3>\r\n\r\n<h3>ネットワークの設定を行う</h3>\r\nnetwork managerをoffる。/etc/resolv.confを設定する。\r\n\r\n/etc/sysconfig/network-scripts/ifcfg-eth0を設定する\r\n\r\niptablesの設定を行う\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/bojovs/20081020/1224429418\">CentOSのネットワーク設定を手動で行う方法 - bojovs blog</a>\r\n<li><a href=\"http://kajuhome.com/centos6_inst_02.shtml\">はじめての自宅サーバ構築 - Fedora/CentOS - CentOS6 のインストール手順</a>\r\n<li><a href=\"http://mikotosnow.blog.fc2.com/blog-entry-11.html\">NetworkManagerについて - 冬日記</a>','さくらのVPSにCentOS6.4 i386をインストールする','','inherit','open','open','','861-revision-v1','','','2013-09-16 01:03:16','2013-09-15 16:03:16','',861,'http://49.212.213.226/wordpress/solution-log/?p=864',0,'revision','',0),(865,1,'2013-09-16 01:06:38','2013-09-15 16:06:38','VMWare Playerの実験をしようと思い、色々とやってみた。\n\n<h3>CentOSのisoファイルをさくらのVPSへアップロードする</h3>\nsftpでイメージをアップロードする必要がある\n\n<h3>CentOSをインストールする</h3>\n\n<h3>ネットワークの設定を行う</h3>\n/etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。\n\nnetwork managerをoffる。/etc/resolv.confを設定する。\n\n/etc/sysconfig/network-scripts/ifcfg-eth0を設定する\n\niptablesの設定を行う\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://d.hatena.ne.jp/bojovs/20081020/1224429418\">CentOSのネットワーク設定を手動で行う方法 - bojovs blog</a>\n<li><a href=\"http://kajuhome.com/centos6_inst_02.shtml\">はじめての自宅サーバ構築 - Fedora/CentOS - CentOS6 のインストール手順</a>\n<li><a href=\"http://mikotosnow.blog.fc2.com/blog-entry-11.html\">NetworkManagerについて - 冬日記</a>','さくらのVPSにCentOS6.4 i386をインストールする','','inherit','open','open','','861-autosave-v1','','','2013-09-16 01:06:38','2013-09-15 16:06:38','',861,'http://49.212.213.226/wordpress/solution-log/?p=865',0,'revision','',0),(866,1,'2013-09-16 01:07:36','2013-09-15 16:07:36','VMWare Playerの実験をしようと思い、色々とやってみた。\r\n\r\n<h3>CentOSのisoファイルをさくらのVPSへアップロードする</h3>\r\nsftpでイメージをアップロードする必要がある\r\n\r\n<h3>CentOSをインストールする</h3>\r\n\r\n<h3>ネットワークの設定を行う</h3>\r\n/etc/resolv.conf、/etc/sysconfig/network-scripts/ifcfg-eth0は既に構築してあるCentOSサーバの設定を参考にする。設定ファイル自体には色々とゴタゴタ書く必要はない。\r\n\r\nnetwork managerをoffる。/etc/resolv.confを設定する。\r\n\r\n/etc/sysconfig/network-scripts/ifcfg-eth0を設定する\r\n\r\niptablesの設定を行う\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/bojovs/20081020/1224429418\">CentOSのネットワーク設定を手動で行う方法 - bojovs blog</a>\r\n<li><a href=\"http://kajuhome.com/centos6_inst_02.shtml\">はじめての自宅サーバ構築 - Fedora/CentOS - CentOS6 のインストール手順</a>\r\n<li><a href=\"http://mikotosnow.blog.fc2.com/blog-entry-11.html\">NetworkManagerについて - 冬日記</a>','さくらのVPSにCentOS6.4 i386をインストールする','','inherit','open','open','','861-revision-v1','','','2013-09-16 01:07:36','2013-09-15 16:07:36','',861,'http://49.212.213.226/wordpress/solution-log/?p=866',0,'revision','',0),(867,1,'2013-09-18 22:51:59','2013-09-18 13:51:59','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n■OS\r\n\r\nCentOS 6.0\r\n\r\n■拡張子\r\n\r\n.rar\r\n\r\n■インストール\r\n\r\nUnRAR\r\n\r\n■作業\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍\r\n\r\n■CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n下記コマンドを実行し「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をダウンロード\r\n\r\nwget http://dag.wieers.com/packages/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をインストール\r\n\r\nrpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「/etc/yum.repos.d/rpmforge.repo」を開く\r\n\r\nvi /etc/yum.repos.d/rpmforge.repo\r\n下記の内容に変更\r\n\r\nenabled = 0\r\n「UnRAR」をインストール\r\n\r\nyum --enablerepo=rpmforge install unrar\r\n拡張子「.rar」を解凍\r\n\r\nunrar e test.rar\r\n\r\n\r\nhttp://www.miuxmiu.com/archives/2011/08/02/centos_extension_rar_unrar_install_unzip_command.html','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド','','publish','open','open','','centos%e3%81%a7%e6%8b%a1%e5%bc%b5%e5%ad%90rar%e3%82%92unrar%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%97%e8%a7%a3%e5%87%8d%e3%81%99%e3%82%8b%e6%96%b9%e6%b3%95%e3%83%bb','','','2013-09-18 22:51:59','2013-09-18 13:51:59','',0,'http://49.212.213.226/wordpress/solution-log/?p=867',0,'post','',0),(868,1,'2013-09-18 22:51:59','2013-09-18 13:51:59','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n■OS\r\n\r\nCentOS 6.0\r\n\r\n■拡張子\r\n\r\n.rar\r\n\r\n■インストール\r\n\r\nUnRAR\r\n\r\n■作業\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍\r\n\r\n■CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n下記コマンドを実行し「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をダウンロード\r\n\r\nwget http://dag.wieers.com/packages/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をインストール\r\n\r\nrpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「/etc/yum.repos.d/rpmforge.repo」を開く\r\n\r\nvi /etc/yum.repos.d/rpmforge.repo\r\n下記の内容に変更\r\n\r\nenabled = 0\r\n「UnRAR」をインストール\r\n\r\nyum --enablerepo=rpmforge install unrar\r\n拡張子「.rar」を解凍\r\n\r\nunrar e test.rar\r\n\r\n\r\nhttp://www.miuxmiu.com/archives/2011/08/02/centos_extension_rar_unrar_install_unzip_command.html','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド','','inherit','open','open','','867-revision-v1','','','2013-09-18 22:51:59','2013-09-18 13:51:59','',867,'http://49.212.213.226/wordpress/solution-log/?p=868',0,'revision','',0),(869,1,'2013-09-18 22:52:06','2013-09-18 13:52:06','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n■OS\r\n\r\nCentOS 6.0\r\n\r\n■拡張子\r\n\r\n.rar\r\n\r\n■インストール\r\n\r\nUnRAR\r\n\r\n■作業\r\n\r\nCentOSで拡張子RARをUnRARをインストールし解凍\r\n\r\n■CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド\r\n\r\n下記コマンドを実行し「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をダウンロード\r\n\r\nwget http://dag.wieers.com/packages/rpmforge-release/rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「rpmforge-release-0.3.6-1.el5.rf.i386.rpm」をインストール\r\n\r\nrpm -ivh rpmforge-release-0.3.6-1.el5.rf.i386.rpm\r\n「/etc/yum.repos.d/rpmforge.repo」を開く\r\n\r\nvi /etc/yum.repos.d/rpmforge.repo\r\n下記の内容に変更\r\n\r\nenabled = 0\r\n「UnRAR」をインストール\r\n\r\nyum --enablerepo=rpmforge install unrar\r\n拡張子「.rar」を解凍\r\n\r\nunrar e test.rar\r\n\r\n\r\nhttp://www.miuxmiu.com/archives/2011/08/02/centos_extension_rar_unrar_install_unzip_command.html','CentOSで拡張子RARをUnRARをインストールし解凍する方法・コマンド','','inherit','open','open','','867-autosave-v1','','','2013-09-18 22:52:06','2013-09-18 13:52:06','',867,'http://49.212.213.226/wordpress/solution-log/?p=869',0,'revision','',0),(871,1,'2013-10-01 16:09:38','2013-10-01 07:09:38','lenovoノートPCのVMWare Player上でゲストOSとして稼働しているCentOS6.4にLibreOfficeをインストールしたときのメモ\r\n\r\n<h3>パッケージをダウンロードする</h3>\r\n<a href=\"http://ja.libreoffice.org/download/\">LibreOfficeのダウンロードページ</a>から必要なパッケージをダウンロード。\r\n\r\n今回は\r\n<ul>\r\n<li>メイン・インストールパッケージ\r\n<li>言語パッケージ\r\n<li>ヘルプパッケージ\r\n</ul>\r\nをダウンロード。\r\n\r\n<h3>メインパッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm.tar.gz\r\ncd LibreOffice_4.1.1_Linux_x86_rpm.tar.gz/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>言語パッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm_langpack_ja.tar.gz\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_langpack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>LibreOffice ヘルプパッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.maruweb.jp.net/wp/?p=653\">CentOS6.2にLibreOfficeのインストール &laquo;  MARU&#039;s Blog</a>\r\n</ul>','CentOS6.4にLibreOfficeをインストールする','','publish','open','open','','centos6-4%e3%81%ablibreoffice%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2013-10-01 16:09:38','2013-10-01 07:09:38','',0,'http://49.212.213.226/wordpress/solution-log/?p=871',0,'post','',0),(872,1,'2013-10-01 16:08:21','2013-10-01 07:08:21','lenovoノートPCのVMWare Player上でゲストOSとして稼働しているCentOS6.4にLibreOfficeをインストールしたときのメモ\r\n\r\n<h3>パッケージをダウンロードする</h3>\r\n<a href=\"http://ja.libreoffice.org/download/\">LibreOfficeのダウンロードページ</a>から必要なパッケージをダウンロード。\r\n\r\n今回は\r\n<ul>\r\n<li>メイン・インストールパッケージ\r\n<li>言語パッケージ\r\n<li>ヘルプパッケージ\r\n</ul>\r\nをダウンロード。\r\n\r\n<h3>メインパッケージをインストールする</h3>\r\n<pre>\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm.tar.gz\r\ncd LibreOffice_4.1.1_Linux_x86_rpm.tar.gz/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>言語パッケージをインストールする</h3>\r\n<pre>\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm_langpack_ja.tar.gz\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_langpack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>LibreOffice ヘルプパッケージをインストールする</h3>\r\n<pre>\r\ntar zxvf LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.maruweb.jp.net/wp/?p=653\">CentOS6.2にLibreOfficeのインストール &laquo;  MARU&#039;s Blog</a>\r\n</ul>','CentOS6.4にLibreOfficeをインストールする','','inherit','open','open','','871-revision-v1','','','2013-10-01 16:08:21','2013-10-01 07:08:21','',871,'http://49.212.213.226/wordpress/solution-log/?p=872',0,'revision','',0),(873,1,'2013-10-01 16:09:10','2013-10-01 07:09:10','lenovoノートPCのVMWare Player上でゲストOSとして稼働しているCentOS6.4にLibreOfficeをインストールしたときのメモ\r\n\r\n<h3>パッケージをダウンロードする</h3>\r\n<a href=\"http://ja.libreoffice.org/download/\">LibreOfficeのダウンロードページ</a>から必要なパッケージをダウンロード。\r\n\r\n今回は\r\n<ul>\r\n<li>メイン・インストールパッケージ\r\n<li>言語パッケージ\r\n<li>ヘルプパッケージ\r\n</ul>\r\nをダウンロード。\r\n\r\n<h3>メインパッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm.tar.gz\r\ncd LibreOffice_4.1.1_Linux_x86_rpm.tar.gz/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>言語パッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1_Linux_x86_rpm_langpack_ja.tar.gz\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_langpack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>LibreOffice ヘルプパッケージをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja\r\ncd LibreOffice_4.1.1.2_Linux_x86_rpm_helppack_ja/RPMS\r\nrpm -Uvh *.rpm\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.maruweb.jp.net/wp/?p=653\">CentOS6.2にLibreOfficeのインストール &laquo;  MARU&#039;s Blog</a>\r\n</ul>','CentOS6.4にLibreOfficeをインストールする','','inherit','open','open','','871-revision-v1','','','2013-10-01 16:09:10','2013-10-01 07:09:10','',871,'http://49.212.213.226/wordpress/solution-log/?p=873',0,'revision','',0),(874,1,'2013-10-04 13:25:41','2013-10-04 04:25:41','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>LibreOffice 4.1\r\n</ul>\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_2-300x270.jpg\" alt=\"140507_libreoffice_2\" width=\"300\" height=\"270\" class=\"alignnone size-medium wp-image-947\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_11.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_11-300x189.jpg\" alt=\"140507_libreoffice_1\" width=\"300\" height=\"189\" class=\"alignnone size-medium wp-image-946\" /></a>\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','publish','open','open','','libreoffice%e3%81%8b%e3%82%89mysql%e3%81%ab%e6%8e%a5%e7%b6%9a%e3%81%99%e3%82%8b','','','2014-05-07 19:37:36','2014-05-07 10:37:36','',0,'http://49.212.213.226/wordpress/solution-log/?p=874',0,'post','',0),(875,1,'2013-10-04 13:24:15','2013-10-04 04:24:15','<h3>想定される環境M/h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>MySQLインストール済み\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre class=\"brash :bush>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2013-10-04 13:24:15','2013-10-04 04:24:15','',874,'http://49.212.213.226/wordpress/solution-log/?p=875',0,'revision','',0),(876,1,'2013-10-04 13:24:39','2013-10-04 04:24:39','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>MySQLインストール済み\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre class=\"brash :bush>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2013-10-04 13:24:39','2013-10-04 04:24:39','',874,'http://49.212.213.226/wordpress/solution-log/?p=876',0,'revision','',0),(877,1,'2013-10-04 13:24:56','2013-10-04 04:24:56','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>MySQLインストール済み\r\n</ul>\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre class=\"brash :bush>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2013-10-04 13:24:56','2013-10-04 04:24:56','',874,'http://49.212.213.226/wordpress/solution-log/?p=877',0,'revision','',0),(878,1,'2013-10-04 13:25:21','2013-10-04 04:25:21','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>MySQLインストール済み\r\n</ul>\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2013-10-04 13:25:21','2013-10-04 04:25:21','',874,'http://49.212.213.226/wordpress/solution-log/?p=878',0,'revision','',0),(879,1,'2013-10-04 13:27:33','2013-10-04 04:27:33','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>LibreOffice 4.1\r\n</ul>\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2013-10-04 13:27:33','2013-10-04 04:27:33','',874,'http://49.212.213.226/wordpress/solution-log/?p=879',0,'revision','',0),(880,1,'2014-05-07 19:36:41','2014-05-07 10:36:41','<h3>想定される環境</h3>\n<ul>\n<li>CentOS6.4\n<li>LibreOffice 4.1\n</ul>\n\n<h3>JDBCドライバのインストール</h3>\n<pre>\n# yum -y install mysql-connector-java\n</pre>\n\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\nLibreOffice Calcを起動\nツール→オプション→LibreOffice→詳細→Javaオプション→クラスパス\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_1.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_1-300x189.jpg\" alt=\"140507_libreoffice_1\" width=\"300\" height=\"189\" class=\"alignnone size-medium wp-image-945\" /></a>\n\n\n/usr/share/java/mysql-connector-java.jarを追加\n\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\nLibreOfficeのBaseを開く\nファイル→新規作成→データベース\n既存のデータベースに接続→JDBC\nデータソースのURL\nJDBC:mysql://localhost:3306/databasename\nJDBCドライバクラス\ncom.mysql.jdbc.Driver\nテストクラスでテスト\nユーザー設定\n次のステップは適宜\nこれで接続できるはず\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-autosave-v1','','','2014-05-07 19:36:41','2014-05-07 10:36:41','',874,'http://49.212.213.226/wordpress/solution-log/?p=880',0,'revision','',0),(881,1,'2013-03-03 02:22:27','2013-03-02 17:22:27','WindowsでのSSHやgitの設定が非常に手間なのでノートPCにCentOSをそのまま突っ込もうと思いVMware Playerを試す。\r\n\r\n<h3>CentOS6.3のディスクイメージを入手する</h3>\r\nVMware Playerの仮想OSとして使用するCentOS6.3のディスクイメージを<a href=\"http://isoredirect.centos.org/centos/6/isos/i386/\">ダウンロードサイト</a>から入手。ダウンロード先によって接続スピートがかなり異なるので速いところを選ぶ。今の所外付けのHDD内にダウンロード済みのCentOS6.3のディスクイメージがあるのでそちらを使う。\r\n\r\n\r\n<h3>VMware Playerをインストールする</h3>\r\n<a href=\"http://www.vmware.com/\">VMware Playerのサイト</a>からWindows用のインストールファイルを<a href=\"http://www.vmware.com/support/product-support/player.html\">ダウンロードして</a>通常通りインストールする。\r\n\r\n\r\n<h3>仮想OSの設定ファイルを作成する</h3>\r\nVMware Playerはのみの対応なので、CentOSが日本語にならない。なので<a href=\"http://www.easyvmx.com/\">EasyVMX!のサイト</a>で仮想OSの設定ファイルを作成する。\r\n<ol>\r\n<li>easyvmx 2.0をクリック\r\n<li>仮想OS名、割り当てHDD容量などを記入して「Create Virtual Machine」をクリック\r\n<li>(仮想マシン名).zip というダウンロードリンクが表示されるので、クリックしてダウンロード。\r\n</ol>\r\n\r\n\r\n<h3>CentOS6.3をインストールする</h3>\r\n前の手順で作成したZIPファイルを仮想OSをインストールするフォルダに展開する。テキストエディタなどで(仮想OS名).vmxファイルを開いて編集。\r\n<pre class=\"brush: bash\">\r\nide1:0.deviceType = &quot;cdrom-image&quot;\r\nide1:0.fileName = &quot;(isoイメージのあるパス)\\centosdvd.iso&quot;\r\n</pre>\r\nその後(仮想OS名).vmxをダブルクリック。後はOSの指示通りにインストール作業を進めて行く。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.centos.org/\">www.centos.org - The Community ENTerprise Operating System</a>\r\n<li><a href=\"http://www.mlexp.com/wiki/index.php?VMWare%20Player%20%A5%E1%A5%E2\">VMWare Player メモ - MLEXP Wiki</a>\r\n<li><a href=\"http://www.vmware.com/jp\">VMware の仮想化によるインフラストラクチャの最適化</a>\r\n</ul>','Windows7にVMware Player + CentOS6.3をインストールする','','inherit','open','open','','535-revision-v1','','','2013-03-03 02:22:27','2013-03-02 17:22:27','',535,'http://49.212.213.226/wordpress/solution-log/?p=881',0,'revision','',0),(883,1,'2013-10-06 18:14:58','2013-10-06 09:14:58','どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。\r\n\r\n<h3>NTPをインストールする</h3>\r\n想定される環境だと既にインストール済み\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -qa | grep ntp\r\nfontpackages-filesystem-1.41-1.1.el6.noarch\r\nntpdate-4.2.4p8-3.el6.centos.i686\r\nntp-4.2.4p8-3.el6.centos.i686\r\n</pre>\r\n\r\n<h3>NTPを起動、自動起動設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice ntpd start\r\nchkconfig ntpd on\r\nchkconfig --list ntpd\r\n#動作確認\r\nntpq -p\r\n</pre>\r\n\r\n<h3>Timezoneの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nrm -f /etc/localtime\r\ncp -p /usr/share/zoneinfo/Japan /etc/localtime\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://memorva.jp/memo/linux/date_ntp.php\">サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] - Linux</a>\r\n<li><a href=\"http://nullpopopo.blogcube.info/2007/11/post-14.html\">【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</a>\r\n</ul>','CentOSでサーバの時刻設定を行う','','publish','open','open','','centos%e3%81%a7%e3%82%b5%e3%83%bc%e3%83%90%e3%81%ae%e6%99%82%e5%88%bb%e8%a8%ad%e5%ae%9a%e3%82%92%e8%a1%8c%e3%81%86','','','2013-10-06 18:48:34','2013-10-06 09:48:34','',0,'http://49.212.213.226/wordpress/solution-log/?p=883',0,'post','',0),(884,1,'2013-10-06 18:14:42','2013-10-06 09:14:42','どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。\r\n\r\n<h3>NTPをインストールする</h3>\r\n想定される環境だと既にインストール済み\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -qa | grep ntp\r\nfontpackages-filesystem-1.41-1.1.el6.noarch\r\nntpdate-4.2.4p8-3.el6.centos.i686\r\nntp-4.2.4p8-3.el6.centos.i686\r\n</pre>\r\n\r\n<h3>NTPを起動、自動起動設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice ntpd start\r\nchkconfig ntpd on\r\nchkconfig --list ntpd\r\n#動作確認\r\nntpq -p\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<li>\r\n<ul><a href=\"http://memorva.jp/memo/linux/date_ntp.php\">サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] - Linux</a>\r\n</li>','CentOSでサーバの時刻設定を行う','','inherit','open','open','','883-revision-v1','','','2013-10-06 18:14:42','2013-10-06 09:14:42','',883,'http://49.212.213.226/wordpress/solution-log/?p=884',0,'revision','',0),(885,1,'2013-10-06 18:48:27','2013-10-06 09:48:27','どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。\r\n\r\n<h3>NTPをインストールする</h3>\r\n想定される環境だと既にインストール済み\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -qa | grep ntp\r\nfontpackages-filesystem-1.41-1.1.el6.noarch\r\nntpdate-4.2.4p8-3.el6.centos.i686\r\nntp-4.2.4p8-3.el6.centos.i686\r\n</pre>\r\n\r\n<h3>NTPを起動、自動起動設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice ntpd start\r\nchkconfig ntpd on\r\nchkconfig --list ntpd\r\n#動作確認\r\nntpq -p\r\n</pre>\r\n\r\n<h3>Timezoneの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nrm -f /etc/localtime\r\ncp -p /usr/share/zoneinfo/Japan /etc/localtime\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://memorva.jp/memo/linux/date_ntp.php\">サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] - Linux</a>\r\n<li><a href=\"http://nullpopopo.blogcube.info/2007/11/post-14.html\">【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</a>\r\n</ul>','CentOSでサーバの時刻設定を行う','','inherit','open','open','','883-autosave-v1','','','2013-10-06 18:48:27','2013-10-06 09:48:27','',883,'http://49.212.213.226/wordpress/solution-log/?p=885',0,'revision','',0),(886,1,'2013-10-06 18:46:06','2013-10-06 09:46:06','どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。\r\n\r\n<h3>NTPをインストールする</h3>\r\n想定される環境だと既にインストール済み\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -qa | grep ntp\r\nfontpackages-filesystem-1.41-1.1.el6.noarch\r\nntpdate-4.2.4p8-3.el6.centos.i686\r\nntp-4.2.4p8-3.el6.centos.i686\r\n</pre>\r\n\r\n<h3>NTPを起動、自動起動設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice ntpd start\r\nchkconfig ntpd on\r\nchkconfig --list ntpd\r\n#動作確認\r\nntpq -p\r\n</pre>\r\n\r\n<h3>Timezoneの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nrm -f /etc/localtime\r\ncp -p /usr/share/zoneinfo/Japan /etc/localtime\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<li>\r\n<ul><a href=\"http://memorva.jp/memo/linux/date_ntp.php\">サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] - Linux</a>\r\n<ul><a href=\"http://nullpopopo.blogcube.info/2007/11/post-14.html\">【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</a>\r\n</li>','CentOSでサーバの時刻設定を行う','','inherit','open','open','','883-revision-v1','','','2013-10-06 18:46:06','2013-10-06 09:46:06','',883,'http://49.212.213.226/wordpress/solution-log/?p=886',0,'revision','',0),(887,1,'2013-10-06 18:48:34','2013-10-06 09:48:34','どうもディフォルトだとOSの時計が合ってないので自動で同期させるようにする。\r\n\r\n<h3>NTPをインストールする</h3>\r\n想定される環境だと既にインストール済み\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -qa | grep ntp\r\nfontpackages-filesystem-1.41-1.1.el6.noarch\r\nntpdate-4.2.4p8-3.el6.centos.i686\r\nntp-4.2.4p8-3.el6.centos.i686\r\n</pre>\r\n\r\n<h3>NTPを起動、自動起動設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice ntpd start\r\nchkconfig ntpd on\r\nchkconfig --list ntpd\r\n#動作確認\r\nntpq -p\r\n</pre>\r\n\r\n<h3>Timezoneの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nrm -f /etc/localtime\r\ncp -p /usr/share/zoneinfo/Japan /etc/localtime\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://memorva.jp/memo/linux/date_ntp.php\">サーバの時刻設定、NTPで自動設定・時刻補正 [Fedora, RedHat, CentOS] - Linux</a>\r\n<li><a href=\"http://nullpopopo.blogcube.info/2007/11/post-14.html\">【メモ】【CentOS】サーバマシンのタイムゾーン変更 | (っ´∀｀)っ ゃー | nullpopopo</a>\r\n</ul>','CentOSでサーバの時刻設定を行う','','inherit','open','open','','883-revision-v1','','','2013-10-06 18:48:34','2013-10-06 09:48:34','',883,'http://49.212.213.226/wordpress/solution-log/?p=887',0,'revision','',0),(889,1,'2013-10-20 20:11:30','2013-10-20 11:11:30','<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://weble.org/2011/03/10/gitconfig-ignore\">Git で常に除外したい設定を .gitconfig で設定する方法 | ウェブル</a>\r\n<li><a href=\"http://android.keicode.com/devenv/git-eclipse-android.php\">Eclipse で Git を使う - アンドロイドプロジェクトのリポジトリ作成 - Android 開発入門</a>\r\n</ul>','Gitで常に除外したい設定を.gitconfig で設定する','','publish','open','open','','git%e3%81%a7%e5%b8%b8%e3%81%ab%e9%99%a4%e5%a4%96%e3%81%97%e3%81%9f%e3%81%84%e8%a8%ad%e5%ae%9a%e3%82%92-gitconfig-%e3%81%a7%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b','','','2013-10-20 20:12:32','2013-10-20 11:12:32','',0,'http://49.212.213.226/wordpress/solution-log/?p=889',0,'post','',0),(890,1,'2013-10-20 20:11:30','2013-10-20 11:11:30','<h3>参考サイト</h3>\r\n<ol>\r\n<li><a href=\"http://weble.org/2011/03/10/gitconfig-ignore\">Git で常に除外したい設定を .gitconfig で設定する方法 | ウェブル</a>\r\n<li>\r\n</ol>','Gitで常に除外したい設定を.gitconfig で設定する','','inherit','open','open','','889-revision-v1','','','2013-10-20 20:11:30','2013-10-20 11:11:30','',889,'http://49.212.213.226/wordpress/solution-log/?p=890',0,'revision','',0),(891,1,'2013-10-20 20:12:32','2013-10-20 11:12:32','<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://weble.org/2011/03/10/gitconfig-ignore\">Git で常に除外したい設定を .gitconfig で設定する方法 | ウェブル</a>\r\n<li><a href=\"http://android.keicode.com/devenv/git-eclipse-android.php\">Eclipse で Git を使う - アンドロイドプロジェクトのリポジトリ作成 - Android 開発入門</a>\r\n</ul>','Gitで常に除外したい設定を.gitconfig で設定する','','inherit','open','open','','889-revision-v1','','','2013-10-20 20:12:32','2013-10-20 11:12:32','',889,'http://49.212.213.226/wordpress/solution-log/?p=891',0,'revision','',0),(892,1,'2013-10-20 20:12:37','2013-10-20 11:12:37','<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://weble.org/2011/03/10/gitconfig-ignore\">Git で常に除外したい設定を .gitconfig で設定する方法 | ウェブル</a>\r\n<li><a href=\"http://android.keicode.com/devenv/git-eclipse-android.php\">Eclipse で Git を使う - アンドロイドプロジェクトのリポジトリ作成 - Android 開発入門</a>\r\n</ul>','Gitで常に除外したい設定を.gitconfig で設定する','','inherit','open','open','','889-autosave-v1','','','2013-10-20 20:12:37','2013-10-20 11:12:37','',889,'http://49.212.213.226/wordpress/solution-log/?p=892',0,'revision','',0),(894,1,'2013-02-17 22:51:01','2013-02-17 13:51:01','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\">\r\n# ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a>\r\n<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a>\r\n<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun&#039;s Blog</a>\r\n<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','open','open','','663-revision-v1','','','2013-02-17 22:51:01','2013-02-17 13:51:01','',663,'http://49.212.213.226/wordpress/solution-log/?p=894',0,'revision','',0),(895,1,'2013-11-04 23:53:21','2013-11-04 14:53:21','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\nssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\">\r\n# ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\n# アクセス権限を変更する\r\nchmod 600 config\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a>\r\n<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a>\r\n<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun&#039;s Blog</a>\r\n<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','open','open','','663-revision-v1','','','2013-11-04 23:53:21','2013-11-04 14:53:21','',663,'http://49.212.213.226/wordpress/solution-log/?p=895',0,'revision','',0),(896,1,'2013-03-17 01:24:23','2013-03-16 16:24:23','<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6に最新バージョンのPHPをインストールする','','inherit','open','open','','395-revision-v1','','','2013-03-17 01:24:23','2013-03-16 16:24:23','',395,'http://49.212.213.226/wordpress/solution-log/?p=896',0,'revision','',0),(897,1,'2013-11-05 11:32:06','2013-11-05 02:32:06','<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: text\">\r\n# yumなどのパッケージマネージャーでインストールした場合\r\nvi /etc/php.ini\r\n\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6に最新バージョンのPHPをインストールする','','inherit','open','open','','395-revision-v1','','','2013-11-05 11:32:06','2013-11-05 02:32:06','',395,'http://49.212.213.226/wordpress/solution-log/?p=897',0,'revision','',0),(898,1,'2013-11-05 11:33:34','2013-11-05 02:33:34','<h3>Apacheをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# apache用のSSLモジュールもインストールしておく\r\nyum -y install httpd httpd-devel mod_ssl\r\n</pre>\r\n\r\n\r\n\r\n<h3>PHPをインストールする</h3>\r\n一応yumでそのままPHPをインストールしておいてそれをバージョンアップする形を取る。<b>Remiリポジトリが追加されていない場合は<a href=\"./?p=542\">事前に追加しておく</a>こと</b>。2013年1月現在は<b>remi-test</b>ではなく、<b>remi</b>でも入る。<b>remi-test</b>だとどのバージョンのPHPがインストールされるかは不明。。また<b>PECLコマンド</b>を使用する場合、<b>PEAR</b>がインストールされている必要があるので必ず入れておく。\r\n<pre class=\"brush: bash\">\r\n# 必要なライブラリを入れる\r\nyum -y install libxml2-devel\r\n# 5.3系を入れる\r\nyum -y install php-devel php-gd php-mbstring php-mysql php-pdo php-pear php-xml php-imap\r\n# 5.4系にバージョンアップする\r\nsudo yum update php* --enablerepo=remi-test\r\n</pre>\r\nインストールされているかチェック\r\n<pre class=\"brush: bash\">\r\nphp -v\r\nPHP 5.4.9 (cli) (built: Nov 22 2012 11:31:02) \r\nCopyright (c) 1997-2012 The PHP Group\r\nZend Engine v2.4.0, Copyright (c) 1998-2012 Zend Technologies\r\n</pre>\r\n\r\n\r\n<h3>php.confを編集する</h3>\r\n『/etc/httpd/conf.d/php.conf』を開き編集する\r\n<pre class=\"brush: text\">\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n</pre>\r\n\r\n\r\n\r\n<h3>http.confのを編集する</h3>\r\nPHPの設定はphp.confにて行う事。\r\n\r\n<del datetime=\"2013-01-05T09:35:55+00:00\">行数はあくまで目安。</del>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf/httpd.conf\r\n#44行目 ヘッダ情報のセキュリティ対策（ヘッダ情報にapacheのパージョンを出力しない）\r\nServerTokens Prod\r\n#277行目　サーバ名を設定します\r\nServerName www.oss-d.net:80\r\n#339行目「/var/www/html」以下のディレクトリでhtaccessを有効にします\r\nAllowOverride All\r\n#403行目 インデックスファイルの指定 (index.phpを追加）\r\nDirectoryIndex index.html index.html.var index.php\r\n#537行目 エラーページのセキュリティ対策（サーバのバージョンやホスト名を出力しない）\r\nServerSignature Off\r\n#760行目 デフォルトの文字コードを指定します\r\nAddDefaultCharset UTF-8\r\n</pre>\r\n\r\n\r\n\r\n<h3>php.iniの設定を書き換える</h3>\r\n<pre class=\"brush: bash\">\r\n#yumなどのパッケージマネージャーでインストールした場合\r\nvi /etc/php.ini\r\n\r\nmemory_limit = 32M\r\nmax_execution_time = 30\r\nexpose_php = Off\r\nmagic_quotes_gpc = Off\r\nvariables_order = GPCS\r\nregister_long_arrays = Off\r\nregister_argc_argv = Off\r\npost_max_size = 64K\r\nmax_input_vars = 100\r\nupload_tmp_dir = /home/uploads\r\nupload_max_filesize = 1\r\ndisplay_errors = Off\r\ndisplay_startup_errors = Off\r\nlog_errors = On\r\nerror_reporting = E_ALL | E_STRICT\r\nopen_basedir = /srv/httpd\r\nallow_url_fopen = Off\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://nob-log.info/2012/03/03/php54remitest/\">PHP5.4がremi-testに来たのでyumで入れてみた</a>\r\n<li><a href=\"http://www.oss-d.net/php/5.4s/install\">PHP 5.4/インストール - OSSでLinuxサーバ構築</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/buildlamp/lamp_43/43_1.html\">PHPでセッションを利用するための設定 － ＠IT</a>\r\n</ul>','CentOS6に最新バージョンのPHPをインストールする','','inherit','open','open','','395-revision-v1','','','2013-11-05 11:33:34','2013-11-05 02:33:34','',395,'http://49.212.213.226/wordpress/solution-log/?p=898',0,'revision','',0),(899,1,'2013-11-05 12:35:05','2013-11-05 03:35:05','１．<strong>固定したい項目行の下の行を選択する</strong>\r\n\r\n２．「ウィンドウ(W)」－「固定(F)」をクリック\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://openoffice.sblo.jp/article/4711245.html\">Calcの項目行を画面上で固定する: LibreOfficeで行こう！</a>\r\n</ul>','Calc、Baseの項目行を画面上で固定する','','publish','open','open','','calc%e3%80%81base%e3%81%ae%e9%a0%85%e7%9b%ae%e8%a1%8c%e3%82%92%e7%94%bb%e9%9d%a2%e4%b8%8a%e3%81%a7%e5%9b%ba%e5%ae%9a%e3%81%99%e3%82%8b','','','2013-11-05 12:35:05','2013-11-05 03:35:05','',0,'http://49.212.213.226/wordpress/solution-log/?p=899',0,'post','',0),(900,1,'2013-11-05 12:34:54','2013-11-05 03:34:54','１．<strong>固定したい項目行の下の行を選択する</strong>\r\n\r\n２．「ウィンドウ(W)」－「固定(F)」をクリック\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://openoffice.sblo.jp/article/4711245.html\">Calcの項目行を画面上で固定する: LibreOfficeで行こう！</a>\r\n</ul>','Calc、Baseの項目行を画面上で固定する','','inherit','open','open','','899-revision-v1','','','2013-11-05 12:34:54','2013-11-05 03:34:54','',899,'http://49.212.213.226/wordpress/solution-log/?p=900',0,'revision','',0),(901,1,'2013-11-05 16:37:15','2013-11-05 07:37:15','新規ソフトウェアをインストールする時、フィルター機能を使うと、Eclipseがフリーズしてしまうことがある。\r\n\r\n<h3>Eclipseのキャッシュを削除する</h3>\r\nまず現在立ち上げているEclipseがある場合は終了する。それから\r\n<pre class=\"brush: bash\">\r\neclipse -clean\r\n\r\n# シンボリックリンクを作成していない場合\r\n~/アプリケーション/eclipse/eclipse -clean\r\n</pre>\r\n\r\nこれでシステムのキャッシュがクリアされるようなので、再び新規ソフトウェアのインストール機能が使えるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/vivi192467/archives/1649289.html\">戯言Vestige - weblog of vivi -:Eclipseで起動時にフリーズした場合の解消法</a>\r\n</ul>','Eclipseで新規ソフトウェアのインストールでフリーズした時の対処法','','inherit','open','open','','372-revision-v1','','','2013-11-05 16:37:15','2013-11-05 07:37:15','',372,'http://49.212.213.226/wordpress/solution-log/?p=901',0,'revision','',0),(903,1,'2013-07-15 23:42:18','2013-07-15 14:42:18','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\ncpan YAML\r\ncpan Perl::Tidy\r\n</pre>\r\n\r\nPerl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「<b>Ctrl+Shift+F</b>」でコードをフォーマットできるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n<li><a href=\"http://blog.katty.in/24\">Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン</a>\r\n</ul>','EclipseでPerl::Tidyを使用する','','inherit','open','open','','832-revision-v1','','','2013-07-15 23:42:18','2013-07-15 14:42:18','',832,'http://49.212.213.226/wordpress/solution-log/?p=903',0,'revision','',0),(904,1,'2013-11-26 20:56:54','2013-11-26 11:56:54','Eclipse + EPICでPerlで開発を行う場合、コードフォーマッターらしきものがあった方が便利なのでPerl::Tidyをインストールしてみる。\r\n\r\n<h3>開発者向けパッケージをインストールする</h3>\r\nこれをインストールしないとPerlでモジュールがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum -y groupinstall &quot;Development tools&quot;\r\n\r\n# インストールされるものを確認する\r\nyum groupinfo &quot;Development tools&quot;\r\n</pre>\r\n\r\n\r\n<h3>libyaml-develをインストールする</h3>\r\n最初にlibyaml-develをインストールしないと、cpan YAMLがインストール出来ない\r\n<pre class=\"brush: bash\">\r\nyum install libyaml-devel\r\nyum -y install *YAML*\r\n</pre>\r\n\r\n<h3>Perl::Tidyをインストールする</h3>\r\n想定される環境だとPerlはインストール済み。CPANをインストールし、cpan YAMLをインストールしてからPerl::Tidyをインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install perl-CPAN\r\n\r\nperl -MCPAN -e shell\r\n\r\n# モジュールをアップデートしたりするときにyesコマンドを省略する\r\ncpan &gt; o conf prerequisites_policy follow\r\ncpan &gt; o conf commit\r\n\r\n# かならずCPANを最新のものにしておく\r\ncpan&gt; upgrade\r\n\r\n# CPAN YAMLをインストールする\r\ncpan&gt; install YAML\r\ncpan&gt; install Perl::Tidy\r\n</pre>\r\n\r\nPerl::Tidyのインストールが完了すれば、Eclipseの編集中のPerlファイル上で「<b>Ctrl+Shift+F</b>」でコードをフォーマットできるようになる。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://fakeyakuza.hatenablog.com/entry/2012/12/14/CPAN%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%8B%E3%82%89%E3%83%A2%E3%82%B8%E3%83%A5%E3%83%BC%E3%83%AB%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\">CPANのインストールからモジュールのインストールするまでの簡単な流れ - ヘッポコからフルスタックを目指す記録</a>\r\n<li><a href=\"http://d.hatena.ne.jp/srkzhr/20090408/1239206063\">perltidyでソースコード整形 - 半径5メートル</a>\r\n<li><a href=\"http://blog.katty.in/24\">Aptana(Eclipse)+EPIC+PerltidyでPerl開発環境を整えて自動コードフォーマットで楽をする | 三度の飯とエレクトロン</a>\r\n<li><a href=\"http://diary.overlasting.net/2010-01-14-3.html\">[O] PerlのCPANモジュールをインストールする時にyesを自動選択するには</a>\r\n<li><a href=\"http://blog.trippyboy.com/2013/cpan/cpan-cant-test-without-successful-make-%E3%82%92%E8%A7%A3%E6%B6%88%E3%81%99%E3%82%8B%E3%81%AE%E5%B7%BB/\">[CPAN] Can&#039;t test without successful make を解消するの巻 - TrippyBoyの愉快な日々</a>\r\n</ul>','EclipseでPerl::Tidyを使用する','','inherit','open','open','','832-revision-v1','','','2013-11-26 20:56:54','2013-11-26 11:56:54','',832,'http://49.212.213.226/wordpress/solution-log/?p=904',0,'revision','',0),(907,1,'2013-12-11 12:23:04','2013-12-11 03:23:04','Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。\r\n\r\n<h3>Ethernetインタフェースを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\nDEVICE=&quot;eth0&quot;\r\nHWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス\r\nTYPE=Ethernet\r\nUUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\r\nONBOOT=&quot;yes&quot;\r\nMM_CONTROLLED=&quot;yes&quot;\r\nIPADDR=10.0.2.15\r\nNETMASK=255.255.255.0\r\nGATEWAY=192.168.1.1\r\nDNS1=8.8.8.8 #googleのDNSを指定\r\n</pre>\r\n\r\n<h3>ディフォルトゲートウェイを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice network restart\r\n\r\nroute add default gw 10.0.2.2\r\n\r\n# 設定確認\r\nroute\r\n\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n10.0.2.0        *               255.255.255.0   U     0      0        0 eth0\r\nlink-local      *               255.255.0.0     U     1002   0        0 eth0\r\ndefault         10.0.2.2        0.0.0.0         UG    0      0        0 eth0\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/japanrock_pg/20080522/1211439429\">Linux（CentOS5）のネットワーク設定メモ - プログラマ 福重 伸太朗 ～基本へ帰ろう～</a>\r\n<li><a href=\"http://nextindex.s141.xrea.com/virtualbox/centos_network.html\">VirtualBox環境構築：CentOS - ネットワーク設定</a>\r\n<li>2<a href=\"http://d.hatena.ne.jp/toshokan3210/20120126\">012-01-26 - 新人プログラマーのメモ帳</a>\r\n<li><a href=\"http://roserogue.blogspot.jp/2011/10/cent-os6resolvconf.html\">エレクトリック・ボディ・ビート: Cent OS6でresolv.confが勝手に書き換わる。</a>\r\n<li><a href=\"http://d.hatena.ne.jp/Yudoufu/20100117/1263677767\">VirtualBox を利用する際のネットワーク設定の話 - ゆどうふろぐ</a>\r\n<li><a href=\"http://c-through.blogto.jp/archives/14539119.html\">ネットワーキング構成を理解して選択する : C-through the Mac</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/linuxtips/401cngdefgw.html\">＠IT：デフォルトゲートウェイを変更するには</a>\r\n</ul>','Virtual BoxにインストールしたCentOS6.4でネットワークを設定する','','publish','open','open','','virtual-box%e3%81%ab%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%97%e3%81%9fcentos6-4%e3%81%a7%e3%83%8d%e3%83%83%e3%83%88%e3%83%af%e3%83%bc%e3%82%af%e3%82%92%e8%a8%ad%e5%ae%9a%e3%81%99','','','2013-12-11 12:23:04','2013-12-11 03:23:04','',0,'http://49.212.213.226/wordpress/solution-log/?p=907',0,'post','',0),(908,1,'2013-12-11 12:15:43','2013-12-11 03:15:43','Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。\r\n\r\n<h3>Ethernetインタフェースを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\nDEVICE=&quot;eth0&quot;\r\nHWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス\r\nTYPE=Ethernet\r\nUUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\r\nONBOOT=&quot;yes&quot;\r\nMM_CONTROLLED=&quot;yes&quot;\r\nIPADDR=10.0.2.15\r\nNETMASK=255.255.255.0\r\nGATEWAY=192.168.1.1\r\nDNS1=8.8.8.8 #googleのDNSを指定\r\n</pre>\r\n\r\n<h3>ディフォルトゲートウェイを設定する</h3?>\r\n<pre class=\"brush: bash\">\r\nservice network restart\r\n\r\nroute add default gw 10.0.2.2\r\n\r\n# 設定確認\r\nroute\r\n\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n10.0.2.0        *               255.255.255.0   U     0      0        0 eth0\r\nlink-local      *               255.255.0.0     U     1002   0        0 eth0\r\ndefault         10.0.2.2        0.0.0.0         UG    0      0        0 eth0\r\n</pre>\r\n\r\n','Virtual BoxにインストールしたCentOS6.4でネットワークを設定する','','inherit','open','open','','907-revision-v1','','','2013-12-11 12:15:43','2013-12-11 03:15:43','',907,'http://49.212.213.226/wordpress/solution-log/?p=908',0,'revision','',0),(909,1,'2013-12-11 12:17:59','2013-12-11 03:17:59','Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。\r\n\r\n<h3>Ethernetインタフェースを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\nDEVICE=&quot;eth0&quot;\r\nHWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス\r\nTYPE=Ethernet\r\nUUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\r\nONBOOT=&quot;yes&quot;\r\nMM_CONTROLLED=&quot;yes&quot;\r\nIPADDR=10.0.2.15\r\nNETMASK=255.255.255.0\r\nGATEWAY=192.168.1.1\r\nDNS1=8.8.8.8 #googleのDNSを指定\r\n</pre>\r\n\r\n<h3>ディフォルトゲートウェイを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice network restart\r\n\r\nroute add default gw 10.0.2.2\r\n\r\n# 設定確認\r\nroute\r\n\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n10.0.2.0        *               255.255.255.0   U     0      0        0 eth0\r\nlink-local      *               255.255.0.0     U     1002   0        0 eth0\r\ndefault         10.0.2.2        0.0.0.0         UG    0      0        0 eth0\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<li>\r\n<ul>Linux（CentOS5）のネットワーク設定メモ - プログラマ 福重 伸太朗 ～基本へ帰ろう～\r\n<ul>VirtualBox環境構築：CentOS - ネットワーク設定\r\n<ul>2012-01-26 - 新人プログラマーのメモ帳\r\n<ul>エレクトリック・ボディ・ビート: Cent OS6でresolv.confが勝手に書き換わる。\r\n<ul>VirtualBox を利用する際のネットワーク設定の話 - ゆどうふろぐ\r\n<ul>ネットワーキング構成を理解して選択する : C-through the Mac\r\n<ul>＠IT：デフォルトゲートウェイを変更するには</li>','Virtual BoxにインストールしたCentOS6.4でネットワークを設定する','','inherit','open','open','','907-revision-v1','','','2013-12-11 12:17:59','2013-12-11 03:17:59','',907,'http://49.212.213.226/wordpress/solution-log/?p=909',0,'revision','',0),(910,1,'2013-12-11 12:18:48','2013-12-11 03:18:48','Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。\r\n\r\n<h3>Ethernetインタフェースを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\nDEVICE=&quot;eth0&quot;\r\nHWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス\r\nTYPE=Ethernet\r\nUUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\r\nONBOOT=&quot;yes&quot;\r\nMM_CONTROLLED=&quot;yes&quot;\r\nIPADDR=10.0.2.15\r\nNETMASK=255.255.255.0\r\nGATEWAY=192.168.1.1\r\nDNS1=8.8.8.8 #googleのDNSを指定\r\n</pre>\r\n\r\n<h3>ディフォルトゲートウェイを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice network restart\r\n\r\nroute add default gw 10.0.2.2\r\n\r\n# 設定確認\r\nroute\r\n\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n10.0.2.0        *               255.255.255.0   U     0      0        0 eth0\r\nlink-local      *               255.255.0.0     U     1002   0        0 eth0\r\ndefault         10.0.2.2        0.0.0.0         UG    0      0        0 eth0\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li>Linux（CentOS5）のネットワーク設定メモ - プログラマ 福重 伸太朗 ～基本へ帰ろう～\r\n<li>VirtualBox環境構築：CentOS - ネットワーク設定\r\n<li>2012-01-26 - 新人プログラマーのメモ帳\r\n<li>エレクトリック・ボディ・ビート: Cent OS6でresolv.confが勝手に書き換わる。\r\n<li>VirtualBox を利用する際のネットワーク設定の話 - ゆどうふろぐ\r\n<li>ネットワーキング構成を理解して選択する : C-through the Mac\r\n<li>＠IT：デフォルトゲートウェイを変更するには\r\n</ul>','Virtual BoxにインストールしたCentOS6.4でネットワークを設定する','','inherit','open','open','','907-revision-v1','','','2013-12-11 12:18:48','2013-12-11 03:18:48','',907,'http://49.212.213.226/wordpress/solution-log/?p=910',0,'revision','',0),(911,1,'2013-12-11 12:21:36','2013-12-11 03:21:36','Virtual Box上でCentOS環境を複数作成してテストスクリプトを試す必要が出てきた。その場合のネットワークを設定に関するまとめ。\r\n\r\n<h3>Ethernetインタフェースを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/network-script/ifcfg-eth0\r\n\r\nDEVICE=&quot;eth0&quot;\r\nHWADDR=XX:XX:XX:XX #Network Interface Card(NIC)のMACアドレス\r\nTYPE=Ethernet\r\nUUID=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXx\r\nONBOOT=&quot;yes&quot;\r\nMM_CONTROLLED=&quot;yes&quot;\r\nIPADDR=10.0.2.15\r\nNETMASK=255.255.255.0\r\nGATEWAY=192.168.1.1\r\nDNS1=8.8.8.8 #googleのDNSを指定\r\n</pre>\r\n\r\n<h3>ディフォルトゲートウェイを設定する</h3>\r\n<pre class=\"brush: bash\">\r\nservice network restart\r\n\r\nroute add default gw 10.0.2.2\r\n\r\n# 設定確認\r\nroute\r\n\r\nKernel IP routing table\r\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\r\n10.0.2.0        *               255.255.255.0   U     0      0        0 eth0\r\nlink-local      *               255.255.0.0     U     1002   0        0 eth0\r\ndefault         10.0.2.2        0.0.0.0         UG    0      0        0 eth0\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/japanrock_pg/20080522/1211439429\">Linux（CentOS5）のネットワーク設定メモ - プログラマ 福重 伸太朗 ～基本へ帰ろう～</a>\r\n<li><a href=\"http://nextindex.s141.xrea.com/virtualbox/centos_network.html\">VirtualBox環境構築：CentOS - ネットワーク設定</a>\r\n<li>2<a href=\"http://d.hatena.ne.jp/toshokan3210/20120126\">012-01-26 - 新人プログラマーのメモ帳</a>\r\n<li><a href=\"http://roserogue.blogspot.jp/2011/10/cent-os6resolvconf.html\">エレクトリック・ボディ・ビート: Cent OS6でresolv.confが勝手に書き換わる。</a>\r\n<li><a href=\"http://d.hatena.ne.jp/Yudoufu/20100117/1263677767\">VirtualBox を利用する際のネットワーク設定の話 - ゆどうふろぐ</a>\r\n<li><a href=\"http://c-through.blogto.jp/archives/14539119.html\">ネットワーキング構成を理解して選択する : C-through the Mac</a>\r\n<li><a href=\"http://www.atmarkit.co.jp/flinux/rensai/linuxtips/401cngdefgw.html\">＠IT：デフォルトゲートウェイを変更するには</a>\r\n</ul>','Virtual BoxにインストールしたCentOS6.4でネットワークを設定する','','inherit','open','open','','907-revision-v1','','','2013-12-11 12:21:36','2013-12-11 03:21:36','',907,'http://49.212.213.226/wordpress/solution-log/?p=911',0,'revision','',0),(913,1,'2014-01-02 00:04:03','2014-01-01 15:04:03','実験的にやってみる。\r\n\r\n<h3>libyamlをインストールする</h3>\r\n後々色々とエラーが出るので必ずインストールする！\r\n<pre class=\"brush: bash\">\r\ncd ~/local/src\r\nwget http://pyyaml.org/download/libyaml/yaml-0.1.4.tar.gz\r\ntar zxvf yaml-0.1.4.tar.gz\r\ncd yaml-0.1.4\r\n./configure --prefix=~/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>Rubyをインストールする</h3>\r\nRubyは2.0をインストールする\r\n<pre class=\"brush: bash\">\r\ncd $HOME/local/src\r\nwget http://cache.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz \r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc --prefix=$HOME/local\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>.cshrcを変更する</h3>\r\n新たにインストールしたRubyにパスを通す\r\n<pre class=\"brush: bash\">\r\nvi $HOME/.cshrc\r\n# set pathに$HOME/local/binを追加\r\n\r\n# .cshrcを反映させる\r\nsource $HOME/.cshrc\r\n\r\n# Rubyのパスを調べる\r\nwhich ruby\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\ncd $HOME/www\r\nwget http://www.redmine.org/releases/redmine-2.4.2.tar.gz\r\ntar zxvf redmine-2.4.2.tar.gz\r\nmv redmine-2.4.2 redmine\r\n\r\ngem update --system # gemをアップデートする。これを行わないとbundlerからgemパッケージがインストール出来ない\r\ngem install bundler --no-rdoc --no-ri\r\n\r\ncd /redmine-install-dir\r\nbundle install --without development test\r\n\r\n\r\nbundle exec rake generate_secret_token\r\nrake db:migrate RAILS_ENV=production\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n<pre class=\"brush: bash\">\r\nruby /redmine-install-dir/script/rails server webrick -e production\r\n</pre>\r\nhttp://{yourhost}:3000に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://t100life.blog121.fc2.com/blog-entry-148.html\">さくらインターネットに、RedMineをインストールする。 @ t100のプログラミング脱出作戦</a>\r\n<li><a href=\"http://stackoverflow.com/questions/15721588/cant-run-server-or-bundle-update\">ruby on rails - can&#39;t run server or bundle update - Stack Overflow</a>\r\n<li><a href=\"http://serverfault.com/questions/442150/how-to-fix-ruby-installation-is-missing-psych-for-yaml-output-on-centos\">How to fix &quot;ruby installation is missing psych (for YAML output).&quot; on CentOS? - Server Fault</a>\r\n<li><a href=\"http://d.hatena.ne.jp/mikage014/20091021/p1\">ソースからインストールしたRuby 1.9.1をアンインストールする方法 - mikage014の日記</a>\r\n<li><a href=\"http://mcnc.jp/wiki/wikird/index.php?Linux%2F%A5%DE%A5%CB%A5%E5%A5%A2%A5%EB%2Fweb%2FRedmine%2F%A4%B5%A4%AF%A4%E9%A5%B5%A1%BC%A5%D0%A4%D8%A5%A4%A5%F3%A5%B9%A5%C8%A1%BC%A5%EB\">Linux/マニュアル/web/Redmine/さくらサーバへインストール - mechanical Wiki</a>\r\n</ul>','さくらのスタンダードにRedmineをインストールする','','inherit','open','open','','797-revision-v1','','','2014-01-02 00:04:03','2014-01-01 15:04:03','',797,'http://49.212.213.226/wordpress/solution-log/?p=913',0,'revision','',0),(914,1,'2014-01-02 02:42:18','2014-01-01 17:42:18','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &quot;Development Tools&quot;;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&amp;gt; create database redmine default character set utf8;\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &amp;#039;redmine&amp;#039;@&amp;#039;localhost&amp;#039 IDENTIFIED BY &#039;パスワード&#039;;\r\nmysql&amp;gt; flush privileges;\r\nmysql&amp;gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n\r\npassenger-install-apache2-module\r\n\r\n\r\nThe Apache 2 module was successfully installed.\r\n\r\nPlease edit your Apache configuration file, and add these lines:\r\n\r\n\r\n#######################################################\r\n#  /etc/httpd/conf.d/passenger.conf に書き込む\r\n#######################################################\r\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\n   PassengerRuby /usr/local/bin/ruby\r\n##########################################################\r\n\r\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\r\napplications on Apache, without any further Ruby on Rails-specific\r\nconfiguration!\r\n\r\nPress ENTER to continue.\r\n</pre>\r\n\r\n<h4>Apacheの設定を行う</h4>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Rack-Cache&quot;\r\nHeader always unset &quot;X-Content-Digest&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 3600\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nRailsAppSpawnerIdleTime 86400\r\n\r\nservice httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n# 以下を追加\r\nRackBaseURI /redmine\r\n\r\nservice httpd configtest\r\nservice httpd graceful\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','publish','open','open','','redmine2-4%e3%82%92centos6-4%e3%81%ab%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2014-01-07 14:15:05','2014-01-07 05:15:05','',0,'http://49.212.213.226/wordpress/solution-log/?p=914',0,'post','',0),(915,1,'2014-01-02 02:06:46','2014-01-01 17:06:46','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353.tar.gz\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベースredmineを作成する。その後データベースユーザredmineを登録する。\r\n<h4>データベースRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nmysql&gt; CREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-02 02:06:46','2014-01-01 17:06:46','',914,'http://49.212.213.226/wordpress/solution-log/?p=915',0,'revision','',0),(916,1,'2014-01-02 02:08:46','2014-01-01 17:08:46','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353.tar.gz\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\n# mysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\nSubversionリポジトリからチェックアウトするかソースからインストールする。Subversionリポジトリからチェックアウトした場合はファイルの解凍を行う必要がない。どちらかと言えばSubversionリポジトリからチェックアウトした方が簡単だと思われる。またダウンロードした<a href=\"./?p=596\">Redmineのバージョン確認</a>を行うと良い。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\nもしくは\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://rubyforge.org/frs/download.php/76627/redmine-2.2.0.tar.gz\r\ncd /var/lib\r\ntar xzf /usr/local/src/redmine-2.2.0.tar.gz\r\nln -s redmine-2.2.0 redmine\r\nls -l\r\n</pre>\r\n\r\n\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle install --path vendor/bundler --without development test postgresql sqlite\r\n</pre>\r\nもしこの時以下のようなメッセージが出た場合は<a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql-develがインストールされていない</a>ので<a href=\"./?p=187\">インストールする</a>事\r\n<pre class=\"brush: bash\">\r\nAn error occurred while installing mysql2 (0.3.11), and Bundler cannot continue.\r\nMake sure that `gem install mysql2 -v &#039;0.3.11&#039;` succeeds before bundling.\r\n</pre>\r\n\r\n\r\n<h3>Redmineを初期化する</h3>\r\nまずデータベースredmineを作成する。その後データベースユーザredmineを登録する。\r\n<h4>データベースRedmineの作成</h4>\r\n<b>必ずキャラクタセットを指定してデータバースを作成する事！</b>この設定が曖昧だと、バックアップや移設作業の時に困る事になる。\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nmysql&gt; CREATE DATABASE redmine CHARACTER SET utf8;\r\n</pre>\r\n\r\n<h4>登録ユーザの確認と作成</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -u root -p\r\nEnter password: \r\n\r\nmysql&gt; SELECT User, Host FROM mysql.user;\r\n+------+-----------+\r\n| User | Host      |\r\n+------+-----------+\r\n| root | 127.0.0.1 |\r\n| root | localhost |\r\n+------+-----------+\r\n</pre>\r\n\r\n現在登録されているユーザ一覧にredmineが無い場合はユーザを追加（<b>パスワードは/path/to/redmine/config/database.ymlで設定したものと同じものにする</b>）\r\n<pre class=\"brush: bash\">\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039; IDENTIFIED BY &#039;パスワード&#039;;\r\nQuery OK, 0 rows affected (0.00 sec)\r\n\r\n# redmineがユーザとして追加されたか確認\r\nmysql&amp;gt; SELECT User, Host FROM mysql.user;\r\n+--------------+-----------+\r\n| User         | Host      |\r\n+--------------+-----------+\r\n| root         | 127.0.0.1 |\r\n| redmine      | localhost |\r\n| root         | localhost |\r\n+--------------+-----------+\r\n3 rows in set (0.00 sec)\r\n</pre>\r\n間違えてユーザを作成してしまった場合は<b>『DROP USER redmine@localhost』</b>などで削除出来る。\r\n\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\nもし<b>Access denied for user \'redmine\'@\'localhost\' (using password: YES)...</b>のようなエラーが出てデータベースの初期化が進まない時はもう一度config/database.ymlのユーザとパスワードの記述が正しいかどうか確かめる。もしくはymlファイル通りにMySQLでユーザに権限を与えたかどうか調べる。\r\n\r\nまた<b>rake aborted!Please install the mysql adapter: `gem install activerecord-mysql-adapter` (mysql is not part of the bundle. Add it to Gemfile.)</b>や<b>rake aborted!\r\ndatabase configuration does not specify adapter</b>のようなエラーが出る場合は、database.ymlのアダプターの設定が<b>mysql2</b>になっているか再度確認する。\r\n\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.02.246.ne.jp/~torutk/swetools/redmine/setupCentOS6.html\">CentOS 6上でRedmine 2を動かすメモ</a>\r\n<li><a href=\"http://www.tooyama.org/yum-addrepo-epel.html\">CentOS 外部レポジトリの追加(EPEL)</a>\r\n<li><a href=\"http://stackoverflow.com/questions/3754662/errors-installing-mysql2-gem-via-the-bundler\">mysql - Errors Installing mysql2 gem via the Bundler - Stack Overflow</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-02 02:08:46','2014-01-01 17:08:46','',914,'http://49.212.213.226/wordpress/solution-log/?p=916',0,'revision','',0),(917,1,'2014-01-02 02:23:51','2014-01-01 17:23:51','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353.tar.gz\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&gt; create database redmine default character set utf8;\r\nmysql&gt; grant all on redmine.* to user_redmine identified by &#039;********&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.2-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n通常はコマンド操作でRedmineの立ち上げが必要になるが、一々面倒なので、Apache起動時にRedmineも立ち上がるように設定する。<a href=\"./?p=459\">こちらのエントリー</a>を参考。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-02 02:23:51','2014-01-01 17:23:51','',914,'http://49.212.213.226/wordpress/solution-log/?p=917',0,'revision','',0),(918,1,'2014-01-02 02:42:18','2014-01-01 17:42:18','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nエディタで /etc/sysconfig/selinux を開き、 SELINUX の値を disabled に編集する。変更後はシステムを再起動しておくこと。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\nCentOS 6.4の初期状態ではiptables(ファイアウォール)が有効になっており、外部からサーバ上の80/tcpポート(HTTP)に接続することができない。クライアントのwebブラウザからアクセスできるようiptablesの設定を変更する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &amp;quot;Development Tools&amp;quot;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353.tar.gz\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<b>MySQLのバージョンが古い場合は必ず<a href=\"./?p=187\">アップデートしておく</a>事。</b>\r\n\r\n『<b>/etc/my.cnf</b>』を開き、<b>[mysqld]</b>セクションに<b>character-set-server=utf8</b>を、<b>[mysql]</b>セクションに<b>default-character-set=utf8</b>を設定する\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&gt; create database redmine default character set utf8;\r\nmysql&gt; grant all on redmine.* to user_redmine identified by &#039;********&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>RedmineをAapcheと同期させる</h3>\r\n後日追記する\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-02 02:42:18','2014-01-01 17:42:18','',914,'http://49.212.213.226/wordpress/solution-log/?p=918',0,'revision','',0),(919,1,'2014-01-02 04:19:23','2014-01-01 19:19:23','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\n\n\n<h3>SELinuxを無効にする</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/selinux\nSELINUX=disabled\nreboot\n</pre>\n\n\n<h3>iptablesでHTTPを許可する</h3>\n<pre class=\"brush: bash\">\nvi /etc/sysconfig/iptables\n\n# Firewall configuration written by system-config-firewall\n# Manual customization of this file is not recommended.\n*filter\n:INPUT ACCEPT [0:0]\n:FORWARD ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n-A INPUT -p icmp -j ACCEPT\n-A INPUT -i lo -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\n\n# Redmineの動作確認用に3000番を開けておく\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\nCOMMIT\n\n# iptablesを再起動する\nservice iptables restart\n</pre>\n\n<h3>CentOSパッケージの追加インストール</h3>\n\nyumで追加インストール\n<pre class=\"brush: bash\">\n# EPELをインストール\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\n\n# 開発ツールをインストール\nyum groupinstall &quot;Development Tools&quot;;\n# RubyとPassengerのビルドに必要なヘッダファイルなど\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\n# MySQLをアップデートする\nyum install mysql-server mysql-devel\n# Apacheをアップデートする\nyum install httpd httpd-devel\n# ImageMagickとヘッダファイル・日本語フォント\nyum install ImageMagick ImageMagick-devel\nyum install ipa-pgothic-fonts\n</pre>\n\n\n<h3>Ruby 2.0.0をインストールする</h3>\n<pre class=\"brush: bash\">\ncd /usr/local/src\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\ntar zxvf ruby-2.0.0-p353.tar.gz\ncd ruby-2.0.0-p353.tar.gz\n./configure --disable-install-doc\nmake\nmake install\n</pre>\n\n<h3>bundlerをインストールする</h3>\n<pre class=\"brush: bash\">\ngem install bundler --no-rdoc --no-ri\n</pre>\n\n<h3>データベースの設定を確認する</h3>\n<pre class=\"brush: bash\">\nvi /etc/my.cnf\n[mysqld]\ndatadir=/var/lib/mysql\nsocket=/var/lib/mysql/mysql.sock\nuser=mysql\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links=0\n\ncharacter-set-server=utf8\n\n# 任意設定\ninnodb_file_per_table\nquery-cache-size=16M\n\n[mysqld_safe]\nlog-error=/var/log/mysqld.log\npid-file=/var/run/mysqld/mysqld.pid\n\n[mysql]\ndefault-character-set=utf8\n\n#mysqlを再起動する\nservice mysqld start\nchkconfig mysqld on\n</pre>\n\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\n<pre class=\"brush: bash\">\nmysql -uroot\nmysql&gt; show variables like &#039;character_set%&#039;;\n+--------------------------+----------------------------+\n| Variable_name            | Value                      |\n+--------------------------+----------------------------+\n| character_set_client     | utf8                       |\n| character_set_connection | utf8                       |\n| character_set_database   | utf8                       |\n| character_set_filesystem | binary                     |\n| character_set_results    | utf8                       |\n| character_set_server     | utf8                       |\n| character_set_system     | utf8                       |\n| character_sets_dir       | /usr/share/mysql/charsets/ |\n+--------------------------+----------------------------+\n8 rows in set (0.00 sec)\n\nmysql&gt; exit\n</pre>\n\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\n<pre class=\"brush: bash\">\nmysql -uroot\nmysql&gt; use mysql;\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\nmysql&gt; delete from user where user = &#039;&#039;;\nmysql&gt; flush privileges;\nmysql&gt; exit;\n</pre>\n\n<h4>Redmine用データベースとユーザーを作成する</h4>\n<pre class=\"brush: bash\">\nmysql -uroot -p\nmysql&gt; create database redmine default character set utf8;\nmysql&gt; grant all on redmine.* to user_redmine identified by &#039;********&#039;;\nmysql&gt; flush privileges;\nmysql&gt; exit;\n</pre>\n\n<h3>Redmineをインストールする</h3>\n<pre class=\"brush: bash\">\ncd /var/lib\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\n</pre>\n\n<h3>Redmineの設定ファイルを作成する</h3>\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\n\n<h4>データベース接続設定</h4>\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\n<pre class=\"brush: bash\">\n    production:\n      adapter: mysql2\n      database: redmine\n      host: localhost\n      username: redmine\n      password: foobar\n      encoding: utf8  \n</pre>\n下線部は、MySQLの設定で使用した名前に合わせます。\n\n<h4>メール送信設定</h4>\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\n<pre class=\"brush: bash\">\n    production:\n      email_delivery:\n        delivery_method: :smtp\n        smtp_settings:\n          address: &quot;localhost&quot;\n          port: 25\n          domain: &#039;example.com&#039;\n</pre>\n\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\nRubyのgemとは別にインストールする必要があるらしい。\n<pre class=\"brush: bash\">\ncd /var/lib/redmine\nbundle install --without development test\n</pre>\n\n<h3>Redmineを初期化する</h3>\n\n<h4>セッションデータの暗号化の鍵生成</h4>\n<pre class=\"brush: bash\">\ncd /var/lib/redmine-2.2.0\nbundle exec rake generate_secret_token\n</pre>\n\n\n<h4>データベースを初期構築</h4>\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\n<pre class=\"brush: bash\">\nservice mysqld start\nRAILS_ENV=production bundle exec rake db:migrate\n</pre>\n\n\n<h3>Redmineの動作確認をする</h3>\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\n<pre class=\"brush: bash\">\n# Apacheを起動する\nhttpd -k start\n# WEBrick起動する\nruby /var/lib/redmine/script/rails server webrick -e production\n</pre>\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\n\n\n<h3>Passengerをインストールする</h3>\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\n<pre class=\"brush: bash\">\ngem install passenger --no-rdoc --no-ri\n\npassenger-install-apache2-module\n\n\nThe Apache 2 module was successfully installed.\n\nPlease edit your Apache configuration file, and add these lines:\n\n\n#######################################################\n#  /etc/httpd/conf.d/passenger.conf に書き込む\n#######################################################\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\n   PassengerRuby /usr/local/bin/ruby\n##########################################################\n\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\napplications on Apache, without any further Ruby on Rails-specific\nconfiguration!\n\nPress ENTER to continue.\n</pre>\n\n<h4>Apacheの設定を行う</h4>\n<pre class=\"brush: bash\">\nvi /etc/httpd/conf.d/passenger.conf\n\n\n# Passengerの基本設定。\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\n#\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\nPassengerRuby /usr/local/bin/ruby\n\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\n#\nHeader always unset &quot;X-Powered-By&quot;\nHeader always unset &quot;X-Rack-Cache&quot;\nHeader always unset &quot;X-Content-Digest&quot;\nHeader always unset &quot;X-Runtime&quot;\n\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\nPassengerMaxPoolSize 20\nPassengerMaxInstancesPerApp 4\nPassengerPoolIdleTime 3600\nPassengerHighPerformance on\nPassengerStatThrottleRate 10\nPassengerSpawnMethod smart\nRailsAppSpawnerIdleTime 86400\n\nservice httpd start\nchkconfig httpd on\n</pre>\n\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\n<pre class=\"brush: bash\">\nchown -R apache:apache /var/lib/redmine\n\nln -s /var/lib/redmine/public /var/www/html/redmine\n\nvi /etc/httpd/conf.d/passenger.conf\n\n# 以下を追加\nRackBaseURI /redmine\n\nservice httpd configtest\nservice httpd graceful\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-autosave-v1','','','2014-01-02 04:19:23','2014-01-01 19:19:23','',914,'http://49.212.213.226/wordpress/solution-log/?p=919',0,'revision','',0),(920,1,'2014-01-02 04:21:00','2014-01-01 19:21:00','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &quot;Development Tools&quot;;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353.tar.gz\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&gt; create database redmine default character set utf8;\r\nmysql&gt; grant all on redmine.* to user_redmine identified by &#039;********&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n\r\npassenger-install-apache2-module\r\n\r\n\r\nThe Apache 2 module was successfully installed.\r\n\r\nPlease edit your Apache configuration file, and add these lines:\r\n\r\n\r\n#######################################################\r\n#  /etc/httpd/conf.d/passenger.conf に書き込む\r\n#######################################################\r\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\n   PassengerRuby /usr/local/bin/ruby\r\n##########################################################\r\n\r\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\r\napplications on Apache, without any further Ruby on Rails-specific\r\nconfiguration!\r\n\r\nPress ENTER to continue.\r\n</pre>\r\n\r\n<h4>Apacheの設定を行う</h4>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Rack-Cache&quot;\r\nHeader always unset &quot;X-Content-Digest&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 3600\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nRailsAppSpawnerIdleTime 86400\r\n\r\nservice httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n# 以下を追加\r\nRackBaseURI /redmine\r\n\r\nservice httpd configtest\r\nservice httpd graceful\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-02 04:21:00','2014-01-01 19:21:00','',914,'http://49.212.213.226/wordpress/solution-log/?p=920',0,'revision','',0),(922,1,'2014-01-07 13:50:32','2014-01-07 04:50:32','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &quot;Development Tools&quot;;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&gt; create database redmine default character set utf8;\r\nmysql&gt; grant all on redmine.* to user_redmine identified by &#039;********&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n\r\npassenger-install-apache2-module\r\n\r\n\r\nThe Apache 2 module was successfully installed.\r\n\r\nPlease edit your Apache configuration file, and add these lines:\r\n\r\n\r\n#######################################################\r\n#  /etc/httpd/conf.d/passenger.conf に書き込む\r\n#######################################################\r\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\n   PassengerRuby /usr/local/bin/ruby\r\n##########################################################\r\n\r\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\r\napplications on Apache, without any further Ruby on Rails-specific\r\nconfiguration!\r\n\r\nPress ENTER to continue.\r\n</pre>\r\n\r\n<h4>Apacheの設定を行う</h4>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Rack-Cache&quot;\r\nHeader always unset &quot;X-Content-Digest&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 3600\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nRailsAppSpawnerIdleTime 86400\r\n\r\nservice httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n# 以下を追加\r\nRackBaseURI /redmine\r\n\r\nservice httpd configtest\r\nservice httpd graceful\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-07 13:50:32','2014-01-07 04:50:32','',914,'http://49.212.213.226/wordpress/solution-log/?p=922',0,'revision','',0),(923,1,'2014-01-07 14:11:05','2014-01-07 05:11:05','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &quot;Development Tools&quot;;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&gt; create database redmine default character set utf8;\r\nmysql&gt; GRANT ALL PRIVILEGES ON redmine.* TO &#039;redmine&#039;@&#039;localhost&#039;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n\r\npassenger-install-apache2-module\r\n\r\n\r\nThe Apache 2 module was successfully installed.\r\n\r\nPlease edit your Apache configuration file, and add these lines:\r\n\r\n\r\n#######################################################\r\n#  /etc/httpd/conf.d/passenger.conf に書き込む\r\n#######################################################\r\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\n   PassengerRuby /usr/local/bin/ruby\r\n##########################################################\r\n\r\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\r\napplications on Apache, without any further Ruby on Rails-specific\r\nconfiguration!\r\n\r\nPress ENTER to continue.\r\n</pre>\r\n\r\n<h4>Apacheの設定を行う</h4>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Rack-Cache&quot;\r\nHeader always unset &quot;X-Content-Digest&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 3600\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nRailsAppSpawnerIdleTime 86400\r\n\r\nservice httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n# 以下を追加\r\nRackBaseURI /redmine\r\n\r\nservice httpd configtest\r\nservice httpd graceful\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-07 14:11:05','2014-01-07 05:11:05','',914,'http://49.212.213.226/wordpress/solution-log/?p=923',0,'revision','',0),(924,1,'2014-01-07 14:15:05','2014-01-07 05:15:05','Redmine、CentOSのバージョンが上がったのでインストール手順を再確認する。\r\n\r\n\r\n<h3>SELinuxを無効にする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/selinux\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>iptablesでHTTPを許可する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n\r\n# Redmineの動作確認用に3000番を開けておく\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 3000 -j ACCEPT\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n\r\n# iptablesを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>CentOSパッケージの追加インストール</h3>\r\n\r\nyumで追加インストール\r\n<pre class=\"brush: bash\">\r\n# EPELをインストール\r\nrpm -Uvh http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\r\n\r\n# 開発ツールをインストール\r\nyum groupinstall &quot;Development Tools&quot;;\r\n# RubyとPassengerのビルドに必要なヘッダファイルなど\r\nyum install openssl-devel readline-devel zlib-devel curl-devel libyaml-devel\r\n# MySQLをアップデートする\r\nyum install mysql-server mysql-devel\r\n# Apacheをアップデートする\r\nyum install httpd httpd-devel\r\n# ImageMagickとヘッダファイル・日本語フォント\r\nyum install ImageMagick ImageMagick-devel\r\nyum install ipa-pgothic-fonts\r\n</pre>\r\n\r\n\r\n<h3>Ruby 2.0.0をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget ftp://ftp.ruby-lang.org/pub/ruby/2.0/ruby-2.0.0-p353.tar.gz\r\ntar zxvf ruby-2.0.0-p353.tar.gz\r\ncd ruby-2.0.0-p353\r\n./configure --disable-install-doc\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>bundlerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ngem install bundler --no-rdoc --no-ri\r\n</pre>\r\n\r\n<h3>データベースの設定を確認する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/my.cnf\r\n[mysqld]\r\ndatadir=/var/lib/mysql\r\nsocket=/var/lib/mysql/mysql.sock\r\nuser=mysql\r\n# Disabling symbolic-links is recommended to prevent assorted security risks\r\nsymbolic-links=0\r\n\r\ncharacter-set-server=utf8\r\n\r\n# 任意設定\r\ninnodb_file_per_table\r\nquery-cache-size=16M\r\n\r\n[mysqld_safe]\r\nlog-error=/var/log/mysqld.log\r\npid-file=/var/run/mysqld/mysqld.pid\r\n\r\n[mysql]\r\ndefault-character-set=utf8\r\n\r\n#mysqlを再起動する\r\nservice mysqld start\r\nchkconfig mysqld on\r\n</pre>\r\n\r\n<h4>/etc/my.cnf への設定が反映されていることの確認</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; show variables like &#039;character_set%&#039;;\r\n+--------------------------+----------------------------+\r\n| Variable_name            | Value                      |\r\n+--------------------------+----------------------------+\r\n| character_set_client     | utf8                       |\r\n| character_set_connection | utf8                       |\r\n| character_set_database   | utf8                       |\r\n| character_set_filesystem | binary                     |\r\n| character_set_results    | utf8                       |\r\n| character_set_server     | utf8                       |\r\n| character_set_system     | utf8                       |\r\n| character_sets_dir       | /usr/share/mysql/charsets/ |\r\n+--------------------------+----------------------------+\r\n8 rows in set (0.00 sec)\r\n\r\nmysql&gt; exit\r\n</pre>\r\n\r\n<h4>rootユーザーのパスワード変更・匿名ユーザー削除</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot\r\nmysql&gt; use mysql;\r\nmysql&gt; update user set password=password(&#039;********&#039;) where user = &#039;root&#039;;\r\nmysql&gt; delete from user where user = &#039;&#039;;\r\nmysql&gt; flush privileges;\r\nmysql&gt; exit;\r\n</pre>\r\n\r\n<h4>Redmine用データベースとユーザーを作成する</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nmysql&amp;gt; create database redmine default character set utf8;\r\nmysql&amp;gt; GRANT ALL PRIVILEGES ON redmine.* TO &amp;#039;redmine&amp;#039;@&amp;#039;localhost&amp;#039 IDENTIFIED BY &#039;パスワード&#039;;\r\nmysql&amp;gt; flush privileges;\r\nmysql&amp;gt; exit;\r\n</pre>\r\n\r\n<h3>Redmineをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib\r\nsvn checkout http://svn.redmine.org/redmine/branches/2.4-stable redmine\r\n</pre>\r\n\r\n<h3>Redmineの設定ファイルを作成する</h3>\r\n設定ファイルはシンボリックリンクではなく、Redmine本体に作成する事。\r\n\r\n<h4>データベース接続設定</h4>\r\n<b>『/path/to/redmine/config/database.yml』</b>を作成。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      adapter: mysql2\r\n      database: redmine\r\n      host: localhost\r\n      username: redmine\r\n      password: foobar\r\n      encoding: utf8  \r\n</pre>\r\n下線部は、MySQLの設定で使用した名前に合わせます。\r\n\r\n<h4>メール送信設定</h4>\r\n<b>『/path/to/redmine/config/configuration.yml』</b>を作成。メール送信の設定は、環境によって異なる。以下は認証不要のSMPTサーバーの場合。\r\n<pre class=\"brush: bash\">\r\n    production:\r\n      email_delivery:\r\n        delivery_method: :smtp\r\n        smtp_settings:\r\n          address: &quot;localhost&quot;\r\n          port: 25\r\n          domain: &#039;example.com&#039;\r\n</pre>\r\n\r\n<h3>Redmineが使用するgemパッケージのインストールする</h3>\r\nRubyのgemとは別にインストールする必要があるらしい。\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine\r\nbundle install --without development test\r\n</pre>\r\n\r\n<h3>Redmineを初期化する</h3>\r\n\r\n<h4>セッションデータの暗号化の鍵生成</h4>\r\n<pre class=\"brush: bash\">\r\ncd /var/lib/redmine-2.2.0\r\nbundle exec rake generate_secret_token\r\n</pre>\r\n\r\n\r\n<h4>データベースを初期構築</h4>\r\nデータベースの初期構築コマンドを発行する前にMySQLの起動を忘れずに行う。\r\n<pre class=\"brush: bash\">\r\nservice mysqld start\r\nRAILS_ENV=production bundle exec rake db:migrate\r\n</pre>\r\n\r\n\r\n<h3>Redmineの動作確認をする</h3>\r\n上記の手順通りRedmineを設定したら、とりあえず起動してみる。\r\n<pre class=\"brush: bash\">\r\n# Apacheを起動する\r\nhttpd -k start\r\n# WEBrick起動する\r\nruby /var/lib/redmine/script/rails server webrick -e production\r\n</pre>\r\n<a href=\"http://localhost:3000\">http://localhost:3000</a>に接続し、Redmine画面が表示されたら正常。\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nApache上でRedmineなどのRailsアプリケーションの実行に必要なPhusion Passengerをインストールする\r\n<pre class=\"brush: bash\">\r\ngem install passenger --no-rdoc --no-ri\r\n\r\npassenger-install-apache2-module\r\n\r\n\r\nThe Apache 2 module was successfully installed.\r\n\r\nPlease edit your Apache configuration file, and add these lines:\r\n\r\n\r\n#######################################################\r\n#  /etc/httpd/conf.d/passenger.conf に書き込む\r\n#######################################################\r\n   LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\n   PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\n   PassengerRuby /usr/local/bin/ruby\r\n##########################################################\r\n\r\nAfter you restart Apache, you are ready to deploy any number of Ruby on Rails\r\napplications on Apache, without any further Ruby on Rails-specific\r\nconfiguration!\r\n\r\nPress ENTER to continue.\r\n</pre>\r\n\r\n<h4>Apacheの設定を行う</h4>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet を実行して表示される設定を使用。\r\n# 環境によって設定値が異なりますので以下の3行はそのまま転記しないでください。\r\n#\r\nLoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17/ext/apache2/mod_passenger.so\r\nPassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.17\r\nPassengerRuby /usr/local/bin/ruby\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Rack-Cache&quot;\r\nHeader always unset &quot;X-Content-Digest&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(http://www.modrails.com/documentation/Users%20guide%20Apache.html)をご覧ください。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 3600\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nRailsAppSpawnerIdleTime 86400\r\n\r\nservice httpd start\r\nchkconfig httpd on\r\n</pre>\r\n\r\n<h4>Apache上のPassengerでRedmineを実行するための設定をする</h4>\r\n<pre class=\"brush: bash\">\r\nchown -R apache:apache /var/lib/redmine\r\n\r\nln -s /var/lib/redmine/public /var/www/html/redmine\r\n\r\nvi /etc/httpd/conf.d/passenger.conf\r\n\r\n# 以下を追加\r\nRackBaseURI /redmine\r\n\r\nservice httpd configtest\r\nservice httpd graceful\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.redmine.jp/articles/2_4/installation_centos/\">Redmine 2.4をCentOS 6.4にインストールする手順 | Redmine.JP Blog</a>\r\n</ul>','Redmine2.4をCentOS6.4にインストールする','','inherit','open','open','','914-revision-v1','','','2014-01-07 14:15:05','2014-01-07 05:15:05','',914,'http://49.212.213.226/wordpress/solution-log/?p=924',0,'revision','',0),(930,1,'2014-03-21 22:17:39','2014-03-21 13:17:39','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\">php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow</a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\">Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum</a>\r\n</ul>','PHPを再インストールする','','publish','open','open','','930','','','2014-03-21 22:18:22','2014-03-21 13:18:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=930',0,'post','',0),(932,1,'2014-03-21 22:14:48','2014-03-21 13:14:48','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\" target=\"_blank\"></a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\"></a>\r\n</ul>','PHPがインストール出来ない場合の対処法','','inherit','open','open','','930-revision-v1','','','2014-03-21 22:14:48','2014-03-21 13:14:48','',930,'http://49.212.213.226/wordpress/solution-log/?p=932',0,'revision','',0),(933,1,'2014-03-21 22:15:05','2014-03-21 13:15:05','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\"></a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\"></a>\r\n</ul>','PHPがインストール出来ない場合の対処法','','inherit','open','open','','930-revision-v1','','','2014-03-21 22:15:05','2014-03-21 13:15:05','',930,'http://49.212.213.226/wordpress/solution-log/?p=933',0,'revision','',0),(934,1,'2014-03-21 22:15:53','2014-03-21 13:15:53','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\">php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow</a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\">Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum</a>\r\n</ul>','PHPがインストール出来ない場合の対処法','','inherit','open','open','','930-revision-v1','','','2014-03-21 22:15:53','2014-03-21 13:15:53','',930,'http://49.212.213.226/wordpress/solution-log/?p=934',0,'revision','',0),(935,1,'2014-03-21 22:17:39','2014-03-21 13:17:39','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\">php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow</a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\">Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum</a>\r\n</ul>','','','inherit','open','open','','930-revision-v1','','','2014-03-21 22:17:39','2014-03-21 13:17:39','',930,'http://49.212.213.226/wordpress/solution-log/?p=935',0,'revision','',0),(936,1,'2014-03-21 22:18:22','2014-03-21 13:18:22','PHPをインストールしたりアンインストールしたりしていると、ApacheとPHPの連携が外れてしまう場合がある。その場合はApache、PHPをインストールしなおす\r\n\r\n<pre class=\"brush: bash\">\r\nyum remove httpd httpd-devel mod_ssl libxml2-devel php*\r\nyum clean all\r\nrm -rf *google*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://stackoverflow.com/questions/20510831/apache-cannot-load-modules-libphp5-so-into-server-when-i-installed-php5-gd\" title=\"php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow\">php - Apache Cannot load modules/libphp5.so into server: when I installed php5-gd - Stack Overflow</a>\r\n<li><a href=\"https://ask.fedoraproject.org/en/question/9362/why-do-i-get-these-message-while-using-yum/\" title=\"Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum\" target=\"_blank\">Why do I get these message while using yum? - Ask Fedora: Community Knowledge Base and Support Forum</a>\r\n</ul>','PHPを再インストールする','','inherit','open','open','','930-revision-v1','','','2014-03-21 22:18:22','2014-03-21 13:18:22','',930,'http://49.212.213.226/wordpress/solution-log/?p=936',0,'revision','',0),(938,1,'2014-05-02 00:21:43','2014-05-01 15:21:43','今までインストール手順をまとめてなかったのでまとめておく\r\n\r\n<h3>VMWare Playerをダウンロードする</h3>\r\nyumコマンドで簡単にインストール出きるのかと思ったがそうでもないらしい。インストールパッケージを<a href=\"https://my.vmware.com/jp/web/vmware/downloads\">VMWare Playerのサイト</a>からダウンロードする必要がある。\r\n\r\n<h3>VMWare Playerをインストールする</h3>\r\nダウンロードしたファイルをrootで実行する。\r\n<pre class=\"brush: bash\">\r\nsu root\r\nbash VMware-Player-6.0.2-1744117.i386.bundle \r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.kkaneko.com/rinkou/vmwareplayer/vmwareplayerubuntu.html\">Ubuntu 12.04 に VMware Player Linux 版 バージョン 5.0.0 のインストール</a>\r\n</ul>','CentOS6.5にVMWare Playerをインストールする','','publish','open','open','','centos6-5%e3%81%abvmware-player%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2014-05-02 00:21:43','2014-05-01 15:21:43','',0,'http://49.212.213.226/wordpress/solution-log/?p=938',0,'post','',0),(939,1,'2014-05-02 00:16:02','2014-05-01 15:16:02','今までインストール手順をまとめてなかったのでまとめておく\r\n\r\n<h3>VMWare Playerをダウンロードする</h3>\r\nyumコマンドで簡単にインストール出きるのかと思ったがそうでもないらしい。インストールパッケージを<a href=\"https://my.vmware.com/jp/web/vmware/downloads\">VMWare Playerのサイト</a>からダウンロードする必要がある。\r\n\r\n<h3>VMWare Playerをインストールする</h3>\r\nダウンロードしたファイルをrootで実行する\r\n<pre class=\"brush: bash\">\r\nsu root\r\nbash VMware-Player-6.0.2-1744117.i386.bundle \r\n</pre>','CentOS6.5にVMWare Playerをインストールする','','inherit','open','open','','938-revision-v1','','','2014-05-02 00:16:02','2014-05-01 15:16:02','',938,'http://49.212.213.226/wordpress/solution-log/?p=939',0,'revision','',0),(940,1,'2014-05-02 00:21:16','2014-05-01 15:21:16','今までインストール手順をまとめてなかったのでまとめておく\r\n\r\n<h3>VMWare Playerをダウンロードする</h3>\r\nyumコマンドで簡単にインストール出きるのかと思ったがそうでもないらしい。インストールパッケージを<a href=\"https://my.vmware.com/jp/web/vmware/downloads\">VMWare Playerのサイト</a>からダウンロードする必要がある。\r\n\r\n<h3>VMWare Playerをインストールする</h3>\r\nダウンロードしたファイルをrootで実行する。\r\n<pre class=\"brush: bash\">\r\nsu root\r\nbash VMware-Player-6.0.2-1744117.i386.bundle \r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.kkaneko.com/rinkou/vmwareplayer/vmwareplayerubuntu.html\">Ubuntu 12.04 に VMware Player Linux 版 バージョン 5.0.0 のインストール</a>\r\n</ul>','CentOS6.5にVMWare Playerをインストールする','','inherit','open','open','','938-revision-v1','','','2014-05-02 00:21:16','2014-05-01 15:21:16','',938,'http://49.212.213.226/wordpress/solution-log/?p=940',0,'revision','',0),(941,1,'2014-05-05 16:51:53','2014-05-05 07:51:53','CentOS6.5には最初からLibreOfficeが入っている。ただ、データベース管理が出来るBaseが入ってないので、追加でインストールする。\r\n\r\n<h3>LibreOffice Baseをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install libreoffice-base\r\n</pre>','CentOS6.5にLibreOffice Baseをインストールする','','publish','open','open','','centos6-5%e3%81%ablibreoffice-base%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2014-05-05 16:51:53','2014-05-05 07:51:53','',0,'http://49.212.213.226/wordpress/solution-log/?p=941',0,'post','',0),(942,1,'2014-05-05 16:51:53','2014-05-05 07:51:53','CentOS6.5には最初からLibreOfficeが入っている。ただ、データベース管理が出来るBaseが入ってないので、追加でインストールする。\r\n\r\n<h3>LibreOffice Baseをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install libreoffice-base\r\n</pre>','CentOS6.5にLibreOffice Baseをインストールする','','inherit','open','open','','941-revision-v1','','','2014-05-05 16:51:53','2014-05-05 07:51:53','',941,'http://49.212.213.226/wordpress/solution-log/?p=942',0,'revision','',0),(943,1,'2014-05-07 19:28:34','2014-05-07 10:28:34','CentOS6.5でLibreOfficeをアンイストールし再インストールしたらメニューが英語表記になってしまった。これを日本語に戻す。\r\n\r\n<h3>LibreOfficeを日本語化する</h3>\r\n<pre class=\"brush: bash\">\r\nyum install libreoffice-langpack-ja\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://akira-arets.blogspot.jp/2012/08/centos63-libreoffice-langpack-ja.html\">備忘録: &#12304;Linux CentOS 6.3&#12305;LibreOfficeを日本語化する</a>\r\n</ul>\r\n\r\n','LibreOfficeを日本語化する','','publish','open','open','','libreoffice%e3%82%92%e6%97%a5%e6%9c%ac%e8%aa%9e%e5%8c%96%e3%81%99%e3%82%8b','','','2014-05-07 19:28:34','2014-05-07 10:28:34','',0,'http://49.212.213.226/wordpress/solution-log/?p=943',0,'post','',0),(944,1,'2014-05-07 19:28:27','2014-05-07 10:28:27','CentOS6.5でLibreOfficeをアンイストールし再インストールしたらメニューが英語表記になってしまった。これを日本語に戻す。\r\n\r\n<h3>LibreOfficeを日本語化する</h3>\r\n<pre class=\"brush: bash\">\r\nyum install libreoffice-langpack-ja\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://akira-arets.blogspot.jp/2012/08/centos63-libreoffice-langpack-ja.html\">備忘録: &#12304;Linux CentOS 6.3&#12305;LibreOfficeを日本語化する</a>\r\n</ul>\r\n\r\n','LibreOfficeを日本語化する','','inherit','open','open','','943-revision-v1','','','2014-05-07 19:28:27','2014-05-07 10:28:27','',943,'http://49.212.213.226/wordpress/solution-log/?p=944',0,'revision','',0),(945,1,'2014-05-07 19:34:32','2014-05-07 10:34:32','','140507_libreoffice_1','','inherit','open','open','','140507_libreoffice_1','','','2014-05-07 19:34:32','2014-05-07 10:34:32','',874,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_1.jpg',0,'attachment','image/jpeg',0),(946,1,'2014-05-07 19:36:51','2014-05-07 10:36:51','','140507_libreoffice_1','','inherit','open','open','','140507_libreoffice_1-2','','','2014-05-07 19:36:51','2014-05-07 10:36:51','',874,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_11.jpg',0,'attachment','image/jpeg',0),(947,1,'2014-05-07 19:37:22','2014-05-07 10:37:22','','140507_libreoffice_2','','inherit','open','open','','140507_libreoffice_2','','','2014-05-07 19:37:22','2014-05-07 10:37:22','',874,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_2.jpg',0,'attachment','image/jpeg',0),(948,1,'2014-05-07 19:37:36','2014-05-07 10:37:36','<h3>想定される環境</h3>\r\n<ul>\r\n<li>CentOS6.4\r\n<li>LibreOffice 4.1\r\n</ul>\r\n\r\n<h3>JDBCドライバのインストール</h3>\r\n<pre>\r\n# yum -y install mysql-connector-java\r\n</pre>\r\n\r\n<h3>LibreOfficeにJDBCドライバを認識させる</h3>\r\nLibreOffice Calcを起動\r\nツール→オプション→LibreOffice→詳細→クラスパス\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_2-300x270.jpg\" alt=\"140507_libreoffice_2\" width=\"300\" height=\"270\" class=\"alignnone size-medium wp-image-947\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_11.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2013/10/140507_libreoffice_11-300x189.jpg\" alt=\"140507_libreoffice_1\" width=\"300\" height=\"189\" class=\"alignnone size-medium wp-image-946\" /></a>\r\n\r\n/usr/share/java/mysql-connector-java.jarを追加\r\n\r\n<h3>LibreOffice Baseでデータベース接続を確立する</h3>\r\nLibreOfficeのBaseを開く\r\nファイル→新規作成→データベース\r\n既存のデータベースに接続→JDBC\r\nデータソースのURL\r\nJDBC:mysql://localhost:3306/databasename\r\nJDBCドライバクラス\r\ncom.mysql.jdbc.Driver\r\nテストクラスでテスト\r\nユーザー設定\r\n次のステップは適宜\r\nこれで接続できるはず\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.livedoor.jp/mb0620/d/LibreOffice%20OpenOffice%20JDBC%20MySQL\">LibreOffice OpenOffice JDBC MySQL - 適当記録wiki - Seesaa Wiki（ウィキ）</a>\r\n<li><a href=\"http://krakenbeal.blogspot.jp/2011/02/mysqlopenoffice-basejdbc.html\">MySQLとOpenOffice Baseをjdbcで繋ぐ - KRAKENBEAL RECORDS</a>\r\n<li><a href=\"http://blog.suz-lab.com/2012/10/centostomcatdatasourcerdsmysql.html\">suz-lab - blog: CentOSでTomcatからDataSourceを利用してRDS(MySQL)に接続</a>\r\n</ul>','LibreOfficeからMySQLに接続する','','inherit','open','open','','874-revision-v1','','','2014-05-07 19:37:36','2014-05-07 10:37:36','',874,'http://49.212.213.226/wordpress/solution-log/?p=948',0,'revision','',0),(951,1,'2014-07-02 16:39:34','2014-07-02 07:39:34','前からやってみたかったので、本腰入れてやってみる。\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\nこのサイトを参考にする。\r\n\r\nhttp://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\">CentOS 上で Vagrant を導入するまでのメモ（CUI） - Qiita</a>\r\n<li>\r\n<li>\r\n</ul>\r\n\r\n\r\n','さくらのVPSにVirtualBox + vagrantをインストールする','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abvirtualbox-vagrant%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2014-07-02 16:39:34','2014-07-02 07:39:34','',0,'http://49.212.213.226/wordpress/solution-log/?p=951',0,'post','',0),(952,1,'2014-07-02 16:36:28','2014-07-02 07:36:28','前からやってみたかったので、本腰入れてやってみる。\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\nこのサイトを参考にする。\r\n\r\nhttp://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\">CentOS 上で Vagrant を導入するまでのメモ（CUI） - Qiita</a>\r\n<li>\r\n<li>\r\n</ul>\r\n\r\n\r\n','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','open','open','','951-revision-v1','','','2014-07-02 16:36:28','2014-07-02 07:36:28','',951,'http://49.212.213.226/wordpress/solution-log/?p=952',0,'revision','',0),(954,1,'2014-08-18 01:00:23','2014-08-17 16:00:23','ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。\r\n\r\n<h3>ディスプレーの状態を確認する</h3>\r\n<pre class=\"brush: bash\">\r\n# xrandr\r\n\r\nScreen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192\r\nDVI-I-1 disconnected (normal left inverted right x axis y axis)\r\nHDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm\r\n   1920x1080      60.0 +   50.0  \r\n   1920x1080i     25.0     30.0  \r\n   1680x1050      59.9  \r\n   1280x1024      75.0     60.0  \r\n   1440x900       59.9  \r\n   1360x768       59.8  \r\n   1280x800       59.9* \r\n   1152x864       75.0  \r\n   1280x720       50.0     60.0  \r\n   1440x576i      25.0  \r\n   1024x768       75.1     70.1     60.0  \r\n   1440x480i      30.0  \r\n   832x624        74.6  \r\n   800x600        72.2     75.0     60.3     56.2  \r\n   720x576        50.0  \r\n   720x480        59.9  \r\n   640x480        72.8     75.0     66.7     60.0     59.9  \r\n   720x400        70.1  \r\nVGA-1 connected 1280x800+1280+0 (normal left inverted right x axis y axis) 0mm x 0mm\r\n   1024x768       60.0  \r\n   800x600        60.3     56.2  \r\n   848x480        60.0  \r\n   640x480        59.9\r\n</pre>\r\n「DVI-I-1」と「VGA-1」と言う名称のモニターが接続されている事が分かる。\r\n\r\n\r\n<h3>特定の解像度設定に必要な値を取得する</h3>\r\n<pre class=\"brush: bash\">\r\n# cvt 1280 800\r\n\r\n# 1280x800 59.81 Hz (CVT 1.02MA) hsync: 49.70 kHz; pclk: 83.50 MHz\r\nxrandr --newmode &quot;1280x800_60.00&quot;   83.50  1280 1352 1480 1680  800 803 809 831 -hsync +vsync\r\n</pre>\r\n\r\n<h3>ディスプレイモードの作成</h3>\r\n<pre class=\"brush: bash\">\r\nxrandr --addmode VGA-1 &quot;1280x800_60.00&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/ll_kuma_ll/items/ab9907d1dcab6bdd6aad\" title=\"VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita\" target=\"_blank\">VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita</a>\r\n<li><a href=\"https://answers.launchpad.net/ubuntu/+question/90372\" title=\"Question #90372 : Questions : Ubuntu\">Question #90372 : Questions : Ubuntu</a>\r\n</ul>','CentOS6.5でディスプレーの解像度を変更する','','publish','open','open','','centos6-5%e3%81%a7%e3%83%87%e3%82%a3%e3%82%b9%e3%83%97%e3%83%ac%e3%83%bc%e3%81%ae%e8%a7%a3%e5%83%8f%e5%ba%a6%e3%82%92%e5%a4%89%e6%9b%b4%e3%81%99%e3%82%8b','','','2014-08-25 21:33:47','2014-08-25 12:33:47','',0,'http://49.212.213.226/wordpress/solution-log/?p=954',0,'post','',0),(955,1,'2014-08-18 00:59:40','2014-08-17 15:59:40','ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。\r\n\r\n<h3>ディスプレーの状態を確認する</h3>\r\n<pre class=\"brush: bash\">\r\n# xrandr\r\n\r\nScreen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192\r\nDVI-I-1 disconnected (normal left inverted right x axis y axis)\r\nHDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm\r\n   1920x1080      60.0 +   50.0  \r\n   1920x1080i     25.0     30.0  \r\n   1680x1050      59.9  \r\n   1280x1024      75.0     60.0  \r\n   1440x900       59.9  \r\n   1360x768       59.8  \r\n   1280x800       59.9* \r\n   1152x864       75.0  \r\n   1280x720       50.0     60.0  \r\n   1440x576i      25.0  \r\n   1024x768       75.1     70.1     60.0  \r\n   1440x480i      30.0  \r\n   832x624        74.6  \r\n   800x600        72.2     75.0     60.3     56.2  \r\n   720x576        50.0  \r\n   720x480        59.9  \r\n   640x480        72.8     75.0     66.7     60.0     59.9  \r\n   720x400        70.1  \r\nVGA-1 connected 1280x800+1280+0 (normal left inverted right x axis y axis) 0mm x 0mm\r\n   1024x768       60.0  \r\n   800x600        60.3     56.2  \r\n   848x480        60.0  \r\n   640x480        59.9\r\n</pre>\r\n「DVI-I-1」と「VGA-1」と言う名称のモニターが接続されている事が分かる。\r\n\r\n\r\n<h3>特定の解像度設定に必要な値を取得する</h3>\r\n<pre class=\"brush: bash\">\r\n# cvt 1280 800\r\n\r\n# 1280x800 59.81 Hz (CVT 1.02MA) hsync: 49.70 kHz; pclk: 83.50 MHz\r\nModeline &quot;1280x800_60.00&quot;   83.50  1280 1352 1480 1680  800 803 809 831 -hsync +vsync\r\n</pre>\r\n\r\n<h3>ディスプレイモードの作成</h3>\r\n<pre class=\"brush: bash\">\r\nxrandr --addmode VGA-1 &quot;1280x800_60.00&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/ll_kuma_ll/items/ab9907d1dcab6bdd6aad\" title=\"VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita\" target=\"_blank\">VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita</a>\r\n<li>\r\n<li>\r\n</ul>','CentOS6.5でディスプレーの解像度を変更する','','inherit','open','open','','954-revision-v1','','','2014-08-18 00:59:40','2014-08-17 15:59:40','',954,'http://49.212.213.226/wordpress/solution-log/?p=955',0,'revision','',0),(956,1,'2014-08-18 01:00:12','2014-08-17 16:00:12','ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。\r\n\r\n<h3>ディスプレーの状態を確認する</h3>\r\n<pre class=\"brush: bash\">\r\n# xrandr\r\n\r\nScreen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192\r\nDVI-I-1 disconnected (normal left inverted right x axis y axis)\r\nHDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm\r\n   1920x1080      60.0 +   50.0  \r\n   1920x1080i     25.0     30.0  \r\n   1680x1050      59.9  \r\n   1280x1024      75.0     60.0  \r\n   1440x900       59.9  \r\n   1360x768       59.8  \r\n   1280x800       59.9* \r\n   1152x864       75.0  \r\n   1280x720       50.0     60.0  \r\n   1440x576i      25.0  \r\n   1024x768       75.1     70.1     60.0  \r\n   1440x480i      30.0  \r\n   832x624        74.6  \r\n   800x600        72.2     75.0     60.3     56.2  \r\n   720x576        50.0  \r\n   720x480        59.9  \r\n   640x480        72.8     75.0     66.7     60.0     59.9  \r\n   720x400        70.1  \r\nVGA-1 connected 1280x800+1280+0 (normal left inverted right x axis y axis) 0mm x 0mm\r\n   1024x768       60.0  \r\n   800x600        60.3     56.2  \r\n   848x480        60.0  \r\n   640x480        59.9\r\n</pre>\r\n「DVI-I-1」と「VGA-1」と言う名称のモニターが接続されている事が分かる。\r\n\r\n\r\n<h3>特定の解像度設定に必要な値を取得する</h3>\r\n<pre class=\"brush: bash\">\r\n# cvt 1280 800\r\n\r\n# 1280x800 59.81 Hz (CVT 1.02MA) hsync: 49.70 kHz; pclk: 83.50 MHz\r\nModeline &quot;1280x800_60.00&quot;   83.50  1280 1352 1480 1680  800 803 809 831 -hsync +vsync\r\n</pre>\r\n\r\n<h3>ディスプレイモードの作成</h3>\r\n<pre class=\"brush: bash\">\r\nxrandr --addmode VGA-1 &quot;1280x800_60.00&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/ll_kuma_ll/items/ab9907d1dcab6bdd6aad\" title=\"VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita\" target=\"_blank\">VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita</a>\r\n</ul>','CentOS6.5でディスプレーの解像度を変更する','','inherit','open','open','','954-revision-v1','','','2014-08-18 01:00:12','2014-08-17 16:00:12','',954,'http://49.212.213.226/wordpress/solution-log/?p=956',0,'revision','',0),(957,1,'2014-08-25 21:33:12','2014-08-25 12:33:12','ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。\r\n\r\n<h3>ディスプレーの状態を確認する</h3>\r\n<pre class=\"brush: bash\">\r\n# xrandr\r\n\r\nScreen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192\r\nDVI-I-1 disconnected (normal left inverted right x axis y axis)\r\nHDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm\r\n   1920x1080      60.0 +   50.0  \r\n   1920x1080i     25.0     30.0  \r\n   1680x1050      59.9  \r\n   1280x1024      75.0     60.0  \r\n   1440x900       59.9  \r\n   1360x768       59.8  \r\n   1280x800       59.9* \r\n   1152x864       75.0  \r\n   1280x720       50.0     60.0  \r\n   1440x576i      25.0  \r\n   1024x768       75.1     70.1     60.0  \r\n   1440x480i      30.0  \r\n   832x624        74.6  \r\n   800x600        72.2     75.0     60.3     56.2  \r\n   720x576        50.0  \r\n   720x480        59.9  \r\n   640x480        72.8     75.0     66.7     60.0     59.9  \r\n   720x400        70.1  \r\nVGA-1 connected 1280x800+1280+0 (normal left inverted right x axis y axis) 0mm x 0mm\r\n   1024x768       60.0  \r\n   800x600        60.3     56.2  \r\n   848x480        60.0  \r\n   640x480        59.9\r\n</pre>\r\n「DVI-I-1」と「VGA-1」と言う名称のモニターが接続されている事が分かる。\r\n\r\n\r\n<h3>特定の解像度設定に必要な値を取得する</h3>\r\n<pre class=\"brush: bash\">\r\n# cvt 1280 800\r\n\r\n# 1280x800 59.81 Hz (CVT 1.02MA) hsync: 49.70 kHz; pclk: 83.50 MHz\r\nxrandr --newmode &quot;1280x800_60.00&quot;   83.50  1280 1352 1480 1680  800 803 809 831 -hsync +vsync\r\n</pre>\r\n\r\n<h3>ディスプレイモードの作成</h3>\r\n<pre class=\"brush: bash\">\r\nxrandr --addmode VGA-1 &quot;1280x800_60.00&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/ll_kuma_ll/items/ab9907d1dcab6bdd6aad\" title=\"VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita\" target=\"_blank\">VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita</a>\r\n<li><a href=\"https://answers.launchpad.net/ubuntu/+question/90372\" title=\"Question #90372 : Questions : Ubuntu\">Question #90372 : Questions : Ubuntu</a>\r\n</ul>','CentOS6.5でディスプレーの解像度を変更する','','inherit','open','open','','954-autosave-v1','','','2014-08-25 21:33:12','2014-08-25 12:33:12','',954,'http://49.212.213.226/wordpress/solution-log/?p=957',0,'revision','',0),(958,1,'2014-08-25 21:33:47','2014-08-25 12:33:47','ドライバの不具合なのか良く分からないが、たまにディスプレーの解像度が正しく設定出来なくなるので手動で変更する。\r\n\r\n<h3>ディスプレーの状態を確認する</h3>\r\n<pre class=\"brush: bash\">\r\n# xrandr\r\n\r\nScreen 0: minimum 320 x 200, current 2560 x 800, maximum 8192 x 8192\r\nDVI-I-1 disconnected (normal left inverted right x axis y axis)\r\nHDMI-1 connected 1280x800+0+0 (normal left inverted right x axis y axis) 510mm x 287mm\r\n   1920x1080      60.0 +   50.0  \r\n   1920x1080i     25.0     30.0  \r\n   1680x1050      59.9  \r\n   1280x1024      75.0     60.0  \r\n   1440x900       59.9  \r\n   1360x768       59.8  \r\n   1280x800       59.9* \r\n   1152x864       75.0  \r\n   1280x720       50.0     60.0  \r\n   1440x576i      25.0  \r\n   1024x768       75.1     70.1     60.0  \r\n   1440x480i      30.0  \r\n   832x624        74.6  \r\n   800x600        72.2     75.0     60.3     56.2  \r\n   720x576        50.0  \r\n   720x480        59.9  \r\n   640x480        72.8     75.0     66.7     60.0     59.9  \r\n   720x400        70.1  \r\nVGA-1 connected 1280x800+1280+0 (normal left inverted right x axis y axis) 0mm x 0mm\r\n   1024x768       60.0  \r\n   800x600        60.3     56.2  \r\n   848x480        60.0  \r\n   640x480        59.9\r\n</pre>\r\n「DVI-I-1」と「VGA-1」と言う名称のモニターが接続されている事が分かる。\r\n\r\n\r\n<h3>特定の解像度設定に必要な値を取得する</h3>\r\n<pre class=\"brush: bash\">\r\n# cvt 1280 800\r\n\r\n# 1280x800 59.81 Hz (CVT 1.02MA) hsync: 49.70 kHz; pclk: 83.50 MHz\r\nxrandr --newmode &quot;1280x800_60.00&quot;   83.50  1280 1352 1480 1680  800 803 809 831 -hsync +vsync\r\n</pre>\r\n\r\n<h3>ディスプレイモードの作成</h3>\r\n<pre class=\"brush: bash\">\r\nxrandr --addmode VGA-1 &quot;1280x800_60.00&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://qiita.com/ll_kuma_ll/items/ab9907d1dcab6bdd6aad\" title=\"VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita\" target=\"_blank\">VirtualBoxに入れたLinuxの解像度をワイドに変更 - Qiita</a>\r\n<li><a href=\"https://answers.launchpad.net/ubuntu/+question/90372\" title=\"Question #90372 : Questions : Ubuntu\">Question #90372 : Questions : Ubuntu</a>\r\n</ul>','CentOS6.5でディスプレーの解像度を変更する','','inherit','open','open','','954-revision-v1','','','2014-08-25 21:33:47','2014-08-25 12:33:47','',954,'http://49.212.213.226/wordpress/solution-log/?p=958',0,'revision','',0),(960,1,'2014-12-14 19:49:22','2014-12-14 10:49:22','<h3>SSH接続ポート番号を指定する</h3>\r\nvncviwerコマンドではSSH接続ポート番号が指定出来ないみたいなので、「<b>/etc/ssh/ssh_config</b>」か「<b>~/.ssh/config</b>」でポート番号を指定しておく。またサーバ側の「<b>/etc/ssh/sshd_config</b>」の<b>AllowTcpForwarding</b>を<b>yes</b>にしておく。\r\n\r\n<h3>ポートフォワーディングで接続確認をする</h3>\r\nポートフォワーディングの設定がうまくいっていないとVNC Viewerが立ち上がらないので接続確認を行う。リモートのユーザーフォルダの.sshにローカルの公開鍵ファイルがないとポートフォワーディングがうまくいかないので注意\r\n<pre class=\"brush: bash\">\r\n# ssh -L [ローカルホストポート]:[リモートホスト]:[リモートホストポート] [リモートホスト] -l [リモートホストのユーザ名]\r\n\r\n$ ssh -L 1234:192.168.1.22:5901 192.168.1.22 -l user\r\n</pre>\r\n\r\n<h3>VNC Viewerを起動する</h3>\r\nVNC SERVERの設定をポートフォワーディング用に設定する。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 2560x800 -localhost&quot;\r\n</pre>\r\n\r\nローカルマシーンで以下のコマンドで起動させる。\r\n<pre class=\"brush: bash\">\r\nvncviewer -via {vncuser}@{hostname} localhost:1\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www14.plala.or.jp/campus-note/vine_linux/server_vnc/vnc_portforwarding.html\">SSH ポートフォワーディングでVNCを使う</a>\r\n<li><a href=\"http://ubuntuforums.org/showthread.php?t=1207236\">[ubuntu] How do I VNC via SSH when both are not set to use the default port numbers?</a>\r\n</ul>','CentOS6でVNCをポートフォワーディングで接続する','','inherit','open','open','','687-revision-v1','','','2014-12-14 19:49:22','2014-12-14 10:49:22','',687,'http://49.212.213.226/wordpress/solution-log/?p=960',0,'revision','',0),(961,1,'2014-12-15 20:01:13','2014-12-15 11:01:13','ローカルPCからサーバPCにアップロードした複数のファイルがデータ欠損無くアップロードされたか調べる必要があった。\r\n\r\n<h3>awkコマンド</h3>\r\nスペースや文字列を入れる際は『\"\"』で文字列を挿入できる。\r\n\r\n<pre class=\"brush: bash\">\r\nls -l | awk &#039;{print $5 &quot; &quot; $10}&#039;\r\n\r\n# 表示結果\r\n3428352 2012-03-31_092749.m2ts\r\n603678720 2012-03-31_092950.m2ts\r\n110862336 2012-03-31_093642.m2ts\r\n501264384 2012-03-31_094907.m2ts\r\n76351488 2012-03-31_095537.m2ts\r\n72603648 2012-03-31_121637.m2ts\r\n240248832 2012-03-31_122300.m2ts\r\n47290368 2012-03-31_123804.m2ts\r\n28962816 2012-03-31_123949.m2ts\r\n283367424 2012-03-31_124153.m2ts\r\n758593536 2012-03-31_124918.m2ts\r\n41908224 2012-03-31_125810.m2ts\r\n46276608 2012-03-31_130644.m2ts\r\n233484288 2012-03-31_131012.m2ts\r\n45594624 2012-03-31_132639.m2ts\r\n427788288 2012-03-31_133014.m2ts\r\n53962752 2012-03-31_140503.m2ts\r\n183214080 2012-03-31_140755.m2ts\r\n240199680 2012-03-31_142430.m2ts\r\n85438464 2012-03-31_142707.m2ts\r\n39942144 2012-03-31_143018.m2ts\r\n222339072 2012-03-31_143047.m2ts\r\n508059648 2012-03-31_143417.m2ts\r\n11550720 2012-03-31_144018.m2ts\r\n58619904 2012-03-31_144110.m2ts\r\n63449088 2012-03-31_144544.m2ts\r\n20779008 2012-03-31_144638.m2ts\r\n28760064 2012-03-31_144839.m2ts\r\n140064768 2012-03-31_144903.m2ts\r\n206665728 2012-03-31_145059.m2ts\r\n141594624 2012-03-31_151831.m2ts\r\n125091840 2012-03-31_152157.m2ts\r\n135530496 2012-03-31_152314.m2ts\r\n114763776 2012-03-31_152615.m2ts\r\n92577792 2012-03-31_152731.m2ts\r\n529244160 2012-03-31_152922.m2ts\r\n172609536 2012-03-31_155408.m2ts\r\n24834048 2012-03-31_155729.m2ts\r\n2187264 2012-03-31_155848.m2ts\r\n111286272 2012-03-31_155925.m2ts\r\n835737600 2012-03-31_160111.m2ts\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.ibm.com/developerworks/jp/linux/library/l-awk1/\">共通テーマ: 実例でわかる awk: 第 1 回</a></li>\r\n	<li><a href=\"http://ameblo.jp/archive-redo-blog/entry-10196055325.html\">[Linux] ファイルサイズを取得する。｜Archive Redo Blog</a></li>\r\n</ul>','awkでファイル名とファイルサイズを表示する','','publish','open','open','','awk%e3%81%a7%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e5%90%8d%e3%81%a8%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e3%82%b5%e3%82%a4%e3%82%ba%e3%82%92%e8%a1%a8%e7%a4%ba%e3%81%99%e3%82%8b','','','2014-12-15 20:01:13','2014-12-15 11:01:13','',0,'http://49.212.213.226/wordpress/solution-log/?p=961',0,'post','',0),(962,1,'2014-12-15 19:58:22','2014-12-15 10:58:22','ローカルPCからサーバPCにアップロードした複数のファイルがデータ欠損無くアップロードされたか調べる必要があった\r\n\r\n<h3>awkコマンド</h3>\r\n\r\nls -l | awk \'{print $5 \" \" $10}\'\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.ibm.com/developerworks/jp/linux/library/l-awk1/\">共通テーマ: 実例でわかる awk: 第 1 回</a></li>\r\n	<li><a href=\"http://ameblo.jp/archive-redo-blog/entry-10196055325.html\">[Linux] ファイルサイズを取得する。｜Archive Redo Blog</a></li>\r\n</ul>','awkでファイル名とファイルサイズを表示する','','inherit','open','open','','961-revision-v1','','','2014-12-15 19:58:22','2014-12-15 10:58:22','',961,'http://49.212.213.226/wordpress/solution-log/?p=962',0,'revision','',0),(963,1,'2014-12-15 20:00:31','2014-12-15 11:00:31','ローカルPCからサーバPCにアップロードした複数のファイルがデータ欠損無くアップロードされたか調べる必要があった\r\n\r\n<h3>awkコマンド</h3>\r\nスペースや文字列を入れる際は『\"\"』で文字列を挿入できる\r\n\r\n<pre class=\"brush: bash\">\r\nls -l | awk &#039;{print $5 &quot; &quot; $10}&#039;\r\n\r\n# 表示結果\r\n3428352 2012-03-31_092749.m2ts\r\n603678720 2012-03-31_092950.m2ts\r\n110862336 2012-03-31_093642.m2ts\r\n501264384 2012-03-31_094907.m2ts\r\n76351488 2012-03-31_095537.m2ts\r\n72603648 2012-03-31_121637.m2ts\r\n240248832 2012-03-31_122300.m2ts\r\n47290368 2012-03-31_123804.m2ts\r\n28962816 2012-03-31_123949.m2ts\r\n283367424 2012-03-31_124153.m2ts\r\n758593536 2012-03-31_124918.m2ts\r\n41908224 2012-03-31_125810.m2ts\r\n46276608 2012-03-31_130644.m2ts\r\n233484288 2012-03-31_131012.m2ts\r\n45594624 2012-03-31_132639.m2ts\r\n427788288 2012-03-31_133014.m2ts\r\n53962752 2012-03-31_140503.m2ts\r\n183214080 2012-03-31_140755.m2ts\r\n240199680 2012-03-31_142430.m2ts\r\n85438464 2012-03-31_142707.m2ts\r\n39942144 2012-03-31_143018.m2ts\r\n222339072 2012-03-31_143047.m2ts\r\n508059648 2012-03-31_143417.m2ts\r\n11550720 2012-03-31_144018.m2ts\r\n58619904 2012-03-31_144110.m2ts\r\n63449088 2012-03-31_144544.m2ts\r\n20779008 2012-03-31_144638.m2ts\r\n28760064 2012-03-31_144839.m2ts\r\n140064768 2012-03-31_144903.m2ts\r\n206665728 2012-03-31_145059.m2ts\r\n141594624 2012-03-31_151831.m2ts\r\n125091840 2012-03-31_152157.m2ts\r\n135530496 2012-03-31_152314.m2ts\r\n114763776 2012-03-31_152615.m2ts\r\n92577792 2012-03-31_152731.m2ts\r\n529244160 2012-03-31_152922.m2ts\r\n172609536 2012-03-31_155408.m2ts\r\n24834048 2012-03-31_155729.m2ts\r\n2187264 2012-03-31_155848.m2ts\r\n111286272 2012-03-31_155925.m2ts\r\n835737600 2012-03-31_160111.m2ts\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.ibm.com/developerworks/jp/linux/library/l-awk1/\">共通テーマ: 実例でわかる awk: 第 1 回</a></li>\r\n	<li><a href=\"http://ameblo.jp/archive-redo-blog/entry-10196055325.html\">[Linux] ファイルサイズを取得する。｜Archive Redo Blog</a></li>\r\n</ul>','awkでファイル名とファイルサイズを表示する','','inherit','open','open','','961-revision-v1','','','2014-12-15 20:00:31','2014-12-15 11:00:31','',961,'http://49.212.213.226/wordpress/solution-log/?p=963',0,'revision','',0),(964,1,'2014-12-15 20:01:13','2014-12-15 11:01:13','ローカルPCからサーバPCにアップロードした複数のファイルがデータ欠損無くアップロードされたか調べる必要があった。\r\n\r\n<h3>awkコマンド</h3>\r\nスペースや文字列を入れる際は『\"\"』で文字列を挿入できる。\r\n\r\n<pre class=\"brush: bash\">\r\nls -l | awk &#039;{print $5 &quot; &quot; $10}&#039;\r\n\r\n# 表示結果\r\n3428352 2012-03-31_092749.m2ts\r\n603678720 2012-03-31_092950.m2ts\r\n110862336 2012-03-31_093642.m2ts\r\n501264384 2012-03-31_094907.m2ts\r\n76351488 2012-03-31_095537.m2ts\r\n72603648 2012-03-31_121637.m2ts\r\n240248832 2012-03-31_122300.m2ts\r\n47290368 2012-03-31_123804.m2ts\r\n28962816 2012-03-31_123949.m2ts\r\n283367424 2012-03-31_124153.m2ts\r\n758593536 2012-03-31_124918.m2ts\r\n41908224 2012-03-31_125810.m2ts\r\n46276608 2012-03-31_130644.m2ts\r\n233484288 2012-03-31_131012.m2ts\r\n45594624 2012-03-31_132639.m2ts\r\n427788288 2012-03-31_133014.m2ts\r\n53962752 2012-03-31_140503.m2ts\r\n183214080 2012-03-31_140755.m2ts\r\n240199680 2012-03-31_142430.m2ts\r\n85438464 2012-03-31_142707.m2ts\r\n39942144 2012-03-31_143018.m2ts\r\n222339072 2012-03-31_143047.m2ts\r\n508059648 2012-03-31_143417.m2ts\r\n11550720 2012-03-31_144018.m2ts\r\n58619904 2012-03-31_144110.m2ts\r\n63449088 2012-03-31_144544.m2ts\r\n20779008 2012-03-31_144638.m2ts\r\n28760064 2012-03-31_144839.m2ts\r\n140064768 2012-03-31_144903.m2ts\r\n206665728 2012-03-31_145059.m2ts\r\n141594624 2012-03-31_151831.m2ts\r\n125091840 2012-03-31_152157.m2ts\r\n135530496 2012-03-31_152314.m2ts\r\n114763776 2012-03-31_152615.m2ts\r\n92577792 2012-03-31_152731.m2ts\r\n529244160 2012-03-31_152922.m2ts\r\n172609536 2012-03-31_155408.m2ts\r\n24834048 2012-03-31_155729.m2ts\r\n2187264 2012-03-31_155848.m2ts\r\n111286272 2012-03-31_155925.m2ts\r\n835737600 2012-03-31_160111.m2ts\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.ibm.com/developerworks/jp/linux/library/l-awk1/\">共通テーマ: 実例でわかる awk: 第 1 回</a></li>\r\n	<li><a href=\"http://ameblo.jp/archive-redo-blog/entry-10196055325.html\">[Linux] ファイルサイズを取得する。｜Archive Redo Blog</a></li>\r\n</ul>','awkでファイル名とファイルサイズを表示する','','inherit','open','open','','961-revision-v1','','','2014-12-15 20:01:13','2014-12-15 11:01:13','',961,'http://49.212.213.226/wordpress/solution-log/?p=964',0,'revision','',0),(965,1,'2014-12-18 05:05:38','2014-12-17 20:05:38','<h3>コマンド</h3>\r\n<pre class=\"brush: bash\">\r\ncd /media\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://ossfan.net/manage/linux-17.html\">DVD-ROMのイメージ(ISO)ファイルをマウントしてデータを参照 | Linuxサーバ管理 | OSS Fan</a>','CentOSで外付けHDDにカレントディレクトリを移動する','','publish','open','open','','centos%e3%81%a7%e5%a4%96%e4%bb%98%e3%81%91hdd%e3%81%ab%e3%82%ab%e3%83%ac%e3%83%b3%e3%83%88%e3%83%87%e3%82%a3%e3%83%ac%e3%82%af%e3%83%88%e3%83%aa%e3%82%92%e7%a7%bb%e5%8b%95%e3%81%99%e3%82%8b','','','2014-12-18 05:08:04','2014-12-17 20:08:04','',0,'http://49.212.213.226/wordpress/solution-log/?p=965',0,'post','',0),(966,1,'2014-12-18 05:05:38','2014-12-17 20:05:38','cd /media','CentOSで外付けHDDにカレントディレクトリを移動する','','inherit','open','open','','965-revision-v1','','','2014-12-18 05:05:38','2014-12-17 20:05:38','',965,'http://49.212.213.226/wordpress/solution-log/?p=966',0,'revision','',0),(967,1,'2014-12-18 05:07:57','2014-12-17 20:07:57','<h3>コマンド</h3>\r\n<pre class=\"brush: bash\">\r\ncd /media\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://ossfan.net/manage/linux-17.html\">DVD-ROMのイメージ(ISO)ファイルをマウントしてデータを参照 | Linuxサーバ管理 | OSS Fan</a>','CentOSで外付けHDDにカレントディレクトリを移動する','','inherit','open','open','','965-autosave-v1','','','2014-12-18 05:07:57','2014-12-17 20:07:57','',965,'http://49.212.213.226/wordpress/solution-log/?p=967',0,'revision','',0),(968,1,'2014-12-18 05:08:04','2014-12-17 20:08:04','<h3>コマンド</h3>\r\n<pre class=\"brush: bash\">\r\ncd /media\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://ossfan.net/manage/linux-17.html\">DVD-ROMのイメージ(ISO)ファイルをマウントしてデータを参照 | Linuxサーバ管理 | OSS Fan</a>','CentOSで外付けHDDにカレントディレクトリを移動する','','inherit','open','open','','965-revision-v1','','','2014-12-18 05:08:04','2014-12-17 20:08:04','',965,'http://49.212.213.226/wordpress/solution-log/?p=968',0,'revision','',0),(970,1,'2015-01-04 13:17:44','2015-01-04 04:17:44','iTunesから行う\r\nViewNX2にてファイル名、サイズを変更、Exif情報を削除\r\nExif情報を削除してからiTunes経由で転送する。Exif情報を削除しないとiPadのアルバム内で写真の順番がめちゃめちゃになる。','iPadにWindowsから写真を同期させる','','publish','open','open','','ipad%e3%81%abwindows%e3%81%8b%e3%82%89%e5%86%99%e7%9c%9f%e3%82%92%e5%90%8c%e6%9c%9f%e3%81%95%e3%81%9b%e3%82%8b','','','2015-01-04 13:29:22','2015-01-04 04:29:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=970',0,'post','',0),(971,1,'2015-01-04 13:17:44','2015-01-04 04:17:44','iTunesから行う\r\nViewNX2にてファイル名、サイズを変更\r\nExif情報を削除してからiTunes経由で転送する。Exif情報を削除しないとiPadのアルバム内で写真の順番がめちゃめちゃになる。','iPadにWindowsから写真を同期させる','','inherit','open','open','','970-revision-v1','','','2015-01-04 13:17:44','2015-01-04 04:17:44','',970,'http://49.212.213.226/wordpress/solution-log/?p=971',0,'revision','',0),(972,1,'2015-01-04 13:29:22','2015-01-04 04:29:22','iTunesから行う\r\nViewNX2にてファイル名、サイズを変更、Exif情報を削除\r\nExif情報を削除してからiTunes経由で転送する。Exif情報を削除しないとiPadのアルバム内で写真の順番がめちゃめちゃになる。','iPadにWindowsから写真を同期させる','','inherit','open','open','','970-revision-v1','','','2015-01-04 13:29:22','2015-01-04 04:29:22','',970,'http://49.212.213.226/wordpress/solution-log/?p=972',0,'revision','',0),(974,1,'2015-03-22 18:25:22','2015-03-22 09:25:22','<a href=\"http://www.i-funbox.com/\">iFunbox</a>','iPhoneのデータを抜き出す','','publish','open','open','','iphone%e3%81%ae%e3%83%87%e3%83%bc%e3%82%bf%e3%82%92%e6%8a%9c%e3%81%8d%e5%87%ba%e3%81%99','','','2015-03-22 18:25:22','2015-03-22 09:25:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=974',0,'post','',0),(975,1,'2015-03-22 18:25:22','2015-03-22 09:25:22','<a href=\"http://www.i-funbox.com/\">iFunbox</a>','iPhoneのデータを抜き出す','','inherit','open','open','','974-revision-v1','','','2015-03-22 18:25:22','2015-03-22 09:25:22','',974,'http://49.212.213.226/wordpress/solution-log/?p=975',0,'revision','',0),(977,1,'2015-04-27 18:37:08','2015-04-27 09:37:08','画像ファイルをPDF化する機会があったのでImageMagicを使い、レンタルサーバで処理させてみた。\r\n\r\n<h3>ImageMagciをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>画像データをPDF化する</h3>\r\n<pre class=\"brush: bash\">\r\n# ファイルを作成日の古い順にPDF化する\r\nconvert `ls -tr` target.pdf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/pogin/20120727/1343408520\">複数のjpegを一つのpdfへ変換した時のメモ - プログラムとかののblog</a></li>\r\n</ul>','ImageMagicで画像ファイルをPDF化する','','publish','open','open','','imagemagic%e3%81%a7%e7%94%bb%e5%83%8f%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e3%82%92pdf%e5%8c%96%e3%81%99%e3%82%8b','','','2015-04-27 18:37:08','2015-04-27 09:37:08','',0,'http://49.212.213.226/wordpress/solution-log/?p=977',0,'post','',0),(978,1,'2015-04-27 18:36:35','2015-04-27 09:36:35','画像ファイルをPDF化する機会があったのでImageMagicを使い、レンタルサーバで処理させてみた。\r\n\r\n<h3>ImageMagciをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install ImageMagick ImageMagick-devel\r\n</pre>\r\n\r\n\r\n<h3>画像データをPDF化する</h3>\r\n<pre class=\"brush: bash\">\r\n# ファイルを作成日の古い順にPDF化する\r\nconvert `ls -tr` target.pdf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/pogin/20120727/1343408520\">複数のjpegを一つのpdfへ変換した時のメモ - プログラムとかののblog</a></li>\r\n</ul>','ImageMagicで画像ファイルをPDF化する','','inherit','open','open','','977-revision-v1','','','2015-04-27 18:36:35','2015-04-27 09:36:35','',977,'http://49.212.213.226/wordpress/solution-log/?p=978',0,'revision','',0),(979,1,'2015-04-27 21:21:57','2015-04-27 12:21:57','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n\r\n# 設定ファイルをリロード\r\nldconfig\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS6.6にffmpegをインストールする','','publish','open','open','','centos6-6%e3%81%abffmpeg%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2015-04-30 15:18:18','2015-04-30 06:18:18','',0,'http://49.212.213.226/wordpress/solution-log/?p=979',0,'post','',0),(980,1,'2015-04-27 21:17:53','2015-04-27 12:17:53','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasm のインストール（x264 のビルドに必要）</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264 のインストール（ffmpeg のビルドに必要）</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aac のインストール（fdk-aac を使うなら入れる）</h3>\r\n\r\nソースを下記からダウンロード\r\nhttp://sourceforge.net/projects/opencore-amr/files/fdk-aac/\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS6.6にffmpegをインストールする','','inherit','open','open','','979-revision-v1','','','2015-04-27 21:17:53','2015-04-27 12:17:53','',979,'http://49.212.213.226/wordpress/solution-log/?p=980',0,'revision','',0),(981,1,'2015-04-27 21:21:22','2015-04-27 12:21:22','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS6.6にffmpegをインストールする','','inherit','open','open','','979-revision-v1','','','2015-04-27 21:21:22','2015-04-27 12:21:22','',979,'http://49.212.213.226/wordpress/solution-log/?p=981',0,'revision','',0),(982,1,'2015-04-28 00:47:50','2015-04-27 15:47:50','リモート開発をするのに、VNC経由の方が簡単なんじゃないかと思い、VNC環境を入れてみた。一応<a href=\"http://wiki.centos.org/HowTos/VNC-Server\">このサイト</a>の手順通りで大体は環境構築が可能だと思う。\r\n\r\n<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n想定される環境だと、<b>tigervnc-server</b>と<b>デスクトップパッケージ</b>をインストールする必要がある。rpmからインストールする。\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;Desktop&quot;;\r\nyum install -y gnome*  # システムモニターなどが使えるようになる このコマンドは無効化も知れない\r\nyum groupinstall &quot;Desktop&quot; &quot;Desktop Platform&quot; &quot;General Purpose Desktop&quot;\r\nyum groupinstall &quot;X Window System&quot;;\r\n</pre>\r\nCentOSを日本語化するには<a href=\"./?p=656\">こちら</a>を参考にする。\r\n<h4>クライアント</h4>\r\nこちらもrpmからインストール。インストールが完了すれば、デスクトップ→アプリケーション→インターネット→TigerVNC Viewverから起動可能になる。\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n複数ユーザを設定する場合は\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/vncservers\r\n# 以下を追加 (画面ソリューションの「x」は小文字のxでないとエラーになるので注意！)\r\nVNCSERVERS=&quot;1:vncuser1 2:vncuser2&quot;\r\nVNCSERVERARGS[1]=&quot;-geometry 800x600&quot;\r\nVNCSERVERARGS[2]=&quot;-geometry 800x600&quot;\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>パケットフィルタリングの設定</h3>\r\n想定される環境だとiptablesの設定ファイルが作成されていないので作成してアクセス制限をかける。以下の設定はポートだけ開放した状態。別途IPアドレス制限も設けた方が良いかもだが、テサリング時には逆に不便なので今回はポートのみ開放しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/sysconfig/iptables\r\n# Firewall configuration written by system-config-firewall\r\n# Manual customization of this file is not recommended.\r\n*filter\r\n:INPUT ACCEPT [0:0]\r\n:FORWARD ACCEPT [0:0]\r\n:OUTPUT ACCEPT [0:0]\r\n-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\r\n-A INPUT -p icmp -j ACCEPT\r\n-A INPUT -i lo -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT\r\n# 追記\r\n-A INPUT -m state --state NEW -m tcp -p tcp -m multiport --dports 5901:5903,6001:6003 -j ACCEPT\r\n# 追記終了\r\n-A INPUT -j REJECT --reject-with icmp-host-prohibited\r\n-A FORWARD -j REJECT --reject-with icmp-host-prohibited\r\nCOMMIT\r\n# iptablesサービスを再起動する\r\nservice iptables restart\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\nmessagebusを起動させないと『<b>Failed to open connection to system message bus: Failed to connect to socket /var/run/dbus/system_bus_socket: No such file or directory</b>』と言うエラー文が出る場合がある。また、端末などが起動しなくなる場合がある。解決方法は<a href=\"http://tomono.eleho.net/2012/07/31/2913/\">これ</a>っぽいが、とりあえずmessagebusを起動させる事で対応しておく。\r\n<pre class=\"brush: bash\">\r\nsudo service vncserver start\r\n/etc/init.d/messagebus start\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\nポートフォワーディングについては<a href=\"./?p=687\">別エントリー</a>で。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://wiki.centos.org/HowTos/VNC-Server\">HowTos/VNC-Server - CentOS Wiki</a>\r\n<li><a href=\"http://akabeko.me/blog/2010/09/%E3%81%95%E3%81%8F%E3%82%89%E3%81%AEvps-%E3%82%92%E4%BD%BF%E3%81%84%E3%81%AF%E3%81%98%E3%82%81%E3%82%8B-3/\">さくらのVPS を使いはじめる 3 &#8211; iptables を設定する | アカベコマイリ</a>\r\n<li><a href=\"http://shinya-blog.blogspot.jp/2011/11/spideroakdropboxvps.html\">Shinya Blog: SpiderOak(DropBoxみたいなやつ)をServersMan@VPSで使ってみる</a>\r\n<li><a href=\"http://www.realvnc.com/pipermail/vnc-list/2005-September/052277.html\">VNC 4.1.1 Fullscreen exit?</a>\r\n<li><a href=\"http://tomono.eleho.net/2012/07/31/2913/\">さくらのVPSにCentOS6をインストール  @  ともの技術メモ</a>\r\n<a href=\"http://morrey22.hatenablog.com/entry/2013/04/14/212837\">CUIで入れたCentOS6にGUIを追加する - 東の森</a>\r\n</ul>','さくらのVPSでVNCを起動する','','inherit','open','open','','646-revision-v1','','','2015-04-28 00:47:50','2015-04-27 15:47:50','',646,'http://49.212.213.226/wordpress/solution-log/?p=982',0,'revision','',0),(983,1,'2015-04-30 15:18:18','2015-04-30 06:18:18','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n\r\n# 設定ファイルをリロード\r\nldconfig\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS6.6にffmpegをインストールする','','inherit','open','open','','979-revision-v1','','','2015-04-30 15:18:18','2015-04-30 06:18:18','',979,'http://49.212.213.226/wordpress/solution-log/?p=983',0,'revision','',0),(985,1,'2015-05-28 22:06:32','2015-05-28 13:06:32','<ul>\r\n	<li>コミットメッセージにチケット番号を付与する時は半角スペースで区切る。</li>\r\n	<li>コミットメッセージに作業時間を記録することが出来る</li>\r\n	<li>EclipseでGitのコミットの取り消しが出来る場合がある。</li>\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/tech_note/subversion/\" target=\"_blank\">バージョン管理システムとの連携 &mdash; Redmine.JP</a></li>\r\n	<li><a href=\"http://blog.redmine.jp/articles/new-feature-1_1/automatic-spent-time-logging/\" target=\"_blank\">Redmine 1.1 新機能紹介: コミットメッセージによる作業時間の記録 | Redmine.JP Blog</a></li>\r\n</ul>\r\n','RedmineとGitの連携についてのメモ','','publish','open','open','','redmine%e3%81%a8git%e3%81%ae%e9%80%a3%e6%90%ba%e3%81%ab%e3%81%a4%e3%81%84%e3%81%a6%e3%81%ae%e3%83%a1%e3%83%a2','','','2015-05-28 22:06:32','2015-05-28 13:06:32','',0,'http://49.212.213.226/wordpress/solution-log/?p=985',0,'post','',0),(986,1,'2015-05-28 22:01:50','2015-05-28 13:01:50','<ul>\r\n	<li>コミットメッセージにチケット番号を付与する時は半角スペースで区切る。</li>\r\n	<li>コミットメッセージに作業時間を記録することが出来る</li>\r\n	<li>EclipseでGitのコミットの取り消しが出来る場合がある。</li>\r\n</ul>\r\n\r\n\r\n','RedmineとGitの連携についてのメモ','','inherit','open','open','','985-revision-v1','','','2015-05-28 22:01:50','2015-05-28 13:01:50','',985,'http://49.212.213.226/wordpress/solution-log/?p=986',0,'revision','',0),(987,1,'2015-05-28 22:04:59','2015-05-28 13:04:59','<ul>\r\n	<li>コミットメッセージにチケット番号を付与する時は半角スペースで区切る。</li>\r\n	<li>コミットメッセージに作業時間を記録することが出来る</li>\r\n	<li>EclipseでGitのコミットの取り消しが出来る場合がある。</li>\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.redmine.jp/articles/new-feature-1_1/automatic-spent-time-logging/\" target=\"_blank\">Redmine 1.1 新機能紹介: コミットメッセージによる作業時間の記録 | Redmine.JP Blog</a></li>\r\n</ul>\r\n\r\n','RedmineとGitの連携についてのメモ','','inherit','open','open','','985-revision-v1','','','2015-05-28 22:04:59','2015-05-28 13:04:59','',985,'http://49.212.213.226/wordpress/solution-log/?p=987',0,'revision','',0),(988,1,'2015-05-28 22:06:11','2015-05-28 13:06:11','<ul>\r\n	<li>コミットメッセージにチケット番号を付与する時は半角スペースで区切る。</li>\r\n	<li>コミットメッセージに作業時間を記録することが出来る</li>\r\n	<li>EclipseでGitのコミットの取り消しが出来る場合がある。</li>\r\n</ul>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://redmine.jp/tech_note/subversion/\" target=\"_blank\">バージョン管理システムとの連携 &mdash; Redmine.JP</a></li>\r\n	<li><a href=\"http://blog.redmine.jp/articles/new-feature-1_1/automatic-spent-time-logging/\" target=\"_blank\">Redmine 1.1 新機能紹介: コミットメッセージによる作業時間の記録 | Redmine.JP Blog</a></li>\r\n</ul>\r\n','RedmineとGitの連携についてのメモ','','inherit','open','open','','985-revision-v1','','','2015-05-28 22:06:11','2015-05-28 13:06:11','',985,'http://49.212.213.226/wordpress/solution-log/?p=988',0,'revision','',0),(989,1,'2015-05-29 16:54:54','2015-05-29 07:54:54','少し前からEgitを使っているが、ユーザー毎のSSHの設定でかなりハマったのでメモ。\r\n\r\n<h3>EclipseにEgitをインストールする</h3>\r\nWindowsでEclipseを使う場合は<strong>Aptanaプラグインの使用時に注意する</strong>。EclipseのAptanaのGitドライバの関係で、Gitのコミットメッセージが文字化けする場合がある。\r\n<ol>\r\n<li><b>Eclipse</b>→<b>ヘルプ</b>→<b>新規ソフトウェアのインストール</b>→<b>作業対象(W)</b>:から<b>「すべての使用可能なサイト」</b>を選択\r\n<li>フィルター入力に<b>「Egit」</b>と入力\r\n<li>すべての選択肢にチェックを入れインストールする\r\n</ol>\r\n\r\n<h3>SSHの設定をする</h3>\r\n2時間ほどハマった。ディフォルトだとEclipseが鍵ファイルをうまくみつけられないので.ssh/configに設定を書き込む\r\n<pre class=\"brush: bash\">\r\nHost hoge # 接続名（なんでもよい）\r\nHostName {yourhostname} # 接続先のドメイン名やIPアドレス\r\nUser {sshuser} # SSH接続ユーザー名\r\nPreferredAuthentications publickey\r\nIdentityFile ~/.ssh/id_rsa # 鍵ファイルの場所\r\n</pre>\r\n\r\nEclipse側ではディフォルトで鍵ファイルを見つけに行く設定が\r\n<b>Eclipse</b>→<b>ウィンドウ</b>→<b>設定</b>→<b>一般</b>→<b>ネットワーク接続</b>→<b>SSH2</b>\r\nにある。適切に設定されているか確認する。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://dogmap.jp/2011/10/27/ssh_config/\">ssh 接続を簡単にする ~/.ssh/config | dogmap.jp</a>\r\n<li><a href=\"http://qiita.com/shin1988/items/90cd428b5a3b64560e8b\" target=\"_blank\">Git - rails開発してたらコミットコメントが文字化けた話 - Qiita</a></il>\r\n<li><a href=\"http://www.k-brand.gr.jp/log/002510\" target=\"_blank\">Ktouth Brand. on Web - 解決：Aptana(eclipse) + EGit のコミットログ文字化けと化けたログの修正方法</a></il>\r\n</ul>','EclipseにEgitをインストールする','','inherit','open','open','','674-revision-v1','','','2015-05-29 16:54:54','2015-05-29 07:54:54','',674,'http://49.212.213.226/wordpress/solution-log/?p=989',0,'revision','',0),(990,1,'2015-05-29 22:38:28','2015-05-29 13:38:28','壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。\r\n\r\n<h3>Git for Windowsをインストールする</h3>\r\n<a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a>をダウンロードしインストールする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-991\" /></a>\r\n\r\n『<strong>Run Git from the Windows Command Prompt</strong>』を選ぶと良い。『<strong>Run Git and included Unix tools from the Windows Command Prompt</strong>』は環境変数を汚染する可能性があるので使わないほうが無難。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-994\" /></a>\r\n\r\nこの画面は『<strong>Checkout Windows-style, commit Unix line endings</strong>』を選んだが、まだ運用してみないとどう出るのか分からない。\r\n\r\n<h3>SSHの設定を行う</h3>\r\nGit for Windowsは『<strong>/user/.ssh</strong>』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a></il>\r\n<li><a href=\"http://opcdiary.net/?page_id=27065\" target=\"_blank\">私家版 Git For Windowsのインストール手順 | OPC Diary</a></li>\r\n</ul>','Windows7にGitをインストールする','','publish','open','open','','windows7%e3%81%abgit%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2015-05-29 22:38:28','2015-05-29 13:38:28','',0,'http://49.212.213.226/wordpress/solution-log/?p=990',0,'post','',0),(991,1,'2015-05-29 22:27:52','2015-05-29 13:27:52','','SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00','','inherit','open','open','','snapcrab_git-setup_2013-10-8_23-57-16_no-00','','','2015-05-29 22:27:52','2015-05-29 13:27:52','',990,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png',0,'attachment','image/png',0),(992,1,'2015-05-29 22:33:05','2015-05-29 13:33:05','壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。\r\n\r\n<h3>Git for Windowsをインストールする</h3>\r\n<a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a>をダウンロードしインストールする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-991\" /></a>\r\n\r\n『Run Git from the Windows Command Prompt』を選ぶと良い。『Run Git and included Unix tools from the Windows Command Prompt』は環境変数を汚染する可能性があるので使わないほうが無難。\r\n\r\n<h3>SSHの設定を行う</h3>\r\nGit for Windowsは『<b>/user/.ssh</b>』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://opcdiary.net/?page_id=27065\" target=\"_blank\">私家版 Git For Windowsのインストール手順 | OPC Diary</a></li>\r\n</ul>','Windows7にGitをインストールする','','inherit','open','open','','990-revision-v1','','','2015-05-29 22:33:05','2015-05-29 13:33:05','',990,'http://49.212.213.226/wordpress/solution-log/?p=992',0,'revision','',0),(993,1,'2015-05-29 22:34:06','2015-05-29 13:34:06','壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。\r\n\r\n<h3>Git for Windowsをインストールする</h3>\r\n<a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a>をダウンロードしインストールする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-991\" /></a>\r\n\r\n『<strong>Run Git from the Windows Command Prompt</strong>』を選ぶと良い。『<strong>Run Git and included Unix tools from the Windows Command Prompt</strong>』は環境変数を汚染する可能性があるので使わないほうが無難。\r\n\r\n<h3>SSHの設定を行う</h3>\r\nGit for Windowsは『<strong>/user/.ssh</strong>』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://opcdiary.net/?page_id=27065\" target=\"_blank\">私家版 Git For Windowsのインストール手順 | OPC Diary</a></li>\r\n</ul>','Windows7にGitをインストールする','','inherit','open','open','','990-revision-v1','','','2015-05-29 22:34:06','2015-05-29 13:34:06','',990,'http://49.212.213.226/wordpress/solution-log/?p=993',0,'revision','',0),(994,1,'2015-05-29 22:35:09','2015-05-29 13:35:09','','SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00','','inherit','open','open','','snapcrab_git-setup_2013-10-14_15-1-32_no-00','','','2015-05-29 22:35:09','2015-05-29 13:35:09','',990,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png',0,'attachment','image/png',0),(995,1,'2015-05-29 22:36:56','2015-05-29 13:36:56','壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。\r\n\r\n<h3>Git for Windowsをインストールする</h3>\r\n<a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a>をダウンロードしインストールする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-991\" /></a>\r\n\r\n『<strong>Run Git from the Windows Command Prompt</strong>』を選ぶと良い。『<strong>Run Git and included Unix tools from the Windows Command Prompt</strong>』は環境変数を汚染する可能性があるので使わないほうが無難。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-994\" /></a>\r\n\r\nこの画面は『<strong>Checkout Windows-style, commit Unix line endings</strong>』を選んだが、まだ運用してみないとどう出るのか分からない。\r\n\r\n<h3>SSHの設定を行う</h3>\r\nGit for Windowsは『<strong>/user/.ssh</strong>』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://opcdiary.net/?page_id=27065\" target=\"_blank\">私家版 Git For Windowsのインストール手順 | OPC Diary</a></li>\r\n</ul>','Windows7にGitをインストールする','','inherit','open','open','','990-revision-v1','','','2015-05-29 22:36:56','2015-05-29 13:36:56','',990,'http://49.212.213.226/wordpress/solution-log/?p=995',0,'revision','',0),(996,1,'2015-05-29 22:38:15','2015-05-29 13:38:15','壮年団の写真及び動画整理の関係で、コマンドプロンプトのプログラミングコードを書く必要が出てきた。Windows機からGitが直接使えた方が作業が楽なのでWindows7にGitをインストールした。\r\n\r\n<h3>Git for Windowsをインストールする</h3>\r\n<a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a>をダウンロードしインストールする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-8_23-57-16_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-991\" /></a>\r\n\r\n『<strong>Run Git from the Windows Command Prompt</strong>』を選ぶと良い。『<strong>Run Git and included Unix tools from the Windows Command Prompt</strong>』は環境変数を汚染する可能性があるので使わないほうが無難。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00.png\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/05/SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00-300x233.png\" alt=\"SnapCrab_Git-Setup_2013-10-14_15-1-32_No-00\" width=\"300\" height=\"233\" class=\"alignnone size-medium wp-image-994\" /></a>\r\n\r\nこの画面は『<strong>Checkout Windows-style, commit Unix line endings</strong>』を選んだが、まだ運用してみないとどう出るのか分からない。\r\n\r\n<h3>SSHの設定を行う</h3>\r\nGit for Windowsは『<strong>/user/.ssh</strong>』に鍵ファイルを探しに行くので、このフォルダに鍵ファイルを設置する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://msysgit.github.io/\" target=\"_blank\">Git for Windows</a></il>\r\n<li><a href=\"http://opcdiary.net/?page_id=27065\" target=\"_blank\">私家版 Git For Windowsのインストール手順 | OPC Diary</a></li>\r\n</ul>','Windows7にGitをインストールする','','inherit','open','open','','990-revision-v1','','','2015-05-29 22:38:15','2015-05-29 13:38:15','',990,'http://49.212.213.226/wordpress/solution-log/?p=996',0,'revision','',0),(999,1,'2015-06-24 02:21:35','2015-06-23 17:21:35','Windows7のPoderosaからCentOS7へSSH接続し、MariaDBへログインしようとしたら以下のメッセージが表示された。\r\n\r\n<pre class=\"brush: bash\">&#039;kterm&#039;: unknown terminal type.</pre>\r\n\r\n\r\n<h3>CentOS7の環境変数を変更する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 一時的に環境変数を書き換える\r\nexport TERM=linux\r\n\r\n# 設定ファイルに書き込む\r\necho &#039;export TERM=linux&#039; &gt;&gt; ~/.bash_profile\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://techtitbits.com/2010/10/resolving-unknown-unknown-terminal-type-error/\">Resolving &#8220;&#8216;unknown&#8217;: unknown terminal type.&#8221; error &#8211; Tech Titbits</a></li>\r\n</ul>\r\n\r\n','Poderosaで『unknown terminal type.』エラーが出た時の対応','','publish','open','open','','poderosa%e3%81%a7%e3%80%8eunknown-terminal-type-%e3%80%8f%e3%82%a8%e3%83%a9%e3%83%bc%e3%81%8c%e5%87%ba%e3%81%9f%e6%99%82%e3%81%ae%e5%af%be%e5%bf%9c','','','2015-06-24 02:21:35','2015-06-23 17:21:35','',0,'http://49.212.213.226/wordpress/solution-log/?p=999',0,'post','',0),(1000,1,'2015-06-24 02:19:59','2015-06-23 17:19:59','Windows7のPoderosaからCentOS7へSSH接続し、MariaDBへログインしようとしたら以下のメッセージが表示された。\r\n\r\n<pre class=\"brush: bash\">&#039;kterm&#039;: unknown terminal type.</pre>\r\n\r\n\r\n<h3>CentOS7の環境変数を変更する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 一時的に環境変数を書き換える\r\nexport TERM=linux\r\n\r\n# 設定ファイルに書き込む\r\necho &#039;export TERM=linux&#039; &gt;&gt; ~/.bash_profile\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<a href=\"http://techtitbits.com/2010/10/resolving-unknown-unknown-terminal-type-error/\">Resolving &#8220;&#8216;unknown&#8217;: unknown terminal type.&#8221; error &#8211; Tech Titbits</a>\r\n</ul>\r\n\r\n','Poderosaで『unknown terminal type.』エラーが出た時の対応','','inherit','open','open','','999-revision-v1','','','2015-06-24 02:19:59','2015-06-23 17:19:59','',999,'http://49.212.213.226/wordpress/solution-log/?p=1000',0,'revision','',0),(1001,1,'2015-06-24 02:20:34','2015-06-23 17:20:34','Windows7のPoderosaからCentOS7へSSH接続し、MariaDBへログインしようとしたら以下のメッセージが表示された。\r\n\r\n<pre class=\"brush: bash\">&#039;kterm&#039;: unknown terminal type.</pre>\r\n\r\n\r\n<h3>CentOS7の環境変数を変更する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 一時的に環境変数を書き換える\r\nexport TERM=linux\r\n\r\n# 設定ファイルに書き込む\r\necho &#039;export TERM=linux&#039; &gt;&gt; ~/.bash_profile\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://techtitbits.com/2010/10/resolving-unknown-unknown-terminal-type-error/\">Resolving &#8220;&#8216;unknown&#8217;: unknown terminal type.&#8221; error &#8211; Tech Titbits</a></li>\r\n</ul>\r\n\r\n','Poderosaで『unknown terminal type.』エラーが出た時の対応','','inherit','open','open','','999-revision-v1','','','2015-06-24 02:20:34','2015-06-23 17:20:34','',999,'http://49.212.213.226/wordpress/solution-log/?p=1001',0,'revision','',0),(1003,1,'2015-08-11 12:47:53','2015-08-11 03:47:53','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする※注意</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。<strong>既にVirtualBoxがインストールされている場合は必ず最新バージョンのVirtualBoxを利用する</strong>。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" /></a>\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" /></a>\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nyum install epel-release\r\nyum install dkms\r\nyum groupinstall &quot;Development Tools&quot;\r\nyum install kernel-devel\r\nyum update\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelとkernel-develのバージョンが同じでない場合は<a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\">インストールが失敗する</a>。yum updateを実行すると良い。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" /></a>\r\n\r\n\r\n<h3>共有フォルダの設定を行う</h3>\r\n\r\n<a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">こちら</a>を参考にする\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">【 Virtual Box 】共有フォルダを介して、ホストOS(Windows 7) と ゲストOS(Debian/ MathLibre)でファイルやりとりするための設定  - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\" target=\"_blank\">VirtualBox 上の CentOS 7.2 に Guest Additions をインストールする - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','publish','open','open','','windows7%e3%81%abvirtualbox%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%97centos7%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2018-05-23 18:57:29','2018-05-23 09:57:29','',0,'http://49.212.213.226/wordpress/solution-log/?p=1003',0,'post','',0),(1004,1,'2015-08-11 11:43:08','2015-08-11 02:43:08','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 11:43:08','2015-08-11 02:43:08','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1004',0,'revision','',0),(1005,1,'2015-08-11 11:51:30','2015-08-11 02:51:30','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 11:51:30','2015-08-11 02:51:30','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1005',0,'revision','',0),(1006,1,'2015-08-11 12:16:22','2015-08-11 03:16:22','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:16:22','2015-08-11 03:16:22','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1006',0,'revision','',0),(1007,1,'2015-08-11 12:16:59','2015-08-11 03:16:59','','150811_virtualbox_network_adapter_setting','','inherit','open','open','','150811_virtualbox_network_adapter_setting','','','2015-08-11 12:16:59','2015-08-11 03:16:59','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg',0,'attachment','image/jpeg',0),(1008,1,'2015-08-11 12:17:30','2015-08-11 03:17:30','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"alignnone size-medium wp-image-1007\" /></a>\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:17:30','2015-08-11 03:17:30','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1008',0,'revision','',0),(1009,1,'2015-08-11 12:18:29','2015-08-11 03:18:29','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:18:29','2015-08-11 03:18:29','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1009',0,'revision','',0),(1010,1,'2015-08-11 12:25:16','2015-08-11 03:25:16','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『VirtualBox Guest Additions』をインストールする。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:25:16','2015-08-11 03:25:16','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1010',0,'revision','',0),(1012,1,'2015-08-11 12:37:37','2015-08-11 03:37:37','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『VirtualBox Guest Additions』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# VirtualBox Guest Additionのインストールに必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『VirtualBox』→『デバイス』→『Guest AdditionsのCDイメージを挿入』をクリック。あとは自動的に「Guest Addtions」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:37:37','2015-08-11 03:37:37','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1012',0,'revision','',0),(1013,1,'2015-08-11 12:40:03','2015-08-11 03:40:03','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nデスクトップ環境を想定している場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『アダプター 1』の割り当ての項目を『ブリッジアダプター』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『名前』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『Apple Mobile Device Ethernet』\r\ndynabookのwi-fiで接続する場合→『Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC』\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『VirtualBox Guest Additions』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# VirtualBox Guest Additionのインストールに必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『VirtualBox』→『デバイス』→『Guest AdditionsのCDイメージを挿入』をクリック。あとは自動的に「Guest Addtions」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:40:03','2015-08-11 03:40:03','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1013',0,'revision','',0),(1014,1,'2015-08-11 12:44:01','2015-08-11 03:44:01','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\niPhone6をUSB接続でつないだ場合→『<strong>Apple Mobile Device Ethernet</strong>』\r\ndynabookのwi-fiで接続する場合→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:44:01','2015-08-11 03:44:01','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1014',0,'revision','',0),(1015,1,'2015-08-11 12:45:03','2015-08-11 03:45:03','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\n<pre>\r\niPhone6をUSB接続でつないだ場合→『&lt;strong&gt;Apple Mobile Device Ethernet&lt;/strong&gt;』\r\ndynabookのwi-fiで接続する場合→『&lt;strong&gt;Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC&lt;/strong&gt;』\r\n</pre>\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:45:03','2015-08-11 03:45:03','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1015',0,'revision','',0),(1016,1,'2015-08-11 12:46:21','2015-08-11 03:46:21','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n例:\r\n<ul>\r\n<li>iPhone6をUSB接続でつないだ場合→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li>dynabookのwi-fiで接続する場合→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:46:21','2015-08-11 03:46:21','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1016',0,'revision','',0),(1017,1,'2015-08-11 12:47:03','2015-08-11 03:47:03','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n若干手順が分かりずらいので後日画像入りで編集しなおす！\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','open','open','','1003-revision-v1','','','2015-08-11 12:47:03','2015-08-11 03:47:03','',1003,'http://49.212.213.226/wordpress/solution-log/?p=1017',0,'revision','',0),(1018,1,'2015-08-11 13:47:03','2015-08-11 04:47:03','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS7にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる（30分程度？）\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n\r\n# 設定ファイルをリロード\r\nldconfig\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS7にffmpegをインストールする','','publish','open','open','','centos7-ffmpeg','','','2015-08-11 16:02:48','2015-08-11 07:02:48','',0,'http://49.212.213.226/wordpress/solution-log/?p=1018',0,'post','',0),(1019,1,'2015-08-11 13:47:03','2015-08-11 04:47:03','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS6.6にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n\r\n# 設定ファイルをリロード\r\nldconfig\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS7 ffmpeg','','inherit','open','open','','1018-revision-v1','','','2015-08-11 13:47:03','2015-08-11 04:47:03','',1018,'http://49.212.213.226/wordpress/solution-log/?p=1019',0,'revision','',0),(1020,1,'2015-08-11 15:34:41','2015-08-11 06:34:41','壮年団の動画をWindows7で編集しようとしたが、PCへの負担も大きく、HDDの消耗や故障も懸念される事からさくらのVPS上のCentOS7にて動画編集が出来ないかどうか画策してみる。\r\n\r\n\r\n<h3>事前準備</h3>\r\n<pre class=\"brush: bash\">\r\nyum groupinstall &quot;Development Tools&quot; &quot;Development Libraries&quot;\r\n</pre>\r\n\r\n\r\n<h3>yasmをインストールする</h3>\r\nx264のビルドに必要になる\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\nwget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz\r\ntar zvxf yasm-1.3.0.tar.gz \r\ncd yasm-1.3.0\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>x264をインストールする</h3>\r\nffmpeg のビルドに必要になる。\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://git.videolan.org/x264\r\ncd x264\r\n./configure --enable-shared\r\nmake\r\nmake install\r\n</pre>\r\n\r\n<h3>fdk-aacをインストールする</h3>\r\nfdk-aac を使うなら入れる必要がある。ソースを<a href=\"http://sourceforge.net/projects/opencore-amr/files/fdk-aac/\">fdk-aacのサイト</a>からダウンロード\r\n\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ntar xzf fdk-aac-0.1.3.tar.gz\r\ncd fdk-aac-0.1.3\r\n./configure\r\nmake\r\nmake install\r\n</pre>\r\n\r\n\r\n<h3>ffmpegをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /usr/local/src\r\ngit clone git://source.ffmpeg.org/ffmpeg.git ffmpeg\r\ncd ffmpeg\r\n\r\n# 時間がかなりかかる（30分程度？）\r\n./configure --enable-gpl --enable-nonfree --enable-libfdk_aac --enable-libx264\r\nmake\r\nmake install\r\n\r\n# ショートカット作成\r\nln -s /usr/bin/ffmpeg /usr/local/bin/ffmpeg\r\n</pre>\r\n\r\n\r\n\r\n<h3>設定ファイルを変更する</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/ld.so.conf\r\n\r\n############################\r\ninclude ld.so.conf.d/*.conf\r\n/usr/local/lib ←追記\r\n############################\r\n\r\n# 設定ファイルをリロード\r\nldconfig\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://d.hatena.ne.jp/kt_hiro/20150101/1420094609\">CentOS7 ffmpegをソースからインストール - わすれないうちにメモしよう</a></li>\r\n<li><a href=\"http://atbiz.dip.jp/kuro-box/kuro-box_ffmpeg.shtml\">なちょこlinuxer &raquo; 玄箱サーバー構築 &raquo; 玄箱HG Fedora11 FFmpeg インストール</a></li>\r\n<li><a href=\"http://m97087yh.seesaa.net/article/415078356.html\">ffmpegインストール。: Ma note</a></li>\r\n</ul>','CentOS7にffmpegをインストールする','','inherit','open','open','','1018-revision-v1','','','2015-08-11 15:34:41','2015-08-11 06:34:41','',1018,'http://49.212.213.226/wordpress/solution-log/?p=1020',0,'revision','',0),(1022,1,'2015-09-16 01:57:57','2015-09-15 16:57:57','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nrpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nyum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nyum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\n\r\n# 古いPHPをアンインストールしておく\r\nyum remove php*\r\n\r\nyum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd php56-php-intl php56-php-gmp\r\n\r\n\r\n# シンボリックリンクを変更する\r\nln -s /opt/remi/php56/root/etc/php.ini /etc/\r\nln -s /opt/remi/php56/root/etc/php.d /etc/\r\nln -s /usr/bin/php56 /usr/bin/php\r\n\r\n\r\n# Timezoneを変更する\r\nvi /etc/php.ini\r\n    date.timezone = Asia/Tokyo\r\n\r\n# Apacheの設定を変更する\r\nvi /etc/httpd/conf.d/php56-php.conf\r\n\r\n#\r\n# Allow php to handle Multiviews\r\n#\r\nAddType text/html .php\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a></li>\r\n<li><a href=\"http://qiita.com/tsukasa-koizumi/items/78cc816e24d84eedecbb\" target=\"_blank\">【CentOS7】＜メモ＞ Webサーバー セットアップ - Qiita</a></li>\r\n\r\n\r\n</ul>\r\n\r\n','CentOS7にPHP5.6をインストールする','','publish','open','open','','centos7%e3%81%abphp5-6%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2016-01-24 22:46:31','2016-01-24 13:46:31','',0,'http://49.212.213.226/wordpress/solution-log/?p=1022',0,'post','',0),(1023,1,'2015-09-16 01:56:16','2015-09-15 16:56:16','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nsudo rpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nsudo yum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nsudo yum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\nsudo yum install php php-mysqlnd php-mbstring php-intl php-gmp \r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a>','CentOS7にPHP5.6をインストールする','','inherit','closed','closed','','1022-revision-v1','','','2015-09-16 01:56:16','2015-09-15 16:56:16','',1022,'http://49.212.213.226/wordpress/solution-log/?p=1023',0,'revision','',0),(1024,1,'2015-09-16 01:57:25','2015-09-15 16:57:25','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nrpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nyum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nyum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\nyum install php php-mysqlnd php-mbstring php-intl php-gmp \r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7にPHP5.6をインストールする','','inherit','closed','closed','','1022-revision-v1','','','2015-09-16 01:57:25','2015-09-15 16:57:25','',1022,'http://49.212.213.226/wordpress/solution-log/?p=1024',0,'revision','',0),(1027,1,'2015-10-03 21:43:59','2015-10-03 12:43:59','CentOSのHPよりダウンロード、ImgBurnで作成。\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://freesoft.tvbok.com/freesoft/dvd_copy/use_imgburn.html\">ImgBurnの簡単な使い方･設定の解説</a>','CentOS7のディスクイメージを作成する','','publish','open','open','','centos7%e3%81%ae%e3%83%87%e3%82%a3%e3%82%b9%e3%82%af%e3%82%a4%e3%83%a1%e3%83%bc%e3%82%b8%e3%82%92%e4%bd%9c%e6%88%90%e3%81%99%e3%82%8b','','','2015-10-03 21:43:59','2015-10-03 12:43:59','',0,'http://49.212.213.226/wordpress/solution-log/?p=1027',0,'post','',0),(1028,1,'2015-10-03 21:43:50','2015-10-03 12:43:50','CentOSのHPよりダウンロード、ImgBurnで作成。\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://freesoft.tvbok.com/freesoft/dvd_copy/use_imgburn.html\">ImgBurnの簡単な使い方･設定の解説</a>','CentOS7のディスクイメージを作成する','','inherit','closed','closed','','1027-revision-v1','','','2015-10-03 21:43:50','2015-10-03 12:43:50','',1027,'http://49.212.213.226/wordpress/solution-log/?p=1028',0,'revision','',0),(1030,1,'2015-10-29 22:39:57','2015-10-29 13:39:57','<h3>ショートカットキーを設定する</h3>\r\n\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-<strong>[独自のショートカット]</strong>を選択。<strong>[＋]</strong>ボタンを押して\r\n<ul>\r\n	<li>名前：「端末」</li>\r\n	<li>コマンド：「gnome-terminal」</li>\r\n</ul>\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li>「<a href=\"http://goblous.com/Memo/index.php?Article=IT/OS_CentOS/Ref_Terminal.html\">Goblous.com」 - 情報メモサイト</a></li>\r\n</ul>','CentOS7でGnome Terminalにショートカットキーを設定する','','publish','open','open','','centos7%e3%81%a7gnome-terminal%e3%81%ab%e3%82%b7%e3%83%a7%e3%83%bc%e3%83%88%e3%82%ab%e3%83%83%e3%83%88%e3%82%ad%e3%83%bc%e3%82%92%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b','','','2016-04-05 21:49:15','2016-04-05 12:49:15','',0,'http://49.212.213.226/wordpress/solution-log/?p=1030',0,'post','',0),(1031,1,'2015-10-29 22:32:15','2015-10-29 13:32:15','','2015-10-29_GNOME_Terminal_shortcut1','','inherit','open','closed','','2015-10-29_gnome_terminal_shortcut1','','','2015-10-29 22:32:15','2015-10-29 13:32:15','',1030,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg',0,'attachment','image/jpeg',0),(1032,1,'2015-10-29 22:36:36','2015-10-29 13:36:36','<h3>ショートカットキーを設定する</h3>\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-[独自のショートカット]を選択。\r\n[＋]ボタンを押して\r\n\r\n<pre>\r\n名前：「端末」\r\nコマンド：「gnome-terminal」\r\n</pre>\r\n\r\nと入力して、ショートカットキーを「ctl+Alt+T」を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2015-10-29 22:36:36','2015-10-29 13:36:36','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1032',0,'revision','',0),(1033,1,'2015-10-29 22:37:43','2015-10-29 13:37:43','<h3>ショートカットキーを設定する</h3>\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-[独自のショートカット]を選択。\r\n[＋]ボタンを押して\r\n<blockquote>\r\n<pre class=\"brush: xhtml; gutter: false\">名前：「端末」\r\n コマンド：「gnome-terminal」</pre>\r\n</blockquote>\r\nと入力して、ショートカットキーを「ctl+Alt+T」を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2015-10-29 22:37:43','2015-10-29 13:37:43','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1033',0,'revision','',0),(1034,1,'2015-10-29 22:39:17','2015-10-29 13:39:17','<h3>ショートカットキーを設定する</h3>\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-[独自のショートカット]を選択。[＋]ボタンを押して\r\n\r\n名前：「端末」\r\nコマンド：「gnome-terminal」\r\n\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2015-10-29 22:39:17','2015-10-29 13:39:17','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1034',0,'revision','',0),(1035,1,'2015-10-29 22:39:40','2015-10-29 13:39:40','<h3>ショートカットキーを設定する</h3>\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-[独自のショートカット]を選択。[＋]ボタンを押して\r\n<ul>\r\n	<li>名前：「端末」</li>\r\n	<li>コマンド：「gnome-terminal」</li>\r\n</ul>\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2015-10-29 22:39:40','2015-10-29 13:39:40','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1035',0,'revision','',0),(1036,1,'2016-04-05 21:48:56','2016-04-05 12:48:56','<h3>ショートカットキーを設定する</h3>\r\n\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-<strong>[独自のショートカット]</strong>を選択。<strong>[＋]</strong>ボタンを押して\r\n<ul>\r\n	<li>名前：「端末」</li>\r\n	<li>コマンド：「gnome-terminal」</li>\r\n</ul>\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li>「<a href=\"http://goblous.com/Memo/index.php?Article=IT/OS_CentOS/Ref_Terminal.html\">Goblous.com」 - 情報メモサイト</a></li>\r\n</ul>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-autosave-v1','','','2016-04-05 21:48:56','2016-04-05 12:48:56','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1036',0,'revision','',0),(1037,1,'2015-10-29 22:42:52','2015-10-29 13:42:52','<h3>ショートカットキーを設定する</h3>\r\n\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-[独自のショートカット]を選択。[＋]ボタンを押して\r\n<ul>\r\n	<li>名前：「端末」</li>\r\n	<li>コマンド：「gnome-terminal」</li>\r\n</ul>\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li>「<a href=\"http://goblous.com/Memo/index.php?Article=IT/OS_CentOS/Ref_Terminal.html\">Goblous.com」 - 情報メモサイト</a></li>\r\n</ul>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2015-10-29 22:42:52','2015-10-29 13:42:52','',1030,'http://49.212.213.226/wordpress/solution-log/?p=1037',0,'revision','',0),(1038,1,'2015-10-30 02:09:54','2015-10-29 17:09:54','<h3>1. 必要なパッケージのインストール</h3>\r\n<h4 style=\"padding-left: 60px;\">サーバ</h4>\r\n<pre class=\"brush: bash\">yum install tigervnc-server\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n</pre>\r\n<h4 style=\"padding-left: 60px;\">クライアント</h4>\r\n<pre class=\"brush: bash\">yum install vnc\r\n</pre>\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">cp /lib/systemd/system/vncserver@.service \\\r\n/etc/systemd/system/vncserver@:1.service\r\n\r\nvi /etc/systemd/system/vncserver@:1.service\r\n\r\n#&lt;USER&gt;をVNC USERに書き換える\r\nExecStart=/sbin/runuser -l vncuser -c &quot;/usr/bin/vncserver %i&quot;\r\nPIDFile=/home/vncuser/.vnc/%H%i.pid\r\n\r\n# systemdに設定ファイルを再度読込みをさせる。\r\nsystemctl daemon-reload\r\n</pre>\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">su vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n<h3>ファイアウォールの設定</h3>\r\n<pre class=\"brush: bash\">firewall-cmd --permanent --add-service vnc-server\r\nsystemctl restart firewalld.service\r\n</pre>\r\n<h3>VNCサービスの起動</h3>\r\n<pre class=\"brush: bash\">systemctl start vncserver@:1.service\r\n\r\n# VNCサービスの自動起動設定を行う\r\nsystemctl enable vncserver@:1.service\r\n</pre>\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n<h4 style=\"padding-left: 60px;\">デスクトップから起動する</h4>\r\n<p style=\"padding-left: 60px;\"><b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b></p>\r\n\r\n<h4 style=\"padding-left: 60px;\">端末から起動する</h4>\r\n<pre class=\"brush: bash\">vncviewer yourhost:1\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<a href=\"http://zero-config.com/centos/gnome-0001.html\" target=\"_blank\">[CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</a>\r\n<a href=\"http://orebibou.com/2014/12/centos-7%E3%81%ABvnc%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\" target=\"_blank\">CentOS 7にVNCサーバをインストールする | 俺的備忘録 〜なんかいろいろ〜</a>\r\n<a href=\"http://qiita.com/tanuki-project/items/2496339d204b9646f36c\" target=\"_blank\">CentOS 7でVNCサーバを構築してみた - Qiita</a>','さくらのVPSにインストールしたCentOS7でVNCを利用する','','publish','open','open','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%ab%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%97%e3%81%9fcentos7%e3%81%a7vnc%e3%82%92%e5%88%a9%e7%94%a8%e3%81%99%e3%82%8b','','','2015-10-31 21:44:11','2015-10-31 12:44:11','',0,'http://49.212.213.226/wordpress/solution-log/?p=1038',0,'post','',0),(1039,1,'2015-10-30 02:07:22','2015-10-29 17:07:22','<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n</pre>\r\n\r\n<h4>クライアント</h4>\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\ncp /lib/systemd/system/vncserver@.service \\\r\n/etc/systemd/system/vncserver@:1.service\r\n\r\nvi /etc/systemd/system/vncserver@:1.service\r\n\r\n#&lt;USER&gt;をVNC USERに書き換える\r\nExecStart=/sbin/runuser -l vncuser -c &quot;/usr/bin/vncserver %i&quot;\r\nPIDFile=/home/vncuser/.vnc/%H%i.pid\r\n\r\n# systemdに設定ファイルを再度読込みをさせる。\r\nsystemctl daemon-reload\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>ファイアウォールの設定</h3>\r\n<pre class=\"brush: bash\">\r\nfirewall-cmd --permanent --add-service vnc-server\r\nsystemctl restart firewalld.service\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\n<pre class=\"brush: bash\">\r\nsystemctl start vncserver@:1.service\r\n\r\n# VNCサービスの自動起動設定を行う\r\nsystemctl enable vncserver@:1.service\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>デスクトップ</b>→<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://zero-config.com/centos/gnome-0001.html\" target=\"_blank\">[CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</a>\r\n<a href=\"http://orebibou.com/2014/12/centos-7%E3%81%ABvnc%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\" target=\"_blank\">CentOS 7にVNCサーバをインストールする | 俺的備忘録 〜なんかいろいろ〜</a>\r\n<a href=\"http://qiita.com/tanuki-project/items/2496339d204b9646f36c\" target=\"_blank\">CentOS 7でVNCサーバを構築してみた - Qiita</a>\r\n</ul>','さくらのVPSにインストールしたCentOS7でVNCを利用する','','inherit','closed','closed','','1038-revision-v1','','','2015-10-30 02:07:22','2015-10-29 17:07:22','',1038,'http://49.212.213.226/wordpress/solution-log/?p=1039',0,'revision','',0),(1040,1,'2015-10-30 02:09:54','2015-10-29 17:09:54','<h3>1. 必要なパッケージのインストール</h3>\r\n<h4>サーバ</h4>\r\n<pre class=\"brush: bash\">\r\nyum install tigervnc-server\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n</pre>\r\n\r\n<h4>クライアント</h4>\r\n<pre class=\"brush: bash\">\r\nyum install vnc\r\n</pre>\r\n\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">\r\ncp /lib/systemd/system/vncserver@.service \\\r\n/etc/systemd/system/vncserver@:1.service\r\n\r\nvi /etc/systemd/system/vncserver@:1.service\r\n\r\n#&lt;USER&gt;をVNC USERに書き換える\r\nExecStart=/sbin/runuser -l vncuser -c &quot;/usr/bin/vncserver %i&quot;\r\nPIDFile=/home/vncuser/.vnc/%H%i.pid\r\n\r\n# systemdに設定ファイルを再度読込みをさせる。\r\nsystemctl daemon-reload\r\n</pre>\r\n\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">\r\nsu vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n\r\n<h3>ファイアウォールの設定</h3>\r\n<pre class=\"brush: bash\">\r\nfirewall-cmd --permanent --add-service vnc-server\r\nsystemctl restart firewalld.service\r\n</pre>\r\n\r\n<h3>VNCサービスの起動</h3>\r\n<pre class=\"brush: bash\">\r\nsystemctl start vncserver@:1.service\r\n\r\n# VNCサービスの自動起動設定を行う\r\nsystemctl enable vncserver@:1.service\r\n</pre>\r\n\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n\r\n<h4>デスクトップから起動する</h4>\r\n<b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b>\r\n\r\n<h4>端末から起動する</h3>\r\n<pre class=\"brush: bash\">\r\nvncviewer yourhost:1\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://zero-config.com/centos/gnome-0001.html\" target=\"_blank\">[CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</a>\r\n<a href=\"http://orebibou.com/2014/12/centos-7%E3%81%ABvnc%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\" target=\"_blank\">CentOS 7にVNCサーバをインストールする | 俺的備忘録 〜なんかいろいろ〜</a>\r\n<a href=\"http://qiita.com/tanuki-project/items/2496339d204b9646f36c\" target=\"_blank\">CentOS 7でVNCサーバを構築してみた - Qiita</a>\r\n</ul>','さくらのVPSにインストールしたCentOS7でVNCを利用する','','inherit','closed','closed','','1038-revision-v1','','','2015-10-30 02:09:54','2015-10-29 17:09:54','',1038,'http://49.212.213.226/wordpress/solution-log/?p=1040',0,'revision','',0),(1041,1,'2015-10-31 21:43:46','2015-10-31 12:43:46','<h3>1. 必要なパッケージのインストール</h3>\n<h4 style=\"padding-left: 60px;\">サーバ</h4>\n<pre class=\"brush: bash\">yum install tigervnc-server\nyum groupinstall &quot;GNOME Desktop&quot;\n</pre>\n<h4 style=\"padding-left: 60px;\">クライアント</h4>\n<pre class=\"brush: bash\">yum install vnc\n</pre>\n<h3>VNCサーバの設定</h3>\n<pre class=\"brush: bash\">cp /lib/systemd/system/vncserver@.service \\\n/etc/systemd/system/vncserver@:1.service\n\nvi /etc/systemd/system/vncserver@:1.service\n\n#&lt;USER&gt;をVNC USERに書き換える\nExecStart=/sbin/runuser -l vncuser -c &quot;/usr/bin/vncserver %i&quot;\nPIDFile=/home/vncuser/.vnc/%H%i.pid\n\n# systemdに設定ファイルを再度読込みをさせる。\nsystemctl daemon-reload\n</pre>\n<h3>VNCユーザの設定</h3>\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\n<pre class=\"brush: bash\">su vncuser\nvncpasswd &lt;enter&gt;\nPassword: ****** &lt;enter&gt;\nVerify: ***** &lt;enter&gt;\n</pre>\n<h3>ファイアウォールの設定</h3>\n<pre class=\"brush: bash\">firewall-cmd --permanent --add-service vnc-server\nsystemctl restart firewalld.service\n</pre>\n<h3>VNCサービスの起動</h3>\n<pre class=\"brush: bash\">systemctl start vncserver@:1.service\n\n# VNCサービスの自動起動設定を行う\nsystemctl enable vncserver@:1.service\n</pre>\n<h3>クライアントからVNCを使う</h3>\nF8でフルスクリーンモードの切り替え設定が可能になる\n<h4 style=\"padding-left: 60px;\">デスクトップから起動する</h4>\n<p style=\"padding-left: 60px;\"><b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b></p>\n\n<h4 style=\"padding-left: 60px;\">端末から起動する</h4>\n<pre class=\"brush: bash\" style=\"padding-left: 60px;\">vncviewer yourhost:1\n</pre>\n<h3>参考サイト</h3>\n<a href=\"http://zero-config.com/centos/gnome-0001.html\" target=\"_blank\">[CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</a>\n<a href=\"http://orebibou.com/2014/12/centos-7%E3%81%ABvnc%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\" target=\"_blank\">CentOS 7にVNCサーバをインストールする | 俺的備忘録 〜なんかいろいろ〜</a>\n<a href=\"http://qiita.com/tanuki-project/items/2496339d204b9646f36c\" target=\"_blank\">CentOS 7でVNCサーバを構築してみた - Qiita</a>','さくらのVPSにインストールしたCentOS7でVNCを利用する','','inherit','closed','closed','','1038-autosave-v1','','','2015-10-31 21:43:46','2015-10-31 12:43:46','',1038,'http://49.212.213.226/wordpress/solution-log/?p=1041',0,'revision','',0),(1042,1,'2015-10-31 21:44:11','2015-10-31 12:44:11','<h3>1. 必要なパッケージのインストール</h3>\r\n<h4 style=\"padding-left: 60px;\">サーバ</h4>\r\n<pre class=\"brush: bash\">yum install tigervnc-server\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n</pre>\r\n<h4 style=\"padding-left: 60px;\">クライアント</h4>\r\n<pre class=\"brush: bash\">yum install vnc\r\n</pre>\r\n<h3>VNCサーバの設定</h3>\r\n<pre class=\"brush: bash\">cp /lib/systemd/system/vncserver@.service \\\r\n/etc/systemd/system/vncserver@:1.service\r\n\r\nvi /etc/systemd/system/vncserver@:1.service\r\n\r\n#&lt;USER&gt;をVNC USERに書き換える\r\nExecStart=/sbin/runuser -l vncuser -c &quot;/usr/bin/vncserver %i&quot;\r\nPIDFile=/home/vncuser/.vnc/%H%i.pid\r\n\r\n# systemdに設定ファイルを再度読込みをさせる。\r\nsystemctl daemon-reload\r\n</pre>\r\n<h3>VNCユーザの設定</h3>\r\nログインユーザーをVNCユーザーに切り替えてパスワードを変更する\r\n<pre class=\"brush: bash\">su vncuser\r\nvncpasswd &lt;enter&gt;\r\nPassword: ****** &lt;enter&gt;\r\nVerify: ***** &lt;enter&gt;\r\n</pre>\r\n<h3>ファイアウォールの設定</h3>\r\n<pre class=\"brush: bash\">firewall-cmd --permanent --add-service vnc-server\r\nsystemctl restart firewalld.service\r\n</pre>\r\n<h3>VNCサービスの起動</h3>\r\n<pre class=\"brush: bash\">systemctl start vncserver@:1.service\r\n\r\n# VNCサービスの自動起動設定を行う\r\nsystemctl enable vncserver@:1.service\r\n</pre>\r\n<h3>クライアントからVNCを使う</h3>\r\nF8でフルスクリーンモードの切り替え設定が可能になる\r\n<h4 style=\"padding-left: 60px;\">デスクトップから起動する</h4>\r\n<p style=\"padding-left: 60px;\"><b>アプリケーション</b>→<b>インターネット</b>→<b>TigerVNC Viewver</b></p>\r\n\r\n<h4 style=\"padding-left: 60px;\">端末から起動する</h4>\r\n<pre class=\"brush: bash\">vncviewer yourhost:1\r\n</pre>\r\n<h3>参考サイト</h3>\r\n<a href=\"http://zero-config.com/centos/gnome-0001.html\" target=\"_blank\">[CentOS]CentOS7最小限のインストールからのGnomeデスクトップ環境構築 | Zero Configuration</a>\r\n<a href=\"http://orebibou.com/2014/12/centos-7%E3%81%ABvnc%E3%82%B5%E3%83%BC%E3%83%90%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%99%E3%82%8B/\" target=\"_blank\">CentOS 7にVNCサーバをインストールする | 俺的備忘録 〜なんかいろいろ〜</a>\r\n<a href=\"http://qiita.com/tanuki-project/items/2496339d204b9646f36c\" target=\"_blank\">CentOS 7でVNCサーバを構築してみた - Qiita</a>','さくらのVPSにインストールしたCentOS7でVNCを利用する','','inherit','closed','closed','','1038-revision-v1','','','2015-10-31 21:44:11','2015-10-31 12:44:11','',1038,'http://49.212.213.226/wordpress/solution-log/?p=1042',0,'revision','',0),(1043,1,'2015-11-01 01:33:25','2015-10-31 16:33:25','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。公開鍵、秘密鍵ともに、SSH接続時はアクセス権は600にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">ssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 600 ~/.ssh/authorized_keys\r\nchmod 700 ~/.ssh\r\n</pre>\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\"># ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\n# アクセス権限を変更する\r\nchmod 600 config\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a></li>\r\n	<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a></li>\r\n	<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun\'s Blog</a></li>\r\n	<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a></li>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','closed','closed','','663-revision-v1','','','2015-11-01 01:33:25','2015-10-31 16:33:25','',663,'http://49.212.213.226/wordpress/solution-log/?p=1043',0,'revision','',0),(1051,1,'2015-11-01 20:42:17','2015-11-01 11:42:17','VNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">ssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\"># ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\n# アクセス権限を変更する\r\nchmod 600 config\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a></li>\r\n	<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a></li>\r\n	<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun\'s Blog</a></li>\r\n	<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a></li>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','closed','closed','','663-revision-v1','','','2015-11-01 20:42:17','2015-11-01 11:42:17','',663,'http://49.212.213.226/wordpress/solution-log/?p=1051',0,'revision','',0),(1053,1,'2015-11-02 01:43:52','2015-11-01 16:43:52','<p style=\"text-align: right;\"><a href=\"/redmine/issues/190\" target=\"_blank\">Redmine参照</a></p>\r\nVNC環境で立ち上げたEclipseからEgitで外部gitリポジトリにアクセスする必要が出てきたのでOpenSSHの設定をもう一度見直す\r\n<h3>キーペアを作成する</h3>\r\n接続先のサーバでキーペアを作成する。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">ssh-keygen -t rsa\r\nmv ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\n\r\n# SSH のサービスを再起動\r\n/etc/init.d/sshd restart\r\n</pre>\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\nPort {sshport_number} # 0～65535の間で設定\r\nvi /etc/sysconfig/iptables\r\n# 以下を追加\r\n-A INPUT -m state --state NEW -m tcp -p tcp --dport {sshport_number} -j ACCEPT\r\n# sshd、iptablesを再起動する\r\nservice sshd restart\r\n/etc/rc.d/init.d/iptables restart\r\n</pre>\r\n<h3>ローカルに秘密鍵を保存する</h3>\r\n何らかの方法でローカルに秘密鍵を保存しアクセス権限を適宜設定する。またSSH接続したいサーバが複数ある場合は~/.sshにconfigファイルを作成し設定を行う\r\n<pre class=\"brush: bash\"># ローカルPCで操作する\r\ncd ~/.ssh\r\nchmod 600 id_rsa\r\nvi config\r\n# 以下の設定を書き込む\r\nHost example.com\r\n  User sshuser\r\n  Port {sshport_number}\r\n  Hostname example.com\r\n  IdentityFile ~/.ssh/id_rsa-sshuser@example.com\r\n\r\n# アクセス権限を変更する\r\nchmod 600 config\r\nmv id_rasa id_rsa-sshuser\\@example.com\r\n</pre>\r\nこれでSSH接続出きるようになる\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html\">CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき</a></li>\r\n	<li><a href=\"http://dream.jp/vps/esp/manual/mnl_security_03.html\">ssh用のポート番号を変更する | マニュアル｜ServersMan@VPS Entry/Standard/Proプラン｜仮想専用サーバー｜クラウドサービス：ユビキタスプロバイダ　DTI</a></li>\r\n	<li><a href=\"http://www.yukun.info/blog/2008/06/sshd-log-file.html\">sshdのログファイルの確認方法 | Yukun\'s Blog</a></li>\r\n	<li><a href=\"http://lab.unicast.ne.jp/2011/09/11/%E7%A7%98%E5%AF%86%E9%8D%B5%E3%81%8C%E8%A4%87%E6%95%B0%E3%81%82%E3%82%8B%E5%A0%B4%E5%90%88%E3%81%AE%E8%A8%AD%E5%AE%9Aopenssh-2/\">秘密鍵が複数ある場合の設定(OpenSSH)ユニキャストラボ | ユニキャストラボ</a></li>\r\n</ul>','公開鍵秘密鍵を設定する','','inherit','closed','closed','','663-revision-v1','','','2015-11-02 01:43:52','2015-11-01 16:43:52','',663,'http://49.212.213.226/wordpress/solution-log/?p=1053',0,'revision','',0),(1059,1,'2015-11-07 14:16:52','2015-11-07 05:16:52','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\nwget http://ja.wordpress.org/wordpress-3.4.2-ja.zip\r\nunzip wordpress-3.4.2-ja.zip #wordpressと言うフォルダに展開される\r\nmv wordpress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','inherit','closed','closed','','199-revision-v1','','','2015-11-07 14:16:52','2015-11-07 05:16:52','',199,'http://49.212.213.226/wordpress/solution-log/?p=1059',0,'revision','',0),(1060,1,'2015-11-07 22:14:21','2015-11-07 13:14:21','壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。\r\n\r\n<h3>pdftkをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install pdftk\r\n</pre>\r\n\r\n<h3>パスワードを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# 保護、暗号化（権限パスワード）\r\n# 機能制限を設定したり変更したりするときに、権限パスワードを求めるようになる。\r\n# test.pdfを暗号化してtest.pw.pdfにする。パスワードは123456。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456\r\n\r\n# 文書を開くパスワード\r\n# さらに、ドキュメントを開くときにパスワードを求めるようにする例\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789\r\n\r\n# 印刷するときにパスワード\r\n# ドキュメントを開いた後、印刷するときにパスワードを求める例。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 allow printing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://www.softel.co.jp/blogs/tech/archives/3496\" target=\"_blank\">パスワード付きのPDFを作成する   at softelメモ</a></li>\r\n</ul>','CentOS6でPDFにパスワードを掛ける','','publish','open','open','','centos6%e3%81%a7pdf%e3%81%ab%e3%83%91%e3%82%b9%e3%83%af%e3%83%bc%e3%83%89%e3%82%92%e6%8e%9b%e3%81%91%e3%82%8b','','','2015-11-07 22:14:21','2015-11-07 13:14:21','',0,'http://49.212.213.226/wordpress/solution-log/?p=1060',0,'post','',0),(1061,1,'2015-11-07 22:06:49','2015-11-07 13:06:49','壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。\r\n\r\n<h3>popplerをインストールする</h3>\r\n<a href=\"./?p=548\" target=\"_blank\">EPEL</a>を追加して\r\n<pre class=\"brush: bash\">\r\nyum install xpdf\r\n</pre>','PDFにパスワードを掛ける','','inherit','closed','closed','','1060-revision-v1','','','2015-11-07 22:06:49','2015-11-07 13:06:49','',1060,'http://49.212.213.226/wordpress/solution-log/?p=1061',0,'revision','',0),(1062,1,'2015-11-07 22:10:29','2015-11-07 13:10:29','壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。\r\n\r\n<h3>pdftkをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install pdftk\r\n</pre>\r\n\r\n<h3>パスワードを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# 保護、暗号化（権限パスワード）\r\n# 機能制限を設定したり変更したりするときに、権限パスワードを求めるようになる。\r\n# test.pdfを暗号化してtest.pw.pdfにする。パスワードは123456。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456\r\n\r\n# 文書を開くパスワード\r\n# さらに、ドキュメントを開くときにパスワードを求めるようにする例\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789\r\n\r\n# 印刷するときにパスワード\r\n# ドキュメントを開いた後、印刷するときにパスワードを求める例。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 allow printing\r\n</pre>','PDFにパスワードを掛ける','','inherit','closed','closed','','1060-revision-v1','','','2015-11-07 22:10:29','2015-11-07 13:10:29','',1060,'http://49.212.213.226/wordpress/solution-log/?p=1062',0,'revision','',0),(1063,1,'2015-11-07 22:12:45','2015-11-07 13:12:45','壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。\r\n\r\n<h3>pdftkをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install pdftk\r\n</pre>\r\n\r\n<h3>パスワードを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# 保護、暗号化（権限パスワード）\r\n# 機能制限を設定したり変更したりするときに、権限パスワードを求めるようになる。\r\n# test.pdfを暗号化してtest.pw.pdfにする。パスワードは123456。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456\r\n\r\n# 文書を開くパスワード\r\n# さらに、ドキュメントを開くときにパスワードを求めるようにする例\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789\r\n\r\n# 印刷するときにパスワード\r\n# ドキュメントを開いた後、印刷するときにパスワードを求める例。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 allow printing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://www.softel.co.jp/blogs/tech/archives/3496\" target=\"_blank\">パスワード付きのPDFを作成する   at softelメモ</a></li>\r\n</ul>','PDFにパスワードを掛ける','','inherit','closed','closed','','1060-revision-v1','','','2015-11-07 22:12:45','2015-11-07 13:12:45','',1060,'http://49.212.213.226/wordpress/solution-log/?p=1063',0,'revision','',0),(1064,1,'2015-11-07 22:14:09','2015-11-07 13:14:09','壮年団の文書作成、配布等で名簿を扱う関係でPDFにパスワードを掛けたい場面が出て来た。\r\n\r\n<h3>pdftkをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install pdftk\r\n</pre>\r\n\r\n<h3>パスワードを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# 保護、暗号化（権限パスワード）\r\n# 機能制限を設定したり変更したりするときに、権限パスワードを求めるようになる。\r\n# test.pdfを暗号化してtest.pw.pdfにする。パスワードは123456。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456\r\n\r\n# 文書を開くパスワード\r\n# さらに、ドキュメントを開くときにパスワードを求めるようにする例\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789\r\n\r\n# 印刷するときにパスワード\r\n# ドキュメントを開いた後、印刷するときにパスワードを求める例。\r\npdftk test.pdf output test.pw.pdf owner_pw 123456 user_pw 456789 allow printing\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://www.softel.co.jp/blogs/tech/archives/3496\" target=\"_blank\">パスワード付きのPDFを作成する   at softelメモ</a></li>\r\n</ul>','CentOS6でPDFにパスワードを掛ける','','inherit','closed','closed','','1060-revision-v1','','','2015-11-07 22:14:09','2015-11-07 13:14:09','',1060,'http://49.212.213.226/wordpress/solution-log/?p=1064',0,'revision','',0),(1065,1,'2015-11-08 13:03:13','2015-11-08 04:03:13','<h3>FileZillaをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install epel-release\r\nyum -y install filezilla\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://elearning.wsldp.com/pcmagazine/install-filezilla-on-centos/\" target=\"_blank\">How to Install FileZilla on CentOS 7 - e Learning</a></li>\r\n</ul>','CentOS7へFilezillaをインストールする','','publish','open','open','','centos7%e3%81%b8filezilla%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2015-11-08 13:03:13','2015-11-08 04:03:13','',0,'http://49.212.213.226/wordpress/solution-log/?p=1065',0,'post','',0),(1066,1,'2015-11-08 13:03:01','2015-11-08 04:03:01','<h3>FileZillaをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum -y install epel-release\r\nyum -y install filezilla\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://elearning.wsldp.com/pcmagazine/install-filezilla-on-centos/\" target=\"_blank\">How to Install FileZilla on CentOS 7 - e Learning</a></li>\r\n</ul>','CentOS7へFilezillaをインストールする','','inherit','closed','closed','','1065-revision-v1','','','2015-11-08 13:03:01','2015-11-08 04:03:01','',1065,'http://49.212.213.226/wordpress/solution-log/?p=1066',0,'revision','',0),(1067,1,'2015-11-08 19:41:11','2015-11-08 10:41:11','<h3>vsftpdを導入する</h3>\r\n<pre class=\"brush: bash\">\r\n# vsftpdをyumでインストールする\r\nyum install vsftpd\r\n\r\n# サービスの自動設定を行う\r\nsystemctl start vsftpd\r\nsystemctl enable vsftpd\r\n\r\nsystemctl status vsftpd.service # 確認\r\nsystemctl is-enabled vsftpd.service # 確認\r\n\r\n# アクセス制限の設定を行う\r\n\r\n# パケットフィルタリングの設定を行う\r\nfirewall-cmd --permanent --add-service=ftp\r\nfirewall-cmd --reload\r\n</pre>\r\n\r\n<h3>vsftpdの動作設定を行う</h3>\r\n\r\n<h4>chrootを設定するのみ</h4>\r\n<pre class=\"brush: bash\">\r\n\r\nchroot_local_user=YES\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<h4>詳細設定</h4>\r\n\r\n<pre class=\"brush: bash\">\r\n# 匿名ログイン禁止\r\nanonymous_enable=NO\r\n\r\n# アスキーモードでの転送を許可\r\nascii_upload_enable=YES\r\nascii_download_enable=YES\r\n\r\n# chroot有効\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\n\r\n# chroot リストファイル指定\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n# ディレクトリごと一括での転送有効\r\nls_recurse_enable=YES\r\n\r\n# IPv4をリスンする\r\nlisten=YES\r\n\r\n# IPv6 はリスンしない\r\nlisten_ipv6=NO\r\n\r\n# 最終行へ追記\r\n# ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる)\r\nlocal_root=public_html\r\n\r\n# ローカルタイムを使う\r\nuse_localtime=YES\r\n\r\n# seccomp filter をオフにする ( ログインに失敗する場合はオフにする )\r\nseccomp_sandbox=NO\r\n\r\n# ユーザ個別設定ファイルの配置設定\r\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\r\n\r\n# 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない\r\n# ホームディレクトリ以外でもchroot設定が有効になるようにする\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# ユーザーのchrootディレクトリを設定する\r\nmkdir /etc/vsftpd/vsftpd_user_conf\r\n\r\nvi /etc/vsftpd/vsftpd_user_conf/ftp-user\r\nlocal_root=/var/ftp\r\n\r\nchowm -R ftp-user:ftp-user /var/ftp\r\n\r\n# とりあえず作成する\r\nvi /etc/vsftpd/chroot_list\r\n\r\nftp-user\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\r\n\r\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\r\n\r\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\r\n\r\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\r\n	<li><a href=\"http://park1.wakwak.com/~ima/centos4_vsftpd0005.html\">[CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 - tips about programming and building a serve</a></li>\r\n	<li><a href=\"https://forums.ubuntulinux.jp/viewtopic.php?id=16644\" target=\"_blank\">Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</a></li>\r\n\r\n</ul>','CentOS7にFTPサーバを構築する','','publish','open','open','','centos7%e3%81%abftp%e3%82%b5%e3%83%bc%e3%83%90%e3%82%92%e6%a7%8b%e7%af%89%e3%81%99%e3%82%8b','','','2016-07-15 15:40:49','2016-07-15 06:40:49','',0,'http://49.212.213.226/wordpress/solution-log/?p=1067',0,'post','',0),(1068,1,'2015-11-08 19:40:04','2015-11-08 10:40:04','<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\r\n\r\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\r\n\r\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\r\n\r\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\r\n\r\n</ul>','CentOS7にFTPサーバを構築する','','inherit','closed','closed','','1067-revision-v1','','','2015-11-08 19:40:04','2015-11-08 10:40:04','',1067,'http://49.212.213.226/wordpress/solution-log/?p=1068',0,'revision','',0),(1069,1,'2016-07-15 15:40:43','2016-07-15 06:40:43','<h3>vsftpdを導入する</h3>\n<pre class=\"brush: bash\">\n# vsftpdをyumでインストールする\nyum install vsftpd\n\n# サービスの自動設定を行う\nsystemctl start vsftpd\nsystemctl enable vsftpd\n\nsystemctl status vsftpd.service # 確認\nsystemctl is-enabled vsftpd.service # 確認\n\n# アクセス制限の設定を行う\n\n# パケットフィルタリングの設定を行う\nfirewall-cmd --permanent --add-service=ftp\nfirewall-cmd --reload\n</pre>\n\n<h3>vsftpdの動作設定を行う</h3>\n\n<h4>chrootを設定するのみ</h4>\n<pre class=\"brush: bash\">\n\nchroot_local_user=YES\nallow_writeable_chroot=YES\n</pre>\n\n\n<h4>詳細設定</h4>\n\n<pre class=\"brush: bash\">\n# 匿名ログイン禁止\nanonymous_enable=NO\n\n# アスキーモードでの転送を許可\nascii_upload_enable=YES\nascii_download_enable=YES\n\n# chroot有効\nchroot_local_user=YES\nchroot_list_enable=YES\n\n# chroot リストファイル指定\nchroot_list_file=/etc/vsftpd/chroot_list\n\n# ディレクトリごと一括での転送有効\nls_recurse_enable=YES\n\n# IPv4をリスンする\nlisten=YES\n\n# IPv6 はリスンしない\nlisten_ipv6=NO\n\n# 最終行へ追記\n# ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる)\nlocal_root=public_html\n\n# ローカルタイムを使う\nuse_localtime=YES\n\n# seccomp filter をオフにする ( ログインに失敗する場合はオフにする )\nseccomp_sandbox=NO\n\n# ユーザ個別設定ファイルの配置設定\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\n\n# 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない\n# ホームディレクトリ以外でもchroot設定が有効になるようにする\nallow_writeable_chroot=YES\n</pre>\n\n\n<pre class=\"brush: bash\">\n# ユーザーのchrootディレクトリを設定する\nmkdir /etc/vsftpd/vsftpd_user_conf\n\nvi /etc/vsftpd/vsftpd_user_conf/ftp-user\nlocal_root=/var/ftp\n\nchowm -R ftp-user:ftp-user /var/ftp\n\n# とりあえず作成する\nvi /etc/vsftpd/chroot_list\n\nftp-user\n</pre>\n\n\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\n\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\n\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\n\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\n	<li><a href=\"http://park1.wakwak.com/~ima/centos4_vsftpd0005.html\">[CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 - tips about programming and building a serve</a></li>\n	<li><a href=\"https://forums.ubuntulinux.jp/viewtopic.php?id=16644\" target=\"_blank\">Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</a></li>\n\n</ul>','CentOS7にFTPサーバを構築する','','inherit','closed','closed','','1067-autosave-v1','','','2016-07-15 15:40:43','2016-07-15 06:40:43','',1067,'http://49.212.213.226/wordpress/solution-log/?p=1069',0,'revision','',0),(1070,1,'2015-11-08 20:15:35','2015-11-08 11:15:35','<h3>vsftpdを導入する</h3>\r\n<pre class=\"brush: bash\">\r\n# vsftpdをyumでインストールする\r\nyum install vsftpd\r\n\r\n# サービスの自動設定を行う\r\nsystemctl start vsftpd\r\nsystemctl enable vsftpd\r\n\r\nsystemctl status vsftpd.service # 確認\r\nsystemctl is-enabled vsftpd.service # 確認\r\n\r\n# アクセス制限の設定を行う\r\n\r\n# パケットフィルタリングの設定を行う\r\nfirewall-cmd --permanent --add-service=ftp\r\nfirewall-cmd --reload\r\n</pre>\r\n\r\n<h3>vsftpdの動作設定を行う</h3>\r\n<pre class=\"brush: bash\">\r\n# 匿名ログイン禁止\r\nanonymous_enable=NO\r\n\r\n# アスキーモードでの転送を許可\r\nascii_upload_enable=YES\r\nascii_download_enable=YES\r\n\r\n# chroot有効\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\n\r\n# chroot リストファイル指定\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n# ディレクトリごと一括での転送有効\r\nls_recurse_enable=YES\r\n\r\n# IPv4をリスンする\r\nlisten=YES\r\n\r\n# IPv6 はリスンしない\r\nlisten_ipv6=NO\r\n\r\n# 最終行へ追記\r\n# ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる)\r\nlocal_root=public_html\r\n\r\n# ローカルタイムを使う\r\nuse_localtime=YES\r\n\r\n# seccomp filter をオフにする ( ログインに失敗する場合はオフにする )\r\nseccomp_sandbox=NO\r\n\r\n# ユーザ個別設定ファイルの配置設定\r\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\r\n\r\n# 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない\r\n# ホームディレクトリ以外でもchroot設定が有効になるようにする\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n\r\n\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\r\n\r\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\r\n\r\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\r\n\r\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\r\n	<li><a href=\"http://park1.wakwak.com/~ima/centos4_vsftpd0005.html\">[CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 - tips about programming and building a serve</a></li>\r\n	<li><a href=\"https://forums.ubuntulinux.jp/viewtopic.php?id=16644\" target=\"_blank\">Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</a></li>\r\n\r\n</ul>','CentOS7にFTPサーバを構築する','','inherit','closed','closed','','1067-revision-v1','','','2015-11-08 20:15:35','2015-11-08 11:15:35','',1067,'http://49.212.213.226/wordpress/solution-log/?p=1070',0,'revision','',0),(1071,1,'2015-11-08 20:46:40','2015-11-08 11:46:40','<h3>vsftpdを導入する</h3>\r\n<pre class=\"brush: bash\">\r\n# vsftpdをyumでインストールする\r\nyum install vsftpd\r\n\r\n# サービスの自動設定を行う\r\nsystemctl start vsftpd\r\nsystemctl enable vsftpd\r\n\r\nsystemctl status vsftpd.service # 確認\r\nsystemctl is-enabled vsftpd.service # 確認\r\n\r\n# アクセス制限の設定を行う\r\n\r\n# パケットフィルタリングの設定を行う\r\nfirewall-cmd --permanent --add-service=ftp\r\nfirewall-cmd --reload\r\n</pre>\r\n\r\n<h3>vsftpdの動作設定を行う</h3>\r\n<pre class=\"brush: bash\">\r\n# 匿名ログイン禁止\r\nanonymous_enable=NO\r\n\r\n# アスキーモードでの転送を許可\r\nascii_upload_enable=YES\r\nascii_download_enable=YES\r\n\r\n# chroot有効\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\n\r\n# chroot リストファイル指定\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n# ディレクトリごと一括での転送有効\r\nls_recurse_enable=YES\r\n\r\n# IPv4をリスンする\r\nlisten=YES\r\n\r\n# IPv6 はリスンしない\r\nlisten_ipv6=NO\r\n\r\n# 最終行へ追記\r\n# ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる)\r\nlocal_root=public_html\r\n\r\n# ローカルタイムを使う\r\nuse_localtime=YES\r\n\r\n# seccomp filter をオフにする ( ログインに失敗する場合はオフにする )\r\nseccomp_sandbox=NO\r\n\r\n# ユーザ個別設定ファイルの配置設定\r\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\r\n\r\n# 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない\r\n# ホームディレクトリ以外でもchroot設定が有効になるようにする\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# ユーザーのchrootディレクトリを設定する\r\nmkdir /etc/vsftpd/vsftpd_user_conf\r\n\r\nvi /etc/vsftpd/vsftpd_user_conf/ftp-user\r\nlocal_root=/var/ftp\r\n\r\nchowm -R ftp-user:ftp-user /var/ftp\r\n\r\n# とりあえず作成する\r\nvi /etc/vsftpd/chroot_list\r\n\r\nftp-user\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\r\n\r\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\r\n\r\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\r\n\r\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\r\n	<li><a href=\"http://park1.wakwak.com/~ima/centos4_vsftpd0005.html\">[CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 - tips about programming and building a serve</a></li>\r\n	<li><a href=\"https://forums.ubuntulinux.jp/viewtopic.php?id=16644\" target=\"_blank\">Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</a></li>\r\n\r\n</ul>','CentOS7にFTPサーバを構築する','','inherit','closed','closed','','1067-revision-v1','','','2015-11-08 20:46:40','2015-11-08 11:46:40','',1067,'http://49.212.213.226/wordpress/solution-log/?p=1071',0,'revision','',0),(1072,1,'2015-11-11 00:13:13','2015-11-10 15:13:13','現在のところ使えないのでCentOS6で対応する','CentOS7でrarコマンドを使用する','','publish','open','open','','centos7%e3%81%a7rar%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2015-11-11 00:13:13','2015-11-10 15:13:13','',0,'http://49.212.213.226/wordpress/solution-log/?p=1072',0,'post','',0),(1073,1,'2015-11-11 00:13:13','2015-11-10 15:13:13','現在のところ使えないのでCentOS6で対応する','CentOS7でrarコマンドを使用する','','inherit','closed','closed','','1072-revision-v1','','','2015-11-11 00:13:13','2015-11-10 15:13:13','',1072,'http://49.212.213.226/wordpress/solution-log/?p=1073',0,'revision','',0),(1074,1,'2015-11-16 22:31:48','2015-11-16 13:31:48','動作確認は「<b>http://localhost/~{user}/</b>」にアクセスする。\r\n\r\n<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\nUserDir public_html  # 「~/public_html」にファイルを置くことでApacheに認識される\r\nUserDir disabled root\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nしばらくハマった。SELinuxが有効だとそもそもmod_userdirが使用できないらしい。\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを有効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを755に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://centossrv.com/apache-userdir.shtml\">ユーザーディレクトリ作成(/~ユーザー名/) - CentOSで自宅サーバー構築</a>\r\n<li><a href=\"http://soudan1.biglobe.ne.jp/qa5781918.html\">apacheでmod_userdir.c - BIGLOBEなんでも相談室</a>\r\n<li><a href=\"http://centosforge.com/node/how-get-userdir-user-specific-publichtml-working-apache-centos-6\">How to get UserDir (user specific public_html) working for apache in CentOS 6 | CentOSForge.com</a>\r\n<li><a href=\"http://rfs.jp/server/security/selinux01.html\">SELinuxを無効化する | Smart -Web Magazine</a>\r\n</ul>','CentOS6でmod_userdirを使用する','','inherit','closed','closed','','745-revision-v1','','','2015-11-16 22:31:48','2015-11-16 13:31:48','',745,'http://49.212.213.226/wordpress/solution-log/?p=1074',0,'revision','',0),(1075,1,'2015-11-17 00:38:58','2015-11-16 15:38:58','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\n#\r\n# UserDir: The name of the directory that is appended onto a user&#039;s home\r\n# directory if a ~user request is received.\r\n#\r\n# The path to the end user account &#039;public_html&#039; directory must be\r\n# accessible to the webserver userid.  This usually means that ~userid\r\n# must have permissions of 711, ~userid/public_html must have permissions\r\n# of 755, and documents contained therein must be world-readable.\r\n# Otherwise, the client will only receive a &quot;403 Forbidden&quot; message.\r\n#\r\n&lt;IfModule mod_userdir.c&gt;\r\n    #\r\n    # UserDir is disabled by default since it can confirm the presence\r\n    # of a username on the system (depending on home directory\r\n    # permissions).\r\n    #\r\n    UserDir disabled\r\n    UserDir enabled user\r\n\r\n    #\r\n    # To enable requests to /~user/ to serve the user&#039;s public_html\r\n    # directory, remove the &quot;UserDir disabled&quot; line above, and uncomment\r\n    # the following line instead:\r\n    #\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n#\r\n# Control access to UserDir directories.  The following is an example\r\n# for a site where these directories are restricted to read-only.\r\n#\r\n&lt;Directory &quot;/home/*/public_html&quot;&gt;\r\n\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    Require all granted\r\n&lt;/Directory&gt;\r\n\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n\r\n# Apacheを起動する\r\nsystemctl restart httpd.service\r\nsystemctl enable httpd.service\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a></li>\r\n</ul>','CentOS7でmod_userdirを使用する','','publish','open','open','','centos7%e3%81%a7mod_userdir%e3%82%92%e4%bd%bf%e7%94%a8%e3%81%99%e3%82%8b','','','2016-01-12 15:53:31','2016-01-12 06:53:31','',0,'http://49.212.213.226/wordpress/solution-log/?p=1075',0,'post','',0),(1076,1,'2015-11-17 00:34:35','2015-11-16 15:34:35','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\nUserDir public_html\r\nUserDir disabled root\r\n\r\n# 特定のユーザーのみ許可する場合は\r\nUserDir disabled # 全てのユーザーを無許可にする\r\nUserDir enabled user # 部分的に許可する\r\n\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a><li>\r\n</ul>','CentOS7でmod_userdirを使用する','','inherit','closed','closed','','1075-revision-v1','','','2015-11-17 00:34:35','2015-11-16 15:34:35','',1075,'http://49.212.213.226/wordpress/solution-log/?p=1076',0,'revision','',0);
INSERT INTO `wp_posts` VALUES (1077,1,'2015-11-17 00:38:32','2015-11-16 15:38:32','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\nUserDir public_html\r\nUserDir disabled root\r\n\r\n# 特定のユーザーのみ許可する場合は\r\nUserDir disabled # 全てのユーザーを無許可にする\r\nUserDir enabled user # 部分的に許可する\r\n\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n\r\n# Apacheを起動する\r\nsystemctl restart httpd.service\r\nsystemctl enable httpd.service\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a><li>\r\n</ul>','CentOS7でmod_userdirを使用する','','inherit','closed','closed','','1075-revision-v1','','','2015-11-17 00:38:32','2015-11-16 15:38:32','',1075,'http://49.212.213.226/wordpress/solution-log/?p=1077',0,'revision','',0),(1078,1,'2015-11-17 00:38:58','2015-11-16 15:38:58','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\nUserDir public_html\r\nUserDir disabled root\r\n\r\n# 特定のユーザーのみ許可する場合は\r\nUserDir disabled # 全てのユーザーを無許可にする\r\nUserDir enabled user # 部分的に許可する\r\n\r\n\r\nvi /etc/httpd/conf/httpd.conf\r\n# mod_userdirを有効にする\r\n&lt;IfModule mod_userdir.c&gt;\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n# Directory /home/*/public_htmlを修正する\r\n&lt;Directory /home/*/public_html&gt;\r\n    AllowOverride All\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    &lt;Limit GET POST OPTIONS&gt;\r\n        Order allow,deny\r\n        Allow from all\r\n    &lt;/Limit&gt;\r\n    &lt;LimitExcept GET POST OPTIONS&gt;\r\n        Order deny,allow\r\n        Deny from all\r\n    &lt;/LimitExcept&gt;\r\n&lt;/Directory&gt;\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n\r\n# Apacheを起動する\r\nsystemctl restart httpd.service\r\nsystemctl enable httpd.service\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a></li>\r\n</ul>','CentOS7でmod_userdirを使用する','','inherit','closed','closed','','1075-revision-v1','','','2015-11-17 00:38:58','2015-11-16 15:38:58','',1075,'http://49.212.213.226/wordpress/solution-log/?p=1078',0,'revision','',0),(1080,1,'2015-11-17 22:18:29','2015-11-17 13:18:29','SSHのアクセスログを定期的に調べる必要がある。\r\n\r\n<h3>ログインが成功したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\n# アクセスが成功したログインを全て表示する\r\ngrep &quot;Accepted&quot; /var/log/secure*\r\n# もしくは\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{split($1, arr, &quot;:&quot;); print arr[2] $2 &quot; &quot; $3 &quot; &quot; $9 &quot; &quot; $11}&#039; \r\n\r\n# 順にホワイトリストを当ててみて不正アクセスが無いか確認する\r\n# 188.251.* はauのテザリング端末\r\n# 221.1.36.239は自宅のインターネットプロバイダ\r\n# 133.xxx.xxx.xxxは契約しているVPSサーバ\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{print $9 &quot; &quot; $11}&#039; | awk &#039;{sub(&#039;/182.251.*/&#039;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;222.1.36.239&quot;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;133.xxx.xxx.xxx&quot;, &quot;&quot;); print $0;}&#039;\r\n</pre>\r\n\r\n<h3>ログインが失敗したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\ngrep -E &quot;Failed|Invalid&quot; /var/log/secure*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.tkd55.net/blog/?p=915\" target=\"_blank\">アクセスログ解析（ssh編） | tkd55 blog</a></li>\r\n</ul>','awkでSSHアクセス履歴を調べる','','publish','open','open','','awk%e3%81%a7ssh%e3%82%a2%e3%82%af%e3%82%bb%e3%82%b9%e5%b1%a5%e6%ad%b4%e3%82%92%e8%aa%bf%e3%81%b9%e3%82%8b','','','2016-01-02 16:17:46','2016-01-02 07:17:46','',0,'http://49.212.213.226/wordpress/solution-log/?p=1080',0,'post','',0),(1081,1,'2015-11-17 22:17:48','2015-11-17 13:17:48','SSHのアクセスログを定期的に調べる必要がある。\r\n\r\n<h3>ログインが成功したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\n# アクセスが成功したログインを全て表示する\r\ngrep &quot;Accepted&quot; /var/log/secure*\r\n\r\n# 順にホワイトリストを当ててみて不正アクセスが無いか確認する\r\n# 188.251.* はauのテザリング端末\r\n# 221.1.36.239は自宅のインターネットプロバイダ\r\n# 133.xxx.xxx.xxxは契約しているVPSサーバ\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{print $9 &quot; &quot; $11}&#039; | awk &#039;{sub(&#039;/182.251.*/&#039;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;222.1.36.239&quot;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;133.xxx.xxx.xxx&quot;, &quot;&quot;); print $0;}&#039;\r\n</pre>\r\n\r\n<h3>ログインが失敗したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\ngrep -E “Failed|Invalid” /var/log/secure*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.tkd55.net/blog/?p=915\" target=\"_blank\">アクセスログ解析（ssh編） | tkd55 blog</a></li>\r\n</ul>','awkでSSHアクセス履歴を調べる','','inherit','closed','closed','','1080-revision-v1','','','2015-11-17 22:17:48','2015-11-17 13:17:48','',1080,'http://49.212.213.226/wordpress/solution-log/?p=1081',0,'revision','',0),(1082,1,'2015-11-17 22:20:24','2015-11-17 13:20:24','SSHのアクセスログを定期的に調べる必要がある。\r\n\r\n<h3>ログインが成功したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\n# アクセスが成功したログインを全て表示する\r\ngrep &quot;Accepted&quot; /var/log/secure*\r\n\r\n# 順にホワイトリストを当ててみて不正アクセスが無いか確認する\r\n# 188.251.* はauのテザリング端末\r\n# 221.1.36.239は自宅のインターネットプロバイダ\r\n# 133.xxx.xxx.xxxは契約しているVPSサーバ\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{print $9 &quot; &quot; $11}&#039; | awk &#039;{sub(&#039;/182.251.*/&#039;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;222.1.36.239&quot;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;133.xxx.xxx.xxx&quot;, &quot;&quot;); print $0;}&#039;\r\n</pre>\r\n\r\n<h3>ログインが失敗したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\ngrep -E &quot;Failed|Invalid&quot; /var/log/secure*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.tkd55.net/blog/?p=915\" target=\"_blank\">アクセスログ解析（ssh編） | tkd55 blog</a></li>\r\n</ul>','awkでSSHアクセス履歴を調べる','','inherit','closed','closed','','1080-revision-v1','','','2015-11-17 22:20:24','2015-11-17 13:20:24','',1080,'http://49.212.213.226/wordpress/solution-log/?p=1082',0,'revision','',0),(1084,1,'2015-11-17 22:59:06','2015-11-17 13:59:06','<h3>キーペアを作成する</h3>\r\n接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\n# 接続元端末で\r\nssh-keygen -t rsa\r\n\r\n# 接続先で\r\nmkdir ~/.ssh\r\nvi ~/.ssh/authorized_keys # 公開鍵を書き込む\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitRootLogin no\r\n\r\n# SSH のサービスを再起動\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\nPort XXXXX # 0～65535の間で設定\r\n\r\n# Firewallの設定を行う\r\nfirewall-cmd --permanent --add-port=XXXXX/tcp\r\nfirewall-cmd --reload\r\n\r\n# SSHの設定を反映する\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul></ul>','CentOS7でSSHを秘密鍵公開鍵を使って設定する','','publish','open','open','','centos7%e3%81%a7ssh%e3%82%92%e7%a7%98%e5%af%86%e9%8d%b5%e5%85%ac%e9%96%8b%e9%8d%b5%e3%82%92%e4%bd%bf%e3%81%a3%e3%81%a6%e8%a8%ad%e5%ae%9a%e3%81%99%e3%82%8b','','','2015-11-17 22:59:06','2015-11-17 13:59:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=1084',0,'post','',0),(1085,1,'2015-11-17 22:54:49','2015-11-17 13:54:49','<h3>キーペアを作成する</h3>\r\n接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\n# 接続元端末で\r\nssh-keygen -t rsa\r\n\r\nmkdir ~/.ssh\r\nvi ~/.ssh/authorized_keys # 公開鍵を書き込む\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitRootLogin no\r\n\r\n# SSH のサービスを再起動\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\nPort {sshport_number} # 0～65535の間で設定\r\n\r\n# Firewallの設定を行う\r\nfirewall-cmd --permanent --add-port{sshport_number}=/tcp\r\nfirewall-cmd --reload\r\n\r\n# SSHの設定を反映する\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul></ul>','CentOS7でSSHを秘密鍵公開鍵を使って設定する','','inherit','closed','closed','','1084-revision-v1','','','2015-11-17 22:54:49','2015-11-17 13:54:49','',1084,'http://49.212.213.226/wordpress/solution-log/?p=1085',0,'revision','',0),(1086,1,'2015-11-17 22:55:23','2015-11-17 13:55:23','<h3>キーペアを作成する</h3>\r\n接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\n# 接続元端末で\r\nssh-keygen -t rsa\r\n\r\n# 接続先で\r\nmkdir ~/.ssh\r\nvi ~/.ssh/authorized_keys # 公開鍵を書き込む\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitRootLogin no\r\n\r\n# SSH のサービスを再起動\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\nPort {sshport_number} # 0～65535の間で設定\r\n\r\n# Firewallの設定を行う\r\nfirewall-cmd --permanent --add-port{sshport_number}=/tcp\r\nfirewall-cmd --reload\r\n\r\n# SSHの設定を反映する\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul></ul>','CentOS7でSSHを秘密鍵公開鍵を使って設定する','','inherit','closed','closed','','1084-revision-v1','','','2015-11-17 22:55:23','2015-11-17 13:55:23','',1084,'http://49.212.213.226/wordpress/solution-log/?p=1086',0,'revision','',0),(1087,1,'2015-11-17 22:59:06','2015-11-17 13:59:06','<h3>キーペアを作成する</h3>\r\n接続元の端末でキーペアを作成する。作成した公開鍵を接続サーバの接続アカウントに置く。SSH接続時は <strong>.sshディレクトリ</strong> のアクセス権限は<strong>700</strong>、公開鍵、秘密鍵は<strong>600</strong>にしておかないとエラーになる。\r\n<pre class=\"brush: bash\">\r\n# 接続元端末で\r\nssh-keygen -t rsa\r\n\r\n# 接続先で\r\nmkdir ~/.ssh\r\nvi ~/.ssh/authorized_keys # 公開鍵を書き込む\r\nchmod 700 ~/.ssh\r\nchmod 600 ~/.ssh/authorized_keys\r\n</pre>\r\n\r\n<h3>ログイン設定をする</h3>\r\nパスワードでログイン出来ないようにし、秘密鍵のみでログイン出きるように変更する\r\n<pre class=\"brush: bash\">vi /etc/ssh/sshd_config\r\n\r\n# 以下の行のコメントを外して保存\r\nPubkeyAuthentication yes\r\nPasswordAuthentication no\r\nPermitRootLogin no\r\n\r\n# SSH のサービスを再起動\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>SSHの接続ポートを変更する</h3>\r\nディフォルトだとポート番号22番からの接続をSSH接続ポートとして設定してある。このままだとボットからの攻撃があり余分にリソースが喰われる可能性があるのでポート番号を変更しておく。\r\n<pre class=\"brush: bash\">\r\nvi /etc/ssh/sshd_config\r\n\r\nPort XXXXX # 0～65535の間で設定\r\n\r\n# Firewallの設定を行う\r\nfirewall-cmd --permanent --add-port=XXXXX/tcp\r\nfirewall-cmd --reload\r\n\r\n# SSHの設定を反映する\r\nsystemctl restart sshd.service\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul></ul>','CentOS7でSSHを秘密鍵公開鍵を使って設定する','','inherit','closed','closed','','1084-revision-v1','','','2015-11-17 22:59:06','2015-11-17 13:59:06','',1084,'http://49.212.213.226/wordpress/solution-log/?p=1087',0,'revision','',0),(1088,1,'2015-11-18 01:14:59','2015-11-17 16:14:59','<h3>圧縮する</h3>\r\n<pre class=\"brush: bash\">\r\n# tar (指定したファイル郡を一つのアーカイブファイルにまとめる)\r\ntar cfv files.tar files/\r\n\r\n# tar + gzip\r\ntar cfvz files.tar.gz files/\r\n</pre>\r\n\r\n<h3>解凍する</h3>\r\n<pre class=\"brush: bash\">\r\n# tar (tarアーカイブを展開)\r\ntar xfv files.tar\r\n\r\n# tar + gzip\r\ntar xfvz files.tar.gz \r\n</pre>','Linuxでtarで解凍圧縮する','','publish','open','open','','linux%e3%81%a7tar%e3%81%a7%e8%a7%a3%e5%87%8d%e5%9c%a7%e7%b8%ae%e3%81%99%e3%82%8b','','','2015-11-27 20:40:20','2015-11-27 11:40:20','',0,'http://49.212.213.226/wordpress/solution-log/?p=1088',0,'post','',0),(1089,1,'2015-11-18 01:10:36','2015-11-17 16:10:36','<h3>圧縮する</h3>\r\n<pre class=\"brush: bash\">\r\ntar zcvf files.tar.gz files/\r\n</pre>\r\n\r\n<h3>解凍する</h3>\r\n<pre class=\"brush: bash\">\r\ntar zxvf files.tar.gz \r\n</pre>','Linuxでtarで解凍圧縮する','','inherit','closed','closed','','1088-revision-v1','','','2015-11-18 01:10:36','2015-11-17 16:10:36','',1088,'http://49.212.213.226/wordpress/solution-log/?p=1089',0,'revision','',0),(1091,1,'2015-11-27 20:38:21','2015-11-27 11:38:21','<h3>圧縮する</h3>\n<pre class=\"brush: bash\">\n\n# tar\ntar cfvz files.tar.gz files/\n</pre>\n\n<h3>解凍する</h3>\n<pre class=\"brush: bash\">\ntar xfvz files.tar.gz \n</pre>','Linuxでtarで解凍圧縮する','','inherit','closed','closed','','1088-autosave-v1','','','2015-11-27 20:38:21','2015-11-27 11:38:21','',1088,'http://49.212.213.226/wordpress/solution-log/?p=1091',0,'revision','',0),(1092,1,'2015-11-27 20:40:20','2015-11-27 11:40:20','<h3>圧縮する</h3>\r\n<pre class=\"brush: bash\">\r\n# tar (指定したファイル郡を一つのアーカイブファイルにまとめる)\r\ntar cfv files.tar files/\r\n\r\n# tar + gzip\r\ntar cfvz files.tar.gz files/\r\n</pre>\r\n\r\n<h3>解凍する</h3>\r\n<pre class=\"brush: bash\">\r\n# tar (tarアーカイブを展開)\r\ntar xfv files.tar\r\n\r\n# tar + gzip\r\ntar xfvz files.tar.gz \r\n</pre>','Linuxでtarで解凍圧縮する','','inherit','closed','closed','','1088-revision-v1','','','2015-11-27 20:40:20','2015-11-27 11:40:20','',1088,'http://49.212.213.226/wordpress/solution-log/?p=1092',0,'revision','',0),(1093,1,'2015-12-01 23:37:59','2015-12-01 14:37:59','想定される環境\r\nOS: CentOS7\r\nApache: 2.4系\r\n\r\n<h3>mod_encodingをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# httpd-develインストール\r\nyum -y install httpd-devel\r\n\r\n# mod_encodingをダウンロード\r\nwget http://webdav.todo.gr.jp/download/mod_encoding-20021209.tar.gz\r\n\r\n# Apache2版mod_encodingダウンロード\r\nwget http://webdav.todo.gr.jp/download/experimental/mod_encoding.c.apache2.20040616\r\n\r\n# Apache2版mod_encodingに差し替え\r\ntar zxvf mod_encoding-20021209.tar.gz\r\n/bin/mv mod_encoding.c.apache2.20040616 mod_encoding-20021209/mod_encoding.c\r\n\r\n# iconv-hookライブラリインストール\r\ncd mod_encoding-20021209/lib\r\n./configure &amp;&amp; make &amp;&amp; make install\r\n\r\n# ※Namazuの検索文字列の文字化け対処\r\ncd ..\r\n\r\n# mod_encodingパッチダウンロード\r\nwget http://www.aconus.com/~oyaji/faq/mod_encoding.c-apache2.2-20060520.patch　\r\n\r\n# mod_encodingパッチ施工\r\npatch -p0 &lt; mod_encoding.c-apache2.2-20060520.patch\r\n\r\n# Makefile作成\r\n# Apache2.4はapxsのパスが「/usr/bin/apxs」なので注意!\r\n./configure --with-apxs=/usr/bin/apxs --with-iconv-hook\r\n\r\n# Makefile編集\r\nvi Makefile\r\n##############################\r\nLIBS =  -liconv_hook\r\n↓\r\nLIBS = -L/usr/local/lib -liconv_hook\r\n\r\ninstall-exec-local:\r\n        $(APXS) -i mod_encoding.so\r\n        ↓\r\n(Tab)   $(APXS) -i -a -n encoding mod_encoding.la\r\n#####################################\r\n\r\n# mod_encodingインストール\r\nmake &amp;&amp; make install　←　\r\n\r\n# mod_encoding展開先ディレクトリおよびダウンロードファイルを削除\r\ncd　..\r\nrm -rf mod_encoding-20021209\r\nrm -f mod_encoding-20021209.tar.gz\r\n</pre>\r\n\r\n<h3>mod_encodingの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\n# mod_encodingが動的に読み込まれているか確認\r\nhttpd -M | grep encoding_module\r\n\r\nvi /etc/httpd/conf.d/mod_encoding.conf\r\n\r\n&lt;IfModule mod_encoding.c&gt;\r\n    EncodingEngine on\r\n    SetServerEncoding UTF-8\r\n    DefaultClientEncoding JA-AUTO-SJIS-MS SJIS\r\n    AddClientEncoding &quot;cadaver/&quot; EUC-JP\r\n&lt;/IfModule&gt;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://centossrv.com/webdav.shtml\" target=\"_blank\">Webフォルダサーバー構築(WebDAV) - CentOSで自宅サーバー構築</a>\r\n</li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/php-install.html\" target=\"_blank\">CentOS7.1 64bitにPHP5.6.10をRPMからインストール | kakiro-web カキローウェブ</a></li>\r\n\r\n</ul>','CentOS7でmod_encodingを利用する','','publish','open','open','','centos7%e3%81%a7mod_encoding%e3%82%92%e5%88%a9%e7%94%a8%e3%81%99%e3%82%8b','','','2015-12-01 23:37:59','2015-12-01 14:37:59','',0,'http://49.212.213.226/wordpress/solution-log/?p=1093',0,'post','',0),(1094,1,'2015-12-01 23:36:34','2015-12-01 14:36:34','想定される環境\r\nOS: CentOS7\r\nApache: 2.4系\r\n\r\n<h3>mod_encodingをインストールする</h3>\r\n\r\n# httpd-develインストール\r\nyum -y install httpd-devel\r\n\r\n# mod_encodingをダウンロード\r\nwget http://webdav.todo.gr.jp/download/mod_encoding-20021209.tar.gz\r\n\r\n# Apache2版mod_encodingダウンロード\r\nwget http://webdav.todo.gr.jp/download/experimental/mod_encoding.c.apache2.20040616\r\n\r\n# Apache2版mod_encodingに差し替え\r\ntar zxvf mod_encoding-20021209.tar.gz\r\n/bin/mv mod_encoding.c.apache2.20040616 mod_encoding-20021209/mod_encoding.c\r\n\r\n# iconv-hookライブラリインストール\r\ncd mod_encoding-20021209/lib\r\n./configure && make && make install\r\n\r\n# ※Namazuの検索文字列の文字化け対処\r\ncd ..\r\n\r\n# mod_encodingパッチダウンロード\r\nwget http://www.aconus.com/~oyaji/faq/mod_encoding.c-apache2.2-20060520.patch　\r\n\r\n# mod_encodingパッチ施工\r\npatch -p0 < mod_encoding.c-apache2.2-20060520.patch\r\n\r\n# Makefile作成\r\n# Apache2.4はapxsのパスが「/usr/bin/apxs」なので注意!\r\n./configure --with-apxs=/usr/bin/apxs --with-iconv-hook\r\n\r\n# Makefile編集\r\nvi Makefile\r\n##############################\r\nLIBS =  -liconv_hook\r\n↓\r\nLIBS = -L/usr/local/lib -liconv_hook\r\n\r\ninstall-exec-local:\r\n        $(APXS) -i mod_encoding.so\r\n        ↓\r\n(Tab)   $(APXS) -i -a -n encoding mod_encoding.la\r\n#####################################\r\n\r\n# mod_encodingインストール\r\nmake && make install　←　\r\n\r\n# mod_encoding展開先ディレクトリおよびダウンロードファイルを削除\r\ncd　..\r\nrm -rf mod_encoding-20021209\r\nrm -f mod_encoding-20021209.tar.gz\r\n\r\n\r\n<h3>mod_encodingの設定をする</h3>\r\n\r\n# mod_encodingが動的に読み込まれているか確認\r\nhttpd -M | grep encoding_module\r\n\r\nvi /etc/httpd/conf.d/mod_encoding.conf\r\n\r\n<IfModule mod_encoding.c>\r\n    EncodingEngine on\r\n    SetServerEncoding UTF-8\r\n    DefaultClientEncoding JA-AUTO-SJIS-MS SJIS\r\n    AddClientEncoding \"cadaver/\" EUC-JP\r\n</IfModule>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://centossrv.com/webdav.shtml\" target=\"_blank\">Webフォルダサーバー構築(WebDAV) - CentOSで自宅サーバー構築</a>\r\n</li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/php-install.html\" target=\"_blank\">CentOS7.1 64bitにPHP5.6.10をRPMからインストール | kakiro-web カキローウェブ</a></li>\r\n\r\n</ul>','CentOS7でmod_encodingを利用する','','inherit','closed','closed','','1093-revision-v1','','','2015-12-01 23:36:34','2015-12-01 14:36:34','',1093,'http://49.212.213.226/wordpress/solution-log/?p=1094',0,'revision','',0),(1095,1,'2015-12-01 23:37:44','2015-12-01 14:37:44','想定される環境\r\nOS: CentOS7\r\nApache: 2.4系\r\n\r\n<h3>mod_encodingをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# httpd-develインストール\r\nyum -y install httpd-devel\r\n\r\n# mod_encodingをダウンロード\r\nwget http://webdav.todo.gr.jp/download/mod_encoding-20021209.tar.gz\r\n\r\n# Apache2版mod_encodingダウンロード\r\nwget http://webdav.todo.gr.jp/download/experimental/mod_encoding.c.apache2.20040616\r\n\r\n# Apache2版mod_encodingに差し替え\r\ntar zxvf mod_encoding-20021209.tar.gz\r\n/bin/mv mod_encoding.c.apache2.20040616 mod_encoding-20021209/mod_encoding.c\r\n\r\n# iconv-hookライブラリインストール\r\ncd mod_encoding-20021209/lib\r\n./configure &amp;&amp; make &amp;&amp; make install\r\n\r\n# ※Namazuの検索文字列の文字化け対処\r\ncd ..\r\n\r\n# mod_encodingパッチダウンロード\r\nwget http://www.aconus.com/~oyaji/faq/mod_encoding.c-apache2.2-20060520.patch　\r\n\r\n# mod_encodingパッチ施工\r\npatch -p0 &lt; mod_encoding.c-apache2.2-20060520.patch\r\n\r\n# Makefile作成\r\n# Apache2.4はapxsのパスが「/usr/bin/apxs」なので注意!\r\n./configure --with-apxs=/usr/bin/apxs --with-iconv-hook\r\n\r\n# Makefile編集\r\nvi Makefile\r\n##############################\r\nLIBS =  -liconv_hook\r\n↓\r\nLIBS = -L/usr/local/lib -liconv_hook\r\n\r\ninstall-exec-local:\r\n        $(APXS) -i mod_encoding.so\r\n        ↓\r\n(Tab)   $(APXS) -i -a -n encoding mod_encoding.la\r\n#####################################\r\n\r\n# mod_encodingインストール\r\nmake &amp;&amp; make install　←　\r\n\r\n# mod_encoding展開先ディレクトリおよびダウンロードファイルを削除\r\ncd　..\r\nrm -rf mod_encoding-20021209\r\nrm -f mod_encoding-20021209.tar.gz\r\n</pre>\r\n\r\n<h3>mod_encodingの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\n# mod_encodingが動的に読み込まれているか確認\r\nhttpd -M | grep encoding_module\r\n\r\nvi /etc/httpd/conf.d/mod_encoding.conf\r\n\r\n&lt;IfModule mod_encoding.c&gt;\r\n    EncodingEngine on\r\n    SetServerEncoding UTF-8\r\n    DefaultClientEncoding JA-AUTO-SJIS-MS SJIS\r\n    AddClientEncoding &quot;cadaver/&quot; EUC-JP\r\n&lt;/IfModule&gt;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://centossrv.com/webdav.shtml\" target=\"_blank\">Webフォルダサーバー構築(WebDAV) - CentOSで自宅サーバー構築</a>\r\n</li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/php-install.html\" target=\"_blank\">CentOS7.1 64bitにPHP5.6.10をRPMからインストール | kakiro-web カキローウェブ</a></li>\r\n\r\n</ul>','CentOS7でmod_encodingを利用する','','inherit','closed','closed','','1093-revision-v1','','','2015-12-01 23:37:44','2015-12-01 14:37:44','',1093,'http://49.212.213.226/wordpress/solution-log/?p=1095',0,'revision','',0),(1096,1,'2015-12-02 01:15:05','2015-12-01 16:15:05','Windowsで作成したzipアーカイブは通常のCentOS7だと解凍出来ないのでPerlを使う\r\n\r\n<h3>Archive::Zipをインストールする</h3>\r\nCPAN経由だとパスが通らないのでyumを使う\r\n<pre class=\"brush: bash\">\r\nyum install perl-Archive-Zip\r\n</pre>\r\n<h3>zipアーカイブを解凍する</h3>\r\nアーカイブを解凍するためのPerlスクリプトを作成する\r\n<pre class=\"brush: bash\">\r\nvi unzip-sjis.pl\r\n\r\n##################################\r\n#!/usr/bin/perl\r\nuse strict;\r\nuse warnings;\r\nuse Archive::Zip;\r\nuse Encode;\r\n\r\nif (@ARGV != 1) {\r\n  die &quot;usage: $0 ZIPFILE\\n&quot;;\r\n}\r\nmy $zipfile = shift;\r\nif (! -e $zipfile) {\r\n  die &quot;$zipfile don&#039;t exist\\n&quot;;\r\n} \r\nmy $zip=Archive::Zip-&gt;new($zipfile);\r\nmy @items = $zip-&gt;memberNames();\r\nmy $utf8name;\r\nforeach (@items) {\r\n  my $utf8name = $_;\r\n  Encode::from_to($utf8name, &#039;cp932&#039;, &#039;utf-8&#039;);\r\n  print &quot;extract : $utf8name\\n&quot;;\r\n  $zip-&gt;extractMember($_, $utf8name);\r\n}\r\n#####################\r\n\r\n# ファイルを解凍する\r\n./unzip-sjis.pl windows-zip-archive.zip\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linux.just4fun.biz/CentOS/CentOS%E3%81%A7Windows%E3%81%AE%E3%82%B7%E3%83%95%E3%83%88JIS%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E5%90%AB%E3%82%80zip%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A7%A3%E5%87%8D%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95.html\" target=\"_blank\">CentOS/CentOSでWindowsのシフトJISファイル名を含むzipファイルを解凍する方法 - Linuxと過ごす</a></li>\r\n	<li><a href=\"http://www.ohoclick.com/archives/44\" target=\"_blank\">Perl関係のモジュールをyumインストール | 実験酒場</a></li>\r\n\r\n</ul>','CentOS7でWindows Zipアーカイブを解凍する','','publish','open','open','','centos7%e3%81%a7windows-zip%e3%82%a2%e3%83%bc%e3%82%ab%e3%82%a4%e3%83%96%e3%82%92%e8%a7%a3%e5%87%8d%e3%81%99%e3%82%8b','','','2015-12-02 01:15:05','2015-12-01 16:15:05','',0,'http://49.212.213.226/wordpress/solution-log/?p=1096',0,'post','',0),(1097,1,'2015-12-02 01:14:52','2015-12-01 16:14:52','Windowsで作成したzipアーカイブは通常のCentOS7だと解凍出来ないのでPerlを使う\r\n\r\n<h3>Archive::Zipをインストールする</h3>\r\nCPAN経由だとパスが通らないのでyumを使う\r\n<pre class=\"brush: bash\">\r\nyum install perl-Archive-Zip\r\n</pre>\r\n<h3>zipアーカイブを解凍する</h3>\r\nアーカイブを解凍するためのPerlスクリプトを作成する\r\n<pre class=\"brush: bash\">\r\nvi unzip-sjis.pl\r\n\r\n##################################\r\n#!/usr/bin/perl\r\nuse strict;\r\nuse warnings;\r\nuse Archive::Zip;\r\nuse Encode;\r\n\r\nif (@ARGV != 1) {\r\n  die &quot;usage: $0 ZIPFILE\\n&quot;;\r\n}\r\nmy $zipfile = shift;\r\nif (! -e $zipfile) {\r\n  die &quot;$zipfile don&#039;t exist\\n&quot;;\r\n} \r\nmy $zip=Archive::Zip-&gt;new($zipfile);\r\nmy @items = $zip-&gt;memberNames();\r\nmy $utf8name;\r\nforeach (@items) {\r\n  my $utf8name = $_;\r\n  Encode::from_to($utf8name, &#039;cp932&#039;, &#039;utf-8&#039;);\r\n  print &quot;extract : $utf8name\\n&quot;;\r\n  $zip-&gt;extractMember($_, $utf8name);\r\n}\r\n#####################\r\n\r\n# ファイルを解凍する\r\n./unzip-sjis.pl windows-zip-archive.zip\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linux.just4fun.biz/CentOS/CentOS%E3%81%A7Windows%E3%81%AE%E3%82%B7%E3%83%95%E3%83%88JIS%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E5%90%8D%E3%82%92%E5%90%AB%E3%82%80zip%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%92%E8%A7%A3%E5%87%8D%E3%81%99%E3%82%8B%E6%96%B9%E6%B3%95.html\" target=\"_blank\">CentOS/CentOSでWindowsのシフトJISファイル名を含むzipファイルを解凍する方法 - Linuxと過ごす</a></li>\r\n	<li><a href=\"http://www.ohoclick.com/archives/44\" target=\"_blank\">Perl関係のモジュールをyumインストール | 実験酒場</a></li>\r\n\r\n</ul>','CentOS7でWindows Zipアーカイブを解凍する','','inherit','closed','closed','','1096-revision-v1','','','2015-12-02 01:14:52','2015-12-01 16:14:52','',1096,'http://49.212.213.226/wordpress/solution-log/?p=1097',0,'revision','',0),(1099,1,'2015-12-12 14:44:21','2015-12-12 05:44:21','<h3 class=\"widget-title\">カテゴリー</h3>		<ul>\r\n	<li class=\"cat-item cat-item-5\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=5\">Apache</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-79\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=79\">awk</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-84\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=84\">CentOS6</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-85\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=85\">CentOS7</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-67\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=67\">Chrome</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-74\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=74\">Chromium</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-9\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=9\">Eclipse</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-60\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=60\">EPEL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-19\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=19\">FastCGI</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-82\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=82\">ffmpeg</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-49\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=49\">FileZilla</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-62\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=62\">FireFox</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-91\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=91\">FTP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-33\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=33\">GIMP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-38\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=38\">Git</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-81\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=81\">ImageMagic</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-80\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=80\">iPhone</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-41\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=41\">JavaScript</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-8\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=8\">Jenkins</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-75\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=75\">LibreOffice</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-34\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=34\">Linuxコマンド</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-12\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=12\">MySQL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-90\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=90\">PDF</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-52\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=52\">PEAR</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-40\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=40\">PECL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-35\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=35\">Perl</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-10\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=10\">PHP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-54\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=54\">phpMyAdmin</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-45\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=45\">PHPUnit</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-83\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=83\">Poderosa</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-92\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=92\">rar</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-47\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=47\">Redmine</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-59\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=59\">Remi</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-28\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=28\">Ruby</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-24\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=24\">SSH</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-48\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=48\">Subversion</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-50\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=50\">Trac</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-94\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=94\">unzip</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-77\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=77\">vagrant</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-76\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=76\">Virtual Box</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-58\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=58\">VMware Player</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-63\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=63\">VNC</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-39\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=39\">Windows XP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-57\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=57\">Windwos 7</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-29\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=29\">WordPress</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-36\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=36\">XAMPP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-3\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=3\">さくらのVPS</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-51\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=51\">さくらのスタンダード</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-61\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=61\">シェルスクリプト</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-42\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=42\">スマートフォン</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-56\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=56\">セキュリティ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-32\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=32\">メモ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-78\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=78\">モニター解像度</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-1\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=1\">未分類</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-43\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=43\">開発メモ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-16\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=16\">開発支援ツール</a>\r\n</li>\r\n		</ul>\r\n','カテゴリー','','publish','closed','closed','','%e3%82%ab%e3%83%86%e3%82%b4%e3%83%aa%e3%83%bc','','','2015-12-12 14:44:21','2015-12-12 05:44:21','',0,'http://49.212.213.226/wordpress/solution-log/?page_id=1099',0,'page','',0),(1100,1,'2015-12-12 14:44:06','2015-12-12 05:44:06','<h3 class=\"widget-title\">カテゴリー</h3>		<ul>\r\n	<li class=\"cat-item cat-item-5\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=5\">Apache</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-79\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=79\">awk</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-84\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=84\">CentOS6</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-85\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=85\">CentOS7</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-67\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=67\">Chrome</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-74\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=74\">Chromium</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-9\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=9\">Eclipse</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-60\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=60\">EPEL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-19\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=19\">FastCGI</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-82\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=82\">ffmpeg</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-49\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=49\">FileZilla</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-62\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=62\">FireFox</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-91\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=91\">FTP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-33\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=33\">GIMP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-38\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=38\">Git</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-81\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=81\">ImageMagic</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-80\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=80\">iPhone</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-41\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=41\">JavaScript</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-8\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=8\">Jenkins</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-75\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=75\">LibreOffice</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-34\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=34\">Linuxコマンド</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-12\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=12\">MySQL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-90\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=90\">PDF</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-52\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=52\">PEAR</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-40\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=40\">PECL</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-35\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=35\">Perl</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-10\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=10\">PHP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-54\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=54\">phpMyAdmin</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-45\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=45\">PHPUnit</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-83\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=83\">Poderosa</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-92\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=92\">rar</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-47\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=47\">Redmine</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-59\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=59\">Remi</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-28\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=28\">Ruby</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-24\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=24\">SSH</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-48\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=48\">Subversion</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-50\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=50\">Trac</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-94\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=94\">unzip</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-77\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=77\">vagrant</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-76\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=76\">Virtual Box</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-58\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=58\">VMware Player</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-63\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=63\">VNC</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-39\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=39\">Windows XP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-57\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=57\">Windwos 7</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-29\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=29\">WordPress</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-36\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=36\">XAMPP</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-3\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=3\">さくらのVPS</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-51\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=51\">さくらのスタンダード</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-61\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=61\">シェルスクリプト</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-42\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=42\">スマートフォン</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-56\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=56\">セキュリティ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-32\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=32\">メモ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-78\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=78\">モニター解像度</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-1\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=1\">未分類</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-43\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=43\">開発メモ</a>\r\n</li>\r\n	<li class=\"cat-item cat-item-16\"><a href=\"http://49.212.213.226/wordpress/solution-log/?cat=16\">開発支援ツール</a>\r\n</li>\r\n		</ul>\r\n','カテゴリー','','inherit','closed','closed','','1099-revision-v1','','','2015-12-12 14:44:06','2015-12-12 05:44:06','',1099,'http://49.212.213.226/wordpress/solution-log/?p=1100',0,'revision','',0),(1101,1,'2015-12-16 19:00:23','2015-12-16 10:00:23','<h3>移設側でリポジトリのリストを作成する</h3>\r\n<pre class=\"brush: bash\">\r\nls /var/git -l | grep ^d | awk &#039;{print $9}&#039; &gt; git.list.txt\r\n</pre>\r\n\r\n<h3>移設先で共有ベアリポジトリを作成する</h3>\r\n<pre class=\"brush: bash\">\r\n# 「git.list.txt」を取得しておく\r\n\r\ncd /var/git\r\nwhile read line; do mkdir $line; cd $line; git init --bare --shared; cd /var/git; done &lt; git.list.txt\r\n</pre>\r\n\r\n<h3>移設元から移設先へリポジトリをpushする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/git\r\nwhile read line; do if [ -d ${line} ]; then cd ${line}; git push --mirror ssh://git@{git-server}:{port}/var/git/${line}; fi; cd /var/git; done &lt; git.list.txt\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97\">Git - サーバーのセットアップ</a></li>\r\n\r\n</ul>','Gitリポジトリを移設する','','publish','open','open','','git%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%82%92%e7%a7%bb%e8%a8%ad%e3%81%99%e3%82%8b','','','2015-12-16 19:00:23','2015-12-16 10:00:23','',0,'http://49.212.213.226/wordpress/solution-log/?p=1101',0,'post','',0),(1102,1,'2015-12-16 18:56:32','2015-12-16 09:56:32','<h3>移設側でリポジトリのリストを作成する</h3>\r\n<pre class=\"brush: bash\">\r\nls /var/git -l | grep ^d | awk &#039;{print $9}&#039; &gt; git.list.txt\r\n</pre>\r\n\r\n<h3>移設先で共有ベアリポジトリを作成する</h3>\r\n<pre class=\"brush: bash\">\r\n# 「git.list.txt」を取得しておく\r\n\r\ncd /var/git\r\nwhile read line; do mkdir $line; cd $line; git init --bare --shared; cd /var/git; done &lt; git.list.txt\r\n</pre>\r\n\r\n<h3>移設元から移設先へリポジトリをpushする</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/git\r\nwhile read line; do if [ -d ${line} ]; then cd ${line}; git push --mirror ssh://git@{git-server}:{port}/var/git/${line}; fi; cd /var/git; done &lt; git.list.txt\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC-%E3%82%B5%E3%83%BC%E3%83%90%E3%83%BC%E3%81%AE%E3%82%BB%E3%83%83%E3%83%88%E3%82%A2%E3%83%83%E3%83%97\">Git - サーバーのセットアップ</a></li>\r\n\r\n</ul>','Gitリポジトリを移設する','','inherit','closed','closed','','1101-revision-v1','','','2015-12-16 18:56:32','2015-12-16 09:56:32','',1101,'http://49.212.213.226/wordpress/solution-log/?p=1102',0,'revision','',0),(1103,1,'2015-12-16 19:54:36','2015-12-16 10:54:36','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\ngit clone https://github.com/WordPress/WordPress.git\r\nmv WordPress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<pre class=\"brush: bash\">\r\n# MySQLデータをダンプする\r\nmysqldump -u {wp-db-user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &gt; /tmp/wp_database.sql\r\n\r\n# ベースとなるURLを書き換える\r\nsed &#039;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&#039; /tmp/wp_database.sql &gt; /tmp/wp_database.sql2\r\n</pre>\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','inherit','closed','closed','','199-revision-v1','','','2015-12-16 19:54:36','2015-12-16 10:54:36','',199,'http://49.212.213.226/wordpress/solution-log/?p=1103',0,'revision','',0),(1104,1,'2015-12-16 22:26:34','2015-12-16 13:26:34','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\ngit clone https://github.com/WordPress/WordPress.git\r\nmv WordPress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<pre class=\"brush: bash\">\r\n# 一覧でWordPress用のデータベースを確認する\r\nSHOW DATABASES;\r\n\r\n# 登録されているユーザを確認する\r\nSELECT user, host FROM mysql.user;\r\n\r\n# WordPress用データベースのユーザーを確認する\r\nSHOW GRANTS for &#039;user&#039;@&#039;host&#039;;\r\n\r\n# MySQLデータをダンプする\r\nmysqldump -u {user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &gt; /tmp/wp_database.sql\r\n\r\n# ベースとなるURLを書き換える\r\nsed &#039;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&#039; /tmp/wp_database.sql &gt; /tmp/wp_database.sql2\r\n</pre>\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','inherit','closed','closed','','199-revision-v1','','','2015-12-16 22:26:34','2015-12-16 13:26:34','',199,'http://49.212.213.226/wordpress/solution-log/?p=1104',0,'revision','',0),(1105,1,'2015-12-17 20:28:51','2015-12-17 11:28:51','WordPressをIPアドレス規制をかけてアクセスさせるように設定しようと思い、.htaccessにアクセス可能IPアドレスを記述。しかし困った事に直前にWordPressで使われていた.htaccessファイルを上書きしてしまい、WordPressが制御不能になってしまった。仕方ないのでWordPressのインストールディレクトリを変更して再構築を試みる。\r\n<h3>新しいWordPressをインストールする</h3>\r\nターミナルからインストール先のサーバに接続。\r\n<pre class=\"brush: bash\">\r\ncd /path/to/wordpressfolder\r\ngit clone https://github.com/WordPress/WordPress.git\r\nmv WordPress blogfolder\r\n</pre>\r\n<h3>WordPressの初期設定を行う</h3>\r\nWordPressのトップディレクトリにアクセスすると必要情報を入力するように促される。この時移行元のWordPressと移行先のWordPressで<b>ユーザー名、パスワード、メールアドレスを同一にしておく</b>こと。ユーザー名、パスワード、メールアドレス等の変更が必要な場合は、<b>移設完了後</b>に行う。\r\n\r\n<h3>データベースを移行する</h3>\r\n移動元のWordPressのデータフォルダから<b>optionsを除いたテーブルを移動させる</b>。基本的にoptionsテーブルはWordPress毎の設定になるので、新規で立ち上げたWordPressに使用しても、設定は反映されない。またダンプしたSQLファイルの中に旧WordPressのURLが含まれる場合は、新WordPressのURLに書き換えておくこと!\r\n\r\n<h4>移設元サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\n# 一覧でWordPress用のデータベースを確認する\r\nSHOW DATABASES;\r\n\r\n# 登録されているユーザを確認する\r\nSELECT user, host FROM mysql.user;\r\n\r\n# WordPress用データベースのユーザーを確認する\r\nSHOW GRANTS for &amp;#039;user&amp;#039;@&amp;#039;host&amp;#039;;\r\n\r\n# MySQLデータをダンプする\r\nmysqldump -u {user} --opt --password={xxxxxxxx} --add-drop-table {wp_database} wp_commentmeta wp_comments wp_links wp_postmeta wp_posts wp_terms wp_term_relationships wp_term_taxonomy wp_usermeta wp_users &gt; /tmp/wp_database.sql\r\n\r\n# ベースとなるURLを書き換える\r\nsed &#039;s|http://{移設元サーバWordPressインストールディレクトリ}|http://{移設先サーバWordPressインストールディレクトリ}|g&#039; /tmp/wp_database.sql &gt; /tmp/wp_database.sql2\r\n</pre>\r\n\r\n<h4>移設先サーバ側</h4>\r\n<pre class=\"brush: bash\">\r\nmysql -uroot -p\r\nMariaDB [(none)]&gt; create database wp_database default character set utf8;\r\nMariaDB [(none)]&gt; grant all on wp_user.* to wp_user@localhost identified by &#039;********&#039;;\r\nMariaDB [(none)]&gt; flush privileges;\r\nMariaDB [(none)]&gt; exit;\r\n\r\nmysql -u root -pXXXXXXXX wp_database &lt; wp_database.sql\r\n</pre>\r\n\r\n<h3>テーマを移行する</h3>\r\nWordPressが完全に立ち上がった状態で旧サーバで使っていたテーマを「<strong>wp-content/thmemes</strong>」へコピーする。themesは上書きしない。もし上書きして新しいWordPressに古いWordPressのテーマがインストールされていない場合表示エラーになる。\r\n\r\n<h3>ファイルを移行する</h3>\r\n旧サーバで使っていたファイルを「<strong>wp-content/</strong>」へコピーする。\r\n\r\n<h3>プラグインなどの移動</h3>\r\n今回はちょっと不安があったので全部手動で行った。\r\n\r\n<h3>パーマメントリンク設定を変更する</h3>\r\nタグやカテゴリが有効にならないので旧WordPressで使用していたものと同じにする','WordPressの引越し','','inherit','closed','closed','','199-revision-v1','','','2015-12-17 20:28:51','2015-12-17 11:28:51','',199,'http://49.212.213.226/wordpress/solution-log/2015/12/17/199-revision-v1/',0,'revision','',0),(1106,1,'2015-12-20 04:05:22','2015-12-19 19:05:22','Dockerにコンテナ名だけ表示するコマンドがないのでawkを使う\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR == 2 {print $NF}&#039;\r\n\r\n# NR == 2は2行目、$NFは最後の列\r\n</pre>','Dockerでコンテナの名前を調べる','','publish','closed','closed','','docker%e3%81%a7%e3%82%b3%e3%83%b3%e3%83%86%e3%83%8a%e3%81%ae%e5%90%8d%e5%89%8d%e3%82%92%e8%aa%bf%e3%81%b9%e3%82%8b','','','2015-12-20 04:17:44','2015-12-19 19:17:44','',0,'http://49.212.213.226/wordpress/solution-log/?p=1106',0,'post','',0),(1107,1,'2015-12-20 04:04:49','2015-12-19 19:04:49','Dockerにコンテナ名だけ表示するコマンドがないのでawkを使う\r\n\r\n<pre class=\"bash\">\r\ndocker ps | awk &#039;{print $NF}&#039;\r\n\r\n# $NFは最後の列\r\n</pre>','Dockerでコンテナの名前を調べる','','inherit','closed','closed','','1106-revision-v1','','','2015-12-20 04:04:49','2015-12-19 19:04:49','',1106,'http://49.212.213.226/wordpress/solution-log/2015/12/20/1106-revision-v1/',0,'revision','',0),(1108,1,'2015-12-20 04:05:14','2015-12-19 19:05:14','Dockerにコンテナ名だけ表示するコマンドがないのでawkを使う\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;{print $NF}&#039;\r\n\r\n# $NFは最後の列\r\n</pre>','Dockerでコンテナの名前を調べる','','inherit','closed','closed','','1106-revision-v1','','','2015-12-20 04:05:14','2015-12-19 19:05:14','',1106,'http://49.212.213.226/wordpress/solution-log/2015/12/20/1106-revision-v1/',0,'revision','',0),(1109,1,'2015-12-20 04:17:44','2015-12-19 19:17:44','Dockerにコンテナ名だけ表示するコマンドがないのでawkを使う\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR == 2 {print $NF}&#039;\r\n\r\n# NR == 2は2行目、$NFは最後の列\r\n</pre>','Dockerでコンテナの名前を調べる','','inherit','closed','closed','','1106-revision-v1','','','2015-12-20 04:17:44','2015-12-19 19:17:44','',1106,'http://49.212.213.226/wordpress/solution-log/2015/12/20/1106-revision-v1/',0,'revision','',0),(1111,1,'2016-01-02 16:17:29','2016-01-02 07:17:29','SSHのアクセスログを定期的に調べる必要がある。\n\n<h3>ログインが成功したアクセスを調べる</h3>\n<pre class=\"brush: bash\">\n# アクセスが成功したログインを全て表示する\ngrep &quot;Accepted&quot; /var/log/secure*\n\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{split($1, arr, &quot;:&quot;); print arr[2] $2 &quot; &quot; $3 &quot; &quot; $9 &quot; &quot; $11}&#039; \n\n# 順にホワイトリストを当ててみて不正アクセスが無いか確認する\n# 188.251.* はauのテザリング端末\n# 221.1.36.239は自宅のインターネットプロバイダ\n# 133.xxx.xxx.xxxは契約しているVPSサーバ\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{print $9 &quot; &quot; $11}&#039; | awk &#039;{sub(&#039;/182.251.*/&#039;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;222.1.36.239&quot;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;133.xxx.xxx.xxx&quot;, &quot;&quot;); print $0;}&#039;\n</pre>\n\n<h3>ログインが失敗したアクセスを調べる</h3>\n<pre class=\"brush: bash\">\ngrep -E &quot;Failed|Invalid&quot; /var/log/secure*\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://www.tkd55.net/blog/?p=915\" target=\"_blank\">アクセスログ解析（ssh編） | tkd55 blog</a></li>\n</ul>','awkでSSHアクセス履歴を調べる','','inherit','closed','closed','','1080-autosave-v1','','','2016-01-02 16:17:29','2016-01-02 07:17:29','',1080,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1080-autosave-v1/',0,'revision','',0),(1112,1,'2016-01-02 16:17:46','2016-01-02 07:17:46','SSHのアクセスログを定期的に調べる必要がある。\r\n\r\n<h3>ログインが成功したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\n# アクセスが成功したログインを全て表示する\r\ngrep &quot;Accepted&quot; /var/log/secure*\r\n# もしくは\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{split($1, arr, &quot;:&quot;); print arr[2] $2 &quot; &quot; $3 &quot; &quot; $9 &quot; &quot; $11}&#039; \r\n\r\n# 順にホワイトリストを当ててみて不正アクセスが無いか確認する\r\n# 188.251.* はauのテザリング端末\r\n# 221.1.36.239は自宅のインターネットプロバイダ\r\n# 133.xxx.xxx.xxxは契約しているVPSサーバ\r\ngrep &quot;Accepted&quot; /var/log/secure* | awk &#039;{print $9 &quot; &quot; $11}&#039; | awk &#039;{sub(&#039;/182.251.*/&#039;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;222.1.36.239&quot;, &quot;&quot;); print $0;}&#039; | awk &#039;{sub(&quot;133.xxx.xxx.xxx&quot;, &quot;&quot;); print $0;}&#039;\r\n</pre>\r\n\r\n<h3>ログインが失敗したアクセスを調べる</h3>\r\n<pre class=\"brush: bash\">\r\ngrep -E &quot;Failed|Invalid&quot; /var/log/secure*\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.tkd55.net/blog/?p=915\" target=\"_blank\">アクセスログ解析（ssh編） | tkd55 blog</a></li>\r\n</ul>','awkでSSHアクセス履歴を調べる','','inherit','closed','closed','','1080-revision-v1','','','2016-01-02 16:17:46','2016-01-02 07:17:46','',1080,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1080-revision-v1/',0,'revision','',0),(1113,1,'2016-01-02 19:08:19','2016-01-02 10:08:19','<h3>VLC media playerのインストール準備</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\r\n\r\nyum clean all\r\nyum update\r\n</pre>\r\n\r\n<h3>VLC media playerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install vlc\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.techbrown.com/install-vlc-media-player-centos-7-rhel-7-fedora-20.shtml\" target=\"_blank\">Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</a></li>\r\n</ul>','CentOS7で動画を閲覧する','','publish','closed','closed','','centos7%e3%81%a7%e5%8b%95%e7%94%bb%e3%82%92%e9%96%b2%e8%a6%a7%e3%81%99%e3%82%8b','','','2016-01-02 19:08:19','2016-01-02 10:08:19','',0,'http://49.212.213.226/wordpress/solution-log/?p=1113',0,'post','',0),(1114,1,'2016-01-02 19:07:37','2016-01-02 10:07:37','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\n\n<h3>VLC media playerのインストール準備</h3>\n\n<pre class=\"brush: bash\">\nyum install epel-release\nyum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\n\nyum clean all\nyum update\n</pre>\n\n<h3>VLC media playerをインストールする</h3>\n<pre class=\"brush: bash\">\nyum install vlc\n</pre>\n\n<h3>参考サイト</h3>\n<ul>\n<li><a href=\"http://www.techbrown.com/install-vlc-media-player-centos-7-rhel-7-fedora-20.shtml\" target=\"_blank\">Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</a></li>\n</ul>','CentOS6で動画を閲覧する','','inherit','closed','closed','','782-autosave-v1','','','2016-01-02 19:07:37','2016-01-02 10:07:37','',782,'http://49.212.213.226/wordpress/solution-log/2016/01/02/782-autosave-v1/',0,'revision','',0),(1115,1,'2016-01-02 19:07:42','2016-01-02 10:07:42','<a href=\"http://www.ted.com/\">TED</a>からダウンロードした動画をCentOS6でも観たいと思い「<a href=\"http://www.videolan.org/vlc/\">VLC media player(VideoLAN Client)</a>」をインストールした。\r\n\r\n<h3>VLC media playerのインストール準備</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\r\n\r\nyum clean all\r\nyum update\r\n</pre>\r\n\r\n<h3>VLC media playerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install vlc\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.techbrown.com/install-vlc-media-player-centos-7-rhel-7-fedora-20.shtml\" target=\"_blank\">Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</a></li>\r\n</ul>','CentOS7で動画を閲覧する','','inherit','closed','closed','','1113-revision-v1','','','2016-01-02 19:07:42','2016-01-02 10:07:42','',1113,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1113-revision-v1/',0,'revision','',0),(1116,1,'2016-01-02 19:08:02','2016-01-02 10:08:02','<h3>VLC media playerのインストール準備</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum localinstall --nogpgcheck http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\r\n\r\nyum clean all\r\nyum update\r\n</pre>\r\n\r\n<h3>VLC media playerをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum install vlc\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://www.techbrown.com/install-vlc-media-player-centos-7-rhel-7-fedora-20.shtml\" target=\"_blank\">Install VLC Media Player on CentOS 7 / RHEL 7 / Fedora 20</a></li>\r\n</ul>','CentOS7で動画を閲覧する','','inherit','closed','closed','','1113-revision-v1','','','2016-01-02 19:08:02','2016-01-02 10:08:02','',1113,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1113-revision-v1/',0,'revision','',0),(1117,1,'2016-01-02 20:47:00','2016-01-02 11:47:00','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\r\n\r\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\r\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\r\n\r\n<h3>ドライバをインストール、カーネルを再構築する</h3>\r\n<pre class=\"brush: bash\">\r\nyum update\r\nreboot \r\n\r\n# 最新バージョンのカーネルを選択し起動させる\r\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\r\n\r\nsystemctl disable gdm\r\nreboot\r\n\r\n# グラフィックスドライバをインストールする\r\nbash NVIDIA-Linux-x86_64-352.30.run\r\n\r\n# ユーザーアカウントのダウンロードディレクトリなどにファイルがある場合\r\n# CentOSのターミナルから日本語が読み込めないし打ち込めない場合\r\nbash `find /home/tomonori -name &quot;NVIDIA*&quot;`\r\n\r\n# シンボリックリンクを作成する前にサービスを起動する\r\nsystemctl enable gdm.service\r\n\r\n# エラーが出たらオプションを-「f」に変更\r\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\r\n\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\r\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','publish','closed','closed','','centos7%e3%81%b8nvidia%e3%82%b0%e3%83%a9%e3%83%95%e3%82%a3%e3%83%83%e3%82%af%e3%82%b9%e3%83%89%e3%83%a9%e3%82%a4%e3%83%90%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99','','','2016-04-22 23:45:20','2016-04-22 14:45:20','',0,'http://49.212.213.226/wordpress/solution-log/?p=1117',0,'post','',0),(1118,1,'2016-01-02 20:44:15','2016-01-02 11:44:15','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\r\n\r\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\r\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\r\n\r\n<h3>ドライバをインストール、カーネルを再構築する</h3>\r\n<pre class=\"brush: bash\">\r\nyum update\r\nreboot\r\n\r\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\r\n\r\nsystemctl disable gdm\r\nreboot\r\n\r\n# グラフィックスドライバをインストールする\r\nbash NVIDIA-Linux-x86_64-352.30.run\r\n\r\n# エラーが出たらオプションを-「f」に変更\r\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\r\n\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\r\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','inherit','closed','closed','','1117-revision-v1','','','2016-01-02 20:44:15','2016-01-02 11:44:15','',1117,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1117-revision-v1/',0,'revision','',0),(1119,1,'2016-01-02 20:45:50','2016-01-02 11:45:50','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\r\n\r\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\r\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\r\n\r\n<h3>ドライバをインストール、カーネルを再構築する</h3>\r\n<pre class=\"brush: bash\">\r\nyum update\r\nreboot\r\n\r\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\r\n\r\nsystemctl disable gdm\r\nreboot\r\n\r\n# グラフィックスドライバをインストールする\r\nbash NVIDIA-Linux-x86_64-352.30.run\r\n\r\n# シンボリックリンクを作成する前にサービスを起動する\r\nsystemctl enable gdm.service\r\n\r\n# エラーが出たらオプションを-「f」に変更\r\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\r\n\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\r\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','inherit','closed','closed','','1117-revision-v1','','','2016-01-02 20:45:50','2016-01-02 11:45:50','',1117,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1117-revision-v1/',0,'revision','',0),(1120,1,'2016-01-02 20:46:47','2016-01-02 11:46:47','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\r\n\r\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\r\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\r\n\r\n<h3>ドライバをインストール、カーネルを再構築する</h3>\r\n<pre class=\"brush: bash\">\r\nyum update\r\nreboot \r\n\r\n# 最新バージョンのカーネルを選択し起動させる\r\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\r\n\r\nsystemctl disable gdm\r\nreboot\r\n\r\n# グラフィックスドライバをインストールする\r\nbash NVIDIA-Linux-x86_64-352.30.run\r\n\r\n# シンボリックリンクを作成する前にサービスを起動する\r\nsystemctl enable gdm.service\r\n\r\n# エラーが出たらオプションを-「f」に変更\r\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\r\n\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\r\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','inherit','closed','closed','','1117-revision-v1','','','2016-01-02 20:46:47','2016-01-02 11:46:47','',1117,'http://49.212.213.226/wordpress/solution-log/2016/01/02/1117-revision-v1/',0,'revision','',0),(1122,1,'2016-01-12 15:48:12','2016-01-12 06:48:12','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php \\\r\nphp-cli \\\r\nphp-common \\\r\nphp-gd \\\r\nphp-ldap \\\r\nphp-mbstring \\\r\nphp-pdo \\\r\nphp-process \\\r\nphp-xml \\\r\nphp-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>PHPを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# php.confの設定\r\nvi /etc/httpd/conf.d/php.conf\r\n\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n# php.iniの設定\r\nvi /etc/php.ini\r\n\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n<h3>ownCloudをインストールする</h3>\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n<pre class=\"brush: bash\">\r\ncd /home/user/\r\ncurl -O https://download.owncloud.org/community/owncloud-8.2.2.zip\r\nunzip owncloud-8.2.2.zip\r\n</pre>\r\n\r\n<h3>データベースを作成する</h3>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://blog.apar.jp/linux/2262/\" target=\"_blank\">CentOS 7.1 (1503) LAMPサーバインストールメモ【CentOS7.1.1503＋Apache＋MySQL＋PHP】 | あぱーブログ</a></li>\r\n	<li><a href=\"http://astail.net/?p=906\" target=\"_blank\">owncloudを8.1？にしたらいろいろ出た | 世界を疑え</a></li>\r\n\r\n\r\n</ul>','CentOS7へownCloudをインストールする','','publish','closed','closed','','centos7%e3%81%b8owncloud%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2016-01-12 22:16:47','2016-01-12 13:16:47','',0,'http://49.212.213.226/wordpress/solution-log/?p=1122',0,'post','',0),(1123,1,'2016-01-12 15:06:49','2016-01-12 06:06:49','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 15:06:49','2016-01-12 06:06:49','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1124,1,'2016-01-12 15:20:39','2016-01-12 06:20:39','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php php-cli php-common php-gd php-ldap php-mbstring php-pdo php-process php-xml php-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>ownCloudをインストールする</h3>\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n<pre class=\"brush: bash\">\r\n','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 15:20:39','2016-01-12 06:20:39','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1125,1,'2016-01-12 15:22:52','2016-01-12 06:22:52','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php \\\r\nphp-cli \\\r\nphp-common \\\r\nphp-gd \\\r\nphp-ldap \\\r\nphp-mbstring \\\r\nphp-pdo \\\r\nphp-process \\\r\nphp-xml \\\r\nphp-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>ownCloudをインストールする</h3>\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n<pre class=\"brush: bash\">\r\n','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 15:22:52','2016-01-12 06:22:52','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1126,1,'2016-01-12 15:48:01','2016-01-12 06:48:01','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php \\\r\nphp-cli \\\r\nphp-common \\\r\nphp-gd \\\r\nphp-ldap \\\r\nphp-mbstring \\\r\nphp-pdo \\\r\nphp-process \\\r\nphp-xml \\\r\nphp-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>ownCloudをインストールする</h3>\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n<pre class=\"brush: bash\">\r\ncd /home/user/\r\ncurl -O https://download.owncloud.org/community/owncloud-8.2.2.zip\r\nunzip owncloud-8.2.2.zip\r\n</pre>\r\n\r\n<h4>データベースを作成する</h4>\r\n','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 15:48:01','2016-01-12 06:48:01','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1127,1,'2016-01-12 15:52:36','2016-01-12 06:52:36','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\n#\r\n# UserDir: The name of the directory that is appended onto a user&#039;s home\r\n# directory if a ~user request is received.\r\n#\r\n# The path to the end user account &#039;public_html&#039; directory must be\r\n# accessible to the webserver userid.  This usually means that ~userid\r\n# must have permissions of 711, ~userid/public_html must have permissions\r\n# of 755, and documents contained therein must be world-readable.\r\n# Otherwise, the client will only receive a &quot;403 Forbidden&quot; message.\r\n#\r\n&lt;IfModule mod_userdir.c&gt;\r\n    #\r\n    # UserDir is disabled by default since it can confirm the presence\r\n    # of a username on the system (depending on home directory\r\n    # permissions).\r\n    #\r\n    UserDir disabled\r\n    UserDir enabled user\r\n\r\n    #\r\n    # To enable requests to /~user/ to serve the user&#039;s public_html\r\n    # directory, remove the &quot;UserDir disabled&quot; line above, and uncomment\r\n    # the following line instead:\r\n    #\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n#\r\n# Control access to UserDir directories.  The following is an example\r\n# for a site where these directories are restricted to read-only.\r\n#\r\n&lt;Directory &quot;/home/*/public_html&quot;&gt;\r\n\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    Require all granted\r\n&lt;/Directory&gt;\r\n\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n\r\n# Apacheを起動する\r\nsystemctl restart httpd.service\r\nsystemctl enable httpd.service\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a></li>\r\n</ul>','CentOS7でmod_userdirを使用する','','inherit','closed','closed','','1075-autosave-v1','','','2016-01-12 15:52:36','2016-01-12 06:52:36','',1075,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1075-autosave-v1/',0,'revision','',0),(1128,1,'2016-01-12 15:53:31','2016-01-12 06:53:31','<h3>mod_userdirの設定をする</h3>\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/userdir.conf\r\n#\r\n# UserDir: The name of the directory that is appended onto a user&#039;s home\r\n# directory if a ~user request is received.\r\n#\r\n# The path to the end user account &#039;public_html&#039; directory must be\r\n# accessible to the webserver userid.  This usually means that ~userid\r\n# must have permissions of 711, ~userid/public_html must have permissions\r\n# of 755, and documents contained therein must be world-readable.\r\n# Otherwise, the client will only receive a &quot;403 Forbidden&quot; message.\r\n#\r\n&lt;IfModule mod_userdir.c&gt;\r\n    #\r\n    # UserDir is disabled by default since it can confirm the presence\r\n    # of a username on the system (depending on home directory\r\n    # permissions).\r\n    #\r\n    UserDir disabled\r\n    UserDir enabled user\r\n\r\n    #\r\n    # To enable requests to /~user/ to serve the user&#039;s public_html\r\n    # directory, remove the &quot;UserDir disabled&quot; line above, and uncomment\r\n    # the following line instead:\r\n    #\r\n    UserDir public_html\r\n&lt;/IfModule&gt;\r\n\r\n#\r\n# Control access to UserDir directories.  The following is an example\r\n# for a site where these directories are restricted to read-only.\r\n#\r\n&lt;Directory &quot;/home/*/public_html&quot;&gt;\r\n\r\n    Options IncludesNoExec ExecCGI FollowSymLinks\r\n    Require all granted\r\n&lt;/Directory&gt;\r\n\r\n</pre>\r\n\r\n<h3>SELinuxを無効にする</h3>\r\nSELinuxでmod_userdirを許可する設定も可能だが今回はSELinuxを無効にする\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/selinux/config\r\n# SELinuxを無効にする。\r\nSELINUX=disabled\r\nreboot\r\n\r\n# Apacheを起動する\r\nsystemctl restart httpd.service\r\nsystemctl enable httpd.service\r\n</pre>\r\n\r\n<h3>public_htmlの所有権を変更する</h3>\r\n想定される環境だとpublic_htmlは700になっているので、/home/userを711に、pulbic_htmlを755に変更しておく。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://httpd.apache.org/docs/2.2/ja/mod/mod_userdir.html\" target=\"_blank\">mod_userdir - Apache HTTP サーバ バージョン 2.2</a></li>\r\n<li><a href=\"http://www.obenri.com/_webserver/user_directory.html\" target=\"_blank\">◇ユーザーディレクトリの設定◇初心者のためのLinuxサーバー構築講座(CentOS 自宅サーバー対応)☆お便利サーバー.com☆</a></li>\r\n</ul>','CentOS7でmod_userdirを使用する','','inherit','closed','closed','','1075-revision-v1','','','2016-01-12 15:53:31','2016-01-12 06:53:31','',1075,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1075-revision-v1/',0,'revision','',0),(1129,1,'2016-01-12 18:57:55','2016-01-12 09:57:55','<h3>リポジトリを追加する</h3>\nRPMForge、EPEL、Remiをリポジトリへ追加する\n<pre class=\"brush: bash\">\n# RPMForge\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\n \n# EPEL\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\n \n# remi\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\n</pre>\n\n<h3>PHPをインストールする</h3>\n<pre class=\"brush: bash\">\n# gd-lastをインストール\nyum -y --enablerepo=remi install gd-last\n\n# MariaDBをインストールする\nyum -y install mariadb*\n\nyum -y --enablerepo=remi-php56 install php \\\nphp-cli \\\nphp-common \\\nphp-gd \\\nphp-ldap \\\nphp-mbstring \\\nphp-pdo \\\nphp-process \\\nphp-xml \\\nphp-mysqlnd\n\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\nyum install memcached-devel\nyum -y install php-pecl-memcache\n</pre>\n\n<h3>PHPを設定する</h3>\n<pre class=\"brush: bash\">\n# php.confの設定\nvi /etc/httpd/conf.d/php.conf\n\nAddType application/x-httpd-php .php\nAddType application/x-httpd-php-source .phps\n\n# php.iniの設定\nvi /etc/php.ini\n\ndate.timezone = Asia/Tokyo\n</pre>\n\n\n<h3>ownCloudをインストールする</h3>\nユーザーディレクトリで動かせるようにソースからインストールする\n\n<pre class=\"brush: bash\">\ncd /home/user/\ncurl -O https://download.owncloud.org/community/owncloud-8.2.2.zip\nunzip owncloud-8.2.2.zip\n</pre>\n\n<h3>データベースを作成する</h3>\n\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"https://blog.apar.jp/linux/2262/\" target=\"_blank\">CentOS 7.1 (1503) LAMPサーバインストールメモ【CentOS7.1.1503＋Apache＋MySQL＋PHP】 | あぱーブログ</a></li>\n	<li><a href=\"http://astail.net/?p=906\" target=\"_blank\">owncloudを8.1？にしたらいろいろ出た | 世界を疑え</a></li>\n\n\n</ul>','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-autosave-v1','','','2016-01-12 18:57:55','2016-01-12 09:57:55','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-autosave-v1/',0,'revision','',0),(1130,1,'2016-01-12 18:49:50','2016-01-12 09:49:50','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php \\\r\nphp-cli \\\r\nphp-common \\\r\nphp-gd \\\r\nphp-ldap \\\r\nphp-mbstring \\\r\nphp-pdo \\\r\nphp-process \\\r\nphp-xml \\\r\nphp-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>PHPを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# php.confの設定\r\nvi /etc/httpd/conf.d/php.conf\r\n\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n# php.iniの設定\r\nvi /etc/php.ini\r\n\r\ndate.timezone = Asia/Tokyo\r\n/pre&gt;\r\n\r\n\r\n&lt;h3&gt;ownCloudをインストールする&lt;/h3&gt;\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n&lt;pre class=&quot;brush: bash&quot;&gt;\r\ncd /home/user/\r\ncurl -O https://download.owncloud.org/community/owncloud-8.2.2.zip\r\nunzip owncloud-8.2.2.zip\r\n</pre>\r\n\r\n<h4>データベースを作成する</h4>\r\n','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 18:49:50','2016-01-12 09:49:50','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1131,1,'2016-01-12 22:16:47','2016-01-12 13:16:47','<h3>リポジトリを追加する</h3>\r\nRPMForge、EPEL、Remiをリポジトリへ追加する\r\n<pre class=\"brush: bash\">\r\n# RPMForge\r\nrpm -ivh http://pkgs.repoforge.org/rpmforge-release/rpmforge-release-0.5.3-1.el7.rf.x86_64.rpm\r\nrpm --import http://dag.wieers.com/rpm/packages/RPM-GPG-KEY.dag.txt\r\n \r\n# EPEL\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n \r\n# remi\r\nrpm -ivh http://rpms.famillecollet.com/enterprise/remi-release-7.rpm\r\nrpm --import http://rpms.famillecollet.com/RPM-GPG-KEY-remi\r\n</pre>\r\n\r\n<h3>PHPをインストールする</h3>\r\n<pre class=\"brush: bash\">\r\n# gd-lastをインストール\r\nyum -y --enablerepo=remi install gd-last\r\n\r\n# MariaDBをインストールする\r\nyum -y install mariadb*\r\n\r\nyum -y --enablerepo=remi-php56 install php \\\r\nphp-cli \\\r\nphp-common \\\r\nphp-gd \\\r\nphp-ldap \\\r\nphp-mbstring \\\r\nphp-pdo \\\r\nphp-process \\\r\nphp-xml \\\r\nphp-mysqlnd\r\n\r\n# memcached(分散型メモリキャッシュシステム)をPHPで使えるようにする\r\nyum install memcached-devel\r\nyum -y install php-pecl-memcache\r\n</pre>\r\n\r\n<h3>PHPを設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# php.confの設定\r\nvi /etc/httpd/conf.d/php.conf\r\n\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n# php.iniの設定\r\nvi /etc/php.ini\r\n\r\ndate.timezone = Asia/Tokyo\r\n</pre>\r\n\r\n\r\n<h3>ownCloudをインストールする</h3>\r\nユーザーディレクトリで動かせるようにソースからインストールする\r\n\r\n<pre class=\"brush: bash\">\r\ncd /home/user/\r\ncurl -O https://download.owncloud.org/community/owncloud-8.2.2.zip\r\nunzip owncloud-8.2.2.zip\r\n</pre>\r\n\r\n<h3>データベースを作成する</h3>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://blog.apar.jp/linux/2262/\" target=\"_blank\">CentOS 7.1 (1503) LAMPサーバインストールメモ【CentOS7.1.1503＋Apache＋MySQL＋PHP】 | あぱーブログ</a></li>\r\n	<li><a href=\"http://astail.net/?p=906\" target=\"_blank\">owncloudを8.1？にしたらいろいろ出た | 世界を疑え</a></li>\r\n\r\n\r\n</ul>','CentOS7へownCloudをインストールする','','inherit','closed','closed','','1122-revision-v1','','','2016-01-12 22:16:47','2016-01-12 13:16:47','',1122,'http://49.212.213.226/wordpress/solution-log/2016/01/12/1122-revision-v1/',0,'revision','',0),(1134,1,'2016-01-18 23:22:30','2016-01-18 14:22:30','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\n\r\ncd /root/rpmbuild/SOURCES\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz\r\n\r\ncd /root/rpmbuild/SPECS\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec\r\n\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\n\r\n# Railsのインストールディレクトリの権限を設定する\r\nchcon -R -h -t httpd_sys_content_t rails_dir\r\n\r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n	<li><a href=\"http://seeku.hateblo.jp/entry/2013/05/31/093124\" target=\"_blank\">SELinuxが有効な状態でRedmineを動かす - 開発メモ</a></li>\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','publish','closed','closed','','centos7%e3%81%b8ruby2-3%e3%81%a8rails4%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2016-01-25 02:25:28','2016-01-24 17:25:28','',0,'http://49.212.213.226/wordpress/solution-log/?p=1134',0,'post','',0),(1135,1,'2016-01-18 22:44:43','2016-01-18 13:44:43','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:44:43','2016-01-18 13:44:43','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1136,1,'2016-01-18 22:46:38','2016-01-18 13:46:38','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:46:38','2016-01-18 13:46:38','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1137,1,'2016-01-18 22:47:59','2016-01-18 13:47:59','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n\r\n<pre>\r\nRequires:       readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires:  readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel\r\n</pre>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:47:59','2016-01-18 13:47:59','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1138,1,'2016-01-18 22:48:51','2016-01-18 13:48:51','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n\r\n<code>\r\nRequires:       readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires:  readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel\r\n</code>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:48:51','2016-01-18 13:48:51','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1139,1,'2016-01-18 22:50:38','2016-01-18 13:50:38','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:50:38','2016-01-18 13:50:38','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1140,1,'2016-01-18 22:55:30','2016-01-18 13:55:30','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRailsをインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 22:55:30','2016-01-18 13:55:30','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1141,1,'2016-01-18 23:20:44','2016-01-18 14:20:44','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 23:20:44','2016-01-18 14:20:44','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1142,1,'2016-01-18 23:22:30','2016-01-18 14:22:30','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 23:22:30','2016-01-18 14:22:30','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1143,1,'2016-01-25 02:25:01','2016-01-24 17:25:01','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\n\r\ncd /root/rpmbuild/SOURCES\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz\r\n\r\ncd /root/rpmbuild/SPECS\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec\r\n\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\n\r\n# Railsのインストールディレクトリの権限を設定する\r\nchcon -R -h -t httpd_sys_content_t rails_dir\r\n\r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n	<li><a href=\"http://seeku.hateblo.jp/entry/2013/05/31/093124\" target=\"_blank\">SELinuxが有効な状態でRedmineを動かす - 開発メモ</a></li>\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-autosave-v1','','','2016-01-25 02:25:01','2016-01-24 17:25:01','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-autosave-v1/',0,'revision','',0),(1144,1,'2016-01-18 23:45:08','2016-01-18 14:45:08','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-18 23:45:08','2016-01-18 14:45:08','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/18/1134-revision-v1/',0,'revision','',0),(1145,1,'2016-01-19 03:35:42','2016-01-18 18:35:42','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。SELinuxは enforced の設定にしておく\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\ngem install passenger\r\npassenger-install-apache2-module\r\n\r\n\r\nvi /etc/httpd/conf.d/rails.conf\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/mod_passenger.so\r\n&lt;IfModule mod_passenger.c&gt;\r\n  PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23\r\n  PassengerDefaultRuby /usr/bin/ruby\r\n&lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\n\r\nRackBaseURI /rails\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-19 03:35:42','2016-01-18 18:35:42','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/19/1134-revision-v1/',0,'revision','',0),(1147,1,'2016-01-20 14:01:45','2016-01-20 05:01:45','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-20 14:01:45','2016-01-20 05:01:45','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/20/1134-revision-v1/',0,'revision','',0),(1148,1,'2016-01-20 20:33:34','2016-01-20 11:33:34','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-20 20:33:34','2016-01-20 11:33:34','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/20/1134-revision-v1/',0,'revision','',0),(1149,1,'2016-01-20 20:40:06','2016-01-20 11:40:06','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel /\r\nlibdb4-devel /\r\nlibffi-devel /\r\nlibyaml /\r\nlibyaml-devel /\r\nncurses-devel /\r\nopenssl-devel /\r\nreadline-devel /\r\ntcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz -P /root/rpmbuild/SOURCES\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec -P /root/rpmbuild/SPECS\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-20 20:40:06','2016-01-20 11:40:06','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/20/1134-revision-v1/',0,'revision','',0),(1150,1,'2016-01-20 22:07:35','2016-01-20 13:07:35','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\ncd /root/rpmbuild/SOURCES\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz\r\ncd /root/rpmbuild/SPECS\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-20 22:07:35','2016-01-20 13:07:35','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/20/1134-revision-v1/',0,'revision','',0),(1151,1,'2016-01-24 22:46:22','2016-01-24 13:46:22','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nrpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nyum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nyum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\n\r\n# 古いPHPをアンインストールしておく\r\nyum remove php*\r\n\r\nyum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd php56-php-intl php56-php-gmp\r\n\r\n\r\n# シンボリックリンクを変更する\r\nln -s /opt/remi/php56/root/etc/php.ini /etc/\r\nln -s /opt/remi/php56/root/etc/php.d /etc/\r\nln -s /usr/bin/php56 /usr/bin/php\r\n\r\n\r\n# Timezoneを変更する\r\nvi /etc/php.ini\r\n    date.timezone = Asia/Tokyo\r\n\r\n# Apacheの設定を変更する\r\nvi /etc/httpd/conf.d/php56-php.conf\r\n\r\n#\r\n# Allow php to handle Multiviews\r\n#\r\nAddType text/html .php\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a></li>\r\n<li><a href=\"http://qiita.com/tsukasa-koizumi/items/78cc816e24d84eedecbb\" target=\"_blank\">【CentOS7】＜メモ＞ Webサーバー セットアップ - Qiita</a></li>\r\n\r\n\r\n</ul>\r\n\r\n','CentOS7にPHP5.6をインストールする','','inherit','closed','closed','','1022-autosave-v1','','','2016-01-24 22:46:22','2016-01-24 13:46:22','',1022,'http://49.212.213.226/wordpress/solution-log/2016/01/24/1022-autosave-v1/',0,'revision','',0),(1152,1,'2016-01-24 22:13:04','2016-01-24 13:13:04','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nrpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nyum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nyum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\nyum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7にPHP5.6をインストールする','','inherit','closed','closed','','1022-revision-v1','','','2016-01-24 22:13:04','2016-01-24 13:13:04','',1022,'http://49.212.213.226/wordpress/solution-log/2016/01/24/1022-revision-v1/',0,'revision','',0),(1153,1,'2016-01-24 22:46:31','2016-01-24 13:46:31','CentOS7にyumでPHPをインストールしようとしたがバージョンが5.4と古かったのでremiで5.6をインストールする。\r\n\r\n<h3>remiリポジトリをインストール、設定する</h3>\r\n<pre class=\"brush: bash\">\r\n# remiリポジトリの公開鍵を取り込む\r\nrpm --import https://raw.githubusercontent.com/remicollet/remirepo/master/remi-release/RPM-GPG-KEY-remi\r\n\r\n# yum-config-manager コマンドのインストールと remiリポジトリの追加\r\nyum install yum-utils http://remi.kazukioishi.net/enterprise/remi-release-7.rpm\r\n\r\n# remi-php56 リポジトリを有効化\r\nyum-config-manager --enable remi-php56\r\n\r\n# remiの設定を変更 / PHPのアップデートには常にremiを使うようにする\r\n# yumプラグインのインストール\r\nyum install yum-plugin-priorities\r\n\r\n/etc/yum.repos.d/remi.repo\r\n\r\n[remi]\r\nname=Remi&#039;s RPM repository for Enterprise Linux 7 - $basearch\r\n#baseurl=http://rpms.remirepo.net/enterprise/7/remi/$basearch/\r\nmirrorlist=http://rpms.remirepo.net/enterprise/7/remi/mirror\r\nenabled=0\r\ngpgcheck=1\r\ngpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-remi\r\npriority=100\r\n## ↑この行を追加 ##\r\n\r\n\r\n\r\n# PHP と拡張モジュールなどをインストール\r\n#### php-mysqlnd / PDOを扱うのに必要\r\n#### php-mbstring / utf-8 のセキュリティを確保するのに必要\r\n#### php-intl / Unicode に関する処理などに必要\r\n#### php-gmp / 桁の大きい整数を扱う場合に必要\r\n\r\n# 古いPHPをアンインストールしておく\r\nyum remove php*\r\n\r\nyum --enablerepo=remi,epel install php56-php php56-php-mbstring php56-php-pdo php56-php-mysqlnd php56-php-intl php56-php-gmp\r\n\r\n\r\n# シンボリックリンクを変更する\r\nln -s /opt/remi/php56/root/etc/php.ini /etc/\r\nln -s /opt/remi/php56/root/etc/php.d /etc/\r\nln -s /usr/bin/php56 /usr/bin/php\r\n\r\n\r\n# Timezoneを変更する\r\nvi /etc/php.ini\r\n    date.timezone = Asia/Tokyo\r\n\r\n# Apacheの設定を変更する\r\nvi /etc/httpd/conf.d/php56-php.conf\r\n\r\n#\r\n# Allow php to handle Multiviews\r\n#\r\nAddType text/html .php\r\nAddType application/x-httpd-php .php\r\nAddType application/x-httpd-php-source .phps\r\n\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/100/items/8e9d9540845cc23e6111\" target=\"_blank\">CentOS 7 に PHP 5.6 と phpMyAdmin をインストール - Qiita</a></li>\r\n<li><a href=\"http://qiita.com/tsukasa-koizumi/items/78cc816e24d84eedecbb\" target=\"_blank\">【CentOS7】＜メモ＞ Webサーバー セットアップ - Qiita</a></li>\r\n\r\n\r\n</ul>\r\n\r\n','CentOS7にPHP5.6をインストールする','','inherit','closed','closed','','1022-revision-v1','','','2016-01-24 22:46:31','2016-01-24 13:46:31','',1022,'http://49.212.213.226/wordpress/solution-log/2016/01/24/1022-revision-v1/',0,'revision','',0),(1154,1,'2016-01-24 23:38:31','2016-01-24 14:38:31','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\n\r\ncd /root/rpmbuild/SOURCES\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz\r\n\r\ncd /root/rpmbuild/SPECS\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec\r\n\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\n\r\n# Railsのインストールディレクトリの権限を設定する\r\nchcon -R -h -t httpd_sys_content_t rails_dir\r\n\r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n\r\n\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-24 23:38:31','2016-01-24 14:38:31','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/24/1134-revision-v1/',0,'revision','',0),(1155,1,'2016-01-25 02:25:28','2016-01-24 17:25:28','Railsでウェブサイトを作る必要が出てきそうなのでRailsをさくらのVPS2GBへインストールしサイト構築の練習をする。\r\n\r\n<h3>Rubyをインストールする</h3>\r\n\r\nCentOS7標準のRubyのバージョンが古いので、2.3系をRPMパッケージでインストールする。Rubyがどのようにインストールされるかは<a href=\"https://github.com/feedforce/ruby-rpm/blob/master/ruby.spec\" target=\"_blank\">specファイル</a>を確認する。Rubyのビルドに必要なパッケージも確認出来る。\r\n<blockquote>Requires: readline ncurses gdbm glibc openssl libyaml libffi zlib\r\nBuildRequires: readline-devel ncurses-devel gdbm-devel glibc-devel gcc openssl-devel make libyaml-devel libffi-devel zlib-devel</blockquote>\r\n\r\n<pre class=\"brush: bash\">\r\n# EPELをインストールする\r\nrpm -ivh http://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\r\nrpm --import http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7\r\n\r\n# 必要なパッケージをインストールする\r\nyum --enablerepo=epel -y install gdbm-devel libdb4-devel libffi-devel libyaml libyaml-devel ncurses-devel openssl-devel readline-devel tcl-devel\r\n\r\n\r\n# Rubyをインストールする\r\n#RPMを作成する\r\nmkdir -p /root/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}\r\n\r\ncd /root/rpmbuild/SOURCES\r\ncurl -O http://cache.ruby-lang.org/pub/ruby/2.3/ruby-2.3.0.tar.gz\r\n\r\ncd /root/rpmbuild/SPECS\r\ncurl -O https://raw.githubusercontent.com/feedforce/ruby-rpm/master/ruby.spec\r\n\r\nrpmbuild -bb /root/rpmbuild/SPECS/ruby.spec\r\n\r\n\r\n# Rubyをインストールする\r\nrpm -Uvh /root/rpmbuild/RPMS/ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\n\r\nruby -v\r\n# rpm -Uvh ruby-2.3.0-1.el7.centos.x86_64.rpm \r\n\r\ngem -v\r\n2.5.1\r\n</pre>\r\n\r\n\r\n<h3>Rails4をインストールする</h3>\r\n<pre class=\"brush: bash\">\r\nyum --enablerepo=epel -y install nodejs /\r\nmariadb-devel\r\n\r\ngem install bundler \r\ngem install rails --no-ri --no-rdoc\r\ngem install mysql2 --no-ri --no-rdoc -- --with-mysql-config=/usr/bin/mysql_config \r\n\r\nrails -v\r\nRails 4.2.5\r\n</pre>\r\n\r\n\r\n<h3>Railsの動作確認を行う</h3>\r\n<pre class=\"brush: bash\">\r\ncd /var/www/html\r\nrails new demo\r\n\r\n# Passengerで起動させる時は\r\nchown -R apache:apache demo\r\n\r\n\r\n# サーバのIPアドレスを調べる\r\nip addr show eth0 | grep inet | awk &#039;{ print $2; }&#039; | sed &#039;s/\\/.*$//&#039;\r\nrails server --binding=IPアドレス\r\n</pre>\r\n\r\n\r\n<h3>Passengerをインストールする</h3>\r\nWEBrick経由だと若干反応が遅いのでPassengerをインストールする。「<strong>SELinux</strong>」は「<strong>enforced</strong>」の設定にしておく。またPassengerは<a href=\"https://blog.phusion.nl/2015/03/31/passenger-5-0-6/\" target=\"_blank\">脆弱性の関係</a>で5.0.6以上にする。\r\n\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# Passengerをインストールするのに必要なパッケージをインストールする\r\nyum install libcurl-devel /\r\nhttpd-devel /\r\napr-devel /\r\napr-util-devel\r\n\r\n# Passengerをインストールする\r\ngem install passenger --version 5.0.6\r\npassenger-install-apache2-module\r\n</pre>\r\n\r\n\r\n<h3>Apacheの設定ファイルを編集する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/httpd/conf.d/rails.conf\r\n\r\n# Railsの画像ファイル・CSSファイル等へのアクセスを許可する設定。\r\n# Apache 2.4のデフォルトではサーバ上の全ファイルへのアクセスが禁止されている。\r\n&lt;Directory &quot;/var/www/html/demo&quot;&gt;\r\n  Require all granted\r\n&lt;/Directory&gt;\r\n\r\n# Passengerの基本設定。\r\n# passenger-install-apache2-module --snippet で表示された設定を記述。\r\n# 環境によって設定値が異なるため以下の3行はそのまま転記せず、必ず\r\n# passenger-install-apache2-module --snippet で表示されたものを使用すること。\r\n#\r\nLoadModule passenger_module /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6/buildout/apache2/mod_passenger.so\r\n   &lt;IfModule mod_passenger.c&gt;\r\n     PassengerRoot /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.6\r\n     PassengerDefaultRuby /usr/bin/ruby\r\n   &lt;/IfModule&gt;\r\n\r\n# Passengerが追加するHTTPヘッダを削除するための設定（任意）。\r\n#\r\nHeader always unset &quot;X-Powered-By&quot;\r\nHeader always unset &quot;X-Runtime&quot;\r\n\r\n# 必要に応じてPassengerのチューニングのための設定を追加（任意）。\r\n# 詳しくはPhusion Passenger users guide(https://www.phusionpassenger.com/library/config/apache/reference/)参照。\r\nPassengerMaxPoolSize 20\r\nPassengerMaxInstancesPerApp 4\r\nPassengerPoolIdleTime 864000\r\nPassengerHighPerformance on\r\nPassengerStatThrottleRate 10\r\nPassengerSpawnMethod smart\r\nPassengerFriendlyErrorPages off\r\n\r\nRackBaseURI /rails\r\n\r\n# RailsをDevelopment modeで運用する\r\nRailsEnv development\r\n</pre>\r\n\r\n<h3>SELinuxを設定する</h3>\r\n<pre class=\"brush: bash\">\r\ngrep PassengerAgent /var/log/audit/audit.log | audit2allow -M passengeragent\r\nsemodule -i passengeragent.pp\r\n\r\ngrep httpd /var/log/audit/audit.log |audit2allow -M passenger\r\nsemodule -i passenger.pp\r\n\r\nchcon -R -h -t httpd_sys_content_t `passenger-config --root`\r\n\r\n# httpdモジュール(soファイル)とpassenger.soでターゲットポリシーを同一にする\r\nls -lZ /usr/lib64/httpd/modules/\r\n\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5-zts.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 libphp5.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_access_compat.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_actions.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_alias.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_allowmethods.so\r\n-rwxr-xr-x. root root system_u:object_r:httpd_modules_t:s0 mod_asis.so\r\n.\r\n.\r\n.\r\n.\r\n.\r\ncd /usr/lib64/ruby/gems/2.3.0/gems/passenger-5.0.23/buildout/apache2/\r\nchcon system_u:object_r:httpd_modules_t:s0 mod_passenger.so \r\n\r\n# Railsのインストールディレクトリの権限を設定する\r\nchcon -R -h -t httpd_sys_content_t rails_dir\r\n\r\nsystemctl restart httpd.service\r\n</pre>\r\n\r\n<h3>Railsに秘密鍵公開鍵を設定する</h3>\r\n\r\nモード別に「/rails_dir/config/secrets.yml」に適宜「secret_key_base」を設定する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=rails4\" target=\"_blank\">CentOS 7 : Ruby on Rails 4 ： Server World</a></li>\r\n	<li><a href=\"http://www.server-world.info/query?os=CentOS_7&p=ruby22\" target=\"_blank\">CentOS 7 : Ruby 2.2 インストール ： Server World</a></li>\r\n	<li><a href=\"http://www.kakiro-web.com/linux/rpmbuild.html\" target=\"_blank\">CentOS7.1 64bit rpmbuildコマンドによるRPMの作成 | kakiro-web カキローウェブ</a></li>\r\n	<li><a href=\"http://qiita.com/koitatu3/items/49635de6ec40a5f30222\" target=\"_blank\">Linux - SRPMを一撃でRPMビルドする。 (rpmコマンドでつい忘れがちな細かいオプションもおまけで記載) - Qiita</a></li>\r\n	<li><a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-ruby-on-rails-with-rbenv-on-centos-7\" target=\"_blank\">How To Install Ruby on Rails with rbenv on CentOS 7 | DigitalOcean</a></li>\r\n	<li><a href=\"http://rails3try.blogspot.jp/2011/12/passenger-development.html\" target=\"_blank\">Rails3 事始め: Passenger で development モードで動かす</a></li>\r\n	<li><a href=\"http://seeku.hateblo.jp/entry/2013/05/31/093124\" target=\"_blank\">SELinuxが有効な状態でRedmineを動かす - 開発メモ</a></li>\r\n</ul>','CentOS7へRuby2.3とRails4をインストールする','','inherit','closed','closed','','1134-revision-v1','','','2016-01-25 02:25:28','2016-01-24 17:25:28','',1134,'http://49.212.213.226/wordpress/solution-log/2016/01/25/1134-revision-v1/',0,'revision','',0),(1156,1,'2016-01-27 17:15:14','2016-01-27 08:15:14','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n<h3>Ansibleを設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/ansible/ansible.cfg\r\n\r\n\r\n#################################\r\n[defaults]\r\nhost_key_checking=false\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/*</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# inventoryファイルを設定しない場合\r\nansible-playbook ansible.yml -u root -k -i &quot;hostname,&quot; --ask-vault-pass -vvvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/incarose86/comment/20150214/1423915834\" target=\"_blank\">とあるSIerの憂鬱 | Minimal インストールの CentOS 6.4 に最新版の ansible をインストールする</a></li>\r\n	<li><a href=\"http://qiita.com/ariarijp/items/503f6fdcc9ff8b35f374\" target=\"_blank\">ansible-playbookコマンドをInventoryファイルなしで実行する - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n</ul>','CentOS7でAnsibleを利用する','','publish','closed','closed','','centos7%e3%81%a7ansible%e3%82%92%e5%88%a9%e7%94%a8%e3%81%99%e3%82%8b','','','2016-02-02 23:00:53','2016-02-02 14:00:53','',0,'http://49.212.213.226/wordpress/solution-log/?p=1156',0,'post','',0),(1157,1,'2016-01-27 17:06:46','2016-01-27 08:06:46','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\nansible all -m ping -u root --ask-pass\r\n</pre>','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-01-27 17:06:46','2016-01-27 08:06:46','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/27/1156-revision-v1/',0,'revision','',0),(1158,1,'2016-01-27 17:14:48','2016-01-27 08:14:48','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n</ul>\r\n\r\n','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-01-27 17:14:48','2016-01-27 08:14:48','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/27/1156-revision-v1/',0,'revision','',0),(1159,1,'2016-02-02 23:00:41','2016-02-02 14:00:41','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n<h3>Ansibleを設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/ansible/ansible.cfg\r\n\r\n\r\n#################################\r\n[defaults]\r\nhost_key_checking=false\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/*</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# inventoryファイルを設定しない場合\r\nansible-playbook ansible.yml -u root -k -i &quot;hostname,&quot; --ask-vault-pass -vvvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/incarose86/comment/20150214/1423915834\" target=\"_blank\">とあるSIerの憂鬱 | Minimal インストールの CentOS 6.4 に最新版の ansible をインストールする</a></li>\r\n	<li><a href=\"http://qiita.com/ariarijp/items/503f6fdcc9ff8b35f374\" target=\"_blank\">ansible-playbookコマンドをInventoryファイルなしで実行する - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n</ul>','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-autosave-v1','','','2016-02-02 23:00:41','2016-02-02 14:00:41','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/27/1156-autosave-v1/',0,'revision','',0),(1160,1,'2016-01-27 19:11:49','2016-01-27 10:11:49','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n\r\n</ul>\r\n','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-01-27 19:11:49','2016-01-27 10:11:49','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/27/1156-revision-v1/',0,'revision','',0),(1161,1,'2016-01-27 19:12:14','2016-01-27 10:12:14','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/*</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n\r\n</ul>\r\n','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-01-27 19:12:14','2016-01-27 10:12:14','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/27/1156-revision-v1/',0,'revision','',0),(1162,1,'2016-01-28 01:59:44','2016-01-27 16:59:44','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n<h3>Ansibleを設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/ansible/ansible.cfg\r\n\r\n\r\n#################################\r\n[defaults]\r\nhost_key_checking=false\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/*</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/incarose86/comment/20150214/1423915834\" target=\"_blank\">とあるSIerの憂鬱 | Minimal インストールの CentOS 6.4 に最新版の ansible をインストールする</a></li>\r\n\r\n\r\n</ul>','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-01-28 01:59:44','2016-01-27 16:59:44','',1156,'http://49.212.213.226/wordpress/solution-log/2016/01/28/1156-revision-v1/',0,'revision','',0),(1163,1,'2016-02-02 23:00:53','2016-02-02 14:00:53','<h3>Ansibleを管理ホストへインストールする</h3>\r\nAnsibleのインストールには管理ホスト側にPython2.6以上、対象ホスト側には2.4以上が必要。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install ansible\r\n</pre>\r\n\r\n<h3>Ansibleを設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nvi /etc/ansible/ansible.cfg\r\n\r\n\r\n#################################\r\n[defaults]\r\nhost_key_checking=false\r\n</pre>\r\n\r\n\r\n<h3>対象ホストへSSH接続する</h3>\r\nもし接続エラーが出る場合は「<strong>-vvv</strong>」オプションを追加して接続したり「<strong>rm -rf /root/.ansible/tmp/*</strong>」などでキャッシュをクリアしたりする。\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# 対象ホストを設定する\r\nvi /etc/ansible/hosts\r\n\r\n# This is the default ansible &#039;hosts&#039; file.\r\n#\r\n# It should live in /etc/ansible/hosts\r\n#\r\n#   - Comments begin with the &#039;#&#039; character\r\n#   - Blank lines are ignored\r\n#   - Groups of hosts are delimited by [header] elements\r\n#   - You can enter hostnames or ip addresses\r\n#   - A hostname/ip can be a member of multiple groups\r\n\r\nexample.com #←対象ホスト名\r\n\r\n\r\n# ペア鍵を使わない場合はパスワード接続を行う\r\n# 接続を確認する\r\nansible all -u root --ask-pass -m ping -vvv\r\n\r\n# inventoryファイルを設定しない場合\r\nansible-playbook ansible.yml -u root -k -i &quot;hostname,&quot; --ask-vault-pass -vvvv\r\n\r\n# 対象サーバの状態を確認する\r\nansible all -u root --ask-pass -m setup -vvv\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://stackoverflow.com/questions/33280244/ssh-error-permission-denied-publickey-password-in-ansible\" target=\"_blank\">SSH Error: Permission denied (publickey,password) in Ansible - Stack Overflow</a></li>\r\n	<li><a href=\"http://dev.classmethod.jp/server-side/ansible/ansible-ec2-error/\" target=\"_blank\">AnsibleでのEC2接続時エラーへの対処法 ｜ Developers.IO</a></li>\r\n	<li><a href=\"http://d.hatena.ne.jp/incarose86/comment/20150214/1423915834\" target=\"_blank\">とあるSIerの憂鬱 | Minimal インストールの CentOS 6.4 に最新版の ansible をインストールする</a></li>\r\n	<li><a href=\"http://qiita.com/ariarijp/items/503f6fdcc9ff8b35f374\" target=\"_blank\">ansible-playbookコマンドをInventoryファイルなしで実行する - Qiita</a></li>\r\n</ul>\r\n\r\n\r\n</ul>','CentOS7でAnsibleを利用する','','inherit','closed','closed','','1156-revision-v1','','','2016-02-02 23:00:53','2016-02-02 14:00:53','',1156,'http://49.212.213.226/wordpress/solution-log/2016/02/02/1156-revision-v1/',0,'revision','',0),(1165,1,'2016-02-03 02:25:23','2016-02-02 17:25:23','<h3>Docker Imageを取得する</h3>\r\n\r\n<pre class=\"bash\">\r\nservice docker start\r\ndocker pull sameersbn/redmine:latest\r\n','CentOS7でDockerを使いRedmineを立ち上げる','','publish','closed','closed','','centos7%e3%81%a7docker%e3%82%92%e4%bd%bf%e3%81%84redmine%e3%82%92%e7%ab%8b%e3%81%a1%e4%b8%8a%e3%81%92%e3%82%8b','','','2016-02-03 02:25:23','2016-02-02 17:25:23','',0,'http://49.212.213.226/wordpress/solution-log/?p=1165',0,'post','',0),(1166,1,'2016-02-03 02:25:23','2016-02-02 17:25:23','<h3>Docker Imageを取得する</h3>\r\n\r\n<pre class=\"bash\">\r\nservice docker start\r\ndocker pull sameersbn/redmine:latest\r\n','CentOS7でDockerを使いRedmineを立ち上げる','','inherit','closed','closed','','1165-revision-v1','','','2016-02-03 02:25:23','2016-02-02 17:25:23','',1165,'http://49.212.213.226/wordpress/solution-log/2016/02/03/1165-revision-v1/',0,'revision','',0),(1168,1,'2016-03-06 20:32:06','2016-03-06 11:32:06','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーるする\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n</pre>\r\n','さくらのVPSにVirtualBox + vagrantをインストールする','','publish','closed','closed','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abvirtualbox-vagrant%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b-2','','','2016-03-06 20:32:06','2016-03-06 11:32:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=1168',0,'post','',0),(1169,1,'2016-03-06 20:24:30','2016-03-06 11:24:30','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境＜/h3>\r\n<pre>\r\nさくらのVPS 2GB\r\nCentOS7\r\n</pre>\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1168-revision-v1','','','2016-03-06 20:24:30','2016-03-06 11:24:30','',1168,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1168-revision-v1/',0,'revision','',0),(1170,1,'2016-03-06 20:24:54','2016-03-06 11:24:54','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境</h3>\r\n<pre>\r\nさくらのVPS 2GB\r\nCentOS7\r\n</pre>\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1168-revision-v1','','','2016-03-06 20:24:54','2016-03-06 11:24:54','',1168,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1168-revision-v1/',0,'revision','',0),(1171,1,'2016-03-06 20:25:51','2016-03-06 11:25:51','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境</h3>\r\n<pre>\r\nさくらのVPS 2GB\r\nCentOS7\r\n</pre>\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1168-revision-v1','','','2016-03-06 20:25:51','2016-03-06 11:25:51','',1168,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1168-revision-v1/',0,'revision','',0),(1172,1,'2016-03-06 20:26:49','2016-03-06 11:26:49','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1168-revision-v1','','','2016-03-06 20:26:49','2016-03-06 11:26:49','',1168,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1168-revision-v1/',0,'revision','',0),(1173,1,'2016-03-06 20:31:45','2016-03-06 11:31:45','Docker、Vagrant等仮想化技術が非常に大切だと感じるこの頃｡｡｡\r\n\r\n<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\n\r\n<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーるする\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n</pre>\r\n','さくらのVPSにVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1168-revision-v1','','','2016-03-06 20:31:45','2016-03-06 11:31:45','',1168,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1168-revision-v1/',0,'revision','',0),(1174,1,'2016-03-06 20:34:43','2016-03-06 11:34:43','<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーする。また『<strong>VirtualBox Guest Addtions</strong>』も<a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">インストール</a>しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# Vagrantをインストールする\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n\r\n# Guest Additions を自動インストールする\r\nvagrant plugin install vagrant-vbguest\r\n</pre>\r\n\r\n<h3>BIOSの設定を変更する</h3>\r\nPCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする\r\n\r\n\r\n<h3>Vagrantfileの設定を変更する</h3>\r\n開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする\r\n\r\n<pre class=\"brush: bash\">\r\nvagrant pull &lt;box-image&gt;\r\nvagrant init &lt;box-name&gt;\r\nvi Vagrantfile \r\n\r\n-*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\n# All Vagrant configuration is done below. The &quot;2&quot; in Vagrant.configure\r\n# configures the configuration version (we support older styles for\r\n# backwards compatibility). Please don&#039;t change it unless you know what\r\n# you&#039;re doing.\r\nVagrant.configure(2) do |config|\r\n  # The most common configuration options are documented and commented below.\r\n  # For a complete reference, please see the online documentation at\r\n  # https://docs.vagrantup.com.\r\n\r\n  # Every Vagrant development environment requires a box. You can search for\r\n  # boxes at https://atlas.hashicorp.com/search.\r\n  config.vm.box = &quot;centos7&quot;\r\n\r\n  # Disable automatic box update checking. If you disable this, then\r\n  # boxes will only be checked for updates when the user runs\r\n  # `vagrant box outdated`. This is not recommended.\r\n  # config.vm.box_check_update = false\r\n\r\n  # Create a forwarded port mapping which allows access to a specific port\r\n  # within the machine from a port on the host machine. In the example below,# accessing &quot;localhost:8080&quot; will access port 80 on the guest machine.\r\n  config.vm.network &quot;forwarded_port&quot;, guest: 22, host: 2223\r\n\r\n  # Create a private network, which allows host-only access to the machine\r\n  # using a specific IP.\r\n  # config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;\r\n\r\n  # Create a public network, which generally matched to bridged network.\r\n  # Bridged networks make the machine appear as another physical device on\r\n  # your network.\r\n  # config.vm.network &quot;public_network&quot;\r\n\r\n  # Share an additional folder to the guest VM. The first argument is\r\n  # the path on the host to the actual folder. The second argument is\r\n  # the path on the guest to mount the folder. And the optional third\r\n  # argument is a set of non-required options.\r\n  # config.vm.synced_folder &quot;../data&quot;, &quot;/vagrant_data&quot;\r\n\r\n  # Provider-specific configuration so you can fine-tune various\r\n  # backing providers for Vagrant. These expose provider-specific options.\r\n  # Example for VirtualBox:\r\n  #\r\n  config.vm.provider &quot;virtualbox&quot; do |vb|\r\n    # Display the VirtualBox GUI when booting the machine\r\n    vb.gui = true\r\n\r\n    # Customize the amount of memory on the VM:\r\n    # vb.memory = &quot;1024&quot;\r\n    \r\n    # Disable USB 2.0\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usb&quot;, &quot;on&quot;]\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usbehci&quot;, &quot;off&quot;]\r\n  end\r\n  #\r\n  # View the documentation for the provider you are using for more\r\n  # information on available options.\r\n\r\n  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies\r\n  # such as FTP and Heroku are also available. See the documentation at\r\n  # https://docs.vagrantup.com/v2/push/atlas.html for more information.\r\n  # config.push.define &quot;atlas&quot; do |push|\r\n  #   push.app = &quot;YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME&quot;\r\n  # end\r\n\r\n  # Enable provisioning with a shell script. Additional provisioners such as\r\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\r\n  # documentation for more information about their specific syntax and use.\r\n  # config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL\r\n  #   sudo apt-get update\r\n  #   sudo apt-get install -y apache2\r\n  # SHELL\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">Vagrant: vagrant-vbguest プラグインで仮想マシンの Guest Additions を最新に保つ - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://futurismo.biz/archives/1647\" target=\"_blank\">仮想化支援機構(VT-x/AMD-V)を有効化できません | Futurismo</a></li>\r\n\r\n	<li><a href=\"https://github.com/jonschipp/vagrant/issues/3\" target=\"_blank\">Box does not Boot Up · Issue #3 · jonschipp/vagrant</a></li></ul>\r\n','CentOS7にVirtualBox + vagrantをインストールする','','publish','closed','closed','','centos7%e3%81%abvirtualbox-vagrant%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2016-03-06 21:45:08','2016-03-06 12:45:08','',0,'http://49.212.213.226/wordpress/solution-log/?p=1174',0,'post','',0),(1175,1,'2016-03-06 20:34:43','2016-03-06 11:34:43','<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーるする\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n</pre>\r\n\r\n\r\n<h3>BIOSの設定を変更する</h3>\r\nPCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする','CentOS7にVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1174-revision-v1','','','2016-03-06 20:34:43','2016-03-06 11:34:43','',1174,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1174-revision-v1/',0,'revision','',0),(1176,1,'2016-03-06 21:44:40','2016-03-06 12:44:40','<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーする。またVirtualBox Guest Addtionsも<a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">インストール</a>しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# Vagrantをインストールする\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n\r\n# Guest Additions を自動インストールする\r\nvagrant plugin install vagrant-vbguest\r\n</pre>\r\n\r\n<h3>BIOSの設定を変更する</h3>\r\nPCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする\r\n\r\n\r\n<h3>Vagrantfileの設定を変更する</h3>\r\n開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする\r\n\r\n<pre class=\"brush: bash\">\r\nvagrant pull &lt;box-image&gt;\r\nvagrant init &lt;box-name&gt;\r\nvi Vagrantfile \r\n\r\n-*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\n# All Vagrant configuration is done below. The &quot;2&quot; in Vagrant.configure\r\n# configures the configuration version (we support older styles for\r\n# backwards compatibility). Please don&#039;t change it unless you know what\r\n# you&#039;re doing.\r\nVagrant.configure(2) do |config|\r\n  # The most common configuration options are documented and commented below.\r\n  # For a complete reference, please see the online documentation at\r\n  # https://docs.vagrantup.com.\r\n\r\n  # Every Vagrant development environment requires a box. You can search for\r\n  # boxes at https://atlas.hashicorp.com/search.\r\n  config.vm.box = &quot;centos7&quot;\r\n\r\n  # Disable automatic box update checking. If you disable this, then\r\n  # boxes will only be checked for updates when the user runs\r\n  # `vagrant box outdated`. This is not recommended.\r\n  # config.vm.box_check_update = false\r\n\r\n  # Create a forwarded port mapping which allows access to a specific port\r\n  # within the machine from a port on the host machine. In the example below,# accessing &quot;localhost:8080&quot; will access port 80 on the guest machine.\r\n  config.vm.network &quot;forwarded_port&quot;, guest: 22, host: 2223\r\n\r\n  # Create a private network, which allows host-only access to the machine\r\n  # using a specific IP.\r\n  # config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;\r\n\r\n  # Create a public network, which generally matched to bridged network.\r\n  # Bridged networks make the machine appear as another physical device on\r\n  # your network.\r\n  # config.vm.network &quot;public_network&quot;\r\n\r\n  # Share an additional folder to the guest VM. The first argument is\r\n  # the path on the host to the actual folder. The second argument is\r\n  # the path on the guest to mount the folder. And the optional third\r\n  # argument is a set of non-required options.\r\n  # config.vm.synced_folder &quot;../data&quot;, &quot;/vagrant_data&quot;\r\n\r\n  # Provider-specific configuration so you can fine-tune various\r\n  # backing providers for Vagrant. These expose provider-specific options.\r\n  # Example for VirtualBox:\r\n  #\r\n  config.vm.provider &quot;virtualbox&quot; do |vb|\r\n    # Display the VirtualBox GUI when booting the machine\r\n    vb.gui = true\r\n\r\n    # Customize the amount of memory on the VM:\r\n    # vb.memory = &quot;1024&quot;\r\n    \r\n    # Disable USB 2.0\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usb&quot;, &quot;on&quot;]\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usbehci&quot;, &quot;off&quot;]\r\n  end\r\n  #\r\n  # View the documentation for the provider you are using for more\r\n  # information on available options.\r\n\r\n  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies\r\n  # such as FTP and Heroku are also available. See the documentation at\r\n  # https://docs.vagrantup.com/v2/push/atlas.html for more information.\r\n  # config.push.define &quot;atlas&quot; do |push|\r\n  #   push.app = &quot;YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME&quot;\r\n  # end\r\n\r\n  # Enable provisioning with a shell script. Additional provisioners such as\r\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\r\n  # documentation for more information about their specific syntax and use.\r\n  # config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL\r\n  #   sudo apt-get update\r\n  #   sudo apt-get install -y apache2\r\n  # SHELL\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">Vagrant: vagrant-vbguest プラグインで仮想マシンの Guest Additions を最新に保つ - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://futurismo.biz/archives/1647\" target=\"_blank\">仮想化支援機構(VT-x/AMD-V)を有効化できません | Futurismo</a></li>\r\n\r\n	<li><a href=\"https://github.com/jonschipp/vagrant/issues/3\" target=\"_blank\">Box does not Boot Up · Issue #3 · jonschipp/vagrant</a></li></ul>\r\n','CentOS7にVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1174-autosave-v1','','','2016-03-06 21:44:40','2016-03-06 12:44:40','',1174,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1174-autosave-v1/',0,'revision','',0),(1177,1,'2016-03-06 21:36:59','2016-03-06 12:36:59','<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーるする\r\n\r\n<pre class=\"brush: bash\">\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n</pre>\r\n\r\n\r\n<h3>BIOSの設定を変更する</h3>\r\nPCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする\r\n\r\n\r\n<h3>Vagrantfileの設定を変更する</h3>\r\n開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする\r\n\r\n<pre class=\"brush: bash\">\r\nvagrant pull &lt;box-image&gt;\r\nvagrant init &lt;box-name&gt;\r\nvi Vagrantfile \r\n\r\n-*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\n# All Vagrant configuration is done below. The &quot;2&quot; in Vagrant.configure\r\n# configures the configuration version (we support older styles for\r\n# backwards compatibility). Please don&#039;t change it unless you know what\r\n# you&#039;re doing.\r\nVagrant.configure(2) do |config|\r\n  # The most common configuration options are documented and commented below.\r\n  # For a complete reference, please see the online documentation at\r\n  # https://docs.vagrantup.com.\r\n\r\n  # Every Vagrant development environment requires a box. You can search for\r\n  # boxes at https://atlas.hashicorp.com/search.\r\n  config.vm.box = &quot;centos7&quot;\r\n\r\n  # Disable automatic box update checking. If you disable this, then\r\n  # boxes will only be checked for updates when the user runs\r\n  # `vagrant box outdated`. This is not recommended.\r\n  # config.vm.box_check_update = false\r\n\r\n  # Create a forwarded port mapping which allows access to a specific port\r\n  # within the machine from a port on the host machine. In the example below,# accessing &quot;localhost:8080&quot; will access port 80 on the guest machine.\r\n  config.vm.network &quot;forwarded_port&quot;, guest: 22, host: 2223\r\n\r\n  # Create a private network, which allows host-only access to the machine\r\n  # using a specific IP.\r\n  # config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;\r\n\r\n  # Create a public network, which generally matched to bridged network.\r\n  # Bridged networks make the machine appear as another physical device on\r\n  # your network.\r\n  # config.vm.network &quot;public_network&quot;\r\n\r\n  # Share an additional folder to the guest VM. The first argument is\r\n  # the path on the host to the actual folder. The second argument is\r\n  # the path on the guest to mount the folder. And the optional third\r\n  # argument is a set of non-required options.\r\n  # config.vm.synced_folder &quot;../data&quot;, &quot;/vagrant_data&quot;\r\n\r\n  # Provider-specific configuration so you can fine-tune various\r\n  # backing providers for Vagrant. These expose provider-specific options.\r\n  # Example for VirtualBox:\r\n  #\r\n  config.vm.provider &quot;virtualbox&quot; do |vb|\r\n    # Display the VirtualBox GUI when booting the machine\r\n    vb.gui = true\r\n\r\n    # Customize the amount of memory on the VM:\r\n    # vb.memory = &quot;1024&quot;\r\n    \r\n    # Disable USB 2.0\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usb&quot;, &quot;on&quot;]\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usbehci&quot;, &quot;off&quot;]\r\n  end\r\n  #\r\n  # View the documentation for the provider you are using for more\r\n  # information on available options.\r\n\r\n  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies\r\n  # such as FTP and Heroku are also available. See the documentation at\r\n  # https://docs.vagrantup.com/v2/push/atlas.html for more information.\r\n  # config.push.define &quot;atlas&quot; do |push|\r\n  #   push.app = &quot;YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME&quot;\r\n  # end\r\n\r\n  # Enable provisioning with a shell script. Additional provisioners such as\r\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\r\n  # documentation for more information about their specific syntax and use.\r\n  # config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL\r\n  #   sudo apt-get update\r\n  #   sudo apt-get install -y apache2\r\n  # SHELL\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://github.com/jonschipp/vagrant/issues/3\" target=\"_blank\">Box does not Boot Up · Issue #3 · jonschipp/vagrant</a></li></ul>\r\n\r\n\r\n','CentOS7にVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1174-revision-v1','','','2016-03-06 21:36:59','2016-03-06 12:36:59','',1174,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1174-revision-v1/',0,'revision','',0),(1178,1,'2016-03-06 21:45:08','2016-03-06 12:45:08','<h3>VirtualBoxをインストールする</h3>\r\n<a href=\"http://qiita.com/Itomaki/items/9a6a314a853cdcd00f80\" target=\"_blank\">こちらのサイト</a>を参考にした。\r\n\r\n<pre class=\"brush: bash\">\r\nyum istall dkms\r\n\r\ncd /etc/yum.repos.d/\r\nsudo wget http://download.virtualbox.org/virtualbox/rpm/rhel/virtualbox.repo\r\n\r\nyum update\r\n\r\nyum list | grep VirtualBox\r\n\r\nyum install VirtualBox-xxxx\r\n</pre>\r\n\r\n\r\n<h3>Vagrantをインストールする</h3>\r\n<a href=\"https://www.vagrantup.com/downloads.html\" target=\"_blank\">公式サイト</a>よりrmpをダウンロードしインストーする。また『<strong>VirtualBox Guest Addtions</strong>』も<a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">インストール</a>しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# Vagrantをインストールする\r\nrpm -Uvh https://releases.hashicorp.com/vagrant/1.8.1/vagrant_1.8.1_x86_64.rpm\r\n\r\n# Guest Additions を自動インストールする\r\nvagrant plugin install vagrant-vbguest\r\n</pre>\r\n\r\n<h3>BIOSの設定を変更する</h3>\r\nPCを立ち上げてF10でBIOSの設定画面を表示させ仮想化技術を有効にする\r\n\r\n\r\n<h3>Vagrantfileの設定を変更する</h3>\r\n開発用途では使用しないUSB2.0を無効にする。またエラーメッセージを広いやすくするためにメッセージを表示する設定にする\r\n\r\n<pre class=\"brush: bash\">\r\nvagrant pull &lt;box-image&gt;\r\nvagrant init &lt;box-name&gt;\r\nvi Vagrantfile \r\n\r\n-*- mode: ruby -*-\r\n# vi: set ft=ruby :\r\n\r\n# All Vagrant configuration is done below. The &quot;2&quot; in Vagrant.configure\r\n# configures the configuration version (we support older styles for\r\n# backwards compatibility). Please don&#039;t change it unless you know what\r\n# you&#039;re doing.\r\nVagrant.configure(2) do |config|\r\n  # The most common configuration options are documented and commented below.\r\n  # For a complete reference, please see the online documentation at\r\n  # https://docs.vagrantup.com.\r\n\r\n  # Every Vagrant development environment requires a box. You can search for\r\n  # boxes at https://atlas.hashicorp.com/search.\r\n  config.vm.box = &quot;centos7&quot;\r\n\r\n  # Disable automatic box update checking. If you disable this, then\r\n  # boxes will only be checked for updates when the user runs\r\n  # `vagrant box outdated`. This is not recommended.\r\n  # config.vm.box_check_update = false\r\n\r\n  # Create a forwarded port mapping which allows access to a specific port\r\n  # within the machine from a port on the host machine. In the example below,# accessing &quot;localhost:8080&quot; will access port 80 on the guest machine.\r\n  config.vm.network &quot;forwarded_port&quot;, guest: 22, host: 2223\r\n\r\n  # Create a private network, which allows host-only access to the machine\r\n  # using a specific IP.\r\n  # config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;\r\n\r\n  # Create a public network, which generally matched to bridged network.\r\n  # Bridged networks make the machine appear as another physical device on\r\n  # your network.\r\n  # config.vm.network &quot;public_network&quot;\r\n\r\n  # Share an additional folder to the guest VM. The first argument is\r\n  # the path on the host to the actual folder. The second argument is\r\n  # the path on the guest to mount the folder. And the optional third\r\n  # argument is a set of non-required options.\r\n  # config.vm.synced_folder &quot;../data&quot;, &quot;/vagrant_data&quot;\r\n\r\n  # Provider-specific configuration so you can fine-tune various\r\n  # backing providers for Vagrant. These expose provider-specific options.\r\n  # Example for VirtualBox:\r\n  #\r\n  config.vm.provider &quot;virtualbox&quot; do |vb|\r\n    # Display the VirtualBox GUI when booting the machine\r\n    vb.gui = true\r\n\r\n    # Customize the amount of memory on the VM:\r\n    # vb.memory = &quot;1024&quot;\r\n    \r\n    # Disable USB 2.0\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usb&quot;, &quot;on&quot;]\r\n    vb.customize [&quot;modifyvm&quot;, :id, &quot;--usbehci&quot;, &quot;off&quot;]\r\n  end\r\n  #\r\n  # View the documentation for the provider you are using for more\r\n  # information on available options.\r\n\r\n  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies\r\n  # such as FTP and Heroku are also available. See the documentation at\r\n  # https://docs.vagrantup.com/v2/push/atlas.html for more information.\r\n  # config.push.define &quot;atlas&quot; do |push|\r\n  #   push.app = &quot;YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME&quot;\r\n  # end\r\n\r\n  # Enable provisioning with a shell script. Additional provisioners such as\r\n  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the\r\n  # documentation for more information about their specific syntax and use.\r\n  # config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL\r\n  #   sudo apt-get update\r\n  #   sudo apt-get install -y apache2\r\n  # SHELL\r\n\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2015/08/19/204044\" target=\"_blank\">Vagrant: vagrant-vbguest プラグインで仮想マシンの Guest Additions を最新に保つ - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://futurismo.biz/archives/1647\" target=\"_blank\">仮想化支援機構(VT-x/AMD-V)を有効化できません | Futurismo</a></li>\r\n\r\n	<li><a href=\"https://github.com/jonschipp/vagrant/issues/3\" target=\"_blank\">Box does not Boot Up · Issue #3 · jonschipp/vagrant</a></li></ul>\r\n','CentOS7にVirtualBox + vagrantをインストールする','','inherit','closed','closed','','1174-revision-v1','','','2016-03-06 21:45:08','2016-03-06 12:45:08','',1174,'http://49.212.213.226/wordpress/solution-log/2016/03/06/1174-revision-v1/',0,'revision','',0),(1181,1,'2016-04-05 21:49:15','2016-04-05 12:49:15','<h3>ショートカットキーを設定する</h3>\r\n\r\n<strong>[アプリケーション]</strong>-<strong>[システムツール]</strong>-<strong>[設定]</strong>-<strong>[キーボード]</strong>-<strong>[ショートカット]</strong>-<strong>[独自のショートカット]</strong>を選択。<strong>[＋]</strong>ボタンを押して\r\n<ul>\r\n	<li>名前：「端末」</li>\r\n	<li>コマンド：「gnome-terminal」</li>\r\n</ul>\r\nと入力して、ショートカットキーを設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1.jpg\"><img class=\"aligncenter size-medium wp-image-1031\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/10/2015-10-29_GNOME_Terminal_shortcut1-300x192.jpg\" alt=\"2015-10-29_GNOME_Terminal_shortcut1\" width=\"300\" height=\"192\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li>「<a href=\"http://goblous.com/Memo/index.php?Article=IT/OS_CentOS/Ref_Terminal.html\">Goblous.com」 - 情報メモサイト</a></li>\r\n</ul>','CentOS7でGnome Terminalにショートカットキーを設定する','','inherit','closed','closed','','1030-revision-v1','','','2016-04-05 21:49:15','2016-04-05 12:49:15','',1030,'http://49.212.213.226/wordpress/solution-log/2016/04/05/1030-revision-v1/',0,'revision','',0),(1183,1,'2016-04-22 23:43:52','2016-04-22 14:43:52','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\n\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\n\n<h3>ドライバをインストール、カーネルを再構築する</h3>\n<pre class=\"brush: bash\">\nyum update\nreboot \n\n# 最新バージョンのカーネルを選択し起動させる\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\n\nsystemctl disable gdm\nreboot\n\n# グラフィックスドライバをインストールする\nbash NVIDIA-Linux-x86_64-352.30.run\n# ユーザーアカウントのダウンロードディレクトリなどにファイルがある場合\n# CentOSのターミナルからにほんごが\n\n\n# シンボリックリンクを作成する前にサービスを起動する\nsystemctl enable gdm.service\n\n# エラーが出たらオプションを-「f」に変更\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\n\nreboot\n</pre>\n\n\n<h3>参考サイト</h3>\n<ul>\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','inherit','closed','closed','','1117-autosave-v1','','','2016-04-22 23:43:52','2016-04-22 14:43:52','',1117,'http://49.212.213.226/wordpress/solution-log/2016/04/22/1117-autosave-v1/',0,'revision','',0),(1184,1,'2016-04-22 23:45:20','2016-04-22 14:45:20','CentOS7をアップデートするとグラフィックスドライバをカーネルに対して再構築しないといけないので手順をまとめておく\r\n\r\n<h3>NVIDIAグラフィックスドライバーを入手する</h3>\r\n<a href=\"http://www.nvidia.co.jp/Download/index.aspx?lang=jp\" target=\"_blank\">NVIDIAのサイト</a>よりダウンロードしておく\r\n\r\n<h3>ドライバをインストール、カーネルを再構築する</h3>\r\n<pre class=\"brush: bash\">\r\nyum update\r\nreboot \r\n\r\n# 最新バージョンのカーネルを選択し起動させる\r\n# もしGNOMEが立ち上がらない場合はCtl + Alt + F2でログインする\r\n\r\nsystemctl disable gdm\r\nreboot\r\n\r\n# グラフィックスドライバをインストールする\r\nbash NVIDIA-Linux-x86_64-352.30.run\r\n\r\n# ユーザーアカウントのダウンロードディレクトリなどにファイルがある場合\r\n# CentOSのターミナルから日本語が読み込めないし打ち込めない場合\r\nbash `find /home/tomonori -name &quot;NVIDIA*&quot;`\r\n\r\n# シンボリックリンクを作成する前にサービスを起動する\r\nsystemctl enable gdm.service\r\n\r\n# エラーが出たらオプションを-「f」に変更\r\nln -s &#039;/usr/lib/systemd/system/gdm.service&#039; &#039;/etc/systemd/system/display-manager.service&#039;\r\n\r\nreboot\r\n</pre>\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://linuxconfig.org/nvidia-geforce-driver-installation-on-centos-7-linux-64-bit\" target=\"_blank\">NVIDIA GeForce Driver Installation on CentOS 7 Linux 64-bit</a></li>\r\n</ul>','CentOS7へNVIDIAグラフィックスドライバをインストールする','','inherit','closed','closed','','1117-revision-v1','','','2016-04-22 23:45:20','2016-04-22 14:45:20','',1117,'http://49.212.213.226/wordpress/solution-log/2016/04/22/1117-revision-v1/',0,'revision','',0),(1186,1,'2018-05-23 18:57:14','2018-05-23 09:57:14','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする※注意</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。<strong>既にVirtualBoxがインストールされている場合は必ず最新バージョンのVirtualBoxを利用する</strong>。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" /></a>\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" /></a>\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nyum install epel-release\r\nyum install dkms\r\nyum groupinstall &quot;Development Tools&quot;\r\nyum install kernel-devel\r\nyum update\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelとkernel-develのバージョンが同じでない場合は<a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\">インストールが失敗する</a>。yum updateを実行すると良い。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" /></a>\r\n\r\n\r\n<h3>共有フォルダの設定を行う</h3>\r\n\r\n<a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">こちら</a>を参考にする\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">【 Virtual Box 】共有フォルダを介して、ホストOS(Windows 7) と ゲストOS(Debian/ MathLibre)でファイルやりとりするための設定  - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\" target=\"_blank\">VirtualBox 上の CentOS 7.2 に Guest Additions をインストールする - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-autosave-v1','','','2018-05-23 18:57:14','2018-05-23 09:57:14','',1003,'http://49.212.213.226/wordpress/solution-log/2016/05/11/1003-autosave-v1/',0,'revision','',0),(1187,1,'2016-05-11 02:19:17','2016-05-10 17:19:17','','160510_install_centos7_on_vb_1','','inherit','closed','closed','','160510_install_centos7_on_vb_1','','','2016-05-11 02:19:17','2016-05-10 17:19:17','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1.jpg',0,'attachment','image/jpeg',0),(1188,1,'2016-05-11 02:19:18','2016-05-10 17:19:18','','160510_install_centos7_on_vb_2','','inherit','closed','closed','','160510_install_centos7_on_vb_2','','','2016-05-11 02:19:18','2016-05-10 17:19:18','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2.jpg',0,'attachment','image/jpeg',0),(1189,1,'2016-05-11 02:19:19','2016-05-10 17:19:19','','160510_install_centos7_on_vb_3','','inherit','closed','closed','','160510_install_centos7_on_vb_3','','','2016-05-11 02:19:19','2016-05-10 17:19:19','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3.jpg',0,'attachment','image/jpeg',0),(1190,1,'2016-05-11 02:19:20','2016-05-10 17:19:20','','160510_install_centos7_on_vb_4','','inherit','closed','closed','','160510_install_centos7_on_vb_4','','','2016-05-11 02:19:20','2016-05-10 17:19:20','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4.jpg',0,'attachment','image/jpeg',0),(1191,1,'2016-05-11 02:19:21','2016-05-10 17:19:21','','160510_install_centos7_on_vb_5','','inherit','closed','closed','','160510_install_centos7_on_vb_5','','','2016-05-11 02:19:21','2016-05-10 17:19:21','',1003,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5.jpg',0,'attachment','image/jpeg',0),(1192,1,'2016-05-11 02:27:46','2016-05-10 17:27:46','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"160510_install_centos7_on_vb_1\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"160510_install_centos7_on_vb_2\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" />\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"160510_install_centos7_on_vb_3\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"160510_install_centos7_on_vb_4\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" />\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel xxxxx\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelのバージョンが合っていない場合はインストールする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"160510_install_centos7_on_vb_5\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" />\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-revision-v1','','','2016-05-11 02:27:46','2016-05-10 17:27:46','',1003,'http://49.212.213.226/wordpress/solution-log/2016/05/11/1003-revision-v1/',0,'revision','',0),(1193,1,'2016-05-11 02:29:48','2016-05-10 17:29:48','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"160510_install_centos7_on_vb_1\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"160510_install_centos7_on_vb_2\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" />\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"160510_install_centos7_on_vb_3\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"160510_install_centos7_on_vb_4\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" />\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel xxxxx\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelのバージョンが合っていない場合はインストールする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"160510_install_centos7_on_vb_5\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" />\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-revision-v1','','','2016-05-11 02:29:48','2016-05-10 17:29:48','',1003,'http://49.212.213.226/wordpress/solution-log/2016/05/11/1003-revision-v1/',0,'revision','',0),(1195,1,'2016-07-15 15:40:49','2016-07-15 06:40:49','<h3>vsftpdを導入する</h3>\r\n<pre class=\"brush: bash\">\r\n# vsftpdをyumでインストールする\r\nyum install vsftpd\r\n\r\n# サービスの自動設定を行う\r\nsystemctl start vsftpd\r\nsystemctl enable vsftpd\r\n\r\nsystemctl status vsftpd.service # 確認\r\nsystemctl is-enabled vsftpd.service # 確認\r\n\r\n# アクセス制限の設定を行う\r\n\r\n# パケットフィルタリングの設定を行う\r\nfirewall-cmd --permanent --add-service=ftp\r\nfirewall-cmd --reload\r\n</pre>\r\n\r\n<h3>vsftpdの動作設定を行う</h3>\r\n\r\n<h4>chrootを設定するのみ</h4>\r\n<pre class=\"brush: bash\">\r\n\r\nchroot_local_user=YES\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<h4>詳細設定</h4>\r\n\r\n<pre class=\"brush: bash\">\r\n# 匿名ログイン禁止\r\nanonymous_enable=NO\r\n\r\n# アスキーモードでの転送を許可\r\nascii_upload_enable=YES\r\nascii_download_enable=YES\r\n\r\n# chroot有効\r\nchroot_local_user=YES\r\nchroot_list_enable=YES\r\n\r\n# chroot リストファイル指定\r\nchroot_list_file=/etc/vsftpd/chroot_list\r\n\r\n# ディレクトリごと一括での転送有効\r\nls_recurse_enable=YES\r\n\r\n# IPv4をリスンする\r\nlisten=YES\r\n\r\n# IPv6 はリスンしない\r\nlisten_ipv6=NO\r\n\r\n# 最終行へ追記\r\n# ルートディレクトリ指定 (指定しない場合はホームディレクトリがルートディレクトリとなる)\r\nlocal_root=public_html\r\n\r\n# ローカルタイムを使う\r\nuse_localtime=YES\r\n\r\n# seccomp filter をオフにする ( ログインに失敗する場合はオフにする )\r\nseccomp_sandbox=NO\r\n\r\n# ユーザ個別設定ファイルの配置設定\r\nuser_config_dir=/etc/vsftpd/vsftpd_user_conf\r\n\r\n# 通常だとユーザーのホームディレクトリ以外にはchroot設定は行えない\r\n# ホームディレクトリ以外でもchroot設定が有効になるようにする\r\nallow_writeable_chroot=YES\r\n</pre>\r\n\r\n\r\n<pre class=\"brush: bash\">\r\n# ユーザーのchrootディレクトリを設定する\r\nmkdir /etc/vsftpd/vsftpd_user_conf\r\n\r\nvi /etc/vsftpd/vsftpd_user_conf/ftp-user\r\nlocal_root=/var/ftp\r\n\r\nchowm -R ftp-user:ftp-user /var/ftp\r\n\r\n# とりあえず作成する\r\nvi /etc/vsftpd/chroot_list\r\n\r\nftp-user\r\n</pre>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://CentOS 7 : Vsftpd : インストール ： Server World\" target=\"_blank\">CentOS 7 : Vsftpd : インストール ： Server World</a></li>\r\n\r\n	<li><a href=\"http://blog.sugulab.com/?p=1635\" target=\"_blank\">[Linux] chroot_list と user_list による権限管理｜vsftpd -スグラボ-</a></li>\r\n\r\n	<li><a href=\"http://d.hatena.ne.jp/flageo/20081219/p1\" target=\"_blank\">vsftpdでchrootの設定を行うには。 - 春木屋</a></li>\r\n\r\n	<li><a href=\"http://qiita.com/tukiyo3/items/5360e74eff80c894dfae\" target=\"_blank\">vsftpdを設定した - Qiita</a></li>\r\n	<li><a href=\"http://park1.wakwak.com/~ima/centos4_vsftpd0005.html\">[CentOS][vsftpd]ログインユーザ毎に個別の設定ファイルを適用する | ごった煮 - tips about programming and building a serve</a></li>\r\n	<li><a href=\"https://forums.ubuntulinux.jp/viewtopic.php?id=16644\" target=\"_blank\">Ubuntu日本語フォーラム / vsftpdでアップロードを可能にしつつchrootをする方法について</a></li>\r\n\r\n</ul>','CentOS7にFTPサーバを構築する','','inherit','closed','closed','','1067-revision-v1','','','2016-07-15 15:40:49','2016-07-15 06:40:49','',1067,'http://49.212.213.226/wordpress/solution-log/2016/07/15/1067-revision-v1/',0,'revision','',0),(1197,1,'2016-08-22 18:43:47','2016-08-22 09:43:47','<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\ndmesg\r\nfdisk -l\r\n\r\nyum install epel-release\r\nyum  -y  --enablerepo=epel  install  dkms fuse-ntfs-3g\r\n\r\nmkidr /mnt/d\r\nmount /dev/sdc1 /mnt/d\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://www.totsusangyo.com/netcommons/?page_id=57\" target=\"_blank\">CentOS7でUSBディスク（NTFS）をマウントする  - Open Source Software Forum</a>\r\n<a href=\"http://mrs.suzu841.com/mini_memo/numero_13.html\" target=\"_blank\">Linux CentOS 外付けHDDのフォーマットとマウント</a>\r\n<a href=\"http://d.hatena.ne.jp/kiyotune/20110509/1304918556\" target=\"_blank\">CentOS 5.6 でNTFSのUSB HDDをマウントする - 常水商会::よしなしごと::旧本店</a>\r\n','CentOS7でUSBHDD（NTFS）をマウントする','','publish','closed','closed','','centos7%e3%81%a7usbhdd%ef%bc%88ntfs%ef%bc%89%e3%82%92%e3%83%9e%e3%82%a6%e3%83%b3%e3%83%88%e3%81%99%e3%82%8b','','','2016-08-22 19:19:23','2016-08-22 10:19:23','',0,'http://49.212.213.226/wordpress/solution-log/?p=1197',0,'post','',0),(1198,1,'2016-08-22 18:43:47','2016-08-22 09:43:47','<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://www.totsusangyo.com/netcommons/?page_id=57\" target=\"_blank\">CentOS7でUSBディスク（NTFS）をマウントする  - Open Source Software Forum</a>\r\n<a href=\"http://mrs.suzu841.com/mini_memo/numero_13.html\" target=\"_blank\">Linux CentOS 外付けHDDのフォーマットとマウント</a>\r\n<a href=\"http://d.hatena.ne.jp/kiyotune/20110509/1304918556\" target=\"_blank\">CentOS 5.6 でNTFSのUSB HDDをマウントする - 常水商会::よしなしごと::旧本店</a>\r\n','CentOS7でUSBHDD（NTFS）をマウントする','','inherit','closed','closed','','1197-revision-v1','','','2016-08-22 18:43:47','2016-08-22 09:43:47','',1197,'http://49.212.213.226/wordpress/solution-log/2016/08/22/1197-revision-v1/',0,'revision','',0),(1199,1,'2016-08-22 19:19:23','2016-08-22 10:19:23','<h3>想定環境</h3>\r\n<ul>\r\n	<li><strong>さくらのVPS 2GB</strong></li>\r\n<li><strong>CentOS7</strong></li>\r\n\r\n</ul>\r\n\r\ndmesg\r\nfdisk -l\r\n\r\nyum install epel-release\r\nyum  -y  --enablerepo=epel  install  dkms fuse-ntfs-3g\r\n\r\nmkidr /mnt/d\r\nmount /dev/sdc1 /mnt/d\r\n\r\n\r\n\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<a href=\"http://www.totsusangyo.com/netcommons/?page_id=57\" target=\"_blank\">CentOS7でUSBディスク（NTFS）をマウントする  - Open Source Software Forum</a>\r\n<a href=\"http://mrs.suzu841.com/mini_memo/numero_13.html\" target=\"_blank\">Linux CentOS 外付けHDDのフォーマットとマウント</a>\r\n<a href=\"http://d.hatena.ne.jp/kiyotune/20110509/1304918556\" target=\"_blank\">CentOS 5.6 でNTFSのUSB HDDをマウントする - 常水商会::よしなしごと::旧本店</a>\r\n','CentOS7でUSBHDD（NTFS）をマウントする','','inherit','closed','closed','','1197-revision-v1','','','2016-08-22 19:19:23','2016-08-22 10:19:23','',1197,'http://49.212.213.226/wordpress/solution-log/2016/08/22/1197-revision-v1/',0,'revision','',0),(1201,1,'2016-12-18 23:52:57','2016-12-18 14:52:57','<h3>Pipをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\n</pre>\r\n\r\n<h3>Xvfbをインストールする</h3>\r\nブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする\r\n\r\n<pre class=\"brush: bash\">\r\nyum -y install xorg-x11-server-Xvfb\r\npip install pyvirtualdisplay\r\n</pre>\r\n\r\n<h3>SeleniumとFirefoxをインストールする</h3>\r\nSeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。\r\n\r\n<pre class=\"brush: bash\">\r\ncurl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz\r\ntar fzxv geckodriver-v0.11.1-linux64.tar.gz \r\nmv geckodriver /usr/local/bin/\r\n\r\npip install selenium\r\n\r\nyum install firefox\r\n</pre>\r\n\r\n<h3>テストスクリプト例</h3>\r\nCLI環境でスクリプトを実行する場合は必ずVirtualDisplayを経由させる。geckodriverがエラーで立ち上がらない。\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n\r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(&quot;http://yahoo.co.jp&quot;)\r\nprint driver.title\r\n\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n\r\n','CentOS7にSeleniuimをインストールする','','publish','closed','closed','','centos7%e3%81%abseleniuim%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2017-02-09 23:12:10','2017-02-09 14:12:10','',0,'http://49.212.213.226/wordpress/solution-log/?p=1201',0,'post','',0),(1202,1,'2016-12-18 23:51:39','2016-12-18 14:51:39','<h3>Pipをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\n</pre>\r\n\r\n<h3>Xvfbをインストールする</h3>\r\nブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする\r\n\r\n<pre class=\"brush: bash\">\r\nyum -y install xorg-x11-server-Xvfb\r\npip install pyvirtualdisplay\r\n</pre>\r\n\r\n<h3>SeleniumとFirefoxをインストールする</h3>\r\nSeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。\r\n\r\n<pre class=\"brush: bash\">\r\ncurl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz\r\ntar fzxv geckodriver-v0.11.1-linux64.tar.gz \r\nmv geckodriver /usr/local/bin/\r\n\r\npip install selenium\r\n\r\nyum install firefox\r\n</pre>\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n\r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(&quot;http://yahoo.co.jp&quot;)\r\nprint driver.title\r\n\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n\r\n','CentOS7にSeleniuimをインストールする','','inherit','closed','closed','','1201-revision-v1','','','2016-12-18 23:51:39','2016-12-18 14:51:39','',1201,'http://49.212.213.226/wordpress/solution-log/2016/12/18/1201-revision-v1/',0,'revision','',0),(1204,1,'2017-01-02 19:21:21','2017-01-02 10:21:21','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"160510_install_centos7_on_vb_1\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"160510_install_centos7_on_vb_2\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" />\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"160510_install_centos7_on_vb_3\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" />\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"160510_install_centos7_on_vb_4\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" />\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nsudo yum install epel-release\r\nsudo yum install dkms\r\nsudo yum groupinstall &quot;Development Tools&quot;\r\nsudo yum install kernel-devel xxxxx\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelのバージョンが合っていない場合はインストールする。\r\n\r\n<img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"160510_install_centos7_on_vb_5\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" />\r\n\r\n\r\n<h3>共有フォルダの設定を行う</h3>\r\n\r\n<a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">こちら</a>を参考にする\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">【 Virtual Box 】共有フォルダを介して、ホストOS(Windows 7) と ゲストOS(Debian/ MathLibre)でファイルやりとりするための設定  - Qiita</a></li>\r\n\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-revision-v1','','','2017-01-02 19:21:21','2017-01-02 10:21:21','',1003,'http://49.212.213.226/wordpress/solution-log/2017/01/02/1003-revision-v1/',0,'revision','',0),(1206,1,'2017-01-28 22:33:06','2017-01-28 13:33:06','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.amedama.jp/entry/2015/09/24/222040\" target=\"_blank\">CentOS7 で Docker を使ってみる - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://www.kunst1080.net/entry/2016/05/29/005815\" target=\"_blank\">稼働中のdockerコンテナのIPアドレス一覧を取得する - くんすとの備忘録</a></li>\r\n	<li><a href=\"http://selenium-python.readthedocs.io/getting-started.html\" target=\"_blank\">2. Getting Started — Selenium Python Bindings 2 documentation</a></li>\r\n\r\n\r\n</ul>','CentOS7でSeleniumをDockerコンテナで利用する','','publish','closed','closed','','centos7%e3%81%a7selenium%e3%82%92docker%e3%82%b3%e3%83%b3%e3%83%86%e3%83%8a%e3%81%a7%e5%88%a9%e7%94%a8%e3%81%99%e3%82%8b','','','2017-01-28 22:33:06','2017-01-28 13:33:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=1206',0,'post','',0),(1207,1,'2017-01-28 22:16:33','2017-01-28 13:16:33','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:16:33','2017-01-28 13:16:33','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1208,1,'2017-01-28 22:17:09','2017-01-28 13:17:09','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:17:09','2017-01-28 13:17:09','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1209,1,'2017-01-28 22:21:35','2017-01-28 13:21:35','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://www.kunst1080.net/entry/2016/05/29/005815\" target=\"_blank\">稼働中のdockerコンテナのIPアドレス一覧を取得する - くんすとの備忘録</a>\r\n\r\n</ul>','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:21:35','2017-01-28 13:21:35','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1210,1,'2017-01-28 22:25:43','2017-01-28 13:25:43','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n</li><a href=\"http://blog.amedama.jp/entry/2015/09/24/222040\" target=\"_blank\">CentOS7 で Docker を使ってみる - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://www.kunst1080.net/entry/2016/05/29/005815\" target=\"_blank\">稼働中のdockerコンテナのIPアドレス一覧を取得する - くんすとの備忘録</a></li>\r\n\r\n</ul>','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:25:43','2017-01-28 13:25:43','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1211,1,'2017-01-28 22:26:04','2017-01-28 13:26:04','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.amedama.jp/entry/2015/09/24/222040\" target=\"_blank\">CentOS7 で Docker を使ってみる - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://www.kunst1080.net/entry/2016/05/29/005815\" target=\"_blank\">稼働中のdockerコンテナのIPアドレス一覧を取得する - くんすとの備忘録</a></li>\r\n\r\n</ul>','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:26:04','2017-01-28 13:26:04','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1212,1,'2017-01-28 22:31:43','2017-01-28 13:31:43','<h3>DockerをインストールしFirefoxコンテナを立ち上げる</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install docker\r\nsystemctl start docker\r\nsytemctl enable docker\r\ndocker run -d -p 4444:4444 selenium/standalone-firefox:latest\r\n</pre>\r\n\r\n<h3>Python Seleniumをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\npip install selenium\r\n</pre>\r\n\r\n<h3>DockerコンテナのIPアドレスを取得する</h3>\r\n接続先のDockerコンテナのIPアドレスを指定しないとコンテナに接続出来ない。テストスクリプトにIPアドレスを記述するために取得する。\r\n\r\n<pre class=\"brush: bash\">\r\ndocker ps | awk &#039;NR&gt;1&amp;&amp;$0=$1&#039; | xargs -n 1 docker inspect -f &quot;{{.Name}} {{.NetworkSettings.IPAddress }}&quot;\r\n</pre>\r\n\r\n\r\n<h3>テストスクリプト例</h3>\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n                                                                                             \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\n                                                                                             \r\ndriver = webdriver.Remote(                                                                   \r\n  command_executor=&#039;http://127.17.0.2:4444/wd/hub&#039;,                                          \r\n  desired_capabilities=firefox_capabilities)                                                 \r\ndriver.get(&quot;http://yahoo.co.jp&quot;)                                                             \r\n                                                                                             \r\nprint driver.title                                                                           \r\n                                                                                             \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"http://blog.amedama.jp/entry/2015/09/24/222040\" target=\"_blank\">CentOS7 で Docker を使ってみる - CUBE SUGAR CONTAINER</a></li>\r\n	<li><a href=\"http://www.kunst1080.net/entry/2016/05/29/005815\" target=\"_blank\">稼働中のdockerコンテナのIPアドレス一覧を取得する - くんすとの備忘録</a></li>\r\n	<li><a href=\"http://selenium-python.readthedocs.io/getting-started.html\" target=\"_blank\">2. Getting Started — Selenium Python Bindings 2 documentation</a></li>\r\n\r\n\r\n</ul>','CentOS7でSeleniumをDockerコンテナで利用する','','inherit','closed','closed','','1206-revision-v1','','','2017-01-28 22:31:43','2017-01-28 13:31:43','',1206,'http://49.212.213.226/wordpress/solution-log/2017/01/28/1206-revision-v1/',0,'revision','',0),(1214,1,'2017-02-09 23:11:56','2017-02-09 14:11:56','<h3>Pipをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\n</pre>\r\n\r\n<h3>Xvfbをインストールする</h3>\r\nブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする\r\n\r\n<pre class=\"brush: bash\">\r\nyum -y install xorg-x11-server-Xvfb\r\npip install pyvirtualdisplay\r\n</pre>\r\n\r\n<h3>SeleniumとFirefoxをインストールする</h3>\r\nSeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。\r\n\r\n<pre class=\"brush: bash\">\r\ncurl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz\r\ntar fzxv geckodriver-v0.11.1-linux64.tar.gz \r\nmv geckodriver /usr/local/bin/\r\n\r\npip install selenium\r\n\r\nyum install firefox\r\n</pre>\r\n\r\n<h3>テストスクリプト例</h3>\r\nCLI環境でスクリプトを実行する場合は必ずVirtualDisplayを経由させる。geckodriverがエラーで立ち上がらない。\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n\r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(&quot;http://yahoo.co.jp&quot;)\r\nprint driver.title\r\n\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n\r\n','CentOS7にSeleniuimをインストールする','','inherit','closed','closed','','1201-autosave-v1','','','2017-02-09 23:11:56','2017-02-09 14:11:56','',1201,'http://49.212.213.226/wordpress/solution-log/2017/02/09/1201-autosave-v1/',0,'revision','',0),(1215,1,'2017-02-09 23:12:10','2017-02-09 14:12:10','<h3>Pipをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nyum install epel-release\r\nyum install python-pip\r\npip install --upgrade pip\r\n</pre>\r\n\r\n<h3>Xvfbをインストールする</h3>\r\nブラウザを立ち上げずにSeleniumを操作するのに必要なライブラリをインストールする\r\n\r\n<pre class=\"brush: bash\">\r\nyum -y install xorg-x11-server-Xvfb\r\npip install pyvirtualdisplay\r\n</pre>\r\n\r\n<h3>SeleniumとFirefoxをインストールする</h3>\r\nSeleniumからFirefoxを操作するにはGeckodriverをインストールする。他のブラウザを利用する時でも何らかのドライバをインストールする必要がありそうだ。\r\n\r\n<pre class=\"brush: bash\">\r\ncurl -O -L https://github.com/mozilla/geckodriver/releases/download/v0.11.1/geckodriver-v0.11.1-linux64.tar.gz\r\ntar fzxv geckodriver-v0.11.1-linux64.tar.gz \r\nmv geckodriver /usr/local/bin/\r\n\r\npip install selenium\r\n\r\nyum install firefox\r\n</pre>\r\n\r\n<h3>テストスクリプト例</h3>\r\nCLI環境でスクリプトを実行する場合は必ずVirtualDisplayを経由させる。geckodriverがエラーで立ち上がらない。\r\n<pre class=\"brush: python\">\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n\r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(&quot;http://yahoo.co.jp&quot;)\r\nprint driver.title\r\n\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n	<ul>\r\n<li><a href=\"http://qiita.com/tukiyo3/items/003eba922c9ab8bfe3ac\" target=\"_blank\">Ubuntu16.04のFirefox47でSelenium WebDriverを動かす方法 - Qiita</a></li>\r\n	<li><a href=\"http://stackoverflow.com/questions/16180428/can-selenium-webdriver-open-browser-windows-silently-in-background\" target=\"_blank\">Can Selenium Webdriver open browser windows silently in background? - Stack Overflow</a></li>\r\n	<li><a href=\"http://blog.amedama.jp/entry/2016/01/03/115602\" target=\"_blank\">Xvfb を使って仮想ディスプレイを作る - CUBE SUGAR CONTAINER</a></li>\r\n\r\n</ul>\r\n\r\n','CentOS7にSeleniuimをインストールする','','inherit','closed','closed','','1201-revision-v1','','','2017-02-09 23:12:10','2017-02-09 14:12:10','',1201,'http://49.212.213.226/wordpress/solution-log/2017/02/09/1201-revision-v1/',0,'revision','',0),(1216,1,'2017-02-14 19:11:31','2017-02-14 10:11:31','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp\r\n\r\n# 実行結果\r\nYahoo! JAPAN\r\nhttp://yahoo.co.jp\r\n</pre>\r\n','Seleniumでコマンドラインでページタイトルを取得する','','publish','closed','closed','','selenium%e3%81%a7%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%83%a9%e3%82%a4%e3%83%b3%e3%81%a7%e3%83%9a%e3%83%bc%e3%82%b8%e3%82%bf%e3%82%a4%e3%83%88%e3%83%ab%e3%82%92%e5%8f%96%e5%be%97%e3%81%99%e3%82%8b','','','2017-02-14 19:36:04','2017-02-14 10:36:04','',0,'http://49.212.213.226/wordpress/solution-log/?p=1216',0,'post','',0),(1217,1,'2017-02-14 19:05:48','2017-02-14 10:05:48','<h3>コマンドラインからページタイトルを取得する</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>','Seleniumでページタイトルを取得する','','inherit','closed','closed','','1216-revision-v1','','','2017-02-14 19:05:48','2017-02-14 10:05:48','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-revision-v1/',0,'revision','',0),(1218,1,'2017-02-14 19:07:57','2017-02-14 10:07:57','<h3>コマンドラインからページタイトルを取得する</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n','Seleniumでコマンドラインでページタイトルを取得する','','inherit','closed','closed','','1216-revision-v1','','','2017-02-14 19:07:57','2017-02-14 10:07:57','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-revision-v1/',0,'revision','',0),(1219,1,'2017-02-14 19:11:03','2017-02-14 10:11:03','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする\r\n\r\n<h3>コマンドラインからページタイトルを取得する</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n','Seleniumでコマンドラインでページタイトルを取得する','','inherit','closed','closed','','1216-revision-v1','','','2017-02-14 19:11:03','2017-02-14 10:11:03','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-revision-v1/',0,'revision','',0),(1220,1,'2017-02-14 19:35:52','2017-02-14 10:35:52','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp\r\n\r\n# 実行結果\r\nYahoo! JAPAN\r\nhttp://yahoo.co.jp\r\n</pre>\r\n','Seleniumでコマンドラインでページタイトルを取得する','','inherit','closed','closed','','1216-autosave-v1','','','2017-02-14 19:35:52','2017-02-14 10:35:52','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-autosave-v1/',0,'revision','',0),(1221,1,'2017-02-14 19:20:43','2017-02-14 10:20:43','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp\r\n\r\n# 実行結果\r\nYahoo! JAPAN\r\n</pre>\r\n','Seleniumでコマンドラインでページタイトルを取得する','','inherit','closed','closed','','1216-revision-v1','','','2017-02-14 19:20:43','2017-02-14 10:20:43','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-revision-v1/',0,'revision','',0),(1222,1,'2017-02-14 19:30:02','2017-02-14 10:30:02','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nfrom selenium import webdriver\r\nfrom selenium.webdriver.common.keys import Keys\r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities\r\n \r\nfrom pyvirtualdisplay import Display\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\n \r\nfirefox_capabilities = DesiredCapabilities.FIREFOX\r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n \r\n \r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)\r\n\r\nprint driver.title\r\nprint url\r\n \r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp\r\n\r\n# 実行結果\r\nYahoo! JAPAN\r\nhttp://yahoo.co.jp\r\n</pre>\r\n','Seleniumでコマンドラインでページタイトルを取得する','','inherit','closed','closed','','1216-revision-v1','','','2017-02-14 19:30:02','2017-02-14 10:30:02','',1216,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1216-revision-v1/',0,'revision','',0),(1223,1,'2017-02-14 19:48:26','2017-02-14 10:48:26','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする。\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nimport os\r\nimport codecs\r\nfrom pyvirtualdisplay import Display\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\nsave_dir = args[2]\r\nfile_name = args[3]\r\n\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)                                               \r\nhtml = driver.page_source\r\n\r\ncompleteName = os.path.join(save_dir, file_name) \r\nfile_object = codecs.open(completeName, &quot;w&quot;, &quot;utf-8&quot;)                                       \r\n\r\nfile_object.write(html)\r\nfile_object.close()\r\n\r\nprint driver.title\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# python script_file url file_dir file_name\r\n\r\npython get_page_title_by_cli.py http://yahoo.co.jp &#039;/home/user/&#039; &#039;yahoo.html&#039;\r\n</pre>','Seleniumでコマンドラインでページソースを取得する','','publish','closed','closed','','selenium%e3%81%a7%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%83%a9%e3%82%a4%e3%83%b3%e3%81%a7%e3%83%9a%e3%83%bc%e3%82%b8%e3%82%bd%e3%83%bc%e3%82%b9%e3%82%92%e5%8f%96%e5%be%97%e3%81%99%e3%82%8b','','','2017-02-14 19:48:26','2017-02-14 10:48:26','',0,'http://49.212.213.226/wordpress/solution-log/?p=1223',0,'post','',0),(1224,1,'2017-02-14 19:44:53','2017-02-14 10:44:53','<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python>\r\nimport sys\r\nimport os\r\nimport codecs\r\nfrom pyvirtualdisplay import Display\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\nsave_dir = args[2]\r\nfile_name = args[3]\r\n\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)                                               \r\nhtml = driver.page_source\r\n\r\ncompleteName = os.path.join(save_dir, file_name) \r\nfile_object = codecs.open(completeName, &quot;w&quot;, &quot;utf-8&quot;)                                       \r\n\r\nfile_object.write(html)\r\nfile_object.close()\r\n\r\nprint driver.title\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp &#039;/home/user/&#039; &#039;yahoo.html&#039;\r\n</pre>','Seleniumでコマンドラインでページソースを取得する','','inherit','closed','closed','','1223-revision-v1','','','2017-02-14 19:44:53','2017-02-14 10:44:53','',1223,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1223-revision-v1/',0,'revision','',0),(1225,1,'2017-02-14 19:45:27','2017-02-14 10:45:27','<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nimport os\r\nimport codecs\r\nfrom pyvirtualdisplay import Display\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\nsave_dir = args[2]\r\nfile_name = args[3]\r\n\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)                                               \r\nhtml = driver.page_source\r\n\r\ncompleteName = os.path.join(save_dir, file_name) \r\nfile_object = codecs.open(completeName, &quot;w&quot;, &quot;utf-8&quot;)                                       \r\n\r\nfile_object.write(html)\r\nfile_object.close()\r\n\r\nprint driver.title\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\npython get_page_title_by_cli.py http://yahoo.co.jp &#039;/home/user/&#039; &#039;yahoo.html&#039;\r\n</pre>','Seleniumでコマンドラインでページソースを取得する','','inherit','closed','closed','','1223-revision-v1','','','2017-02-14 19:45:27','2017-02-14 10:45:27','',1223,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1223-revision-v1/',0,'revision','',0),(1226,1,'2017-02-14 19:47:49','2017-02-14 10:47:49','Selenium、Pythonの設定方法は『<strong>CentOS7にSeleniuimをインストールする</strong>』を参考にする。\r\n\r\n<h3>スクリプトの書き方</h3>\r\n\r\n<pre class=\"brush: python\">\r\nimport sys\r\nimport os\r\nimport codecs\r\nfrom pyvirtualdisplay import Display\r\nfrom selenium import webdriver                                                               \r\nfrom selenium.webdriver.common.desired_capabilities import DesiredCapabilities               \r\n\r\ndisplay = Display(visible=0, size=(1024, 768))\r\ndisplay.start()\r\n\r\n\r\nargs = sys.argv\r\nurl = args[1]\r\nsave_dir = args[2]\r\nfile_name = args[3]\r\n\r\n\r\nfirefox_capabilities = DesiredCapabilities.FIREFOX                                           \r\nfirefox_capabilities[&#039;marionette&#039;] = True\r\nfirefox_capabilities[&#039;binary&#039;] = &#039;/usr/bin/firefox&#039;\r\n\r\n\r\ndriver = webdriver.Firefox(capabilities=firefox_capabilities)\r\ndriver.get(url)                                               \r\nhtml = driver.page_source\r\n\r\ncompleteName = os.path.join(save_dir, file_name) \r\nfile_object = codecs.open(completeName, &quot;w&quot;, &quot;utf-8&quot;)                                       \r\n\r\nfile_object.write(html)\r\nfile_object.close()\r\n\r\nprint driver.title\r\ndriver.close()\r\n</pre>\r\n\r\n<h3>スクリプトを実行する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# python script_file url file_dir file_name\r\n\r\npython get_page_title_by_cli.py http://yahoo.co.jp &#039;/home/user/&#039; &#039;yahoo.html&#039;\r\n</pre>','Seleniumでコマンドラインでページソースを取得する','','inherit','closed','closed','','1223-revision-v1','','','2017-02-14 19:47:49','2017-02-14 10:47:49','',1223,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1223-revision-v1/',0,'revision','',0),(1227,1,'2017-02-14 20:14:12','2017-02-14 11:14:12','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/pattern/replacement&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して1行目に文字列を挿入する\r\nfind . -type f | xargs sed -i -e &quot;1i\\insert&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\n	<li><a href=\"https://mkacky.wordpress.com/2013/06/04/sed%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E8%A1%8C%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8C%BF%E5%85%A5%E3%81%99%E3%82%8B/\" target=\"_blank\">sedで特定の行に文字列を挿入する | mkacky</a></li>\r\n\r\n</ul>','sedで文字列を置換する','','publish','closed','closed','','sed%e3%81%a7%e6%96%87%e5%ad%97%e5%88%97%e3%82%92%e7%bd%ae%e6%8f%9b%e3%81%99%e3%82%8b','','','2017-05-11 12:26:00','2017-05-11 03:26:00','',0,'http://49.212.213.226/wordpress/solution-log/?p=1227',0,'post','',0),(1228,1,'2017-02-14 20:08:21','2017-02-14 11:08:21','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/文字列/置換対象&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/replace/replacee/g&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-revision-v1','','','2017-02-14 20:08:21','2017-02-14 11:08:21','',1227,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1227-revision-v1/',0,'revision','',0),(1229,1,'2017-02-14 20:13:17','2017-02-14 11:13:17','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/文字列/置換対象&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/replace/replacee/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/replace/replacee/g&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-revision-v1','','','2017-02-14 20:13:17','2017-02-14 11:13:17','',1227,'http://49.212.213.226/wordpress/solution-log/2017/02/14/1227-revision-v1/',0,'revision','',0),(1231,1,'2017-02-24 22:48:06','2017-02-24 13:48:06','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# 現在の設定を確認する\r\ngit config --list\r\n\r\n# ユーザー名、メールアドレスを適宜設定する\r\ngit config --global user.name &quot;John Doe&quot;\r\ngit config --global user.email johndoe@example.com\r\n</pre>\r\n\r\n<h3>リポジトリをCloneする</h3>\r\nSSHで接続する場合。\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n\r\n<h3>リポジトリに編集をPushする</h3>\r\n<pre class=\"brush: bash\">\r\n# 変更したファイルをステージングする\r\ngit add -A\r\n\r\n# ファイルの状態を確認する\r\ngit status\r\n\r\n# 変更をコミットする\r\ngit commit -m &quot;ファイルを変更した旨のコメント&quot;\r\n\r\n# リモートブランチへpushする\r\ngit push origin master\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA-Git-%E3%81%AE%E8%A8%AD%E5%AE%9A\" target=\"_blank\">Git - Git の設定</a></li>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%B8%E3%81%AE%E8%A8%98%E9%8C%B2\" target=\"_blank\">Git - 変更内容のリポジトリへの記録</a></li>\r\n</ul>','Gitリポジトリをcloneしてpushするまでの流れ','','publish','closed','closed','','git%e3%83%aa%e3%83%9d%e3%82%b8%e3%83%88%e3%83%aa%e3%82%92clone%e3%81%97%e3%81%a6push%e3%81%99%e3%82%8b%e3%81%be%e3%81%a7%e3%81%ae%e6%b5%81%e3%82%8c','','','2017-02-24 22:48:06','2017-02-24 13:48:06','',0,'http://49.212.213.226/wordpress/solution-log/?p=1231',0,'post','',0),(1232,1,'2017-02-24 22:27:29','2017-02-24 13:27:29','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<h3>Git Clone</h3>\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n','Gitリポジトリをcloneしてpushするまでの流れ','','inherit','closed','closed','','1231-revision-v1','','','2017-02-24 22:27:29','2017-02-24 13:27:29','',1231,'http://49.212.213.226/wordpress/solution-log/2017/02/24/1231-revision-v1/',0,'revision','',0),(1233,1,'2017-02-24 22:29:07','2017-02-24 13:29:07','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# 現在の設定を確認する\r\ngit config --list\r\n\r\n# ユーザー名、メールアドレスを適宜設定する\r\ngit config --global user.name &quot;John Doe&quot;\r\ngit config --global user.email johndoe@example.com\r\n</pre>\r\n\r\n<h3>Git Clone</h3>\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n','Gitリポジトリをcloneしてpushするまでの流れ','','inherit','closed','closed','','1231-revision-v1','','','2017-02-24 22:29:07','2017-02-24 13:29:07','',1231,'http://49.212.213.226/wordpress/solution-log/2017/02/24/1231-revision-v1/',0,'revision','',0),(1234,1,'2017-02-24 22:30:35','2017-02-24 13:30:35','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# 現在の設定を確認する\r\ngit config --list\r\n\r\n# ユーザー名、メールアドレスを適宜設定する\r\ngit config --global user.name &quot;John Doe&quot;\r\ngit config --global user.email johndoe@example.com\r\n</pre>\r\n\r\n<h3>リポジトリをCloneする</h3>\r\nSSHで接続する場合。\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n','Gitリポジトリをcloneしてpushするまでの流れ','','inherit','closed','closed','','1231-revision-v1','','','2017-02-24 22:30:35','2017-02-24 13:30:35','',1231,'http://49.212.213.226/wordpress/solution-log/2017/02/24/1231-revision-v1/',0,'revision','',0),(1235,1,'2017-02-24 22:46:22','2017-02-24 13:46:22','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# 現在の設定を確認する\r\ngit config --list\r\n\r\n# ユーザー名、メールアドレスを適宜設定する\r\ngit config --global user.name &quot;John Doe&quot;\r\ngit config --global user.email johndoe@example.com\r\n</pre>\r\n\r\n<h3>リポジトリをCloneする</h3>\r\nSSHで接続する場合。\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n\r\n<h3>リポジトリに編集をPushする</h3>\r\n<pre class=\"brush: bash\">\r\n# 変更したファイルをステージングする\r\ngit add -A\r\n\r\n# ファイルの状態を確認する\r\ngit status\r\n\r\n# 変更をコミットする\r\ngit commit -m &quot;再起動機能を実装した refs #294&quot;\r\n\r\n# リモートブランチへpushする\r\ngit push origin master\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA-Git-%E3%81%AE%E8%A8%AD%E5%AE%9A\" target=\"_blank\">Git - Git の設定</a></li>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%B8%E3%81%AE%E8%A8%98%E9%8C%B2\" target=\"_blank\">Git - 変更内容のリポジトリへの記録</a></li>\r\n</ul>','Gitリポジトリをcloneしてpushするまでの流れ','','inherit','closed','closed','','1231-revision-v1','','','2017-02-24 22:46:22','2017-02-24 13:46:22','',1231,'http://49.212.213.226/wordpress/solution-log/2017/02/24/1231-revision-v1/',0,'revision','',0),(1236,1,'2017-02-24 22:47:35','2017-02-24 13:47:35','<h3>クライアント側の設定をする</h3>\r\nクライアント側では最低限「<strong>user.name</strong>」および「<strong>user.email</strong>」を設定しておく。\r\n\r\n<pre class=\"brush: bash\">\r\n# 現在の設定を確認する\r\ngit config --list\r\n\r\n# ユーザー名、メールアドレスを適宜設定する\r\ngit config --global user.name &quot;John Doe&quot;\r\ngit config --global user.email johndoe@example.com\r\n</pre>\r\n\r\n<h3>リポジトリをCloneする</h3>\r\nSSHで接続する場合。\r\n<pre class=\"brush: bash\">\r\ngit clone ssh://{{ user }}@{{ yourdomain }}:{{ port }}/var/git/{{ git-repo }}\r\n</pre>\r\n\r\n<h3>リポジトリに編集をPushする</h3>\r\n<pre class=\"brush: bash\">\r\n# 変更したファイルをステージングする\r\ngit add -A\r\n\r\n# ファイルの状態を確認する\r\ngit status\r\n\r\n# 変更をコミットする\r\ngit commit -m &quot;ファイルを変更した旨のコメント&quot;\r\n\r\n# リモートブランチへpushする\r\ngit push origin master\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%9E%E3%82%A4%E3%82%BA-Git-%E3%81%AE%E8%A8%AD%E5%AE%9A\" target=\"_blank\">Git - Git の設定</a></li>\r\n	<li><a href=\"https://git-scm.com/book/ja/v1/Git-%E3%81%AE%E5%9F%BA%E6%9C%AC-%E5%A4%89%E6%9B%B4%E5%86%85%E5%AE%B9%E3%81%AE%E3%83%AA%E3%83%9D%E3%82%B8%E3%83%88%E3%83%AA%E3%81%B8%E3%81%AE%E8%A8%98%E9%8C%B2\" target=\"_blank\">Git - 変更内容のリポジトリへの記録</a></li>\r\n</ul>','Gitリポジトリをcloneしてpushするまでの流れ','','inherit','closed','closed','','1231-revision-v1','','','2017-02-24 22:47:35','2017-02-24 13:47:35','',1231,'http://49.212.213.226/wordpress/solution-log/2017/02/24/1231-revision-v1/',0,'revision','',0),(1237,1,'2017-02-25 04:20:30','2017-02-24 19:20:30','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" /></a>\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" /></a>\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nyum install epel-release\r\nyum install dkms\r\nyum groupinstall &quot;Development Tools&quot;\r\nyum install kernel-devel\r\nyum update\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelとkernel-develのバージョンが同じでない場合は<a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\">インストールが失敗する</a>。yum updateを実行すると良い。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" /></a>\r\n\r\n\r\n<h3>共有フォルダの設定を行う</h3>\r\n\r\n<a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">こちら</a>を参考にする\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">【 Virtual Box 】共有フォルダを介して、ホストOS(Windows 7) と ゲストOS(Debian/ MathLibre)でファイルやりとりするための設定  - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\" target=\"_blank\">VirtualBox 上の CentOS 7.2 に Guest Additions をインストールする - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-revision-v1','','','2017-02-25 04:20:30','2017-02-24 19:20:30','',1003,'http://49.212.213.226/wordpress/solution-log/2017/02/25/1003-revision-v1/',0,'revision','',0),(1239,1,'2017-03-06 01:20:48','2017-03-05 16:20:48','<h3>Bootメディアを作成する</h3>\r\n<del datetime=\"2017-03-06T02:11:41+00:00\">SDカードを利用する。</del>CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。SDカードは<strong>NTFS形式でフォーマット</strong>しないと4GB以上のデータがSDカードにコピー出来ないので注意する。\r\n\r\n<strong>G580はDVDドライブからしかブート出来無い。</strong>\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n<h3>Minimal イメージからインストールする場合の手順</h3>\r\nBootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。\r\n<pre class=\"brush: bash\">\r\n# ネットワークへ接続する\r\nnmtui\r\n\r\n# もしくは\r\nnmcli device # 有効なNICを調べる\r\nnmcli connection up enp3s0\r\n\r\n# 再起動時にNICが自動でネットワークへ接続するように設定を変更する\r\nvi /etc/sysconfig/network-scripts/ifcfg-enp3s0 \r\n\r\nONBOOT=&quot;yes&quot; # yesへ変更する\r\n\r\n\r\n# システムをアップデートする\r\nyum update\r\n\r\n# デスクトップ環境をインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# 常にグラフィカルモードにて起動するように設定を変更する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n# デスクトップを立ち上げる\r\nstartx\r\n</pre>\r\n\r\n<h3>マウスパッドの設定を行う</h3>\r\nデスクトップから『<strong>アプリケーション</strong>』→『<strong>システムツール</strong>』→『<strong>設定</strong>』→『<strong>マウスとタッチパッド</strong>』を開き必要項目を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\" alt=\"\" width=\"742\" height=\"349\" class=\"aligncenter size-full wp-image-1244\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<h4>ネットワークの設定方法について</h4>\r\n<ul>\r\n<li><a href=\"http://www.unix-power.net/centos7/network.html\" target=\"_blank\">CentOS7 ネットワークの設定変更</a></li>\r\n	<li><a href=\"https://orebibou.com/2014/07/centos-7%E3%81%A7%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E8%A8%AD%E5%AE%9A/\" target=\"_blank\">CentOS 7でのネットワーク設定 | 俺的備忘録 〜なんかいろいろ〜</a></li>\r\n</ul>\r\n<h4>SDカードのフォーマット方法について</h4>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','publish','closed','closed','','lenovo-g580%e3%81%abcentos7%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2017-03-06 11:25:16','2017-03-06 02:25:16','',0,'http://49.212.213.226/wordpress/solution-log/?p=1239',0,'post','',0),(1240,1,'2017-03-06 01:20:48','2017-03-05 16:20:48','<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-revision-v1','','','2017-03-06 01:20:48','2017-03-05 16:20:48','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-revision-v1/',0,'revision','',0),(1242,1,'2017-03-06 10:09:15','2017-03-06 01:09:15','<h3>Bootメディアを作成する</h3>\r\nSDカードを利用する。CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-revision-v1','','','2017-03-06 10:09:15','2017-03-06 01:09:15','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-revision-v1/',0,'revision','',0),(1244,1,'2017-03-06 10:38:23','2017-03-06 01:38:23','','170306_centos7_mousepad_setting','','inherit','closed','closed','','170306_centos7_mousepad_setting','','','2017-03-06 10:38:23','2017-03-06 01:38:23','',1239,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg',0,'attachment','image/jpeg',0),(1245,1,'2017-03-06 10:41:51','2017-03-06 01:41:51','<h3>Bootメディアを作成する</h3>\r\nSDカードを利用する。CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n<h3>マウスパッドの設定を行う</h3>\r\nデスクトップから『<strong>アプリケーション</strong>』→『<strong>システムツール</strong>』→『<strong>設定</strong>』→『<strong>マウスとタッチパッド</strong>』を開き必要項目を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\" alt=\"\" width=\"742\" height=\"349\" class=\"aligncenter size-full wp-image-1244\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-revision-v1','','','2017-03-06 10:41:51','2017-03-06 01:41:51','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-revision-v1/',0,'revision','',0),(1246,1,'2017-03-06 11:24:46','2017-03-06 02:24:46','<h3>Bootメディアを作成する</h3>\r\n<del datetime=\"2017-03-06T02:11:41+00:00\">SDカードを利用する。</del>CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。SDカードは<strong>NTFS形式でフォーマット</strong>しないと4GB以上のデータがSDカードにコピー出来ないので注意する。\r\n\r\n<strong>G580はDVDドライブからしかブート出来無い。</strong>\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n<h3>Minimal イメージからインストールする場合の手順</h3>\r\nBootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。\r\n<pre class=\"brush: bash\">\r\n# ネットワークへ接続する\r\nnmtui\r\n\r\n# もしくは\r\nnmcli device # 有効なNICを調べる\r\nnmcli connection up enp3s0\r\n\r\n# 再起動時にNICが自動でネットワークへ接続するように設定を変更する\r\nvi /etc/sysconfig/network-scripts/ifcfg-enp3s0 \r\n\r\nONBOOT=&quot;yes&quot; # yesへ変更する\r\n\r\n\r\n# システムをアップデートする\r\nyum update\r\n\r\n# デスクトップ環境をインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# 常にグラフィカルモードにて起動するように設定を変更する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n# デスクトップを立ち上げる\r\nstartx\r\n</pre>\r\n\r\n<h3>マウスパッドの設定を行う</h3>\r\nデスクトップから『<strong>アプリケーション</strong>』→『<strong>システムツール</strong>』→『<strong>設定</strong>』→『<strong>マウスとタッチパッド</strong>』を開き必要項目を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\" alt=\"\" width=\"742\" height=\"349\" class=\"aligncenter size-full wp-image-1244\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<h4>ネットワークの設定方法について</h4>\r\n<ul>\r\n<li><a href=\"http://www.unix-power.net/centos7/network.html\" target=\"_blank\">CentOS7 ネットワークの設定変更</a></li>\r\n	<li><a href=\"https://orebibou.com/2014/07/centos-7%E3%81%A7%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E8%A8%AD%E5%AE%9A/\" target=\"_blank\">CentOS 7でのネットワーク設定 | 俺的備忘録 〜なんかいろいろ〜</a></li>\r\n</ul>\r\n<h4>SDカードのフォーマット方法について</h4>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-autosave-v1','','','2017-03-06 11:24:46','2017-03-06 02:24:46','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-autosave-v1/',0,'revision','',0),(1247,1,'2017-03-06 10:54:33','2017-03-06 01:54:33','<h3>Bootメディアを作成する</h3>\r\nSDカードを利用する。CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。SDカードは<strong>NTFS形式でフォーマット</strong>しないと4GB以上のデータがSDカードにコピー出来ないので注意する。\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n<h3>Minimal イメージからインストールする場合の手順</h3>\r\nBootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。\r\n<pre class=\"brush: bash\">\r\n# ネットワークへ接続する\r\nnmtui\r\n\r\n# システムをアップデートする\r\nyum update\r\n\r\n# デスクトップ環境をインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# 常にグラフィカルモードにて起動するように設定を変更する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n# デスクトップを立ち上げる\r\nstartx\r\n</pre>\r\n\r\n<h3>マウスパッドの設定を行う</h3>\r\nデスクトップから『<strong>アプリケーション</strong>』→『<strong>システムツール</strong>』→『<strong>設定</strong>』→『<strong>マウスとタッチパッド</strong>』を開き必要項目を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\" alt=\"\" width=\"742\" height=\"349\" class=\"aligncenter size-full wp-image-1244\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>SDカードのフォーマット方法について</h4>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-revision-v1','','','2017-03-06 10:54:33','2017-03-06 01:54:33','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-revision-v1/',0,'revision','',0),(1248,1,'2017-03-06 11:25:16','2017-03-06 02:25:16','<h3>Bootメディアを作成する</h3>\r\n<del datetime=\"2017-03-06T02:11:41+00:00\">SDカードを利用する。</del>CentOSのサイトより <a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a> イメージをダウンロードしSDカードへコピーする。SDカードは<strong>NTFS形式でフォーマット</strong>しないと4GB以上のデータがSDカードにコピー出来ないので注意する。\r\n\r\n<strong>G580はDVDドライブからしかブート出来無い。</strong>\r\n\r\n<pre class=\"brush: bash\">\r\n# mkfsをインストールする\r\nyum install epel-release\r\nyum install ntfsprogs\r\n\r\n# SDカードをNTFS形式でフォーマットする\r\nmkfs -t ntfs -F /dev/sdb\r\n</pre>\r\n\r\n<h3>Bootメディアを起動する</h3>\r\nG580を立ち上げてすぐに「F12」を押す。「Boot Menu」からブートメディアを選択する。\r\n\r\n<h3>Minimal イメージからインストールする場合の手順</h3>\r\nBootメディアより一通りインストール手順を踏んだ後デスクトップ環境を構築する。\r\n<pre class=\"brush: bash\">\r\n# ネットワークへ接続する\r\nnmtui\r\n\r\n# もしくは\r\nnmcli device # 有効なNICを調べる\r\nnmcli connection up enp3s0\r\n\r\n# 再起動時にNICが自動でネットワークへ接続するように設定を変更する\r\nvi /etc/sysconfig/network-scripts/ifcfg-enp3s0 \r\n\r\nONBOOT=&quot;yes&quot; # yesへ変更する\r\n\r\n\r\n# システムをアップデートする\r\nyum update\r\n\r\n# デスクトップ環境をインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# 常にグラフィカルモードにて起動するように設定を変更する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n# デスクトップを立ち上げる\r\nstartx\r\n</pre>\r\n\r\n<h3>マウスパッドの設定を行う</h3>\r\nデスクトップから『<strong>アプリケーション</strong>』→『<strong>システムツール</strong>』→『<strong>設定</strong>』→『<strong>マウスとタッチパッド</strong>』を開き必要項目を設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170306_centos7_mousepad_setting.jpg\" alt=\"\" width=\"742\" height=\"349\" class=\"aligncenter size-full wp-image-1244\" /></a>\r\n\r\n<h3>参考サイト</h3>\r\n<h4>ネットワークの設定方法について</h4>\r\n<ul>\r\n<li><a href=\"http://www.unix-power.net/centos7/network.html\" target=\"_blank\">CentOS7 ネットワークの設定変更</a></li>\r\n	<li><a href=\"https://orebibou.com/2014/07/centos-7%E3%81%A7%E3%81%AE%E3%83%8D%E3%83%83%E3%83%88%E3%83%AF%E3%83%BC%E3%82%AF%E8%A8%AD%E5%AE%9A/\" target=\"_blank\">CentOS 7でのネットワーク設定 | 俺的備忘録 〜なんかいろいろ〜</a></li>\r\n</ul>\r\n<h4>SDカードのフォーマット方法について</h4>\r\n<ul>\r\n	<li><a href=\"http://d.hatena.ne.jp/practice4prepressman/20131003/p1\" target=\"_blank\">64GBのUSBメモリー - Webデザインを勉強する|元製版オペの奮闘記</a></li>\r\n	<li><a href=\"http://sugakun.blog.fc2.com/blog-entry-3.html\" target=\"_blank\">備忘録 for me CentOS(Linux)でntfsにフォーマットする</a></li>\r\n	<li><a href=\"http://serverfault.com/questions/413496/how-do-i-script-mkfs-asking-is-entire-device-not-just-one-partition-proceed-a\" target=\"_blank\">linux - How do I script mkfs asking &quot;is entire device, not just one partition! Proceed anyway?&quot; - Server Fault</a></li>\r\n</ul>','Lenovo G580にCentOS7をインストールする','','inherit','closed','closed','','1239-revision-v1','','','2017-03-06 11:25:16','2017-03-06 02:25:16','',1239,'http://49.212.213.226/wordpress/solution-log/2017/03/06/1239-revision-v1/',0,'revision','',0),(1250,1,'2017-03-19 18:11:45','2017-03-19 09:11:45','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n<pre class=\"brush: bash\">yum install lftp\r\n</pre>\r\nFreeBSDの<a href=\"ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\" target=\"_blank\">FTPサーバ</a>へアクセスし9.3のISOイメージを取得する。9.3より古いものは<a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">アーカイブス</a>から取得出来る。\r\n<pre class=\"brush: bash\">lftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n<h3>FreeBSDをインストールする</h3>\r\n<h4>インストーラーを起動する</h4>\r\nさくらのVPSコントロールパネルよりウェブコンソールを立ち上げてしばらく待つとインストーラーのウェルカム画面が表示される。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\"><img class=\"aligncenter size-full wp-image-1263\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\" alt=\"\" width=\"723\" height=\"397\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\"><img class=\"aligncenter size-full wp-image-1264\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\" alt=\"\" width=\"717\" height=\"396\" /></a>\r\n<h4>キーボードを選択する</h4>\r\n『<strong>Japanse 106</strong>』を選択する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\"><img class=\"aligncenter size-full wp-image-1265\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\" alt=\"\" width=\"722\" height=\"401\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1266\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>ホストを設定する</h4>\r\nさくらのVPSコントロールパネルより『<strong>ネットワーク情報</strong>』→『<strong>標準ホスト名</strong>』を入力する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\"><img class=\"aligncenter size-full wp-image-1267\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<h4>オプションを設定する</h4>\r\n必要なものにチェックを入れる。『doc』と『games』は必要ないと思われる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\"><img class=\"aligncenter size-full wp-image-1268\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\" alt=\"\" width=\"720\" height=\"401\" /></a>\r\n<h4>ディスクパーティションを行う</h4>\r\n難しい設定は良く分からないのでシステムに任せる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\"><img class=\"aligncenter size-full wp-image-1269\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\"><img class=\"aligncenter size-full wp-image-1270\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\" alt=\"\" width=\"720\" height=\"398\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1271\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\"><img class=\"aligncenter size-full wp-image-1272\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1273\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nChecksum Valificationが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\"><img class=\"aligncenter size-full wp-image-1274\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nArchive Extractionが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\"><img class=\"aligncenter size-full wp-image-1275\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>rootパスワードを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\"><img class=\"aligncenter size-full wp-image-1276\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>NICの設定を行う</h4>\r\nIPv4のみ設定する。IPv6は特に設定しなくてもシステム的に問題ないと思われる。またDHCPは設定しないようにする。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\"><img class=\"aligncenter size-full wp-image-1277\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1278\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\nDHCPは設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1279\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>IP Adress</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>アドレス</strong>』</li>\r\n\r\n	<li><strong>Subnet Mask</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ネットマスク</strong>』</li>\r\n	<li>\r\n<strong>Default Router</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ゲートウェイ</strong>』</li>\r\n</ul>\r\n\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\"><img class=\"aligncenter size-full wp-image-1280\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nIPv6は設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1281\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nリゾルバーを設定する。\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>Search</strong>: 何も入力しない</li>\r\n	<li><strong>IPv4 DNS #1</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>プライマリDNS</strong>』</li>\r\n	<li>\r\n<strong>IPv4 DNS #2</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>セカンダリDNS</strong>』</li>\r\n</ul>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\"><img class=\"aligncenter size-full wp-image-1282\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n\r\n<h4>タイムゾーンを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\" alt=\"\" width=\"720\" height=\"400\" class=\"aligncenter size-full wp-image-1283\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1284\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1285\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1286\" /></a>\r\n\r\n<h4>ユーザーを追加する</h4>\r\n後からでも追加可能なのでスキップ可\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1288\" /></a>\r\n\r\n<h4>システムのブート設定を行う</h4>\r\nシステム起動時に有効にするサービスを設定する。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1287\" /></a>\r\n\r\n<h4>システムをリブートする</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\" alt=\"\" width=\"719\" height=\"401\" class=\"aligncenter size-full wp-image-1289\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\" alt=\"\" width=\"719\" height=\"399\" class=\"aligncenter size-full wp-image-1290\" /></a>\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\"> freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"https://www.server-world.info/query?os=CentOS_7&amp;p=ftp&amp;f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n 	<li><a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">Index of /pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n<ul>\r\n 	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>','さくらのVPSにFreeBSD 9.3をインストールする','','publish','closed','closed','','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps%e3%81%abfreebsd-9-3%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2017-03-21 10:21:30','2017-03-21 01:21:30','',0,'http://49.212.213.226/wordpress/solution-log/?p=1250',0,'post','',0),(1251,1,'2017-03-19 17:56:03','2017-03-19 08:56:03','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 17:56:03','2017-03-19 08:56:03','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1252,1,'2017-03-19 18:02:01','2017-03-19 09:02:01','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:02:01','2017-03-19 09:02:01','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1253,1,'2017-03-19 18:03:17','2017-03-19 09:03:17','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:03:17','2017-03-19 09:03:17','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1254,1,'2017-03-19 18:03:48','2017-03-19 09:03:48','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:03:48','2017-03-19 09:03:48','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1255,1,'2017-03-19 18:05:46','2017-03-19 09:05:46','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:05:46','2017-03-19 09:05:46','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1256,1,'2017-03-19 18:06:37','2017-03-19 09:06:37','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:06:37','2017-03-19 09:06:37','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1257,1,'2017-03-19 18:07:37','2017-03-19 09:07:37','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:07:37','2017-03-19 09:07:37','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1258,1,'2017-03-19 18:10:22','2017-03-19 09:10:22','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n\r\n\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n<ul>\r\n	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:10:22','2017-03-19 09:10:22','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1259,1,'2017-03-19 18:11:01','2017-03-19 09:11:01','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDのFTPサーバへアクセスし9.3のISOイメージを取得する\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 18:11:01','2017-03-19 09:11:01','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1261,1,'2017-03-21 10:20:38','2017-03-21 01:20:38','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n<pre class=\"brush: bash\">yum install lftp\r\n</pre>\r\nFreeBSDの<a href=\"ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\" target=\"_blank\">FTPサーバ</a>へアクセスし9.3のISOイメージを取得する。9.3より古いものは<a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">アーカイブス</a>から取得出来る。\r\n<pre class=\"brush: bash\">lftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n<h3>FreeBSDをインストールする</h3>\r\n<h4>インストーラーを起動する</h4>\r\nさくらのVPSコントロールパネルよりウェブコンソールを立ち上げてしばらく待つとインストーラーのウェルカム画面が表示される。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\"><img class=\"aligncenter size-full wp-image-1263\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\" alt=\"\" width=\"723\" height=\"397\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\"><img class=\"aligncenter size-full wp-image-1264\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\" alt=\"\" width=\"717\" height=\"396\" /></a>\r\n<h4>キーボードを選択する</h4>\r\n『<strong>Japanse 106</strong>』を選択する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\"><img class=\"aligncenter size-full wp-image-1265\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\" alt=\"\" width=\"722\" height=\"401\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1266\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>ホストを設定する</h4>\r\nさくらのVPSコントロールパネルより『<strong>ネットワーク情報</strong>』→『<strong>標準ホスト名</strong>』を入力する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\"><img class=\"aligncenter size-full wp-image-1267\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<h4>オプションを設定する</h4>\r\n必要なものにチェックを入れる。『doc』と『games』は必要ないと思われる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\"><img class=\"aligncenter size-full wp-image-1268\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\" alt=\"\" width=\"720\" height=\"401\" /></a>\r\n<h4>ディスクパーティションを行う</h4>\r\n難しい設定は良く分からないのでシステムに任せる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\"><img class=\"aligncenter size-full wp-image-1269\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\"><img class=\"aligncenter size-full wp-image-1270\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\" alt=\"\" width=\"720\" height=\"398\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1271\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\"><img class=\"aligncenter size-full wp-image-1272\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1273\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nChecksum Valificationが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\"><img class=\"aligncenter size-full wp-image-1274\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nArchive Extractionが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\"><img class=\"aligncenter size-full wp-image-1275\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>rootパスワードを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\"><img class=\"aligncenter size-full wp-image-1276\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>NICの設定を行う</h4>\r\nIPv4のみ設定する。IPv6は特に設定しなくてもシステム的に問題ないと思われる。またDHCPは設定しないようにする。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\"><img class=\"aligncenter size-full wp-image-1277\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1278\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\nDHCPは設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1279\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>IP Adress</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>アドレス</strong>』</li>\r\n\r\n	<li><strong>Subnet Mask</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ネットマスク</strong>』</li>\r\n	<li>\r\n<strong>Default Router</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ゲートウェイ</strong>』</li>\r\n</ul>\r\n\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\"><img class=\"aligncenter size-full wp-image-1280\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nIPv6は設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1281\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nリゾルバーを設定する。\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>Search</strong>: 何も入力しない</li>\r\n	<li><strong>IPv4 DNS #1</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>プライマリDNS</strong>』</li>\r\n	<li>\r\n<strong>IPv4 DNS #2</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>セカンダリDNS</strong>』</li>\r\n</ul>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\"><img class=\"aligncenter size-full wp-image-1282\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n\r\n<h4>タイムゾーンを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\" alt=\"\" width=\"720\" height=\"400\" class=\"aligncenter size-full wp-image-1283\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1284\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1285\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1286\" /></a>\r\n\r\n<h4>ユーザーを追加する</h4>\r\n後からでも追加可能なのでスキップ可\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1288\" /></a>\r\n\r\n<h4>システムのブート設定を行う</h4>\r\nシステム起動時に有効にするサービスを設定する。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1287\" /></a>\r\n\r\n<h4>システムをリブートする</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\" alt=\"\" width=\"719\" height=\"401\" class=\"aligncenter size-full wp-image-1289\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\" alt=\"\" width=\"719\" height=\"399\" class=\"aligncenter size-full wp-image-1290\" /></a>\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\"> freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"https://www.server-world.info/query?os=CentOS_7&amp;p=ftp&amp;f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n 	<li><a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">Index of /pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n<ul>\r\n 	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-autosave-v1','','','2017-03-21 10:20:38','2017-03-21 01:20:38','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-autosave-v1/',0,'revision','',0),(1262,1,'2017-03-19 21:52:14','2017-03-19 12:52:14','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n\r\n<pre class=\"brush: bash\">\r\nyum install lftp\r\n</pre>\r\n\r\nFreeBSDの<a href=\"ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\" target=\"_blank\">FTPサーバ</a>へアクセスし9.3のISOイメージを取得する。9.3より古いものは<a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">アーカイブス</a>から取得出来る。\r\n<pre class=\"brush: bash\">\r\nlftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\n\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n\r\n<h3>FreeBSDをインストールする</h3>\r\n\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\">\r\n freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\n\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n<li><a href=\"https://www.server-world.info/query?os=CentOS_7&p=ftp&f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n	<li><a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">Index of /pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/</a></li>\r\n\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n\r\n<ul>\r\n	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>\r\n','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-19 21:52:14','2017-03-19 12:52:14','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/19/1250-revision-v1/',0,'revision','',0),(1263,1,'2017-03-20 09:55:35','2017-03-20 00:55:35','','170319-01_FreeBSD-installer_Boot-menu','','inherit','closed','closed','','170319-01_freebsd-installer_boot-menu','','','2017-03-20 09:55:35','2017-03-20 00:55:35','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg',0,'attachment','image/jpeg',0),(1264,1,'2017-03-20 09:55:36','2017-03-20 00:55:36','','170319-02_FreeBSD-installer_Welcome','','inherit','closed','closed','','170319-02_freebsd-installer_welcome','','','2017-03-20 09:55:36','2017-03-20 00:55:36','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg',0,'attachment','image/jpeg',0),(1265,1,'2017-03-20 09:55:37','2017-03-20 00:55:37','','170319-03_FreeBSD-installer_Keybord','','inherit','closed','closed','','170319-03_freebsd-installer_keybord','','','2017-03-20 09:55:37','2017-03-20 00:55:37','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg',0,'attachment','image/jpeg',0),(1266,1,'2017-03-20 09:55:59','2017-03-20 00:55:59','','170319-04_FreeBSD-installer_Keybord-confirm','','inherit','closed','closed','','170319-04_freebsd-installer_keybord-confirm','','','2017-03-20 09:55:59','2017-03-20 00:55:59','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg',0,'attachment','image/jpeg',0),(1267,1,'2017-03-20 09:55:59','2017-03-20 00:55:59','','170319-05_FreeBSD-installer_Hostname','','inherit','closed','closed','','170319-05_freebsd-installer_hostname','','','2017-03-20 09:55:59','2017-03-20 00:55:59','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg',0,'attachment','image/jpeg',0),(1268,1,'2017-03-20 09:56:00','2017-03-20 00:56:00','','170319-06_FreeBSD-installer_Optional-system-componentents','','inherit','closed','closed','','170319-06_freebsd-installer_optional-system-componentents','','','2017-03-20 09:56:00','2017-03-20 00:56:00','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg',0,'attachment','image/jpeg',0),(1269,1,'2017-03-20 09:56:01','2017-03-20 00:56:01','','170319-07_FreeBSD-installer_Disk-partition','','inherit','closed','closed','','170319-07_freebsd-installer_disk-partition','','','2017-03-20 09:56:01','2017-03-20 00:56:01','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg',0,'attachment','image/jpeg',0),(1270,1,'2017-03-20 09:56:02','2017-03-20 00:56:02','','170319-08_FreeBSD-installer_Disk-partition-select','','inherit','closed','closed','','170319-08_freebsd-installer_disk-partition-select','','','2017-03-20 09:56:02','2017-03-20 00:56:02','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg',0,'attachment','image/jpeg',0),(1271,1,'2017-03-20 09:56:03','2017-03-20 00:56:03','','170319-09_FreeBSD-installer_Disk-partition-select-confirm','','inherit','closed','closed','','170319-09_freebsd-installer_disk-partition-select-confirm','','','2017-03-20 09:56:03','2017-03-20 00:56:03','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg',0,'attachment','image/jpeg',0),(1272,1,'2017-03-20 09:56:04','2017-03-20 00:56:04','','170319-10_FreeBSD-installer_Disk-partition_Partition-editor','','inherit','closed','closed','','170319-10_freebsd-installer_disk-partition_partition-editor','','','2017-03-20 09:56:04','2017-03-20 00:56:04','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg',0,'attachment','image/jpeg',0),(1273,1,'2017-03-20 09:56:05','2017-03-20 00:56:05','','170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm','','inherit','closed','closed','','170319-11_freebsd-installer_disk-partition_partition-editor-confirm','','','2017-03-20 09:56:05','2017-03-20 00:56:05','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg',0,'attachment','image/jpeg',0),(1274,1,'2017-03-20 09:56:06','2017-03-20 00:56:06','','170319-12_FreeBSD-installer_Checksum-valification','','inherit','closed','closed','','170319-12_freebsd-installer_checksum-valification','','','2017-03-20 09:56:06','2017-03-20 00:56:06','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg',0,'attachment','image/jpeg',0),(1275,1,'2017-03-20 09:56:07','2017-03-20 00:56:07','','170319-13_FreeBSD-installer_Archive-extraction','','inherit','closed','closed','','170319-13_freebsd-installer_archive-extraction','','','2017-03-20 09:56:07','2017-03-20 00:56:07','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg',0,'attachment','image/jpeg',0),(1276,1,'2017-03-20 09:56:08','2017-03-20 00:56:08','','170319-14_FreeBSD-installer_Root-password-select','','inherit','closed','closed','','170319-14_freebsd-installer_root-password-select','','','2017-03-20 09:56:08','2017-03-20 00:56:08','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg',0,'attachment','image/jpeg',0),(1277,1,'2017-03-20 09:56:09','2017-03-20 00:56:09','','170319-15_FreeBSD-installer_Ntwk_NIC-select','','inherit','closed','closed','','170319-15_freebsd-installer_ntwk_nic-select','','','2017-03-20 09:56:09','2017-03-20 00:56:09','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg',0,'attachment','image/jpeg',0),(1278,1,'2017-03-20 09:56:10','2017-03-20 00:56:10','','170319-16_FreeBSD-installer_Ntwk_IPv4-config-select','','inherit','closed','closed','','170319-16_freebsd-installer_ntwk_ipv4-config-select','','','2017-03-20 09:56:10','2017-03-20 00:56:10','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg',0,'attachment','image/jpeg',0),(1279,1,'2017-03-20 09:56:11','2017-03-20 00:56:11','','170319-17_FreeBSD-installer_Ntwk_DHCP--config-select','','inherit','closed','closed','','170319-17_freebsd-installer_ntwk_dhcp-config-select','','','2017-03-20 09:56:11','2017-03-20 00:56:11','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg',0,'attachment','image/jpeg',0),(1280,1,'2017-03-20 09:56:11','2017-03-20 00:56:11','','170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk','','inherit','closed','closed','','170319-18_freebsd-installer_ntwk_ipv4-config_static-ntwk','','','2017-03-20 09:56:11','2017-03-20 00:56:11','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg',0,'attachment','image/jpeg',0),(1281,1,'2017-03-20 09:56:12','2017-03-20 00:56:12','','170319-19_FreeBSD-installer_Ntwk_IPv6-config-select','','inherit','closed','closed','','170319-19_freebsd-installer_ntwk_ipv6-config-select','','','2017-03-20 09:56:12','2017-03-20 00:56:12','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg',0,'attachment','image/jpeg',0),(1282,1,'2017-03-20 09:56:13','2017-03-20 00:56:13','','170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver','','inherit','closed','closed','','170319-20_freebsd-installer_ntwk_ipv4-config_resolver','','','2017-03-20 09:56:13','2017-03-20 00:56:13','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg',0,'attachment','image/jpeg',0),(1283,1,'2017-03-20 09:56:14','2017-03-20 00:56:14','','170319-21_FreeBSD-installer_System-clock','','inherit','closed','closed','','170319-21_freebsd-installer_system-clock','','','2017-03-20 09:56:14','2017-03-20 00:56:14','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg',0,'attachment','image/jpeg',0),(1284,1,'2017-03-20 09:56:15','2017-03-20 00:56:15','','170319-22_FreeBSD-installer_System-clock_TZ','','inherit','closed','closed','','170319-22_freebsd-installer_system-clock_tz','','','2017-03-20 09:56:15','2017-03-20 00:56:15','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg',0,'attachment','image/jpeg',0),(1285,1,'2017-03-20 09:56:16','2017-03-20 00:56:16','','170319-23_FreeBSD-installer_System-clock_TZ_Country','','inherit','closed','closed','','170319-23_freebsd-installer_system-clock_tz_country','','','2017-03-20 09:56:16','2017-03-20 00:56:16','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg',0,'attachment','image/jpeg',0),(1286,1,'2017-03-20 09:56:17','2017-03-20 00:56:17','','170319-24_FreeBSD-installer_System-clock_confirm','','inherit','closed','closed','','170319-24_freebsd-installer_system-clock_confirm','','','2017-03-20 09:56:17','2017-03-20 00:56:17','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg',0,'attachment','image/jpeg',0),(1287,1,'2017-03-20 09:56:18','2017-03-20 00:56:18','','170319-25_FreeBSD-installer_System_Boot-settings','','inherit','closed','closed','','170319-25_freebsd-installer_system_boot-settings','','','2017-03-20 09:56:18','2017-03-20 00:56:18','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg',0,'attachment','image/jpeg',0),(1288,1,'2017-03-20 09:56:18','2017-03-20 00:56:18','','170319-26_FreeBSD-installer_Add-user','','inherit','closed','closed','','170319-26_freebsd-installer_add-user','','','2017-03-20 09:56:18','2017-03-20 00:56:18','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg',0,'attachment','image/jpeg',0),(1289,1,'2017-03-20 09:56:19','2017-03-20 00:56:19','','170319-27_FreeBSD-installer_Final-config','','inherit','closed','closed','','170319-27_freebsd-installer_final-config','','','2017-03-20 09:56:19','2017-03-20 00:56:19','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg',0,'attachment','image/jpeg',0),(1290,1,'2017-03-20 09:56:20','2017-03-20 00:56:20','','170319-28_FreeBSD-installer_Manual-config','','inherit','closed','closed','','170319-28_freebsd-installer_manual-config','','','2017-03-20 09:56:20','2017-03-20 00:56:20','',1250,'http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg',0,'attachment','image/jpeg',0),(1291,1,'2017-03-21 10:21:30','2017-03-21 01:21:30','<h3>ISOイメージをVPSへアップロードする</h3>\r\nクライアントマシーン（CentOS7）にlsftpをインストールする。\r\n<pre class=\"brush: bash\">yum install lftp\r\n</pre>\r\nFreeBSDの<a href=\"ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\" target=\"_blank\">FTPサーバ</a>へアクセスし9.3のISOイメージを取得する。9.3より古いものは<a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">アーカイブス</a>から取得出来る。\r\n<pre class=\"brush: bash\">lftp ftp://ftp.jp.FreeBSD.org/pub/FreeBSD/\r\n\r\n#接続後ISOイメージをダウンロード\r\ncd release/ISO-IMAGES/9.3\r\nget FreeBSD-9.3-RELEASE-amd64-dvd1.iso\r\n</pre>\r\nさくらのVPSでSFTPアカウントを発行しISOイメージをアップロードする。\r\n<h3>FreeBSDをインストールする</h3>\r\n<h4>インストーラーを起動する</h4>\r\nさくらのVPSコントロールパネルよりウェブコンソールを立ち上げてしばらく待つとインストーラーのウェルカム画面が表示される。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\"><img class=\"aligncenter size-full wp-image-1263\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-01_FreeBSD-installer_Boot-menu.jpg\" alt=\"\" width=\"723\" height=\"397\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\"><img class=\"aligncenter size-full wp-image-1264\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-02_FreeBSD-installer_Welcome.jpg\" alt=\"\" width=\"717\" height=\"396\" /></a>\r\n<h4>キーボードを選択する</h4>\r\n『<strong>Japanse 106</strong>』を選択する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\"><img class=\"aligncenter size-full wp-image-1265\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-03_FreeBSD-installer_Keybord.jpg\" alt=\"\" width=\"722\" height=\"401\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1266\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-04_FreeBSD-installer_Keybord-confirm.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>ホストを設定する</h4>\r\nさくらのVPSコントロールパネルより『<strong>ネットワーク情報</strong>』→『<strong>標準ホスト名</strong>』を入力する\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\"><img class=\"aligncenter size-full wp-image-1267\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-05_FreeBSD-installer_Hostname.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<h4>オプションを設定する</h4>\r\n必要なものにチェックを入れる。『doc』と『games』は必要ないと思われる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\"><img class=\"aligncenter size-full wp-image-1268\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-06_FreeBSD-installer_Optional-system-componentents.jpg\" alt=\"\" width=\"720\" height=\"401\" /></a>\r\n<h4>ディスクパーティションを行う</h4>\r\n難しい設定は良く分からないのでシステムに任せる。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\"><img class=\"aligncenter size-full wp-image-1269\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-07_FreeBSD-installer_Disk-partition.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\"><img class=\"aligncenter size-full wp-image-1270\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-08_FreeBSD-installer_Disk-partition-select.jpg\" alt=\"\" width=\"720\" height=\"398\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1271\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-09_FreeBSD-installer_Disk-partition-select-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\"><img class=\"aligncenter size-full wp-image-1272\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-10_FreeBSD-installer_Disk-partition_Partition-editor.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\"><img class=\"aligncenter size-full wp-image-1273\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-11_FreeBSD-installer_Disk-partition_Partition-editor-confirm.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nChecksum Valificationが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\"><img class=\"aligncenter size-full wp-image-1274\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-12_FreeBSD-installer_Checksum-valification.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nArchive Extractionが処理される\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\"><img class=\"aligncenter size-full wp-image-1275\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-13_FreeBSD-installer_Archive-extraction.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>rootパスワードを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\"><img class=\"aligncenter size-full wp-image-1276\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-14_FreeBSD-installer_Root-password-select.jpg\" alt=\"\" width=\"720\" height=\"399\" /></a>\r\n<h4>NICの設定を行う</h4>\r\nIPv4のみ設定する。IPv6は特に設定しなくてもシステム的に問題ないと思われる。またDHCPは設定しないようにする。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\"><img class=\"aligncenter size-full wp-image-1277\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-15_FreeBSD-installer_Ntwk_NIC-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1278\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-16_FreeBSD-installer_Ntwk_IPv4-config-select.jpg\" alt=\"\" width=\"719\" height=\"400\" /></a>\r\nDHCPは設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1279\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-17_FreeBSD-installer_Ntwk_DHCP-config-select.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>IP Adress</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>アドレス</strong>』</li>\r\n\r\n	<li><strong>Subnet Mask</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ネットマスク</strong>』</li>\r\n	<li>\r\n<strong>Default Router</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>ゲートウェイ</strong>』</li>\r\n</ul>\r\n\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\"><img class=\"aligncenter size-full wp-image-1280\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-18_FreeBSD-installer_Ntwk_IPv4-config_Static-ntwk.jpg\" alt=\"\" width=\"718\" height=\"400\" /></a>\r\nIPv6は設定しない\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\"><img class=\"aligncenter size-full wp-image-1281\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-19_FreeBSD-installer_Ntwk_IPv6-config-select.jpg\" alt=\"\" width=\"719\" height=\"399\" /></a>\r\nリゾルバーを設定する。\r\nウェブコンソールを参照しながら入力する\r\n<ul>\r\n	<li><strong>Search</strong>: 何も入力しない</li>\r\n	<li><strong>IPv4 DNS #1</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>プライマリDNS</strong>』</li>\r\n	<li>\r\n<strong>IPv4 DNS #2</strong>: 『<strong>ネットワーク情報</strong>』→『<strong>IPv4</strong>』→『<strong>セカンダリDNS</strong>』</li>\r\n</ul>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\"><img class=\"aligncenter size-full wp-image-1282\" src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-20_FreeBSD-installer_Ntwk_IPv4-config_Resolver.jpg\" alt=\"\" width=\"718\" height=\"399\" /></a>\r\n\r\n<h4>タイムゾーンを設定する</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-21_FreeBSD-installer_System-clock.jpg\" alt=\"\" width=\"720\" height=\"400\" class=\"aligncenter size-full wp-image-1283\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-22_FreeBSD-installer_System-clock_TZ.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1284\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-23_FreeBSD-installer_System-clock_TZ_Country.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1285\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-24_FreeBSD-installer_System-clock_confirm.jpg\" alt=\"\" width=\"718\" height=\"400\" class=\"aligncenter size-full wp-image-1286\" /></a>\r\n\r\n<h4>ユーザーを追加する</h4>\r\n後からでも追加可能なのでスキップ可\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-26_FreeBSD-installer_Add-user.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1288\" /></a>\r\n\r\n<h4>システムのブート設定を行う</h4>\r\nシステム起動時に有効にするサービスを設定する。\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-25_FreeBSD-installer_System_Boot-settings.jpg\" alt=\"\" width=\"719\" height=\"400\" class=\"aligncenter size-full wp-image-1287\" /></a>\r\n\r\n<h4>システムをリブートする</h4>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-27_FreeBSD-installer_Final-config.jpg\" alt=\"\" width=\"719\" height=\"401\" class=\"aligncenter size-full wp-image-1289\" /></a>\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2017/03/170319-28_FreeBSD-installer_Manual-config.jpg\" alt=\"\" width=\"719\" height=\"399\" class=\"aligncenter size-full wp-image-1290\" /></a>\r\n\r\n<h3>FreeBSDを9.3から10.3へアップグレードする</h3>\r\n<pre class=\"brush: bash\"> freebsd-update -r 10.3-RELEASE upgrade\r\n</pre>\r\nアップグレード処理完了後は<strong>さくらのVPSコントロールパネルからOSを再起動する</strong>。\r\n<h3>参考サイト</h3>\r\n<h4>CentOS7へFTPクライアントをインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"https://www.server-world.info/query?os=CentOS_7&amp;p=ftp&amp;f=2\" target=\"_blank\">CentOS 7 : FTPクライアント(CentOS) ： Server World</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3 ISOイメージを取得する</h4>\r\n<ul>\r\n 	<li><a href=\"http://ftp-archive.freebsd.org/pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/\" target=\"_blank\">Index of /pub/FreeBSD-Archive/old-releases/i386/ISO-IMAGES/</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28023323.html#bootonly\" target=\"_blank\">FreeBSDをダウンロードしたい : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3をさくらのVPSへインストールする</h4>\r\n<ul>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28363307.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (1) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n 	<li><a href=\"http://blog.livedoor.jp/saba_nano/archives/28376161.html\" target=\"_blank\">[FreeBSD] さくらのVPSに FreeBSD 9.1 amd64 をインストールする方法 (2) : saba nano - へっぽこ管理者のサーバ管理日誌（LV.2）</a></li>\r\n</ul>\r\n<h4>FreeBSD9.3を10.3へアップグレードする</h4>\r\n<ul>\r\n 	<li><a href=\"http://piano2nd.smb.net/~kuji/pukiwiki-1.4.7/index.php?FreeBSD%209.3%20to%2010.3\" target=\"_blank\">FreeBSD 9.3 to 10.3 - PukiWiki</a></li>\r\n</ul>','さくらのVPSにFreeBSD 9.3をインストールする','','inherit','closed','closed','','1250-revision-v1','','','2017-03-21 10:21:30','2017-03-21 01:21:30','',1250,'http://49.212.213.226/wordpress/solution-log/2017/03/21/1250-revision-v1/',0,'revision','',0),(1293,1,'2017-04-22 23:43:51','2017-04-22 14:43:51','<pre class=\"brush: bash\">\r\nhistory | awk &#039;{print $2}&#039; | sort | uniq -c | sort -n -r -k1\r\n</pre>','Historyコマンドからコマンド利用頻度を調べる','','publish','closed','closed','','history%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e3%81%8b%e3%82%89%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89%e5%88%a9%e7%94%a8%e9%a0%bb%e5%ba%a6%e3%82%92%e8%aa%bf%e3%81%b9%e3%82%8b','','','2017-04-22 23:43:51','2017-04-22 14:43:51','',0,'http://49.212.213.226/wordpress/solution-log/?p=1293',0,'post','',0),(1294,1,'2017-04-22 23:43:31','2017-04-22 14:43:31','<pre class=\"brush: bash\">\r\nhistory | awk &#039;{print $2}&#039; | sort | uniq -c | sort -n -r -k1\r\n</pre>','Historyコマンドからコマンド利用頻度を調べる','','inherit','closed','closed','','1293-revision-v1','','','2017-04-22 23:43:31','2017-04-22 14:43:31','',1293,'http://49.212.213.226/wordpress/solution-log/2017/04/22/1293-revision-v1/',0,'revision','',0),(1295,1,'2017-05-04 17:09:27','2017-05-04 08:09:27','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n\r\n# VPSに最初に接続する例\r\n# インベントリーファイルを指定してparamikoを利用する\r\nexport ANSIBLE_HOST_KEY_CHECKING=False; ansible -u root -k -i /path/to/inventory_file -m setup &quot;160.xx.xxx.xxx,&quot; --ask-vault-pass -c paramiko &gt; setup_envs\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://docs.ansible.com/ansible/faq.html\" target=\"_blank\">Frequently Asked Questions &mdash; Ansible Documentation</a></li>\r\n</ul>','Ansibleで環境変数を取得する','','publish','closed','closed','','ansible%e3%81%a7%e7%92%b0%e5%a2%83%e5%a4%89%e6%95%b0%e3%82%92%e5%8f%96%e5%be%97%e3%81%99%e3%82%8b','','','2017-05-17 00:47:45','2017-05-16 15:47:45','',0,'http://49.212.213.226/wordpress/solution-log/?p=1295',0,'post','',0),(1296,1,'2017-05-04 16:45:17','2017-05-04 07:45:17','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>','Ansibleで環境変数を取得する','','inherit','closed','closed','','1295-revision-v1','','','2017-05-04 16:45:17','2017-05-04 07:45:17','',1295,'http://49.212.213.226/wordpress/solution-log/2017/05/04/1295-revision-v1/',0,'revision','',0),(1297,1,'2017-05-04 17:08:54','2017-05-04 08:08:54','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://docs.ansible.com/ansible/faq.html\">Frequently Asked Questions</a></li>\r\n</ul>','Ansibleで環境変数を取得する','','inherit','closed','closed','','1295-revision-v1','','','2017-05-04 17:08:54','2017-05-04 08:08:54','',1295,'http://49.212.213.226/wordpress/solution-log/2017/05/04/1295-revision-v1/',0,'revision','',0),(1300,1,'2017-05-11 12:25:28','2017-05-11 03:25:28','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/pattern/replacement&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して1行目に文字列を挿入する\r\nfind . -type f | xargs sed -i -e &quot;1i\\insert&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\n	<li><a href=\"https://mkacky.wordpress.com/2013/06/04/sed%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E8%A1%8C%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8C%BF%E5%85%A5%E3%81%99%E3%82%8B/\" target=\"_blank\">sedで特定の行に文字列を挿入する | mkacky</a></li>\r\n\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-autosave-v1','','','2017-05-11 12:25:28','2017-05-11 03:25:28','',1227,'http://49.212.213.226/wordpress/solution-log/2017/05/06/1227-autosave-v1/',0,'revision','',0),(1301,1,'2017-05-06 20:32:03','2017-05-06 11:32:03','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/文字列/置換対象&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/[replace]/[replacee]/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/[replace]/[replacee]/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して1行目に文字列を挿入する\r\nfind . -type f | xargs sed -i -e &quot;1i\\[insert]&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\nhttps://mkacky.wordpress.com/2013/06/04/sedで特定の行に文字列を挿入する/\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-revision-v1','','','2017-05-06 20:32:03','2017-05-06 11:32:03','',1227,'http://49.212.213.226/wordpress/solution-log/2017/05/06/1227-revision-v1/',0,'revision','',0),(1302,1,'2017-05-06 20:38:59','2017-05-06 11:38:59','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/pattern/replacement&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して1行目に文字列を挿入する\r\nfind . -type f | xargs sed -i -e &quot;1i\\insert&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\nhttps://mkacky.wordpress.com/2013/06/04/sedで特定の行に文字列を挿入する/\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-revision-v1','','','2017-05-06 20:38:59','2017-05-06 11:38:59','',1227,'http://49.212.213.226/wordpress/solution-log/2017/05/06/1227-revision-v1/',0,'revision','',0),(1303,1,'2017-05-11 12:26:00','2017-05-11 03:26:00','<h3>基本コマンド</h3>\r\n<pre class=\"brush: bash\">\r\nsed &#039;s/pattern/replacement&#039;\r\n</pre>\r\n\r\n<h3>オプション</h3>\r\n\r\n<h3>コマンド例</h3>\r\n<pre class=\"brush: bash\">\r\n\r\n#カレントディレクトリのファイルに対して置換を実行しファイルを上書きする\r\nfind . -type f | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して特定のファイルを除き置換を実行しファイルを上書きする\r\nfind . -type f ! -path &#039;exclude&#039; | xargs sed -i &quot;s/pattern/replacement/g&quot;\r\n\r\n#カレントディレクトリのファイルに対して1行目に文字列を挿入する\r\nfind . -type f | xargs sed -i -e &quot;1i\\insert&quot;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://konbu13.hatenablog.com/entry/2014/02/18/065854\" target=\"_blank\">sedを使って複数ファイルの文字列を一気に置換する - うめすこんぶ</a></li>\r\n	<li><a href=\"https://hydrocul.github.io/wiki/commands/sed.html\" target=\"_blank\">sed コマンド | コマンドの使い方(Linux) | hydroculのメモ</a></li>\r\n	<li><a href=\"https://mkacky.wordpress.com/2013/06/04/sed%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E8%A1%8C%E3%81%AB%E6%96%87%E5%AD%97%E5%88%97%E3%82%92%E6%8C%BF%E5%85%A5%E3%81%99%E3%82%8B/\" target=\"_blank\">sedで特定の行に文字列を挿入する | mkacky</a></li>\r\n\r\n</ul>','sedで文字列を置換する','','inherit','closed','closed','','1227-revision-v1','','','2017-05-11 12:26:00','2017-05-11 03:26:00','',1227,'http://49.212.213.226/wordpress/solution-log/2017/05/11/1227-revision-v1/',0,'revision','',0),(1304,1,'2017-05-17 00:47:11','2017-05-16 15:47:11','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n\r\n# VPSに最初に接続する例\r\n# インベントリーファイルを指定してparamikoを利用する\r\nexport ANSIBLE_HOST_KEY_CHECKING=False; ansible -u root -k -i /path/to/inventory_file -m setup &quot;160.xx.xxx.xxx,&quot; --ask-vault-pass -c paramiko &gt; setup_envs\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://docs.ansible.com/ansible/faq.html\" target=\"_blank\">Frequently Asked Questions &mdash; Ansible Documentation</a></li>\r\n</ul>','Ansibleで環境変数を取得する','','inherit','closed','closed','','1295-autosave-v1','','','2017-05-17 00:47:11','2017-05-16 15:47:11','',1295,'http://49.212.213.226/wordpress/solution-log/2017/05/11/1295-autosave-v1/',0,'revision','',0),(1305,1,'2017-05-11 12:28:04','2017-05-11 03:28:04','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://docs.ansible.com/ansible/faq.html\" target=\"_blank\">Frequently Asked Questions &mdash; Ansible Documentation</a></li>\r\n</ul>','Ansibleで環境変数を取得する','','inherit','closed','closed','','1295-revision-v1','','','2017-05-11 12:28:04','2017-05-11 03:28:04','',1295,'http://49.212.213.226/wordpress/solution-log/2017/05/11/1295-revision-v1/',0,'revision','',0),(1307,1,'2017-05-17 00:47:45','2017-05-16 15:47:45','Ansibleでデバグを行う際に環境変数を調べる必要が出てきた。\r\n\r\n<h3>環境変数を取得する</h3>\r\n\r\nコマンド\r\n\r\n<pre class=\"brush: bash\">\r\nansible -m setup hostname\r\n\r\n# VPSに最初に接続する例\r\n# インベントリーファイルを指定してparamikoを利用する\r\nexport ANSIBLE_HOST_KEY_CHECKING=False; ansible -u root -k -i /path/to/inventory_file -m setup &quot;160.xx.xxx.xxx,&quot; --ask-vault-pass -c paramiko &gt; setup_envs\r\n</pre>\r\n\r\n実行結果\r\n<pre class=\"brush: bash\">\r\nlocalhost | SUCCESS =&gt; {\r\n    &quot;ansible_facts&quot;: {\r\n        &quot;ansible_all_ipv4_addresses&quot;: [\r\n            &quot;172.17.0.1&quot;, \r\n            &quot;160.16.242.225&quot;\r\n        ], \r\n        &quot;ansible_all_ipv6_addresses&quot;: [\r\n            &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;fe80::9ea3:baff:fe02:27a5&quot;\r\n        ], \r\n        &quot;ansible_apparmor&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_bios_date&quot;: &quot;01/01/2011&quot;, \r\n        &quot;ansible_bios_version&quot;: &quot;Bochs&quot;, \r\n        &quot;ansible_cmdline&quot;: {\r\n            &quot;BOOT_IMAGE&quot;: &quot;/vmlinuz-3.10.0-514.6.1.el7.x86_64&quot;, \r\n            &quot;LANG&quot;: &quot;C&quot;, \r\n            &quot;biosdevname&quot;: &quot;0&quot;, \r\n            &quot;console&quot;: &quot;ttyS0,115200n8r&quot;, \r\n            &quot;consoleblank&quot;: &quot;0&quot;, \r\n            &quot;elevator&quot;: &quot;noop&quot;, \r\n            &quot;net.ifnames&quot;: &quot;0&quot;, \r\n            &quot;nomodeset&quot;: true, \r\n            &quot;ro&quot;: true, \r\n            &quot;root&quot;: &quot;UUID=c9321269-7178-43b4-b696-4de4e92a4518&quot;, \r\n            &quot;vconsole.font&quot;: &quot;latarcyrheb-sun16&quot;\r\n        }, \r\n        &quot;ansible_date_time&quot;: {\r\n            &quot;date&quot;: &quot;2017-05-04&quot;, \r\n            &quot;day&quot;: &quot;04&quot;, \r\n            &quot;epoch&quot;: &quot;1493883499&quot;, \r\n            &quot;hour&quot;: &quot;16&quot;, \r\n            &quot;iso8601&quot;: &quot;2017-05-04T07:38:19Z&quot;, \r\n            &quot;iso8601_basic&quot;: &quot;20170504T163819459610&quot;, \r\n            &quot;iso8601_basic_short&quot;: &quot;20170504T163819&quot;, \r\n            &quot;iso8601_micro&quot;: &quot;2017-05-04T07:38:19.459847Z&quot;, \r\n            &quot;minute&quot;: &quot;38&quot;, \r\n            &quot;month&quot;: &quot;05&quot;, \r\n            &quot;second&quot;: &quot;19&quot;, \r\n            &quot;time&quot;: &quot;16:38:19&quot;, \r\n            &quot;tz&quot;: &quot;JST&quot;, \r\n            &quot;tz_offset&quot;: &quot;+0900&quot;, \r\n            &quot;weekday&quot;: &quot;Thursday&quot;, \r\n            &quot;weekday_number&quot;: &quot;4&quot;, \r\n            &quot;weeknumber&quot;: &quot;18&quot;, \r\n            &quot;year&quot;: &quot;2017&quot;\r\n        }, \r\n        &quot;ansible_default_ipv4&quot;: {\r\n            &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n            &quot;alias&quot;: &quot;eth0&quot;, \r\n            &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n            &quot;gateway&quot;: &quot;160.16.242.1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n            &quot;network&quot;: &quot;160.16.242.0&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_default_ipv6&quot;: {\r\n            &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n            &quot;gateway&quot;: &quot;fe80::1&quot;, \r\n            &quot;interface&quot;: &quot;eth0&quot;, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;prefix&quot;: &quot;64&quot;, \r\n            &quot;scope&quot;: &quot;global&quot;, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_devices&quot;: {\r\n            &quot;sr0&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;IDE interface: Intel Corporation 82371SB PIIX3 IDE [Natoma/Triton II]&quot;, \r\n                &quot;model&quot;: &quot;QEMU DVD-ROM&quot;, \r\n                &quot;partitions&quot;: {}, \r\n                &quot;removable&quot;: &quot;1&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;noop&quot;, \r\n                &quot;sectors&quot;: &quot;2097151&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;1024.00 MB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;QEMU&quot;\r\n            }, \r\n            &quot;vda&quot;: {\r\n                &quot;holders&quot;: [], \r\n                &quot;host&quot;: &quot;SCSI storage controller: Red Hat, Inc Virtio block device&quot;, \r\n                &quot;model&quot;: null, \r\n                &quot;partitions&quot;: {\r\n                    &quot;vda1&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;2048&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;1.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;2048&quot;, \r\n                        &quot;uuid&quot;: null\r\n                    }, \r\n                    &quot;vda2&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;1024000&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;500.00 MB&quot;, \r\n                        &quot;start&quot;: &quot;4096&quot;, \r\n                        &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n                    }, \r\n                    &quot;vda3&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;8388608&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;4.00 GB&quot;, \r\n                        &quot;start&quot;: &quot;1028096&quot;, \r\n                        &quot;uuid&quot;: &quot;6a383227-8a0f-4415-8c25-846f0c01717c&quot;\r\n                    }, \r\n                    &quot;vda4&quot;: {\r\n                        &quot;holders&quot;: [], \r\n                        &quot;sectors&quot;: &quot;53497823&quot;, \r\n                        &quot;sectorsize&quot;: 512, \r\n                        &quot;size&quot;: &quot;25.51 GB&quot;, \r\n                        &quot;start&quot;: &quot;9416704&quot;, \r\n                        &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n                    }\r\n                }, \r\n                &quot;removable&quot;: &quot;0&quot;, \r\n                &quot;rotational&quot;: &quot;1&quot;, \r\n                &quot;sas_address&quot;: null, \r\n                &quot;sas_device_handle&quot;: null, \r\n                &quot;scheduler_mode&quot;: &quot;&quot;, \r\n                &quot;sectors&quot;: &quot;62914560&quot;, \r\n                &quot;sectorsize&quot;: &quot;512&quot;, \r\n                &quot;size&quot;: &quot;30.00 GB&quot;, \r\n                &quot;support_discard&quot;: &quot;0&quot;, \r\n                &quot;vendor&quot;: &quot;0x1af4&quot;\r\n            }\r\n        }, \r\n        &quot;ansible_distribution&quot;: &quot;CentOS&quot;, \r\n        &quot;ansible_distribution_major_version&quot;: &quot;7&quot;, \r\n        &quot;ansible_distribution_release&quot;: &quot;Core&quot;, \r\n        &quot;ansible_distribution_version&quot;: &quot;7.3.1611&quot;, \r\n        &quot;ansible_dns&quot;: {\r\n            &quot;nameservers&quot;: [\r\n                &quot;210.188.224.10&quot;, \r\n                &quot;210.188.224.11&quot;, \r\n                &quot;2001:e42::1&quot;\r\n            ], \r\n            &quot;search&quot;: [\r\n                &quot;vs.sakura.ne.jp&quot;\r\n            ]\r\n        }, \r\n        &quot;ansible_docker0&quot;: {\r\n            &quot;active&quot;: false, \r\n            &quot;device&quot;: &quot;docker0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;on&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;id&quot;: &quot;8000.0242475831ee&quot;, \r\n            &quot;interfaces&quot;: [], \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;172.17.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;global&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.0.0&quot;, \r\n                &quot;network&quot;: &quot;172.17.0.0&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;02:42:47:58:31:ee&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;promisc&quot;: false, \r\n            &quot;stp&quot;: false, \r\n            &quot;type&quot;: &quot;bridge&quot;\r\n        }, \r\n        &quot;ansible_domain&quot;: &quot;vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_effective_group_id&quot;: 1000, \r\n        &quot;ansible_effective_user_id&quot;: 1000, \r\n        &quot;ansible_env&quot;: {\r\n            &quot;HISTCONTROL&quot;: &quot;ignoredups&quot;, \r\n            &quot;HISTSIZE&quot;: &quot;1000&quot;, \r\n            &quot;HOME&quot;: &quot;/home/ios&quot;, \r\n            &quot;HOSTNAME&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n            &quot;LANG&quot;: &quot;en_US.UTF-8&quot;, \r\n            &quot;LESSOPEN&quot;: &quot;||/usr/bin/lesspipe.sh %s&quot;, \r\n            &quot;LOGNAME&quot;: &quot;ios&quot;, \r\n            &quot;LS_COLORS&quot;: &quot;rs=0:di=38;5;27:ln=38;5;51:mh=44;38;5;15:pi=40;38;5;11:so=38;5;13:do=38;5;5:bd=48;5;232;38;5;11:cd=48;5;232;38;5;3:or=48;5;232;38;5;9:mi=05;48;5;232;38;5;15:su=48;5;196;38;5;15:sg=48;5;11;38;5;16:ca=48;5;196;38;5;226:tw=48;5;10;38;5;16:ow=48;5;10;38;5;21:st=48;5;21;38;5;15:ex=38;5;34:*.tar=38;5;9:*.tgz=38;5;9:*.arc=38;5;9:*.arj=38;5;9:*.taz=38;5;9:*.lha=38;5;9:*.lz4=38;5;9:*.lzh=38;5;9:*.lzma=38;5;9:*.tlz=38;5;9:*.txz=38;5;9:*.tzo=38;5;9:*.t7z=38;5;9:*.zip=38;5;9:*.z=38;5;9:*.Z=38;5;9:*.dz=38;5;9:*.gz=38;5;9:*.lrz=38;5;9:*.lz=38;5;9:*.lzo=38;5;9:*.xz=38;5;9:*.bz2=38;5;9:*.bz=38;5;9:*.tbz=38;5;9:*.tbz2=38;5;9:*.tz=38;5;9:*.deb=38;5;9:*.rpm=38;5;9:*.jar=38;5;9:*.war=38;5;9:*.ear=38;5;9:*.sar=38;5;9:*.rar=38;5;9:*.alz=38;5;9:*.ace=38;5;9:*.zoo=38;5;9:*.cpio=38;5;9:*.7z=38;5;9:*.rz=38;5;9:*.cab=38;5;9:*.jpg=38;5;13:*.jpeg=38;5;13:*.gif=38;5;13:*.bmp=38;5;13:*.pbm=38;5;13:*.pgm=38;5;13:*.ppm=38;5;13:*.tga=38;5;13:*.xbm=38;5;13:*.xpm=38;5;13:*.tif=38;5;13:*.tiff=38;5;13:*.png=38;5;13:*.svg=38;5;13:*.svgz=38;5;13:*.mng=38;5;13:*.pcx=38;5;13:*.mov=38;5;13:*.mpg=38;5;13:*.mpeg=38;5;13:*.m2v=38;5;13:*.mkv=38;5;13:*.webm=38;5;13:*.ogm=38;5;13:*.mp4=38;5;13:*.m4v=38;5;13:*.mp4v=38;5;13:*.vob=38;5;13:*.qt=38;5;13:*.nuv=38;5;13:*.wmv=38;5;13:*.asf=38;5;13:*.rm=38;5;13:*.rmvb=38;5;13:*.flc=38;5;13:*.avi=38;5;13:*.fli=38;5;13:*.flv=38;5;13:*.gl=38;5;13:*.dl=38;5;13:*.xcf=38;5;13:*.xwd=38;5;13:*.yuv=38;5;13:*.cgm=38;5;13:*.emf=38;5;13:*.axv=38;5;13:*.anx=38;5;13:*.ogv=38;5;13:*.ogx=38;5;13:*.aac=38;5;45:*.au=38;5;45:*.flac=38;5;45:*.mid=38;5;45:*.midi=38;5;45:*.mka=38;5;45:*.mp3=38;5;45:*.mpc=38;5;45:*.ogg=38;5;45:*.ra=38;5;45:*.wav=38;5;45:*.axa=38;5;45:*.oga=38;5;45:*.spx=38;5;45:*.xspf=38;5;45:&quot;, \r\n            &quot;MAIL&quot;: &quot;/var/spool/mail/ios&quot;, \r\n            &quot;PATH&quot;: &quot;/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/ios/selenium_get_title:/home/ios/.local/bin:/home/ios/bin&quot;, \r\n            &quot;PWD&quot;: &quot;/home/ios&quot;, \r\n            &quot;SHELL&quot;: &quot;/bin/bash&quot;, \r\n            &quot;SHLVL&quot;: &quot;3&quot;, \r\n            &quot;SSH_CLIENT&quot;: &quot;106.132.214.80 35874 45345&quot;, \r\n            &quot;SSH_CONNECTION&quot;: &quot;106.132.214.80 35874 160.16.242.225 45345&quot;, \r\n            &quot;SSH_TTY&quot;: &quot;/dev/pts/7&quot;, \r\n            &quot;TERM&quot;: &quot;xterm-256color&quot;, \r\n            &quot;USER&quot;: &quot;ios&quot;, \r\n            &quot;XDG_RUNTIME_DIR&quot;: &quot;/run/user/1000&quot;, \r\n            &quot;XDG_SESSION_ID&quot;: &quot;13620&quot;, \r\n            &quot;_&quot;: &quot;/usr/bin/python2&quot;\r\n        }, \r\n        &quot;ansible_eth0&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth0&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;160.16.242.225&quot;, \r\n                &quot;broadcast&quot;: &quot;160.16.243.255&quot;, \r\n                &quot;netmask&quot;: &quot;255.255.254.0&quot;, \r\n                &quot;network&quot;: &quot;160.16.242.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;2001:e42:102:1823:160:16:242:225&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;global&quot;\r\n                }, \r\n                {\r\n                    &quot;address&quot;: &quot;fe80::9ea3:baff:fe02:27a5&quot;, \r\n                    &quot;prefix&quot;: &quot;64&quot;, \r\n                    &quot;scope&quot;: &quot;link&quot;\r\n                }\r\n            ], \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:02:27:a5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio0&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth1&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth1&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:03:ae:45&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio1&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_eth2&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;eth2&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;off [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;off [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;off&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;off&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;off [fixed]&quot;\r\n            }, \r\n            &quot;macaddress&quot;: &quot;9c:a3:ba:05:34:e5&quot;, \r\n            &quot;module&quot;: &quot;virtio_net&quot;, \r\n            &quot;mtu&quot;: 1500, \r\n            &quot;pciid&quot;: &quot;virtio2&quot;, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;ether&quot;\r\n        }, \r\n        &quot;ansible_fips&quot;: false, \r\n        &quot;ansible_form_factor&quot;: &quot;Other&quot;, \r\n        &quot;ansible_fqdn&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_gather_subset&quot;: [\r\n            &quot;hardware&quot;, \r\n            &quot;network&quot;, \r\n            &quot;virtual&quot;\r\n        ], \r\n        &quot;ansible_hostname&quot;: &quot;tk2-263-41221&quot;, \r\n        &quot;ansible_interfaces&quot;: [\r\n            &quot;lo&quot;, \r\n            &quot;docker0&quot;, \r\n            &quot;eth2&quot;, \r\n            &quot;eth1&quot;, \r\n            &quot;eth0&quot;\r\n        ], \r\n        &quot;ansible_kernel&quot;: &quot;3.10.0-514.6.1.el7.x86_64&quot;, \r\n        &quot;ansible_lo&quot;: {\r\n            &quot;active&quot;: true, \r\n            &quot;device&quot;: &quot;lo&quot;, \r\n            &quot;features&quot;: {\r\n                &quot;busy_poll&quot;: &quot;off [fixed]&quot;, \r\n                &quot;fcoe_mtu&quot;: &quot;off [fixed]&quot;, \r\n                &quot;generic_receive_offload&quot;: &quot;on&quot;, \r\n                &quot;generic_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;highdma&quot;: &quot;on [fixed]&quot;, \r\n                &quot;hw_tc_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;l2_fwd_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;large_receive_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;loopback&quot;: &quot;on [fixed]&quot;, \r\n                &quot;netns_local&quot;: &quot;on [fixed]&quot;, \r\n                &quot;ntuple_filters&quot;: &quot;off [fixed]&quot;, \r\n                &quot;receive_hashing&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_all&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_checksumming&quot;: &quot;on [fixed]&quot;, \r\n                &quot;rx_fcs&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_filter&quot;: &quot;off [fixed]&quot;, \r\n                &quot;rx_vlan_stag_hw_parse&quot;: &quot;off [fixed]&quot;, \r\n                &quot;scatter_gather&quot;: &quot;on&quot;, \r\n                &quot;tcp_segmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;tx_checksum_fcoe_crc&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ip_generic&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksum_ipv4&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_ipv6&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_checksum_sctp&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_checksumming&quot;: &quot;on&quot;, \r\n                &quot;tx_fcoe_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gre_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_gso_robust&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_ipip_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_lockless&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_mpls_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_nocache_copy&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_scatter_gather&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_scatter_gather_fraglist&quot;: &quot;on [fixed]&quot;, \r\n                &quot;tx_sctp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_sit_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_tcp6_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_ecn_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_tcp_segmentation&quot;: &quot;on&quot;, \r\n                &quot;tx_udp_tnl_segmentation&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_offload&quot;: &quot;off [fixed]&quot;, \r\n                &quot;tx_vlan_stag_hw_insert&quot;: &quot;off [fixed]&quot;, \r\n                &quot;udp_fragmentation_offload&quot;: &quot;on&quot;, \r\n                &quot;vlan_challenged&quot;: &quot;on [fixed]&quot;\r\n            }, \r\n            &quot;ipv4&quot;: {\r\n                &quot;address&quot;: &quot;127.0.0.1&quot;, \r\n                &quot;broadcast&quot;: &quot;host&quot;, \r\n                &quot;netmask&quot;: &quot;255.0.0.0&quot;, \r\n                &quot;network&quot;: &quot;127.0.0.0&quot;\r\n            }, \r\n            &quot;ipv6&quot;: [\r\n                {\r\n                    &quot;address&quot;: &quot;::1&quot;, \r\n                    &quot;prefix&quot;: &quot;128&quot;, \r\n                    &quot;scope&quot;: &quot;host&quot;\r\n                }\r\n            ], \r\n            &quot;mtu&quot;: 65536, \r\n            &quot;promisc&quot;: false, \r\n            &quot;type&quot;: &quot;loopback&quot;\r\n        }, \r\n        &quot;ansible_machine&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_machine_id&quot;: &quot;82a2b128171b4628920ed060213ec571&quot;, \r\n        &quot;ansible_memfree_mb&quot;: 50, \r\n        &quot;ansible_memory_mb&quot;: {\r\n            &quot;nocache&quot;: {\r\n                &quot;free&quot;: 92, \r\n                &quot;used&quot;: 900\r\n            }, \r\n            &quot;real&quot;: {\r\n                &quot;free&quot;: 50, \r\n                &quot;total&quot;: 992, \r\n                &quot;used&quot;: 942\r\n            }, \r\n            &quot;swap&quot;: {\r\n                &quot;cached&quot;: 178, \r\n                &quot;free&quot;: 2816, \r\n                &quot;total&quot;: 4095, \r\n                &quot;used&quot;: 1279\r\n            }\r\n        }, \r\n        &quot;ansible_memtotal_mb&quot;: 992, \r\n        &quot;ansible_mounts&quot;: [\r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda4&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 9504952320, \r\n                &quot;size_total&quot;: 27380396032, \r\n                &quot;uuid&quot;: &quot;c9321269-7178-43b4-b696-4de4e92a4518&quot;\r\n            }, \r\n            {\r\n                &quot;device&quot;: &quot;/dev/vda2&quot;, \r\n                &quot;fstype&quot;: &quot;xfs&quot;, \r\n                &quot;mount&quot;: &quot;/boot&quot;, \r\n                &quot;options&quot;: &quot;rw,relatime,attr2,inode64,noquota&quot;, \r\n                &quot;size_available&quot;: 247848960, \r\n                &quot;size_total&quot;: 520794112, \r\n                &quot;uuid&quot;: &quot;babdb772-614a-4bc8-8ee1-ccf2739a7bb6&quot;\r\n            }\r\n        ], \r\n        &quot;ansible_nodename&quot;: &quot;tk2-263-41221.vs.sakura.ne.jp&quot;, \r\n        &quot;ansible_os_family&quot;: &quot;RedHat&quot;, \r\n        &quot;ansible_pkg_mgr&quot;: &quot;yum&quot;, \r\n        &quot;ansible_processor&quot;: [\r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;, \r\n            &quot;GenuineIntel&quot;, \r\n            &quot;Intel(R) Xeon(R) CPU E5-2650 v2 @ 2.60GHz&quot;\r\n        ], \r\n        &quot;ansible_processor_cores&quot;: 1, \r\n        &quot;ansible_processor_count&quot;: 2, \r\n        &quot;ansible_processor_threads_per_core&quot;: 1, \r\n        &quot;ansible_processor_vcpus&quot;: 2, \r\n        &quot;ansible_product_name&quot;: &quot;Standard PC (i440FX + PIIX, 1996)&quot;, \r\n        &quot;ansible_product_serial&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_uuid&quot;: &quot;NA&quot;, \r\n        &quot;ansible_product_version&quot;: &quot;pc-i440fx-trusty&quot;, \r\n        &quot;ansible_python&quot;: {\r\n            &quot;executable&quot;: &quot;/usr/bin/python2&quot;, \r\n            &quot;has_sslcontext&quot;: true, \r\n            &quot;type&quot;: &quot;CPython&quot;, \r\n            &quot;version&quot;: {\r\n                &quot;major&quot;: 2, \r\n                &quot;micro&quot;: 5, \r\n                &quot;minor&quot;: 7, \r\n                &quot;releaselevel&quot;: &quot;final&quot;, \r\n                &quot;serial&quot;: 0\r\n            }, \r\n            &quot;version_info&quot;: [\r\n                2, \r\n                7, \r\n                5, \r\n                &quot;final&quot;, \r\n                0\r\n            ]\r\n        }, \r\n        &quot;ansible_python_version&quot;: &quot;2.7.5&quot;, \r\n        &quot;ansible_real_group_id&quot;: 1000, \r\n        &quot;ansible_real_user_id&quot;: 1000, \r\n        &quot;ansible_selinux&quot;: {\r\n            &quot;status&quot;: &quot;disabled&quot;\r\n        }, \r\n        &quot;ansible_service_mgr&quot;: &quot;systemd&quot;, \r\n        &quot;ansible_ssh_host_key_ecdsa_public&quot;: &quot;AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBN5J+JjU5OWhsxN+K4IKIoOuCB/oYDgJax8niCVDRdZEOXH+zDzHJHUtaO7uUxWC5oWyHMbJ/a2vuVgILH1T0z8=&quot;, \r\n        &quot;ansible_ssh_host_key_ed25519_public&quot;: &quot;AAAAC3NzaC1lZDI1NTE5AAAAIJKQJECBGIJW65YrITiAZN/J7uqqT+G03aJ2uzd8a/GE&quot;, \r\n        &quot;ansible_ssh_host_key_rsa_public&quot;: &quot;AAAAB3NzaC1yc2EAAAADAQABAAABAQDCCSOFYOKRdvzahIY9oTjTadrl1UcSPpFAXDyPDVNN8ipSueBYpmljI8J6LE7V3Uicb6TJ1IXQNsLtbAzoKz5wuWI3Zc4qQbgwchl2nMy638/NMUChrh+xC7qlu2U8pVpcqnndZcXoFSDXyOR5NYvEjY8YOjTzL71CoGfuFgiy/dkLzO4tI9IpOXSMjxjk6N8zC7IKvMO7z7QRvdOStnWiVwUdzSMAB3+43gxIuR98Gorq6ITpXvbLLwtEw5ZaBMRXz+0ufZACGgeo7QK+99hu9h19UsQ3oMqjT2Yb+qB++Ri68mAmCGVpn8/er1wCiM4RUddBfLJSwszbA8gsSVVx&quot;, \r\n        &quot;ansible_swapfree_mb&quot;: 2816, \r\n        &quot;ansible_swaptotal_mb&quot;: 4095, \r\n        &quot;ansible_system&quot;: &quot;Linux&quot;, \r\n        &quot;ansible_system_capabilities&quot;: [\r\n            &quot;&quot;\r\n        ], \r\n        &quot;ansible_system_capabilities_enforced&quot;: &quot;True&quot;, \r\n        &quot;ansible_system_vendor&quot;: &quot;QEMU&quot;, \r\n        &quot;ansible_uptime_seconds&quot;: 6711836, \r\n        &quot;ansible_user_dir&quot;: &quot;/home/ios&quot;, \r\n        &quot;ansible_user_gecos&quot;: &quot;&quot;, \r\n        &quot;ansible_user_gid&quot;: 1000, \r\n        &quot;ansible_user_id&quot;: &quot;ios&quot;, \r\n        &quot;ansible_user_shell&quot;: &quot;/bin/bash&quot;, \r\n        &quot;ansible_user_uid&quot;: 1000, \r\n        &quot;ansible_userspace_architecture&quot;: &quot;x86_64&quot;, \r\n        &quot;ansible_userspace_bits&quot;: &quot;64&quot;, \r\n        &quot;ansible_virtualization_role&quot;: &quot;guest&quot;, \r\n        &quot;ansible_virtualization_type&quot;: &quot;kvm&quot;, \r\n        &quot;module_setup&quot;: true\r\n    }, \r\n    &quot;changed&quot;: false\r\n}\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://docs.ansible.com/ansible/faq.html\" target=\"_blank\">Frequently Asked Questions &mdash; Ansible Documentation</a></li>\r\n</ul>','Ansibleで環境変数を取得する','','inherit','closed','closed','','1295-revision-v1','','','2017-05-17 00:47:45','2017-05-16 15:47:45','',1295,'http://49.212.213.226/wordpress/solution-log/2017/05/17/1295-revision-v1/',0,'revision','',0),(1309,1,'2017-07-04 00:09:29','2017-07-03 15:09:29','<h3>CentOS7を設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# フォントを大きくする\r\nsetfont sun12x22\r\n\r\n# インターネットへ接続する\r\nnmtui\r\n\r\n# GNOME デスクトップをインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# nVIDIAグラフィックカードドライバーのインストールrpmをインストールする\r\n\r\nrpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\r\nrpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\r\necho $(nvidia-detect)\r\nyum install kmod-nvidia.x86_64\r\n\r\n\r\n# ターゲットユニットを設定する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n # 再起動する\r\nreboot\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://www.centos.org/forums/viewtopic.php?t=61162\" target=\"_blank\">Please Help with NVIDIA Driver installation on Centos 7 - CentOS</a></li>\r\n</ul>\r\n\r\n\r\n','HP Compaq 8100 Elite Small に nVIDIA GeForce GT520 1GB LowProfile を装着し CentOS7をインストールする','','publish','closed','closed','','hp-compaq-8100-elite-small-%e3%81%ab-nvidia-geforce-gt520-1gb-lowprofile-%e3%82%92%e8%a3%85%e7%9d%80%e3%81%97-centos7%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2017-07-04 00:09:29','2017-07-03 15:09:29','',0,'http://49.212.213.226/wordpress/solution-log/?p=1309',0,'post','',0),(1310,1,'2017-07-04 00:09:29','2017-07-03 15:09:29','<h3>CentOS7を設定する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# フォントを大きくする\r\nsetfont sun12x22\r\n\r\n# インターネットへ接続する\r\nnmtui\r\n\r\n# GNOME デスクトップをインストールする\r\nyum groupinstall &quot;GNOME Desktop&quot;\r\n\r\n# nVIDIAグラフィックカードドライバーのインストールrpmをインストールする\r\n\r\nrpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org\r\nrpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm\r\necho $(nvidia-detect)\r\nyum install kmod-nvidia.x86_64\r\n\r\n\r\n# ターゲットユニットを設定する\r\nsystemctl get-default\r\nsystemctl set-default graphical.target\r\n\r\n # 再起動する\r\nreboot\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"https://www.centos.org/forums/viewtopic.php?t=61162\" target=\"_blank\">Please Help with NVIDIA Driver installation on Centos 7 - CentOS</a></li>\r\n</ul>\r\n\r\n\r\n','HP Compaq 8100 Elite Small に nVIDIA GeForce GT520 1GB LowProfile を装着し CentOS7をインストールする','','inherit','closed','closed','','1309-revision-v1','','','2017-07-04 00:09:29','2017-07-03 15:09:29','',1309,'http://49.212.213.226/wordpress/solution-log/2017/07/04/1309-revision-v1/',0,'revision','',0),(1312,1,'2017-09-14 21:30:57','2017-09-14 12:30:57','<h3>Redmineをバックアップをする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Gitリポジトリをアーカイブする\r\ntar cfv git.tar /var/git/\r\n\r\n# Redmineメディアファイルをアーカイブする\r\ntar cfv files.tar /var/lib/redmine/files/\r\n\r\n# PostgeSQLデータベースをダンプする\r\npg_dump -h localhost -U redmine redmine &gt; redmine.psql\r\n\r\n# アーカイブデータ、データベースダンプデータをアーカイブする\r\ntar cfv redmine.bk.tar *\r\n\r\n# アーカイブスデータを公開ディレクトリへ移動させる\r\nmv redmine.bk.tar /var/www/html/\r\n</pre>\r\n\r\n<h3>Redmineをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Redmineバックアップアーカイブスデータを取得する\r\ncurl -O http://example.com/redmine.bk.tar\r\n\r\n# アーカイブスデータを解凍する\r\ntar xfv redmine.bk.tar\r\n\r\n# Gitリポジトリを配置する\r\ncd /tmp/redmine\r\nmv git /var/\r\n\r\n# メディアファイルを配置する\r\ncd /tmp/redmine/\r\nmv files/ /var/lib/redmine/\r\n\r\n# PostgreSQLデータベースをリストアする\r\nsystemctl stop postgresql.service\r\nsystemctl start postgresql.service\r\nsudo -u postgres dropdb redmine;\r\nsudo -u postgres createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine -T template0 redmine\r\npsql -h localhost -U redmine redmine &lt; /tmp/redmine/redmine.psql \r\n\r\n# Redmineのセッションデータをクリアする\r\ncd /var/lib/redmine\r\nbundle exec rake db:migrate RAILS_ENV=production\r\nbundle exec rake tmp:cache:clear tmp:sessions:clear RAILS_ENV=production\r\n\r\n# httpdを再起動する\r\nsystemctl stop httpd.service\r\nsystemctl start httpd.service\r\n</pre>\r\n\r\n','CentOS7でRedmineをバックアップ、リストアする','','publish','closed','closed','','centos7%e3%81%a7redmine%e3%82%92%e3%83%90%e3%83%83%e3%82%af%e3%82%a2%e3%83%83%e3%83%97%e3%80%81%e3%83%aa%e3%82%b9%e3%83%88%e3%82%a2%e3%81%99%e3%82%8b','','','2017-09-14 21:30:57','2017-09-14 12:30:57','',0,'http://49.212.213.226/wordpress/solution-log/?p=1312',0,'post','',0),(1313,1,'2017-09-14 21:12:04','2017-09-14 12:12:04','<h3>バックアップをする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Gitリポジトリをアーカイブする\r\ntar cfv git.tar /var/git/\r\n\r\n# Redmineメディアファイルをアーカイブする\r\ntar cfv files.tar /var/lib/redmine/files/\r\n\r\n# PostgeSQLデータベースをダンプする\r\npg_dump -h localhost -U redmine redmine &gt; redmine.psql\r\n\r\n# アーカイブデータ、データベースダンプデータをアーカイブする\r\ntar cfv redmine.bk.tar *\r\n\r\n# アーカイブデータを公開ディレクトリへ移動させる\r\nmv redmine.bk.tar /var/www/html/\r\n</pre>','CentOS7でRedmineをバックアップ、リストアする','','inherit','closed','closed','','1312-revision-v1','','','2017-09-14 21:12:04','2017-09-14 12:12:04','',1312,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1312-revision-v1/',0,'revision','',0),(1314,1,'2017-09-14 21:22:42','2017-09-14 12:22:42','<h3>Redmineをバックアップをする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Gitリポジトリをアーカイブする\r\ntar cfv git.tar /var/git/\r\n\r\n# Redmineメディアファイルをアーカイブする\r\ntar cfv files.tar /var/lib/redmine/files/\r\n\r\n# PostgeSQLデータベースをダンプする\r\npg_dump -h localhost -U redmine redmine &gt; redmine.psql\r\n\r\n# アーカイブデータ、データベースダンプデータをアーカイブする\r\ntar cfv redmine.bk.tar *\r\n\r\n# アーカイブスデータを公開ディレクトリへ移動させる\r\nmv redmine.bk.tar /var/www/html/\r\n</pre>\r\n\r\n<h3>Redmineをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Redmineバックアップアーカイブスデータを取得する\r\ncurl -O http://example.com/redmine.bk.tar\r\n\r\n# アーカイブスデータを解凍する\r\ntar xfv redmine.bk.tar\r\n\r\n# Gitリポジトリを配置する\r\ncd /tmp/redmine\r\nmv git /var/\r\n\r\n# メディアファイルを配置する\r\ncd /tmp/redmine/\r\nmv files/ /var/lib/redmine/\r\n\r\n# PostgreSQLデータベースをリストアする\r\nsystemctl stop postgresql.service\r\nsystemctl start postgresql.service\r\nsudo -u postgres dropdb redmine;\r\nsudo -u postgres createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine -T template0 redmine\r\npsql -h localhost -U redmine redmine &lt; /tmp/redmine/redmine.psql \r\n\r\n# Redmineのキャッシュをクリアする\r\nbundle exec rake db:migrate RAILS_ENV=production\r\nbundle exec rake tmp:cache:clear tmp:sessions:clear RAILS_ENV=production\r\n\r\n# httpdを再起動する\r\nsystemctl stop httpd.service\r\nsystemctl start httpd.service\r\n</pre>\r\n\r\n','CentOS7でRedmineをバックアップ、リストアする','','inherit','closed','closed','','1312-revision-v1','','','2017-09-14 21:22:42','2017-09-14 12:22:42','',1312,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1312-revision-v1/',0,'revision','',0),(1315,1,'2017-09-14 21:24:29','2017-09-14 12:24:29','<h3>Redmineをバックアップをする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Gitリポジトリをアーカイブする\r\ntar cfv git.tar /var/git/\r\n\r\n# Redmineメディアファイルをアーカイブする\r\ntar cfv files.tar /var/lib/redmine/files/\r\n\r\n# PostgeSQLデータベースをダンプする\r\npg_dump -h localhost -U redmine redmine &gt; redmine.psql\r\n\r\n# アーカイブデータ、データベースダンプデータをアーカイブする\r\ntar cfv redmine.bk.tar *\r\n\r\n# アーカイブスデータを公開ディレクトリへ移動させる\r\nmv redmine.bk.tar /var/www/html/\r\n</pre>\r\n\r\n<h3>Redmineをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Redmineバックアップアーカイブスデータを取得する\r\ncurl -O http://example.com/redmine.bk.tar\r\n\r\n# アーカイブスデータを解凍する\r\ntar xfv redmine.bk.tar\r\n\r\n# Gitリポジトリを配置する\r\ncd /tmp/redmine\r\nmv git /var/\r\n\r\n# メディアファイルを配置する\r\ncd /tmp/redmine/\r\nmv files/ /var/lib/redmine/\r\n\r\n# PostgreSQLデータベースをリストアする\r\nsystemctl stop postgresql.service\r\nsystemctl start postgresql.service\r\nsudo -u postgres dropdb redmine;\r\nsudo -u postgres createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine -T template0 redmine\r\npsql -h localhost -U redmine redmine &lt; /tmp/redmine/redmine.psql \r\n\r\n# Redmineのキャッシュをクリアする\r\ncd /var/lib/redmine\r\nbundle exec rake db:migrate RAILS_ENV=production\r\nbundle exec rake tmp:cache:clear tmp:sessions:clear RAILS_ENV=production\r\n\r\n# httpdを再起動する\r\nsystemctl stop httpd.service\r\nsystemctl start httpd.service\r\n</pre>\r\n\r\n','CentOS7でRedmineをバックアップ、リストアする','','inherit','closed','closed','','1312-revision-v1','','','2017-09-14 21:24:29','2017-09-14 12:24:29','',1312,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1312-revision-v1/',0,'revision','',0),(1316,1,'2017-09-14 21:30:10','2017-09-14 12:30:10','<h3>Redmineをバックアップをする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Gitリポジトリをアーカイブする\r\ntar cfv git.tar /var/git/\r\n\r\n# Redmineメディアファイルをアーカイブする\r\ntar cfv files.tar /var/lib/redmine/files/\r\n\r\n# PostgeSQLデータベースをダンプする\r\npg_dump -h localhost -U redmine redmine &gt; redmine.psql\r\n\r\n# アーカイブデータ、データベースダンプデータをアーカイブする\r\ntar cfv redmine.bk.tar *\r\n\r\n# アーカイブスデータを公開ディレクトリへ移動させる\r\nmv redmine.bk.tar /var/www/html/\r\n</pre>\r\n\r\n<h3>Redmineをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# 作業用ディレクトリへcdする\r\ncd /tmp\r\n\r\n# Redmineバックアップアーカイブスデータを取得する\r\ncurl -O http://example.com/redmine.bk.tar\r\n\r\n# アーカイブスデータを解凍する\r\ntar xfv redmine.bk.tar\r\n\r\n# Gitリポジトリを配置する\r\ncd /tmp/redmine\r\nmv git /var/\r\n\r\n# メディアファイルを配置する\r\ncd /tmp/redmine/\r\nmv files/ /var/lib/redmine/\r\n\r\n# PostgreSQLデータベースをリストアする\r\nsystemctl stop postgresql.service\r\nsystemctl start postgresql.service\r\nsudo -u postgres dropdb redmine;\r\nsudo -u postgres createdb -E UTF-8 -l ja_JP.UTF-8 -O redmine -T template0 redmine\r\npsql -h localhost -U redmine redmine &lt; /tmp/redmine/redmine.psql \r\n\r\n# Redmineのセッションデータをクリアする\r\ncd /var/lib/redmine\r\nbundle exec rake db:migrate RAILS_ENV=production\r\nbundle exec rake tmp:cache:clear tmp:sessions:clear RAILS_ENV=production\r\n\r\n# httpdを再起動する\r\nsystemctl stop httpd.service\r\nsystemctl start httpd.service\r\n</pre>\r\n\r\n','CentOS7でRedmineをバックアップ、リストアする','','inherit','closed','closed','','1312-revision-v1','','','2017-09-14 21:30:10','2017-09-14 12:30:10','',1312,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1312-revision-v1/',0,'revision','',0),(1317,1,'2017-09-14 21:51:12','2017-09-14 12:51:12','<h3>Jenkinsをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Javaをインストールする\r\nyum install java\r\n\r\n# yumリポジトリにjenkinsのリポジトリを追加する\r\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\r\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\r\n\r\n# Jenkinsをインストールする\r\nyum install jenkins\r\n\r\n# Jenkinsを起動する\r\nsystemctl start jenkins\r\n\r\n# Jenkinsが利用するポートを解放する\r\nfirewall-cmd --zone=public --permanent --add-port=8080/tcp\r\nfirewall-cmd --reload\r\n\r\n# システムのロケールを変更する\r\nlocalectl set-locale LANG=ja_JP.utf8\r\nsource /etc/locale.conf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<ul>\r\n	<li><a href=\"http://qiita.com/yukimunet/items/28c89370fccc86077dd2\" target=\"_blank\">CentOS7へのJenkinsのインストール手順 - Qiita</a></li>\r\n<li><a href=\"http://zero-config.com/centos/changelocale-002.html\" target=\"_blank\">[CentOS]CentOS7でのロケール(locale)の確認及び変更 | Zero Configuration</a></li>\r\n	<li><a href=\"http://qiita.com/LowSE01/items/3e39bf6f86e6884d69b1\" target=\"_blank\">Jenkinsの文字コードを確認・設定する方法 - Qiita</a></li>\r\n\r\n\r\n</ul>','CentOS7へJenkinsをインストールする','','publish','closed','closed','','centos7%e3%81%b8jenkins%e3%82%92%e3%82%a4%e3%83%b3%e3%82%b9%e3%83%88%e3%83%bc%e3%83%ab%e3%81%99%e3%82%8b','','','2017-09-14 22:12:28','2017-09-14 13:12:28','',0,'http://49.212.213.226/wordpress/solution-log/?p=1317',0,'post','',0),(1318,1,'2017-09-14 21:49:14','2017-09-14 12:49:14','<h3>Jenkinsをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Javaをインストールする\r\nyum install java\r\n\r\n# yumリポジトリにjenkinsのrpmを追加する\r\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\r\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\r\n\r\n# Jenkinsをインストールする\r\nyum install jenkins\r\n\r\n# Jenkinsを起動する\r\nsystemctl start jenkins\r\n\r\n# Jenkinsが利用するポートを解放する\r\nfirewall-cmd --zone=public --permanent --add-port=8080/tcp\r\nfirewall-cmd --reload\r\n\r\n# システムのロケールを変更する\r\nlocalectl set-locale LANG=ja_JP.utf8\r\nsource /etc/locale.conf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<ul>\r\n	<li><a href=\"http://qiita.com/yukimunet/items/28c89370fccc86077dd2\" target=\"_blank\">CentOS7へのJenkinsのインストール手順 - Qiita</a></li>\r\n</ul>','CentOS7へJenkinsをインストールする','','inherit','closed','closed','','1317-revision-v1','','','2017-09-14 21:49:14','2017-09-14 12:49:14','',1317,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1317-revision-v1/',0,'revision','',0),(1319,1,'2017-09-14 21:50:34','2017-09-14 12:50:34','<h3>Jenkinsをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Javaをインストールする\r\nyum install java\r\n\r\n# yumリポジトリにjenkinsのリポジトリを追加する\r\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\r\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\r\n\r\n# Jenkinsをインストールする\r\nyum install jenkins\r\n\r\n# Jenkinsを起動する\r\nsystemctl start jenkins\r\n\r\n# Jenkinsが利用するポートを解放する\r\nfirewall-cmd --zone=public --permanent --add-port=8080/tcp\r\nfirewall-cmd --reload\r\n\r\n# システムのロケールを変更する\r\nlocalectl set-locale LANG=ja_JP.utf8\r\nsource /etc/locale.conf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<ul>\r\n	<li><a href=\"http://qiita.com/yukimunet/items/28c89370fccc86077dd2\" target=\"_blank\">CentOS7へのJenkinsのインストール手順 - Qiita</a></li>\r\n</ul>','CentOS7へJenkinsをインストールする','','inherit','closed','closed','','1317-revision-v1','','','2017-09-14 21:50:34','2017-09-14 12:50:34','',1317,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1317-revision-v1/',0,'revision','',0),(1320,1,'2017-09-14 22:29:22','2017-09-14 13:29:22','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>バックアップ</h4>\r\n<ul>\r\n	<li><a href=\"http://qiita.com/tnishi91/items/d2ba5c42408333eeca9a\" target=\"_blank\">Jenkinsのバックアップ方法 - Qiita</a></li>\r\n<li><a href=\"https://github.com/sue445/jenkins-backup-script\" target=\"_blank\">GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins</a></li>\r\n</ul>\r\n\r\n<h4>リストア</h4>\r\n<ul>\r\n<li><a href=\"http://www.souya.biz/blog/2009/08/01/cp%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E7%A2%BA%E8%AA%8D%E3%81%AA%E3%81%97%E3%81%AB%E4%B8%8A%E6%9B%B8%E3%81%8D%EF%BC%88linux%EF%BC%89/\" target=\"_blank\">cpコマンド で確認なしに上書き（Linux） - 創屋ぷれす</a></li>\r\n</ul>\r\n\r\n<h4>Redmineチケット</h4>\r\n<ul>\r\n<li><a href=\"/redmine/issues/325\" target=\"_blank\">Jenkinsのバックアップとリストアについて調べる</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7でJenkinsをバックアップ、リストアする','','publish','closed','closed','','centos7%e3%81%a7jenkins%e3%82%92%e3%83%90%e3%83%83%e3%82%af%e3%82%a2%e3%83%83%e3%83%97%e3%80%81%e3%83%aa%e3%82%b9%e3%83%88%e3%82%a2%e3%81%99%e3%82%8b','','','2017-09-14 22:29:22','2017-09-14 13:29:22','',0,'http://49.212.213.226/wordpress/solution-log/?p=1320',0,'post','',0),(1321,1,'2017-09-14 21:57:29','2017-09-14 12:57:29','','CentOS7','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 21:57:29','2017-09-14 12:57:29','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1322,1,'2017-09-14 22:02:22','2017-09-14 13:02:22','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n&lt;/h3&gt;\r\n\r\n&lt;h3&gt;Jenkinsをリストアする&lt;/h3&gt;\r\n\r\n&lt;pre class=&quot;brush: bash&quot;&gt;\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:02:22','2017-09-14 13:02:22','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1323,1,'2017-09-14 22:02:43','2017-09-14 13:02:43','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:02:43','2017-09-14 13:02:43','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1324,1,'2017-09-14 22:12:20','2017-09-14 13:12:20','<h3>Jenkinsをインストールする</h3>\n\n<pre class=\"brush: bash\">\n# Javaをインストールする\nyum install java\n\n# yumリポジトリにjenkinsのリポジトリを追加する\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\n\n# Jenkinsをインストールする\nyum install jenkins\n\n# Jenkinsを起動する\nsystemctl start jenkins\n\n# Jenkinsが利用するポートを解放する\nfirewall-cmd --zone=public --permanent --add-port=8080/tcp\nfirewall-cmd --reload\n\n# システムのロケールを変更する\nlocalectl set-locale LANG=ja_JP.utf8\nsource /etc/locale.conf\n</pre>\n\n<h3>参考サイト</h3>\n\n<ul>\n	<li><a href=\"http://qiita.com/yukimunet/items/28c89370fccc86077dd2\" target=\"_blank\">CentOS7へのJenkinsのインストール手順 - Qiita</a></li>\n<li><a href=\"http://zero-config.com/centos/changelocale-002.html\" target=\"_blank\">[CentOS]CentOS7でのロケール(locale)の確認及び変更 | Zero Configuration</a></li>\n	<li><a href=\"http://qiita.com/LowSE01/items/3e39bf6f86e6884d69b1\" target=\"_blank\">Jenkinsの文字コードを確認・設定する方法 - Qiita</a></li>\n\n\n</ul>','CentOS7へJenkinsをインストールする','','inherit','closed','closed','','1317-autosave-v1','','','2017-09-14 22:12:20','2017-09-14 13:12:20','',1317,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1317-autosave-v1/',0,'revision','',0),(1325,1,'2017-09-14 22:12:28','2017-09-14 13:12:28','<h3>Jenkinsをインストールする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Javaをインストールする\r\nyum install java\r\n\r\n# yumリポジトリにjenkinsのリポジトリを追加する\r\nwget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo\r\nrpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key\r\n\r\n# Jenkinsをインストールする\r\nyum install jenkins\r\n\r\n# Jenkinsを起動する\r\nsystemctl start jenkins\r\n\r\n# Jenkinsが利用するポートを解放する\r\nfirewall-cmd --zone=public --permanent --add-port=8080/tcp\r\nfirewall-cmd --reload\r\n\r\n# システムのロケールを変更する\r\nlocalectl set-locale LANG=ja_JP.utf8\r\nsource /etc/locale.conf\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<ul>\r\n	<li><a href=\"http://qiita.com/yukimunet/items/28c89370fccc86077dd2\" target=\"_blank\">CentOS7へのJenkinsのインストール手順 - Qiita</a></li>\r\n<li><a href=\"http://zero-config.com/centos/changelocale-002.html\" target=\"_blank\">[CentOS]CentOS7でのロケール(locale)の確認及び変更 | Zero Configuration</a></li>\r\n	<li><a href=\"http://qiita.com/LowSE01/items/3e39bf6f86e6884d69b1\" target=\"_blank\">Jenkinsの文字コードを確認・設定する方法 - Qiita</a></li>\r\n\r\n\r\n</ul>','CentOS7へJenkinsをインストールする','','inherit','closed','closed','','1317-revision-v1','','','2017-09-14 22:12:28','2017-09-14 13:12:28','',1317,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1317-revision-v1/',0,'revision','',0),(1326,1,'2017-09-14 22:21:47','2017-09-14 13:21:47','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>バックアップ</h4>\r\n<ul>\r\n	<li><a href=\"http://qiita.com/tnishi91/items/d2ba5c42408333eeca9a\" target=\"_blank\">Jenkinsのバックアップ方法 - Qiita</a></li>\r\n<li><a href=\"https://github.com/sue445/jenkins-backup-script\" target=\"_blank\">GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins</a></li>\r\n</ul>\r\n\r\n','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:21:47','2017-09-14 13:21:47','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1327,1,'2017-09-14 22:25:27','2017-09-14 13:25:27','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>バックアップ</h4>\r\n<ul>\r\n	<li><a href=\"http://qiita.com/tnishi91/items/d2ba5c42408333eeca9a\" target=\"_blank\">Jenkinsのバックアップ方法 - Qiita</a></li>\r\n<li><a href=\"https://github.com/sue445/jenkins-backup-script\" target=\"_blank\">GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins</a></li>\r\n</ul>\r\n\r\n<h4>リストア</h4>\r\n<ul>\r\n<li><a href=\"http://www.souya.biz/blog/2009/08/01/cp%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E7%A2%BA%E8%AA%8D%E3%81%AA%E3%81%97%E3%81%AB%E4%B8%8A%E6%9B%B8%E3%81%8D%EF%BC%88linux%EF%BC%89/\" target=\"_blank\">cpコマンド で確認なしに上書き（Linux） - 創屋ぷれす</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:25:27','2017-09-14 13:25:27','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1328,1,'2017-09-14 22:27:34','2017-09-14 13:27:34','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>バックアップ</h4>\r\n<ul>\r\n	<li><a href=\"http://qiita.com/tnishi91/items/d2ba5c42408333eeca9a\" target=\"_blank\">Jenkinsのバックアップ方法 - Qiita</a></li>\r\n<li><a href=\"https://github.com/sue445/jenkins-backup-script\" target=\"_blank\">GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins</a></li>\r\n</ul>\r\n\r\n<h4>リストア</h4>\r\n<ul>\r\n<li><a href=\"http://www.souya.biz/blog/2009/08/01/cp%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E7%A2%BA%E8%AA%8D%E3%81%AA%E3%81%97%E3%81%AB%E4%B8%8A%E6%9B%B8%E3%81%8D%EF%BC%88linux%EF%BC%89/\" target=\"_blank\">cpコマンド で確認なしに上書き（Linux） - 創屋ぷれす</a></li>\r\n</ul>\r\n\r\n<h4>Redmineチケット</h4>\r\n<ul>\r\n<li><a href=\"./redmine/issues/325\" target=\"_blank\">Jenkinsのバックアップとリストアについて調べる</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:27:34','2017-09-14 13:27:34','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1329,1,'2017-09-14 22:28:54','2017-09-14 13:28:54','<h3>Jenkinsバックアップデータを作成する</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkins稼働サーバで\r\nsystemctl stop jenkins\r\n\r\ngit clone https://github.com/sue445/jenkins-backup-script.git\r\nbash jenkins-backup.sh /path/to/jenkins archives.tar.gz\r\n</pre>\r\n\r\n<h3>Jenkinsをリストアする</h3>\r\n\r\n<pre class=\"brush: bash\">\r\n# Jenkinsを停止する\r\nsystemctl stop jenkins\r\n\r\n# 稼働中のJenkinsのデータを消去する\r\nrm -rf /var/cache/jenkins/*\r\nrm -rf /path/to/jenkins/jobs/\r\nrm -rf /path/to/jenkins/plugins/\r\nrm -rf /path/to/jenkins/users/\r\nrm -rf /path/to/jenkins/secrets/\r\n\r\n# バックアップデータをリストアする\r\ntar xfvz archives.tar.gz\r\ncd jenkins-backup/\r\nmv -f * /path/to/jenkins\r\nchown -R jenkins:jenkins /path/to/jenkins\r\n\r\n# Jenkinsを再起動する\r\nsystemctl start jenkins\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n\r\n<h4>バックアップ</h4>\r\n<ul>\r\n	<li><a href=\"http://qiita.com/tnishi91/items/d2ba5c42408333eeca9a\" target=\"_blank\">Jenkinsのバックアップ方法 - Qiita</a></li>\r\n<li><a href=\"https://github.com/sue445/jenkins-backup-script\" target=\"_blank\">GitHub - sue445/jenkins-backup-script: archive jenkins setting and plugins</a></li>\r\n</ul>\r\n\r\n<h4>リストア</h4>\r\n<ul>\r\n<li><a href=\"http://www.souya.biz/blog/2009/08/01/cp%E3%82%B3%E3%83%9E%E3%83%B3%E3%83%89%E3%81%A7%E7%A2%BA%E8%AA%8D%E3%81%AA%E3%81%97%E3%81%AB%E4%B8%8A%E6%9B%B8%E3%81%8D%EF%BC%88linux%EF%BC%89/\" target=\"_blank\">cpコマンド で確認なしに上書き（Linux） - 創屋ぷれす</a></li>\r\n</ul>\r\n\r\n<h4>Redmineチケット</h4>\r\n<ul>\r\n<li><a href=\"/redmine/issues/325\" target=\"_blank\">Jenkinsのバックアップとリストアについて調べる</a></li>\r\n</ul>\r\n\r\n\r\n','CentOS7でJenkinsをバックアップ、リストアする','','inherit','closed','closed','','1320-revision-v1','','','2017-09-14 22:28:54','2017-09-14 13:28:54','',1320,'http://49.212.213.226/wordpress/solution-log/2017/09/14/1320-revision-v1/',0,'revision','',0),(1331,1,'2017-09-27 02:00:20','2017-09-26 17:00:20','<h3>書き換え</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed -i &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>ドライラン(iオプションを無くす)</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://sea-otter-factory.blogspot.jp/2008/07/unix-xargs.html\" rel=\"noopener\" target=\"_blank\">備忘録: [unix] スペースを含むファイル名をfindとxargsで使う方法</a></li>\r\n</ul>','Jenkinsでジョブの設定を一気に書き換える','','publish','closed','closed','','jenkins%e3%81%a7%e3%82%b8%e3%83%a7%e3%83%96%e3%81%ae%e8%a8%ad%e5%ae%9a%e3%82%92%e4%b8%80%e6%b0%97%e3%81%ab%e6%9b%b8%e3%81%8d%e6%8f%9b%e3%81%88%e3%82%8b','','','2018-01-23 22:46:44','2018-01-23 13:46:44','',0,'http://49.212.213.226/wordpress/solution-log/?p=1331',0,'post','',0),(1332,1,'2017-09-27 02:00:20','2017-09-26 17:00:20','書き換え\r\n\r\nfind /var/lib/jenkins/jobs -typef -name config.xml -print0 | xargs -0 sed -i \'s/git clone-b jenkins-test/git clone -b topic/g\'\r\n\r\nドライラン(iオプションを無くす)\r\n\r\nfind /var/lib/jenkins/jobs -typef -name config.xml -print0 | xargs -0 sed \r\n \'s/git clone-b jenkins-test/git clone -b topic/g\'\r\n\r\n\r\n参考サイト\r\nhttp://sea-otter-factory.blogspot.jp/2008/07/unix-xargs.html','Jenkinsでジョブの設定を一気に書き換える','','inherit','closed','closed','','1331-revision-v1','','','2017-09-27 02:00:20','2017-09-26 17:00:20','',1331,'http://49.212.213.226/wordpress/solution-log/2017/09/27/1331-revision-v1/',0,'revision','',0),(1336,1,'2018-01-23 22:42:56','0000-00-00 00:00:00','','自動下書き','','auto-draft','closed','closed','','','','','2018-01-23 22:42:56','0000-00-00 00:00:00','',0,'http://49.212.213.226/wordpress/solution-log/?p=1336',0,'post','',0),(1337,1,'2018-01-23 22:46:33','2018-01-23 13:46:33','<h3>書き換え</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed -i &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>ドライラン(iオプションを無くす)</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://sea-otter-factory.blogspot.jp/2008/07/unix-xargs.html\" rel=\"noopener\" target=\"_blank\">備忘録: [unix] スペースを含むファイル名をfindとxargsで使う方法</a></li>\r\n</ul>','Jenkinsでジョブの設定を一気に書き換える','','inherit','closed','closed','','1331-autosave-v1','','','2018-01-23 22:46:33','2018-01-23 13:46:33','',1331,'http://49.212.213.226/wordpress/solution-log/2018/01/23/1331-autosave-v1/',0,'revision','',0),(1338,1,'2018-01-23 22:46:44','2018-01-23 13:46:44','<h3>書き換え</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed -i &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>ドライラン(iオプションを無くす)</h3>\r\n\r\n<pre class=\"brush: bash\">\r\nfind /var/lib/jenkins/jobs -type f -name config.xml -print0 | xargs -0 sed &#039;s/git clone-b jenkins-test/git clone -b topic/g&#039;\r\n</pre>\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n	<li><a href=\"http://sea-otter-factory.blogspot.jp/2008/07/unix-xargs.html\" rel=\"noopener\" target=\"_blank\">備忘録: [unix] スペースを含むファイル名をfindとxargsで使う方法</a></li>\r\n</ul>','Jenkinsでジョブの設定を一気に書き換える','','inherit','closed','closed','','1331-revision-v1','','','2018-01-23 22:46:44','2018-01-23 13:46:44','',1331,'http://49.212.213.226/wordpress/solution-log/2018/01/23/1331-revision-v1/',0,'revision','',0),(1339,1,'2018-05-23 18:57:29','2018-05-23 09:57:29','ノートPCをlenovoからdynabookに替えたので新しく作業環境を整える必要が出てきた。CentOSも世の中の流れがだんだんと「6」から「7」になってきたのでローカル環境もCentOS7に統一する。\r\n\r\n<h3>Windows7にVirtualBoxをインストールする※注意</h3>\r\n<a href=\"https://www.virtualbox.org/wiki/Downloads\" target=\"_blank\">VirtualBoxの公式サイトより</a>最新のものをダウンロードしインストールする。<strong>既にVirtualBoxがインストールされている場合は必ず最新バージョンのVirtualBoxを利用する</strong>。\r\n\r\n<h3>CentOS7を取得する</h3>\r\nゲストOSをデスクトップ環境として使用する場合はCentOS7の公式サイトより<a href=\"https://www.centos.org/download/\" target=\"_blank\">Everything ISO</a>をダウンロードする。ファイルサイズが7G以上あるのでダウンロードには若干時間がかかる。\r\n\r\n<h3>VirtualBoxにCentOS7をインストールする</h3>\r\n『<strong>ソフトウェアの選択(S)</strong>』を選択し、左の ベース環境 から 『<strong>GNOME Desktop</strong>』 を選択\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_1-300x220.jpg\" alt=\"\" width=\"300\" height=\"220\" class=\"aligncenter size-medium wp-image-1187\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_2-300x196.jpg\" alt=\"\" width=\"300\" height=\"196\" class=\"aligncenter size-medium wp-image-1188\" /></a>\r\n\r\n\r\n『<strong>ネットワークとホスト名(N)</strong>』を選択し、ネットワーク接続を『<strong>オン</strong>』にする。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_3-300x266.jpg\" alt=\"\" width=\"300\" height=\"266\" class=\"aligncenter size-medium wp-image-1189\" /></a>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_4-300x44.jpg\" alt=\"\" width=\"300\" height=\"44\" class=\"aligncenter size-medium wp-image-1190\" /></a>\r\n\r\n<h3>VirtualBox上でネットワークの設定を行う</h3>\r\nWi-fiを使わない場合はNATで良い。\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>設定</strong>』→『<strong>ネットワーク</strong>』の順に開き、『<strong>アダプター 1</strong>』の割り当ての項目を『<strong>ブリッジアダプター</strong>』に設定する。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_network_adapter_setting-300x169.jpg\" alt=\"150811_virtualbox_network_adapter_setting\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1007\" /></a>\r\n\r\nまた『<strong>名前</strong>』の部分はWindows7がインターネット接続に利用するNICによって設定が変わるのでゲストOSの起動時に都度都度変更する必要がある。\r\n\r\n<ul>\r\n<li><strong>iPhone6をUSB接続でつないだ場合</strong>→『<strong>Apple Mobile Device Ethernet</strong>』</li>\r\n<li><strong>dynabookのwi-fiで接続する場合</strong>→『<strong>Realtek RTL8188CE Wireless LAN 802.1 1n PCI-E NIC</strong>』</li>\r\n</ul>\r\n\r\n\r\n<h3>VirtualBox Guest AdditionsをCentOS7にインストールする</h3>\r\n初期の状態だとVirtualBoxにインストールしたCentOS7のモニター解像度が変更出来ない。そのためゲストOSのCentOS7に『<strong>VirtualBox Guest Additions</strong>』をインストールする。\r\n\r\nゲストOSであるCentOS7上で\r\n\r\n<pre class=\"brush: bash\">\r\n# あらかじめVirtualBox Guest Additionのインストールに\r\n# 必要なライブラリやヘッダファイルをインストールする\r\n\r\nyum install epel-release\r\nyum install dkms\r\nyum groupinstall &quot;Development Tools&quot;\r\nyum install kernel-devel\r\nyum update\r\n</pre>\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/150811_virtualbox_install_guest_addtions-300x169.jpg\" alt=\"150811_virtualbox_install_guest_addtions\" width=\"300\" height=\"169\" class=\"aligncenter size-medium wp-image-1011\" /></a>\r\n\r\nゲストOSが立ち上がってる状態で\r\n\r\n『<strong>VirtualBox</strong>』→『<strong>デバイス</strong>』→『<strong>Guest AdditionsのCDイメージを挿入</strong>』をクリック。あとは自動的に「<strong>VirtualBox Guest Addtions</strong>」がインストールされる。\r\n\r\nKernelとkernel-develのバージョンが同じでない場合は<a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\">インストールが失敗する</a>。yum updateを実行すると良い。\r\n\r\n<a href=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5.jpg\"><img src=\"http://49.212.213.226/wordpress/solution-log/wp-content/uploads/2015/08/160510_install_centos7_on_vb_5-300x202.jpg\" alt=\"\" width=\"300\" height=\"202\" class=\"aligncenter size-medium wp-image-1191\" /></a>\r\n\r\n\r\n<h3>共有フォルダの設定を行う</h3>\r\n\r\n<a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">こちら</a>を参考にする\r\n\r\n<h3>参考サイト</h3>\r\n<ul>\r\n<li><a href=\"https://www.centos.org/forums/viewtopic.php?f=47&t=47116\" target=\"_blank\">CentOS &bull; View topic - CentOS 7 with VirtualBox</a></li>\r\n<li><a href=\"http://vboxmania.net/content/guest-additions%E3%81%AE%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB\" target=\"_blank\">Guest Additionsのインストール | VirtualBox Mania</a></li>\r\n	<li><a href=\"http://qiita.com/100/items/80a899fbaeb1e82b3f67\" target=\"_blank\">VirtualBox (Windows) 上に CentOS 7 をインストールする - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/HirofumiYashima/items/6044cfc64cfa3e84f97c\" target=\"_blank\">【 Virtual Box 】共有フォルダを介して、ホストOS(Windows 7) と ゲストOS(Debian/ MathLibre)でファイルやりとりするための設定  - Qiita</a></li>\r\n	<li><a href=\"http://qiita.com/bezeklik/items/5600a22addd9fa5f04f5\" target=\"_blank\">VirtualBox 上の CentOS 7.2 に Guest Additions をインストールする - Qiita</a></li>\r\n\r\n\r\n\r\n</ul>','Windows7にVirtualBoxをインストールしCentOS7をインストールする','','inherit','closed','closed','','1003-revision-v1','','','2018-05-23 18:57:29','2018-05-23 09:57:29','',1003,'http://49.212.213.226/wordpress/solution-log/1003-revision-v1/',0,'revision','',0),(1340,1,'2018-07-17 14:07:29','0000-00-00 00:00:00','','自動下書き','','auto-draft','closed','closed','','','','','2018-07-17 14:07:29','0000-00-00 00:00:00','',0,'http://49.212.213.226/wordpress/solution-log/?p=1340',0,'post','',0);
/*!40000 ALTER TABLE `wp_posts` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_relationships`
--

DROP TABLE IF EXISTS `wp_term_relationships`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_relationships` (
  `object_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_taxonomy_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `term_order` int(11) NOT NULL DEFAULT '0',
  PRIMARY KEY (`object_id`,`term_taxonomy_id`),
  KEY `term_taxonomy_id` (`term_taxonomy_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_relationships`
--

LOCK TABLES `wp_term_relationships` WRITE;
/*!40000 ALTER TABLE `wp_term_relationships` DISABLE KEYS */;
INSERT INTO `wp_term_relationships` VALUES (1,2,0),(2,2,0),(3,2,0),(4,2,0),(5,2,0),(5,3,0),(5,25,0),(5,26,0),(5,27,0),(5,28,0),(6,2,0),(7,2,0),(13,12,0),(13,29,0),(27,5,0),(27,12,0),(27,20,0),(31,5,0),(31,21,0),(31,22,0),(31,23,0),(43,12,0),(43,20,0),(97,12,0),(97,34,0),(116,35,0),(118,10,0),(118,36,0),(118,37,0),(140,30,0),(143,35,0),(143,38,0),(157,10,0),(157,12,0),(165,12,0),(165,39,0),(174,33,0),(174,40,0),(183,11,0),(183,12,0),(183,25,0),(183,41,0),(187,12,0),(187,13,0),(187,55,0),(187,69,0),(190,12,0),(190,48,0),(190,65,0),(190,66,0),(190,67,0),(195,11,0),(195,29,0),(195,33,0),(195,42,0),(199,30,0),(201,9,0),(201,12,0),(201,66,0),(209,43,0),(215,11,0),(215,44,0),(220,11,0),(220,17,0),(220,46,0),(224,10,0),(226,36,0),(226,37,0),(229,36,0),(229,37,0),(232,43,0),(235,51,0),(238,44,0),(290,12,0),(290,39,0),(290,49,0),(306,12,0),(306,50,0),(335,10,0),(335,40,0),(335,46,0),(372,10,0),(374,12,0),(374,35,0),(378,25,0),(378,52,0),(383,10,0),(393,10,0),(395,11,0),(395,12,0),(395,69,0),(402,3,0),(402,9,0),(402,12,0),(402,46,0),(413,11,0),(413,53,0),(419,25,0),(419,40,0),(429,48,0),(434,49,0),(444,39,0),(444,52,0),(459,48,0),(459,66,0),(459,67,0),(459,68,0),(463,12,0),(463,30,0),(516,12,0),(516,13,0),(516,30,0),(519,12,0),(519,56,0),(521,5,0),(521,57,0),(535,58,0),(535,59,0),(542,12,0),(542,60,0),(542,61,0),(548,12,0),(548,61,0),(568,48,0),(577,12,0),(596,48,0),(605,48,0),(612,39,0),(618,12,0),(618,40,0),(618,59,0),(622,3,0),(622,12,0),(638,62,0),(640,39,0),(646,3,0),(646,12,0),(646,64,0),(653,12,0),(653,63,0),(656,12,0),(663,12,0),(663,25,0),(667,12,0),(667,48,0),(670,43,0),(674,10,0),(674,39,0),(679,12,0),(687,12,0),(687,25,0),(687,64,0),(689,63,0),(700,35,0),(729,12,0),(739,61,0),(745,5,0),(758,5,0),(758,11,0),(758,12,0),(758,13,0),(770,5,0),(770,12,0),(778,48,0),(782,12,0),(787,3,0),(787,12,0),(797,48,0),(797,52,0),(807,12,0),(807,70,0),(812,70,0),(818,1,0),(822,5,0),(822,71,0),(826,10,0),(826,36,0),(826,72,0),(826,73,0),(832,10,0),(832,36,0),(832,74,0),(832,75,0),(832,76,0),(854,77,0),(859,64,0),(861,3,0),(861,12,0),(867,35,0),(871,78,0),(874,78,0),(883,12,0),(889,39,0),(899,78,0),(907,79,0),(914,48,0),(930,11,0),(938,59,0),(941,78,0),(943,78,0),(951,80,0),(954,81,0),(961,82,0),(965,12,0),(970,1,0),(974,83,0),(977,84,0),(979,85,0),(985,39,0),(985,48,0),(990,39,0),(990,58,0),(999,86,0),(1003,58,0),(1003,79,0),(1003,87,0),(1018,85,0),(1018,87,0),(1022,11,0),(1022,87,0),(1027,58,0),(1030,87,0),(1030,88,0),(1030,89,0),(1038,64,0),(1038,87,0),(1060,61,0),(1060,90,0),(1065,50,0),(1065,87,0),(1067,87,0),(1067,91,0),(1072,92,0),(1075,5,0),(1075,87,0),(1080,25,0),(1080,82,0),(1084,25,0),(1084,87,0),(1088,35,0),(1088,93,0),(1093,5,0),(1093,87,0),(1096,36,0),(1096,87,0),(1096,94,0),(1101,39,0),(1106,82,0),(1106,95,0),(1113,87,0),(1117,87,0),(1122,87,0),(1122,96,0),(1134,29,0),(1134,87,0),(1134,97,0),(1156,87,0),(1156,98,0),(1165,95,0),(1168,3,0),(1168,79,0),(1168,80,0),(1168,87,0),(1174,79,0),(1174,80,0),(1174,87,0),(1197,1,0),(1201,87,0),(1201,99,0),(1201,100,0),(1206,12,0),(1206,99,0),(1206,100,0),(1216,87,0),(1216,99,0),(1216,100,0),(1223,87,0),(1223,99,0),(1223,100,0),(1227,101,0),(1231,39,0),(1239,87,0),(1250,3,0),(1250,102,0),(1293,35,0),(1293,82,0),(1295,98,0),(1309,87,0),(1309,103,0),(1312,48,0),(1312,87,0),(1317,9,0),(1317,87,0),(1320,9,0),(1320,87,0),(1331,9,0);
/*!40000 ALTER TABLE `wp_term_relationships` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_term_taxonomy`
--

DROP TABLE IF EXISTS `wp_term_taxonomy`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_term_taxonomy` (
  `term_taxonomy_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `taxonomy` varchar(32) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `description` longtext COLLATE utf8mb4_unicode_ci NOT NULL,
  `parent` bigint(20) unsigned NOT NULL DEFAULT '0',
  `count` bigint(20) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_taxonomy_id`),
  UNIQUE KEY `term_id_taxonomy` (`term_id`,`taxonomy`),
  KEY `taxonomy` (`taxonomy`)
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_term_taxonomy`
--

LOCK TABLES `wp_term_taxonomy` WRITE;
/*!40000 ALTER TABLE `wp_term_taxonomy` DISABLE KEYS */;
INSERT INTO `wp_term_taxonomy` VALUES (1,1,'category','',0,3),(2,2,'link_category','',0,7),(3,3,'category','',0,8),(5,5,'category','',15,9),(6,6,'category','',15,0),(8,86,'post_tag','',0,0),(9,8,'category','',16,5),(10,9,'category','',16,10),(11,10,'category','',0,9),(12,84,'category','',0,40),(13,12,'category','',0,3),(16,15,'category','',0,0),(17,16,'category','',0,1),(18,17,'post_tag','',0,0),(19,18,'post_tag','',0,0),(20,19,'category','',15,2),(21,20,'post_tag','',0,1),(22,21,'post_tag','',0,1),(23,22,'post_tag','',0,1),(24,23,'category','',0,0),(25,24,'category','',23,8),(26,25,'post_tag','',0,1),(27,26,'post_tag','',0,1),(28,27,'post_tag','',0,1),(29,28,'category','',0,3),(30,29,'category','',10,4),(31,30,'category','',0,0),(32,31,'category','',0,0),(33,32,'category','',0,2),(34,33,'category','',0,1),(35,34,'category','',31,7),(36,35,'category','',0,6),(37,36,'category','',0,3),(38,37,'post_tag','',0,1),(39,38,'category','',16,11),(40,39,'category','',0,4),(41,40,'category','',10,1),(42,41,'category','',0,1),(43,42,'category','',0,3),(44,43,'category','',0,2),(45,44,'category','',10,0),(46,45,'category','',10,3),(48,47,'category','',16,12),(49,48,'category','',16,2),(50,49,'category','',16,2),(51,50,'category','',16,1),(52,51,'category','',0,3),(53,52,'category','',10,1),(54,53,'nav_menu','',0,0),(55,54,'category','',16,1),(56,55,'post_tag','',0,1),(57,56,'category','',0,1),(58,57,'category','',0,4),(59,58,'category','',0,3),(60,59,'category','',16,1),(61,60,'category','',16,4),(62,61,'category','',0,1),(63,62,'category','',0,2),(64,63,'category','',16,4),(65,64,'post_tag','',0,1),(66,65,'post_tag','',0,3),(67,66,'post_tag','',0,2),(68,11,'post_tag','',0,1),(69,87,'post_tag','',0,2),(70,67,'category','',0,2),(71,68,'post_tag','',0,1),(72,69,'post_tag','',0,1),(73,70,'post_tag','',0,1),(74,71,'post_tag','',0,1),(75,72,'post_tag','',0,1),(76,73,'post_tag','',0,1),(77,74,'category','',0,1),(78,75,'category','',0,5),(79,76,'category','',0,4),(80,77,'category','',0,3),(81,78,'category','',0,1),(82,79,'category','',0,4),(83,80,'category','',0,1),(84,81,'category','',0,1),(85,82,'category','',0,2),(86,83,'category','',16,1),(87,85,'category','',0,26),(88,88,'post_tag','',0,1),(89,89,'post_tag','',0,1),(90,90,'category','',0,1),(91,91,'category','',0,1),(92,92,'category','',0,1),(93,93,'post_tag','',0,1),(94,94,'category','',0,1),(95,95,'category','',0,2),(96,96,'category','',0,1),(97,97,'category','',0,1),(98,98,'category','',0,2),(99,99,'category','',0,4),(100,100,'category','',0,4),(101,101,'category','',0,1),(102,102,'category','',0,1),(103,103,'category','',0,1);
/*!40000 ALTER TABLE `wp_term_taxonomy` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_termmeta`
--

DROP TABLE IF EXISTS `wp_termmeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_termmeta` (
  `meta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `term_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`meta_id`),
  KEY `term_id` (`term_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_termmeta`
--

LOCK TABLES `wp_termmeta` WRITE;
/*!40000 ALTER TABLE `wp_termmeta` DISABLE KEYS */;
/*!40000 ALTER TABLE `wp_termmeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_terms`
--

DROP TABLE IF EXISTS `wp_terms`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_terms` (
  `term_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `slug` varchar(200) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `term_group` bigint(10) NOT NULL DEFAULT '0',
  PRIMARY KEY (`term_id`),
  KEY `name` (`name`(191)),
  KEY `slug` (`slug`(191))
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_terms`
--

LOCK TABLES `wp_terms` WRITE;
/*!40000 ALTER TABLE `wp_terms` DISABLE KEYS */;
INSERT INTO `wp_terms` VALUES (1,'未分類','%e6%9c%aa%e5%88%86%e9%a1%9e',0),(2,'ブログロール','%e3%83%96%e3%83%ad%e3%82%b0%e3%83%ad%e3%83%bc%e3%83%ab',0),(3,'さくらのVPS','%e3%81%95%e3%81%8f%e3%82%89%e3%81%aevps',0),(5,'Apache','apache',0),(6,'nginx','nginx',0),(8,'Jenkins','jenkins',0),(9,'Eclipse','eclipse',0),(10,'PHP','php',0),(11,'CentOS','centos',0),(12,'MySQL','mysql',0),(15,'HTTP Server','http-server',0),(16,'開発支援ツール','%e9%96%8b%e7%99%ba%e6%94%af%e6%8f%b4%e3%83%84%e3%83%bc%e3%83%ab',0),(17,'HipHop PHP','hiphop-php',0),(18,'facebook','facebook',0),(19,'FastCGI','fastcgi',0),(20,'httpd.conf','httpd-conf',0),(21,'mod_fastcgi','mod_fastcgi',0),(22,'mod_status.so','mod_status-so',0),(23,'インターネットプロトコル','%e3%82%a4%e3%83%b3%e3%82%bf%e3%83%bc%e3%83%8d%e3%83%83%e3%83%88%e3%83%97%e3%83%ad%e3%83%88%e3%82%b3%e3%83%ab',0),(24,'SSH','ssh',0),(25,'OpenSSH','openssh',0),(26,'公開キー','%e5%85%ac%e9%96%8b%e3%82%ad%e3%83%bc',0),(27,'秘密キー','%e7%a7%98%e5%af%86%e3%82%ad%e3%83%bc',0),(28,'Ruby','ruby',0),(29,'WordPress','wordpress',0),(30,'SEO','seo',0),(31,'Linux','linux',0),(32,'メモ','%e3%83%a1%e3%83%a2',0),(33,'GIMP','gimp',0),(34,'Linuxコマンド','linux%e3%82%b3%e3%83%9e%e3%83%b3%e3%83%89',0),(35,'Perl','perl',0),(36,'XAMPP','xampp',0),(37,'uname','uname',0),(38,'Git','git',0),(39,'Windows XP','windows-xp',0),(40,'PECL','pecl',0),(41,'JavaScript','javascript',0),(42,'スマートフォン','%e3%82%b9%e3%83%9e%e3%83%bc%e3%83%88%e3%83%95%e3%82%a9%e3%83%b3',0),(43,'開発メモ','%e9%96%8b%e7%99%ba%e3%83%a1%e3%83%a2',0),(44,'Smarty','smarty',0),(45,'PHPUnit','phpunit',0),(47,'Redmine','redmine',0),(48,'Subversion','subversion',0),(49,'FileZilla','filezilla',0),(50,'Trac','trac-%e9%96%8b%e7%99%ba%e6%94%af%e6%8f%b4%e3%83%84%e3%83%bc%e3%83%ab',0),(51,'さくらのスタンダード','%e3%81%95%e3%81%8f%e3%82%89%e3%81%ae%e3%82%b9%e3%82%bf%e3%83%b3%e3%83%80%e3%83%bc%e3%83%89',0),(52,'PEAR','pear',0),(53,'忍者','%e5%bf%8d%e8%80%85',0),(54,'phpMyAdmin','phpmyadmin',0),(55,'cron','cron',0),(56,'セキュリティ','%e3%82%bb%e3%82%ad%e3%83%a5%e3%83%aa%e3%83%86%e3%82%a3',0),(57,'Windwos 7','windwos-7',0),(58,'VMware Player','vmware-player',0),(59,'Remi','remi',0),(60,'EPEL','epel',0),(61,'シェルスクリプト','%e3%82%b7%e3%82%a7%e3%83%ab%e3%82%b9%e3%82%af%e3%83%aa%e3%83%97%e3%83%88',0),(62,'FireFox','firefox',0),(63,'VNC','vnc',0),(64,'mysql','mysql-2',0),(65,'apache','apache-2',0),(66,'ruby','ruby-2',0),(67,'Chrome','chrome',0),(68,'.htaccess','htaccess',0),(69,'EPIC','epic',0),(70,'Eclipse Perl Integration','eclipse-perl-integration',0),(71,'cpan','cpan',0),(72,'YAML','yaml',0),(73,'Perltidy','perltidy',0),(74,'Chromium','chromium',0),(75,'LibreOffice','libreoffice',0),(76,'Virtual Box','virtual-box',0),(77,'vagrant','vagrant',0),(78,'モニター解像度','%e3%83%a2%e3%83%8b%e3%82%bf%e3%83%bc%e8%a7%a3%e5%83%8f%e5%ba%a6',0),(79,'awk','awk',0),(80,'iPhone','iphone',0),(81,'ImageMagic','imagemagic',0),(82,'ffmpeg','ffmpeg',0),(83,'Poderosa','poderosa',0),(84,'CentOS6','centos6',0),(85,'CentOS7','centos7',0),(86,'nginx','nginx',0),(87,'Remi','remi',0),(88,'gnome','gnome',0),(89,'terminal','terminal',0),(90,'PDF','pdf',0),(91,'FTP','ftp',0),(92,'rar','rar',0),(93,'tar','tar',0),(94,'unzip','unzip',0),(95,'Docker','docker',0),(96,'owncloud','owncloud',0),(97,'Rails','rails',0),(98,'Ansible','ansible',0),(99,'Selenium','selenium',0),(100,'Python','python',0),(101,'sed','sed',0),(102,'FreeBSD','freebsd',0),(103,'nVIDIA','nvidia',0);
/*!40000 ALTER TABLE `wp_terms` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_usermeta`
--

DROP TABLE IF EXISTS `wp_usermeta`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_usermeta` (
  `umeta_id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `meta_key` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  `meta_value` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`umeta_id`),
  KEY `user_id` (`user_id`),
  KEY `meta_key` (`meta_key`(191))
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_usermeta`
--

LOCK TABLES `wp_usermeta` WRITE;
/*!40000 ALTER TABLE `wp_usermeta` DISABLE KEYS */;
INSERT INTO `wp_usermeta` VALUES (1,1,'first_name',''),(2,1,'last_name',''),(3,1,'nickname','tomonori'),(4,1,'description',''),(5,1,'rich_editing','true'),(6,1,'comment_shortcuts','false'),(7,1,'admin_color','fresh'),(8,1,'use_ssl','0'),(9,1,'show_admin_bar_front','true'),(10,1,'wp_capabilities','a:1:{s:13:\"administrator\";s:1:\"1\";}'),(11,1,'wp_user_level','10'),(12,1,'dismissed_wp_pointers','wp330_toolbar,wp330_media_uploader,wp330_saving_widgets,wp340_choose_image_from_library,wp340_customize_current_theme_link,activate_presstrends,wp350_media,wp360_revisions,wp410_dfw'),(13,1,'show_welcome_panel','1'),(14,1,'wp_dashboard_quick_press_last_post_id','1336'),(15,1,'wp_user-settings','editor=html&widgets_access=off&libraryContent=browse&imgsize=full&align=center&hidetb=1&post_dfw=off&mfold=o&urlbutton=file'),(16,1,'wp_user-settings-time','1488764508'),(17,1,'managenav-menuscolumnshidden','a:4:{i:0;s:11:\"link-target\";i:1;s:11:\"css-classes\";i:2;s:3:\"xfn\";i:3;s:11:\"description\";}'),(18,1,'metaboxhidden_nav-menus','a:2:{i:0;s:8:\"add-post\";i:1;s:12:\"add-post_tag\";}'),(19,1,'nav_menu_recently_edited','53'),(20,1,'closedpostboxes_post','a:0:{}'),(21,1,'metaboxhidden_post','a:6:{i:0;s:11:\"postexcerpt\";i:1;s:13:\"trackbacksdiv\";i:2;s:10:\"postcustom\";i:3;s:16:\"commentstatusdiv\";i:4;s:7:\"slugdiv\";i:5;s:9:\"authordiv\";}'),(23,1,'meta-box-order_post','a:3:{s:4:\"side\";s:51:\"submitdiv,categorydiv,tagsdiv-post_tag,postimagediv\";s:6:\"normal\";s:96:\"postexcerpt,trackbacksdiv,postcustom,commentstatusdiv,commentsdiv,slugdiv,authordiv,revisionsdiv\";s:8:\"advanced\";s:0:\"\";}'),(24,1,'screen_layout_post','2'),(25,1,'community-events-location','a:1:{s:2:\"ip\";s:13:\"182.250.242.0\";}'),(26,1,'session_tokens','a:1:{s:64:\"f34f2773c49c07997e0eb86c710fe8c250f99820ed69e36ba65b5c8db9296f15\";a:4:{s:10:\"expiration\";i:1532409355;s:2:\"ip\";s:14:\"182.250.242.85\";s:2:\"ua\";s:126:\"Mozilla/5.0 (iPad; CPU OS 11_4 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1\";s:5:\"login\";i:1532236555;}}'),(28,1,'syntax_highlighting','true'),(29,1,'locale','');
/*!40000 ALTER TABLE `wp_usermeta` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `wp_users`
--

DROP TABLE IF EXISTS `wp_users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `wp_users` (
  `ID` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `user_login` varchar(60) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_pass` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_nicename` varchar(50) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_email` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_url` varchar(100) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_registered` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `user_activation_key` varchar(255) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  `user_status` int(11) NOT NULL DEFAULT '0',
  `display_name` varchar(250) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '',
  PRIMARY KEY (`ID`),
  KEY `user_login_key` (`user_login`),
  KEY `user_nicename` (`user_nicename`),
  KEY `user_email` (`user_email`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `wp_users`
--

LOCK TABLES `wp_users` WRITE;
/*!40000 ALTER TABLE `wp_users` DISABLE KEYS */;
INSERT INTO `wp_users` VALUES (1,'tomonori','$P$BuG/BQ.2VDznBxUS6Xjm.itm065nb80','tomonori','kyyokyup-solutionlog@yahoo.co.jp','','2012-10-13 12:52:56','',0,'tomonori');
/*!40000 ALTER TABLE `wp_users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-07-22 17:49:15
